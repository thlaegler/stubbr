/**
 * generated by Xtext 2.10.0
 */
package com.laegler.stubbr.lang.stubbrLang;


/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Di Shape</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * </p>
 * <ul>
 *   <li>{@link com.laegler.stubbr.lang.stubbrLang.DiShape#getFlowNode <em>Flow Node</em>}</li>
 *   <li>{@link com.laegler.stubbr.lang.stubbrLang.DiShape#getBounds <em>Bounds</em>}</li>
 *   <li>{@link com.laegler.stubbr.lang.stubbrLang.DiShape#isIsExpanded <em>Is Expanded</em>}</li>
 *   <li>{@link com.laegler.stubbr.lang.stubbrLang.DiShape#isIsHorizontal <em>Is Horizontal</em>}</li>
 * </ul>
 *
 * @see com.laegler.stubbr.lang.stubbrLang.StubbrLangPackage#getDiShape()
 * @model
 * @generated
 */
public interface DiShape extends DiPlaneElement
{
  /**
   * Returns the value of the '<em><b>Flow Node</b></em>' reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Flow Node</em>' reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Flow Node</em>' reference.
   * @see #setFlowNode(FlowNode)
   * @see com.laegler.stubbr.lang.stubbrLang.StubbrLangPackage#getDiShape_FlowNode()
   * @model
   * @generated
   */
  FlowNode getFlowNode();

  /**
   * Sets the value of the '{@link com.laegler.stubbr.lang.stubbrLang.DiShape#getFlowNode <em>Flow Node</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Flow Node</em>' reference.
   * @see #getFlowNode()
   * @generated
   */
  void setFlowNode(FlowNode value);

  /**
   * Returns the value of the '<em><b>Bounds</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Bounds</em>' containment reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Bounds</em>' containment reference.
   * @see #setBounds(DiBounds)
   * @see com.laegler.stubbr.lang.stubbrLang.StubbrLangPackage#getDiShape_Bounds()
   * @model containment="true"
   * @generated
   */
  DiBounds getBounds();

  /**
   * Sets the value of the '{@link com.laegler.stubbr.lang.stubbrLang.DiShape#getBounds <em>Bounds</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Bounds</em>' containment reference.
   * @see #getBounds()
   * @generated
   */
  void setBounds(DiBounds value);

  /**
   * Returns the value of the '<em><b>Is Expanded</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Is Expanded</em>' attribute isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Is Expanded</em>' attribute.
   * @see #setIsExpanded(boolean)
   * @see com.laegler.stubbr.lang.stubbrLang.StubbrLangPackage#getDiShape_IsExpanded()
   * @model
   * @generated
   */
  boolean isIsExpanded();

  /**
   * Sets the value of the '{@link com.laegler.stubbr.lang.stubbrLang.DiShape#isIsExpanded <em>Is Expanded</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Is Expanded</em>' attribute.
   * @see #isIsExpanded()
   * @generated
   */
  void setIsExpanded(boolean value);

  /**
   * Returns the value of the '<em><b>Is Horizontal</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Is Horizontal</em>' attribute isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Is Horizontal</em>' attribute.
   * @see #setIsHorizontal(boolean)
   * @see com.laegler.stubbr.lang.stubbrLang.StubbrLangPackage#getDiShape_IsHorizontal()
   * @model
   * @generated
   */
  boolean isIsHorizontal();

  /**
   * Sets the value of the '{@link com.laegler.stubbr.lang.stubbrLang.DiShape#isIsHorizontal <em>Is Horizontal</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Is Horizontal</em>' attribute.
   * @see #isIsHorizontal()
   * @generated
   */
  void setIsHorizontal(boolean value);

} // DiShape
