/**
 * generated by Xtext 2.10.0
 */
package com.laegler.stubbr.lang.stubbrLang.impl;

import com.laegler.stubbr.lang.stubbrLang.ChapterTesting;
import com.laegler.stubbr.lang.stubbrLang.Level1Attribute;
import com.laegler.stubbr.lang.stubbrLang.StubbrLangPackage;

import java.util.Collection;

import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Chapter Testing</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link com.laegler.stubbr.lang.stubbrLang.impl.ChapterTestingImpl#getTestMethods <em>Test Methods</em>}</li>
 *   <li>{@link com.laegler.stubbr.lang.stubbrLang.impl.ChapterTestingImpl#getTestCases <em>Test Cases</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ChapterTestingImpl extends ChapterImpl implements ChapterTesting
{
  /**
   * The cached value of the '{@link #getTestMethods() <em>Test Methods</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTestMethods()
   * @generated
   * @ordered
   */
  protected EList<Level1Attribute> testMethods;

  /**
   * The cached value of the '{@link #getTestCases() <em>Test Cases</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTestCases()
   * @generated
   * @ordered
   */
  protected EList<Level1Attribute> testCases;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ChapterTestingImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return StubbrLangPackage.eINSTANCE.getChapterTesting();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Level1Attribute> getTestMethods()
  {
    if (testMethods == null)
    {
      testMethods = new EObjectContainmentEList<Level1Attribute>(Level1Attribute.class, this, StubbrLangPackage.CHAPTER_TESTING__TEST_METHODS);
    }
    return testMethods;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Level1Attribute> getTestCases()
  {
    if (testCases == null)
    {
      testCases = new EObjectContainmentEList<Level1Attribute>(Level1Attribute.class, this, StubbrLangPackage.CHAPTER_TESTING__TEST_CASES);
    }
    return testCases;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case StubbrLangPackage.CHAPTER_TESTING__TEST_METHODS:
        return ((InternalEList<?>)getTestMethods()).basicRemove(otherEnd, msgs);
      case StubbrLangPackage.CHAPTER_TESTING__TEST_CASES:
        return ((InternalEList<?>)getTestCases()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case StubbrLangPackage.CHAPTER_TESTING__TEST_METHODS:
        return getTestMethods();
      case StubbrLangPackage.CHAPTER_TESTING__TEST_CASES:
        return getTestCases();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case StubbrLangPackage.CHAPTER_TESTING__TEST_METHODS:
        getTestMethods().clear();
        getTestMethods().addAll((Collection<? extends Level1Attribute>)newValue);
        return;
      case StubbrLangPackage.CHAPTER_TESTING__TEST_CASES:
        getTestCases().clear();
        getTestCases().addAll((Collection<? extends Level1Attribute>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case StubbrLangPackage.CHAPTER_TESTING__TEST_METHODS:
        getTestMethods().clear();
        return;
      case StubbrLangPackage.CHAPTER_TESTING__TEST_CASES:
        getTestCases().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case StubbrLangPackage.CHAPTER_TESTING__TEST_METHODS:
        return testMethods != null && !testMethods.isEmpty();
      case StubbrLangPackage.CHAPTER_TESTING__TEST_CASES:
        return testCases != null && !testCases.isEmpty();
    }
    return super.eIsSet(featureID);
  }

} //ChapterTestingImpl
