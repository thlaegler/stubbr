/**
 * generated by Xtext 2.10.0
 */
package com.laegler.stubbr.lang.stubbrLang.impl;

import com.laegler.stubbr.lang.stubbrLang.GatewayConverging;
import com.laegler.stubbr.lang.stubbrLang.GatewayDiverging;
import com.laegler.stubbr.lang.stubbrLang.Option;
import com.laegler.stubbr.lang.stubbrLang.StubbrLangPackage;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Gateway Diverging</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link com.laegler.stubbr.lang.stubbrLang.impl.GatewayDivergingImpl#getOptions <em>Options</em>}</li>
 *   <li>{@link com.laegler.stubbr.lang.stubbrLang.impl.GatewayDivergingImpl#getGatewayConverging <em>Gateway Converging</em>}</li>
 * </ul>
 *
 * @generated
 */
public class GatewayDivergingImpl extends GatewayImpl implements GatewayDiverging
{
  /**
   * The cached value of the '{@link #getOptions() <em>Options</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOptions()
   * @generated
   * @ordered
   */
  protected EList<Option> options;

  /**
   * The cached value of the '{@link #getGatewayConverging() <em>Gateway Converging</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getGatewayConverging()
   * @generated
   * @ordered
   */
  protected GatewayConverging gatewayConverging;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected GatewayDivergingImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return StubbrLangPackage.eINSTANCE.getGatewayDiverging();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Option> getOptions()
  {
    if (options == null)
    {
      options = new EObjectContainmentEList<Option>(Option.class, this, StubbrLangPackage.GATEWAY_DIVERGING__OPTIONS);
    }
    return options;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public GatewayConverging getGatewayConverging()
  {
    return gatewayConverging;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetGatewayConverging(GatewayConverging newGatewayConverging, NotificationChain msgs)
  {
    GatewayConverging oldGatewayConverging = gatewayConverging;
    gatewayConverging = newGatewayConverging;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, StubbrLangPackage.GATEWAY_DIVERGING__GATEWAY_CONVERGING, oldGatewayConverging, newGatewayConverging);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setGatewayConverging(GatewayConverging newGatewayConverging)
  {
    if (newGatewayConverging != gatewayConverging)
    {
      NotificationChain msgs = null;
      if (gatewayConverging != null)
        msgs = ((InternalEObject)gatewayConverging).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - StubbrLangPackage.GATEWAY_DIVERGING__GATEWAY_CONVERGING, null, msgs);
      if (newGatewayConverging != null)
        msgs = ((InternalEObject)newGatewayConverging).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - StubbrLangPackage.GATEWAY_DIVERGING__GATEWAY_CONVERGING, null, msgs);
      msgs = basicSetGatewayConverging(newGatewayConverging, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, StubbrLangPackage.GATEWAY_DIVERGING__GATEWAY_CONVERGING, newGatewayConverging, newGatewayConverging));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case StubbrLangPackage.GATEWAY_DIVERGING__OPTIONS:
        return ((InternalEList<?>)getOptions()).basicRemove(otherEnd, msgs);
      case StubbrLangPackage.GATEWAY_DIVERGING__GATEWAY_CONVERGING:
        return basicSetGatewayConverging(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case StubbrLangPackage.GATEWAY_DIVERGING__OPTIONS:
        return getOptions();
      case StubbrLangPackage.GATEWAY_DIVERGING__GATEWAY_CONVERGING:
        return getGatewayConverging();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case StubbrLangPackage.GATEWAY_DIVERGING__OPTIONS:
        getOptions().clear();
        getOptions().addAll((Collection<? extends Option>)newValue);
        return;
      case StubbrLangPackage.GATEWAY_DIVERGING__GATEWAY_CONVERGING:
        setGatewayConverging((GatewayConverging)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case StubbrLangPackage.GATEWAY_DIVERGING__OPTIONS:
        getOptions().clear();
        return;
      case StubbrLangPackage.GATEWAY_DIVERGING__GATEWAY_CONVERGING:
        setGatewayConverging((GatewayConverging)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case StubbrLangPackage.GATEWAY_DIVERGING__OPTIONS:
        return options != null && !options.isEmpty();
      case StubbrLangPackage.GATEWAY_DIVERGING__GATEWAY_CONVERGING:
        return gatewayConverging != null;
    }
    return super.eIsSet(featureID);
  }

} //GatewayDivergingImpl
