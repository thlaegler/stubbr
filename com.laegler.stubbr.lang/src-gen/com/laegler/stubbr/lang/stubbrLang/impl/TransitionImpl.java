/**
 * generated by Xtext 2.10.0
 */
package com.laegler.stubbr.lang.stubbrLang.impl;

import com.laegler.stubbr.lang.stubbrLang.StubbrLangPackage;
import com.laegler.stubbr.lang.stubbrLang.Transition;
import com.laegler.stubbr.lang.stubbrLang.UiElement;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.xtext.common.types.JvmTypeReference;

import org.eclipse.xtext.xbase.XExpression;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Transition</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link com.laegler.stubbr.lang.stubbrLang.impl.TransitionImpl#getName <em>Name</em>}</li>
 *   <li>{@link com.laegler.stubbr.lang.stubbrLang.impl.TransitionImpl#getFrom <em>From</em>}</li>
 *   <li>{@link com.laegler.stubbr.lang.stubbrLang.impl.TransitionImpl#getTo <em>To</em>}</li>
 *   <li>{@link com.laegler.stubbr.lang.stubbrLang.impl.TransitionImpl#getTriggerElement <em>Trigger Element</em>}</li>
 *   <li>{@link com.laegler.stubbr.lang.stubbrLang.impl.TransitionImpl#getTarget <em>Target</em>}</li>
 *   <li>{@link com.laegler.stubbr.lang.stubbrLang.impl.TransitionImpl#getCallToAction <em>Call To Action</em>}</li>
 * </ul>
 *
 * @generated
 */
public class TransitionImpl extends MinimalEObjectImpl.Container implements Transition
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getFrom() <em>From</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFrom()
   * @generated
   * @ordered
   */
  protected UiElement from;

  /**
   * The cached value of the '{@link #getTo() <em>To</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTo()
   * @generated
   * @ordered
   */
  protected UiElement to;

  /**
   * The cached value of the '{@link #getTriggerElement() <em>Trigger Element</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTriggerElement()
   * @generated
   * @ordered
   */
  protected UiElement triggerElement;

  /**
   * The cached value of the '{@link #getTarget() <em>Target</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTarget()
   * @generated
   * @ordered
   */
  protected JvmTypeReference target;

  /**
   * The cached value of the '{@link #getCallToAction() <em>Call To Action</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCallToAction()
   * @generated
   * @ordered
   */
  protected XExpression callToAction;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected TransitionImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return StubbrLangPackage.eINSTANCE.getTransition();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, StubbrLangPackage.TRANSITION__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public UiElement getFrom()
  {
    if (from != null && from.eIsProxy())
    {
      InternalEObject oldFrom = (InternalEObject)from;
      from = (UiElement)eResolveProxy(oldFrom);
      if (from != oldFrom)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, StubbrLangPackage.TRANSITION__FROM, oldFrom, from));
      }
    }
    return from;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public UiElement basicGetFrom()
  {
    return from;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setFrom(UiElement newFrom)
  {
    UiElement oldFrom = from;
    from = newFrom;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, StubbrLangPackage.TRANSITION__FROM, oldFrom, from));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public UiElement getTo()
  {
    if (to != null && to.eIsProxy())
    {
      InternalEObject oldTo = (InternalEObject)to;
      to = (UiElement)eResolveProxy(oldTo);
      if (to != oldTo)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, StubbrLangPackage.TRANSITION__TO, oldTo, to));
      }
    }
    return to;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public UiElement basicGetTo()
  {
    return to;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setTo(UiElement newTo)
  {
    UiElement oldTo = to;
    to = newTo;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, StubbrLangPackage.TRANSITION__TO, oldTo, to));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public UiElement getTriggerElement()
  {
    if (triggerElement != null && triggerElement.eIsProxy())
    {
      InternalEObject oldTriggerElement = (InternalEObject)triggerElement;
      triggerElement = (UiElement)eResolveProxy(oldTriggerElement);
      if (triggerElement != oldTriggerElement)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, StubbrLangPackage.TRANSITION__TRIGGER_ELEMENT, oldTriggerElement, triggerElement));
      }
    }
    return triggerElement;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public UiElement basicGetTriggerElement()
  {
    return triggerElement;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setTriggerElement(UiElement newTriggerElement)
  {
    UiElement oldTriggerElement = triggerElement;
    triggerElement = newTriggerElement;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, StubbrLangPackage.TRANSITION__TRIGGER_ELEMENT, oldTriggerElement, triggerElement));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public JvmTypeReference getTarget()
  {
    return target;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetTarget(JvmTypeReference newTarget, NotificationChain msgs)
  {
    JvmTypeReference oldTarget = target;
    target = newTarget;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, StubbrLangPackage.TRANSITION__TARGET, oldTarget, newTarget);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setTarget(JvmTypeReference newTarget)
  {
    if (newTarget != target)
    {
      NotificationChain msgs = null;
      if (target != null)
        msgs = ((InternalEObject)target).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - StubbrLangPackage.TRANSITION__TARGET, null, msgs);
      if (newTarget != null)
        msgs = ((InternalEObject)newTarget).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - StubbrLangPackage.TRANSITION__TARGET, null, msgs);
      msgs = basicSetTarget(newTarget, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, StubbrLangPackage.TRANSITION__TARGET, newTarget, newTarget));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public XExpression getCallToAction()
  {
    return callToAction;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetCallToAction(XExpression newCallToAction, NotificationChain msgs)
  {
    XExpression oldCallToAction = callToAction;
    callToAction = newCallToAction;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, StubbrLangPackage.TRANSITION__CALL_TO_ACTION, oldCallToAction, newCallToAction);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setCallToAction(XExpression newCallToAction)
  {
    if (newCallToAction != callToAction)
    {
      NotificationChain msgs = null;
      if (callToAction != null)
        msgs = ((InternalEObject)callToAction).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - StubbrLangPackage.TRANSITION__CALL_TO_ACTION, null, msgs);
      if (newCallToAction != null)
        msgs = ((InternalEObject)newCallToAction).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - StubbrLangPackage.TRANSITION__CALL_TO_ACTION, null, msgs);
      msgs = basicSetCallToAction(newCallToAction, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, StubbrLangPackage.TRANSITION__CALL_TO_ACTION, newCallToAction, newCallToAction));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case StubbrLangPackage.TRANSITION__TARGET:
        return basicSetTarget(null, msgs);
      case StubbrLangPackage.TRANSITION__CALL_TO_ACTION:
        return basicSetCallToAction(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case StubbrLangPackage.TRANSITION__NAME:
        return getName();
      case StubbrLangPackage.TRANSITION__FROM:
        if (resolve) return getFrom();
        return basicGetFrom();
      case StubbrLangPackage.TRANSITION__TO:
        if (resolve) return getTo();
        return basicGetTo();
      case StubbrLangPackage.TRANSITION__TRIGGER_ELEMENT:
        if (resolve) return getTriggerElement();
        return basicGetTriggerElement();
      case StubbrLangPackage.TRANSITION__TARGET:
        return getTarget();
      case StubbrLangPackage.TRANSITION__CALL_TO_ACTION:
        return getCallToAction();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case StubbrLangPackage.TRANSITION__NAME:
        setName((String)newValue);
        return;
      case StubbrLangPackage.TRANSITION__FROM:
        setFrom((UiElement)newValue);
        return;
      case StubbrLangPackage.TRANSITION__TO:
        setTo((UiElement)newValue);
        return;
      case StubbrLangPackage.TRANSITION__TRIGGER_ELEMENT:
        setTriggerElement((UiElement)newValue);
        return;
      case StubbrLangPackage.TRANSITION__TARGET:
        setTarget((JvmTypeReference)newValue);
        return;
      case StubbrLangPackage.TRANSITION__CALL_TO_ACTION:
        setCallToAction((XExpression)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case StubbrLangPackage.TRANSITION__NAME:
        setName(NAME_EDEFAULT);
        return;
      case StubbrLangPackage.TRANSITION__FROM:
        setFrom((UiElement)null);
        return;
      case StubbrLangPackage.TRANSITION__TO:
        setTo((UiElement)null);
        return;
      case StubbrLangPackage.TRANSITION__TRIGGER_ELEMENT:
        setTriggerElement((UiElement)null);
        return;
      case StubbrLangPackage.TRANSITION__TARGET:
        setTarget((JvmTypeReference)null);
        return;
      case StubbrLangPackage.TRANSITION__CALL_TO_ACTION:
        setCallToAction((XExpression)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case StubbrLangPackage.TRANSITION__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case StubbrLangPackage.TRANSITION__FROM:
        return from != null;
      case StubbrLangPackage.TRANSITION__TO:
        return to != null;
      case StubbrLangPackage.TRANSITION__TRIGGER_ELEMENT:
        return triggerElement != null;
      case StubbrLangPackage.TRANSITION__TARGET:
        return target != null;
      case StubbrLangPackage.TRANSITION__CALL_TO_ACTION:
        return callToAction != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(')');
    return result.toString();
  }

} //TransitionImpl
