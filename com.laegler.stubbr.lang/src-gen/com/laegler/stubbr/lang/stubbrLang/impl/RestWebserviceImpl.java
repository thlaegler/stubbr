/**
 * generated by Xtext 2.10.0
 */
package com.laegler.stubbr.lang.stubbrLang.impl;

import com.laegler.stubbr.lang.stubbrLang.RestLanguage;
import com.laegler.stubbr.lang.stubbrLang.RestWebservice;
import com.laegler.stubbr.lang.stubbrLang.StubbrLangPackage;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.eclipse.emf.ecore.util.EDataTypeEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Rest Webservice</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link com.laegler.stubbr.lang.stubbrLang.impl.RestWebserviceImpl#getLanguages <em>Languages</em>}</li>
 *   <li>{@link com.laegler.stubbr.lang.stubbrLang.impl.RestWebserviceImpl#getBasepath <em>Basepath</em>}</li>
 * </ul>
 *
 * @generated
 */
public class RestWebserviceImpl extends WebserviceImpl implements RestWebservice
{
  /**
   * The cached value of the '{@link #getLanguages() <em>Languages</em>}' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLanguages()
   * @generated
   * @ordered
   */
  protected EList<RestLanguage> languages;

  /**
   * The default value of the '{@link #getBasepath() <em>Basepath</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBasepath()
   * @generated
   * @ordered
   */
  protected static final String BASEPATH_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getBasepath() <em>Basepath</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBasepath()
   * @generated
   * @ordered
   */
  protected String basepath = BASEPATH_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected RestWebserviceImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return StubbrLangPackage.eINSTANCE.getRestWebservice();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<RestLanguage> getLanguages()
  {
    if (languages == null)
    {
      languages = new EDataTypeEList<RestLanguage>(RestLanguage.class, this, StubbrLangPackage.REST_WEBSERVICE__LANGUAGES);
    }
    return languages;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getBasepath()
  {
    return basepath;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setBasepath(String newBasepath)
  {
    String oldBasepath = basepath;
    basepath = newBasepath;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, StubbrLangPackage.REST_WEBSERVICE__BASEPATH, oldBasepath, basepath));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case StubbrLangPackage.REST_WEBSERVICE__LANGUAGES:
        return getLanguages();
      case StubbrLangPackage.REST_WEBSERVICE__BASEPATH:
        return getBasepath();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case StubbrLangPackage.REST_WEBSERVICE__LANGUAGES:
        getLanguages().clear();
        getLanguages().addAll((Collection<? extends RestLanguage>)newValue);
        return;
      case StubbrLangPackage.REST_WEBSERVICE__BASEPATH:
        setBasepath((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case StubbrLangPackage.REST_WEBSERVICE__LANGUAGES:
        getLanguages().clear();
        return;
      case StubbrLangPackage.REST_WEBSERVICE__BASEPATH:
        setBasepath(BASEPATH_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case StubbrLangPackage.REST_WEBSERVICE__LANGUAGES:
        return languages != null && !languages.isEmpty();
      case StubbrLangPackage.REST_WEBSERVICE__BASEPATH:
        return BASEPATH_EDEFAULT == null ? basepath != null : !BASEPATH_EDEFAULT.equals(basepath);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (languages: ");
    result.append(languages);
    result.append(", basepath: ");
    result.append(basepath);
    result.append(')');
    return result.toString();
  }

} //RestWebserviceImpl
