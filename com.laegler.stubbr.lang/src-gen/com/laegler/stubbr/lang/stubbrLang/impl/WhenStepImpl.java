/**
 * generated by Xtext 2.10.0
 */
package com.laegler.stubbr.lang.stubbrLang.impl;

import com.laegler.stubbr.lang.stubbrLang.BehaviorAction;
import com.laegler.stubbr.lang.stubbrLang.StubbrLangPackage;
import com.laegler.stubbr.lang.stubbrLang.UiElement;
import com.laegler.stubbr.lang.stubbrLang.WhenStep;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>When Step</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link com.laegler.stubbr.lang.stubbrLang.impl.WhenStepImpl#getAction <em>Action</em>}</li>
 *   <li>{@link com.laegler.stubbr.lang.stubbrLang.impl.WhenStepImpl#getValue <em>Value</em>}</li>
 *   <li>{@link com.laegler.stubbr.lang.stubbrLang.impl.WhenStepImpl#getSubjectElement <em>Subject Element</em>}</li>
 *   <li>{@link com.laegler.stubbr.lang.stubbrLang.impl.WhenStepImpl#getSubjectWildcard <em>Subject Wildcard</em>}</li>
 * </ul>
 *
 * @generated
 */
public class WhenStepImpl extends StepImpl implements WhenStep
{
  /**
   * The default value of the '{@link #getAction() <em>Action</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAction()
   * @generated
   * @ordered
   */
  protected static final BehaviorAction ACTION_EDEFAULT = BehaviorAction.OPENS;

  /**
   * The cached value of the '{@link #getAction() <em>Action</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAction()
   * @generated
   * @ordered
   */
  protected BehaviorAction action = ACTION_EDEFAULT;

  /**
   * The default value of the '{@link #getValue() <em>Value</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getValue()
   * @generated
   * @ordered
   */
  protected static final String VALUE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getValue() <em>Value</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getValue()
   * @generated
   * @ordered
   */
  protected String value = VALUE_EDEFAULT;

  /**
   * The cached value of the '{@link #getSubjectElement() <em>Subject Element</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSubjectElement()
   * @generated
   * @ordered
   */
  protected UiElement subjectElement;

  /**
   * The default value of the '{@link #getSubjectWildcard() <em>Subject Wildcard</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSubjectWildcard()
   * @generated
   * @ordered
   */
  protected static final String SUBJECT_WILDCARD_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getSubjectWildcard() <em>Subject Wildcard</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSubjectWildcard()
   * @generated
   * @ordered
   */
  protected String subjectWildcard = SUBJECT_WILDCARD_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected WhenStepImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return StubbrLangPackage.eINSTANCE.getWhenStep();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public BehaviorAction getAction()
  {
    return action;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setAction(BehaviorAction newAction)
  {
    BehaviorAction oldAction = action;
    action = newAction == null ? ACTION_EDEFAULT : newAction;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, StubbrLangPackage.WHEN_STEP__ACTION, oldAction, action));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getValue()
  {
    return value;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setValue(String newValue)
  {
    String oldValue = value;
    value = newValue;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, StubbrLangPackage.WHEN_STEP__VALUE, oldValue, value));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public UiElement getSubjectElement()
  {
    if (subjectElement != null && subjectElement.eIsProxy())
    {
      InternalEObject oldSubjectElement = (InternalEObject)subjectElement;
      subjectElement = (UiElement)eResolveProxy(oldSubjectElement);
      if (subjectElement != oldSubjectElement)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, StubbrLangPackage.WHEN_STEP__SUBJECT_ELEMENT, oldSubjectElement, subjectElement));
      }
    }
    return subjectElement;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public UiElement basicGetSubjectElement()
  {
    return subjectElement;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setSubjectElement(UiElement newSubjectElement)
  {
    UiElement oldSubjectElement = subjectElement;
    subjectElement = newSubjectElement;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, StubbrLangPackage.WHEN_STEP__SUBJECT_ELEMENT, oldSubjectElement, subjectElement));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getSubjectWildcard()
  {
    return subjectWildcard;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setSubjectWildcard(String newSubjectWildcard)
  {
    String oldSubjectWildcard = subjectWildcard;
    subjectWildcard = newSubjectWildcard;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, StubbrLangPackage.WHEN_STEP__SUBJECT_WILDCARD, oldSubjectWildcard, subjectWildcard));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case StubbrLangPackage.WHEN_STEP__ACTION:
        return getAction();
      case StubbrLangPackage.WHEN_STEP__VALUE:
        return getValue();
      case StubbrLangPackage.WHEN_STEP__SUBJECT_ELEMENT:
        if (resolve) return getSubjectElement();
        return basicGetSubjectElement();
      case StubbrLangPackage.WHEN_STEP__SUBJECT_WILDCARD:
        return getSubjectWildcard();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case StubbrLangPackage.WHEN_STEP__ACTION:
        setAction((BehaviorAction)newValue);
        return;
      case StubbrLangPackage.WHEN_STEP__VALUE:
        setValue((String)newValue);
        return;
      case StubbrLangPackage.WHEN_STEP__SUBJECT_ELEMENT:
        setSubjectElement((UiElement)newValue);
        return;
      case StubbrLangPackage.WHEN_STEP__SUBJECT_WILDCARD:
        setSubjectWildcard((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case StubbrLangPackage.WHEN_STEP__ACTION:
        setAction(ACTION_EDEFAULT);
        return;
      case StubbrLangPackage.WHEN_STEP__VALUE:
        setValue(VALUE_EDEFAULT);
        return;
      case StubbrLangPackage.WHEN_STEP__SUBJECT_ELEMENT:
        setSubjectElement((UiElement)null);
        return;
      case StubbrLangPackage.WHEN_STEP__SUBJECT_WILDCARD:
        setSubjectWildcard(SUBJECT_WILDCARD_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case StubbrLangPackage.WHEN_STEP__ACTION:
        return action != ACTION_EDEFAULT;
      case StubbrLangPackage.WHEN_STEP__VALUE:
        return VALUE_EDEFAULT == null ? value != null : !VALUE_EDEFAULT.equals(value);
      case StubbrLangPackage.WHEN_STEP__SUBJECT_ELEMENT:
        return subjectElement != null;
      case StubbrLangPackage.WHEN_STEP__SUBJECT_WILDCARD:
        return SUBJECT_WILDCARD_EDEFAULT == null ? subjectWildcard != null : !SUBJECT_WILDCARD_EDEFAULT.equals(subjectWildcard);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (action: ");
    result.append(action);
    result.append(", value: ");
    result.append(value);
    result.append(", subjectWildcard: ");
    result.append(subjectWildcard);
    result.append(')');
    return result.toString();
  }

} //WhenStepImpl
