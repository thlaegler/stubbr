/**
 * generated by Xtext 2.10.0
 */
package com.laegler.stubbr.lang.stubbrLang.impl;

import com.laegler.stubbr.lang.stubbrLang.ChapterEnvironment;
import com.laegler.stubbr.lang.stubbrLang.Level1Attribute;
import com.laegler.stubbr.lang.stubbrLang.StubbrLangPackage;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Chapter Environment</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link com.laegler.stubbr.lang.stubbrLang.impl.ChapterEnvironmentImpl#getInfrastructure <em>Infrastructure</em>}</li>
 *   <li>{@link com.laegler.stubbr.lang.stubbrLang.impl.ChapterEnvironmentImpl#getTestMethods <em>Test Methods</em>}</li>
 *   <li>{@link com.laegler.stubbr.lang.stubbrLang.impl.ChapterEnvironmentImpl#getRuntime <em>Runtime</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ChapterEnvironmentImpl extends ChapterImpl implements ChapterEnvironment
{
  /**
   * The cached value of the '{@link #getInfrastructure() <em>Infrastructure</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getInfrastructure()
   * @generated
   * @ordered
   */
  protected EList<Level1Attribute> infrastructure;

  /**
   * The cached value of the '{@link #getTestMethods() <em>Test Methods</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTestMethods()
   * @generated
   * @ordered
   */
  protected EList<Level1Attribute> testMethods;

  /**
   * The cached value of the '{@link #getRuntime() <em>Runtime</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRuntime()
   * @generated
   * @ordered
   */
  protected com.laegler.stubbr.lang.stubbrLang.Runtime runtime;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ChapterEnvironmentImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return StubbrLangPackage.eINSTANCE.getChapterEnvironment();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Level1Attribute> getInfrastructure()
  {
    if (infrastructure == null)
    {
      infrastructure = new EObjectContainmentEList<Level1Attribute>(Level1Attribute.class, this, StubbrLangPackage.CHAPTER_ENVIRONMENT__INFRASTRUCTURE);
    }
    return infrastructure;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Level1Attribute> getTestMethods()
  {
    if (testMethods == null)
    {
      testMethods = new EObjectContainmentEList<Level1Attribute>(Level1Attribute.class, this, StubbrLangPackage.CHAPTER_ENVIRONMENT__TEST_METHODS);
    }
    return testMethods;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public com.laegler.stubbr.lang.stubbrLang.Runtime getRuntime()
  {
    return runtime;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetRuntime(com.laegler.stubbr.lang.stubbrLang.Runtime newRuntime, NotificationChain msgs)
  {
    com.laegler.stubbr.lang.stubbrLang.Runtime oldRuntime = runtime;
    runtime = newRuntime;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, StubbrLangPackage.CHAPTER_ENVIRONMENT__RUNTIME, oldRuntime, newRuntime);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setRuntime(com.laegler.stubbr.lang.stubbrLang.Runtime newRuntime)
  {
    if (newRuntime != runtime)
    {
      NotificationChain msgs = null;
      if (runtime != null)
        msgs = ((InternalEObject)runtime).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - StubbrLangPackage.CHAPTER_ENVIRONMENT__RUNTIME, null, msgs);
      if (newRuntime != null)
        msgs = ((InternalEObject)newRuntime).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - StubbrLangPackage.CHAPTER_ENVIRONMENT__RUNTIME, null, msgs);
      msgs = basicSetRuntime(newRuntime, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, StubbrLangPackage.CHAPTER_ENVIRONMENT__RUNTIME, newRuntime, newRuntime));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case StubbrLangPackage.CHAPTER_ENVIRONMENT__INFRASTRUCTURE:
        return ((InternalEList<?>)getInfrastructure()).basicRemove(otherEnd, msgs);
      case StubbrLangPackage.CHAPTER_ENVIRONMENT__TEST_METHODS:
        return ((InternalEList<?>)getTestMethods()).basicRemove(otherEnd, msgs);
      case StubbrLangPackage.CHAPTER_ENVIRONMENT__RUNTIME:
        return basicSetRuntime(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case StubbrLangPackage.CHAPTER_ENVIRONMENT__INFRASTRUCTURE:
        return getInfrastructure();
      case StubbrLangPackage.CHAPTER_ENVIRONMENT__TEST_METHODS:
        return getTestMethods();
      case StubbrLangPackage.CHAPTER_ENVIRONMENT__RUNTIME:
        return getRuntime();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case StubbrLangPackage.CHAPTER_ENVIRONMENT__INFRASTRUCTURE:
        getInfrastructure().clear();
        getInfrastructure().addAll((Collection<? extends Level1Attribute>)newValue);
        return;
      case StubbrLangPackage.CHAPTER_ENVIRONMENT__TEST_METHODS:
        getTestMethods().clear();
        getTestMethods().addAll((Collection<? extends Level1Attribute>)newValue);
        return;
      case StubbrLangPackage.CHAPTER_ENVIRONMENT__RUNTIME:
        setRuntime((com.laegler.stubbr.lang.stubbrLang.Runtime)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case StubbrLangPackage.CHAPTER_ENVIRONMENT__INFRASTRUCTURE:
        getInfrastructure().clear();
        return;
      case StubbrLangPackage.CHAPTER_ENVIRONMENT__TEST_METHODS:
        getTestMethods().clear();
        return;
      case StubbrLangPackage.CHAPTER_ENVIRONMENT__RUNTIME:
        setRuntime((com.laegler.stubbr.lang.stubbrLang.Runtime)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case StubbrLangPackage.CHAPTER_ENVIRONMENT__INFRASTRUCTURE:
        return infrastructure != null && !infrastructure.isEmpty();
      case StubbrLangPackage.CHAPTER_ENVIRONMENT__TEST_METHODS:
        return testMethods != null && !testMethods.isEmpty();
      case StubbrLangPackage.CHAPTER_ENVIRONMENT__RUNTIME:
        return runtime != null;
    }
    return super.eIsSet(featureID);
  }

} //ChapterEnvironmentImpl
