/**
 * generated by Xtext 2.10.0
 */
package com.laegler.stubbr.lang.stubbrLang.impl;

import com.laegler.stubbr.lang.stubbrLang.ChapterBehavior;
import com.laegler.stubbr.lang.stubbrLang.ChapterBusinessProcesses;
import com.laegler.stubbr.lang.stubbrLang.ChapterEnvironment;
import com.laegler.stubbr.lang.stubbrLang.ChapterGlobals;
import com.laegler.stubbr.lang.stubbrLang.ChapterPersistence;
import com.laegler.stubbr.lang.stubbrLang.ChapterPresentation;
import com.laegler.stubbr.lang.stubbrLang.ChapterProjectManagement;
import com.laegler.stubbr.lang.stubbrLang.ChapterProjectStructure;
import com.laegler.stubbr.lang.stubbrLang.ChapterStakeholder;
import com.laegler.stubbr.lang.stubbrLang.ChapterTesting;
import com.laegler.stubbr.lang.stubbrLang.ChapterWebservice;
import com.laegler.stubbr.lang.stubbrLang.Locale;
import com.laegler.stubbr.lang.stubbrLang.Stubb;
import com.laegler.stubbr.lang.stubbrLang.StubbrLangPackage;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EDataTypeEList;

import org.eclipse.xtext.xtype.XImportSection;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Stubb</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link com.laegler.stubbr.lang.stubbrLang.impl.StubbImpl#getImportedNamespace <em>Imported Namespace</em>}</li>
 *   <li>{@link com.laegler.stubbr.lang.stubbrLang.impl.StubbImpl#getImportSection <em>Import Section</em>}</li>
 *   <li>{@link com.laegler.stubbr.lang.stubbrLang.impl.StubbImpl#getName <em>Name</em>}</li>
 *   <li>{@link com.laegler.stubbr.lang.stubbrLang.impl.StubbImpl#getLabel <em>Label</em>}</li>
 *   <li>{@link com.laegler.stubbr.lang.stubbrLang.impl.StubbImpl#getDocumentation <em>Documentation</em>}</li>
 *   <li>{@link com.laegler.stubbr.lang.stubbrLang.impl.StubbImpl#getPackageName <em>Package Name</em>}</li>
 *   <li>{@link com.laegler.stubbr.lang.stubbrLang.impl.StubbImpl#getPrefix <em>Prefix</em>}</li>
 *   <li>{@link com.laegler.stubbr.lang.stubbrLang.impl.StubbImpl#getVersion <em>Version</em>}</li>
 *   <li>{@link com.laegler.stubbr.lang.stubbrLang.impl.StubbImpl#getAuthor <em>Author</em>}</li>
 *   <li>{@link com.laegler.stubbr.lang.stubbrLang.impl.StubbImpl#getEmail <em>Email</em>}</li>
 *   <li>{@link com.laegler.stubbr.lang.stubbrLang.impl.StubbImpl#getLanguages <em>Languages</em>}</li>
 *   <li>{@link com.laegler.stubbr.lang.stubbrLang.impl.StubbImpl#getGlobals <em>Globals</em>}</li>
 *   <li>{@link com.laegler.stubbr.lang.stubbrLang.impl.StubbImpl#getStakeholders <em>Stakeholders</em>}</li>
 *   <li>{@link com.laegler.stubbr.lang.stubbrLang.impl.StubbImpl#getProjectManagement <em>Project Management</em>}</li>
 *   <li>{@link com.laegler.stubbr.lang.stubbrLang.impl.StubbImpl#getEnvironment <em>Environment</em>}</li>
 *   <li>{@link com.laegler.stubbr.lang.stubbrLang.impl.StubbImpl#getStructure <em>Structure</em>}</li>
 *   <li>{@link com.laegler.stubbr.lang.stubbrLang.impl.StubbImpl#getPersistence <em>Persistence</em>}</li>
 *   <li>{@link com.laegler.stubbr.lang.stubbrLang.impl.StubbImpl#getBusiness <em>Business</em>}</li>
 *   <li>{@link com.laegler.stubbr.lang.stubbrLang.impl.StubbImpl#getPresentation <em>Presentation</em>}</li>
 *   <li>{@link com.laegler.stubbr.lang.stubbrLang.impl.StubbImpl#getWebservice <em>Webservice</em>}</li>
 *   <li>{@link com.laegler.stubbr.lang.stubbrLang.impl.StubbImpl#getBehavior <em>Behavior</em>}</li>
 *   <li>{@link com.laegler.stubbr.lang.stubbrLang.impl.StubbImpl#getTesting <em>Testing</em>}</li>
 * </ul>
 *
 * @generated
 */
public class StubbImpl extends MinimalEObjectImpl.Container implements Stubb
{
  /**
   * The default value of the '{@link #getImportedNamespace() <em>Imported Namespace</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getImportedNamespace()
   * @generated
   * @ordered
   */
  protected static final String IMPORTED_NAMESPACE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getImportedNamespace() <em>Imported Namespace</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getImportedNamespace()
   * @generated
   * @ordered
   */
  protected String importedNamespace = IMPORTED_NAMESPACE_EDEFAULT;

  /**
   * The cached value of the '{@link #getImportSection() <em>Import Section</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getImportSection()
   * @generated
   * @ordered
   */
  protected XImportSection importSection;

  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The default value of the '{@link #getLabel() <em>Label</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLabel()
   * @generated
   * @ordered
   */
  protected static final String LABEL_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getLabel() <em>Label</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLabel()
   * @generated
   * @ordered
   */
  protected String label = LABEL_EDEFAULT;

  /**
   * The default value of the '{@link #getDocumentation() <em>Documentation</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDocumentation()
   * @generated
   * @ordered
   */
  protected static final String DOCUMENTATION_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getDocumentation() <em>Documentation</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDocumentation()
   * @generated
   * @ordered
   */
  protected String documentation = DOCUMENTATION_EDEFAULT;

  /**
   * The default value of the '{@link #getPackageName() <em>Package Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPackageName()
   * @generated
   * @ordered
   */
  protected static final String PACKAGE_NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getPackageName() <em>Package Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPackageName()
   * @generated
   * @ordered
   */
  protected String packageName = PACKAGE_NAME_EDEFAULT;

  /**
   * The default value of the '{@link #getPrefix() <em>Prefix</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPrefix()
   * @generated
   * @ordered
   */
  protected static final String PREFIX_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getPrefix() <em>Prefix</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPrefix()
   * @generated
   * @ordered
   */
  protected String prefix = PREFIX_EDEFAULT;

  /**
   * The default value of the '{@link #getVersion() <em>Version</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVersion()
   * @generated
   * @ordered
   */
  protected static final String VERSION_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getVersion() <em>Version</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVersion()
   * @generated
   * @ordered
   */
  protected String version = VERSION_EDEFAULT;

  /**
   * The default value of the '{@link #getAuthor() <em>Author</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAuthor()
   * @generated
   * @ordered
   */
  protected static final String AUTHOR_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getAuthor() <em>Author</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAuthor()
   * @generated
   * @ordered
   */
  protected String author = AUTHOR_EDEFAULT;

  /**
   * The default value of the '{@link #getEmail() <em>Email</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEmail()
   * @generated
   * @ordered
   */
  protected static final String EMAIL_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getEmail() <em>Email</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEmail()
   * @generated
   * @ordered
   */
  protected String email = EMAIL_EDEFAULT;

  /**
   * The cached value of the '{@link #getLanguages() <em>Languages</em>}' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLanguages()
   * @generated
   * @ordered
   */
  protected EList<Locale> languages;

  /**
   * The cached value of the '{@link #getGlobals() <em>Globals</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getGlobals()
   * @generated
   * @ordered
   */
  protected ChapterGlobals globals;

  /**
   * The cached value of the '{@link #getStakeholders() <em>Stakeholders</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getStakeholders()
   * @generated
   * @ordered
   */
  protected ChapterStakeholder stakeholders;

  /**
   * The cached value of the '{@link #getProjectManagement() <em>Project Management</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getProjectManagement()
   * @generated
   * @ordered
   */
  protected ChapterProjectManagement projectManagement;

  /**
   * The cached value of the '{@link #getEnvironment() <em>Environment</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEnvironment()
   * @generated
   * @ordered
   */
  protected ChapterEnvironment environment;

  /**
   * The cached value of the '{@link #getStructure() <em>Structure</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getStructure()
   * @generated
   * @ordered
   */
  protected ChapterProjectStructure structure;

  /**
   * The cached value of the '{@link #getPersistence() <em>Persistence</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPersistence()
   * @generated
   * @ordered
   */
  protected ChapterPersistence persistence;

  /**
   * The cached value of the '{@link #getBusiness() <em>Business</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBusiness()
   * @generated
   * @ordered
   */
  protected ChapterBusinessProcesses business;

  /**
   * The cached value of the '{@link #getPresentation() <em>Presentation</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPresentation()
   * @generated
   * @ordered
   */
  protected ChapterPresentation presentation;

  /**
   * The cached value of the '{@link #getWebservice() <em>Webservice</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getWebservice()
   * @generated
   * @ordered
   */
  protected ChapterWebservice webservice;

  /**
   * The cached value of the '{@link #getBehavior() <em>Behavior</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBehavior()
   * @generated
   * @ordered
   */
  protected ChapterBehavior behavior;

  /**
   * The cached value of the '{@link #getTesting() <em>Testing</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTesting()
   * @generated
   * @ordered
   */
  protected ChapterTesting testing;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected StubbImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return StubbrLangPackage.eINSTANCE.getStubb();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getImportedNamespace()
  {
    return importedNamespace;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setImportedNamespace(String newImportedNamespace)
  {
    String oldImportedNamespace = importedNamespace;
    importedNamespace = newImportedNamespace;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, StubbrLangPackage.STUBB__IMPORTED_NAMESPACE, oldImportedNamespace, importedNamespace));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public XImportSection getImportSection()
  {
    return importSection;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetImportSection(XImportSection newImportSection, NotificationChain msgs)
  {
    XImportSection oldImportSection = importSection;
    importSection = newImportSection;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, StubbrLangPackage.STUBB__IMPORT_SECTION, oldImportSection, newImportSection);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setImportSection(XImportSection newImportSection)
  {
    if (newImportSection != importSection)
    {
      NotificationChain msgs = null;
      if (importSection != null)
        msgs = ((InternalEObject)importSection).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - StubbrLangPackage.STUBB__IMPORT_SECTION, null, msgs);
      if (newImportSection != null)
        msgs = ((InternalEObject)newImportSection).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - StubbrLangPackage.STUBB__IMPORT_SECTION, null, msgs);
      msgs = basicSetImportSection(newImportSection, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, StubbrLangPackage.STUBB__IMPORT_SECTION, newImportSection, newImportSection));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, StubbrLangPackage.STUBB__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getLabel()
  {
    return label;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setLabel(String newLabel)
  {
    String oldLabel = label;
    label = newLabel;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, StubbrLangPackage.STUBB__LABEL, oldLabel, label));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getDocumentation()
  {
    return documentation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setDocumentation(String newDocumentation)
  {
    String oldDocumentation = documentation;
    documentation = newDocumentation;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, StubbrLangPackage.STUBB__DOCUMENTATION, oldDocumentation, documentation));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getPackageName()
  {
    return packageName;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setPackageName(String newPackageName)
  {
    String oldPackageName = packageName;
    packageName = newPackageName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, StubbrLangPackage.STUBB__PACKAGE_NAME, oldPackageName, packageName));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getPrefix()
  {
    return prefix;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setPrefix(String newPrefix)
  {
    String oldPrefix = prefix;
    prefix = newPrefix;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, StubbrLangPackage.STUBB__PREFIX, oldPrefix, prefix));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getVersion()
  {
    return version;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setVersion(String newVersion)
  {
    String oldVersion = version;
    version = newVersion;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, StubbrLangPackage.STUBB__VERSION, oldVersion, version));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getAuthor()
  {
    return author;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setAuthor(String newAuthor)
  {
    String oldAuthor = author;
    author = newAuthor;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, StubbrLangPackage.STUBB__AUTHOR, oldAuthor, author));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getEmail()
  {
    return email;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setEmail(String newEmail)
  {
    String oldEmail = email;
    email = newEmail;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, StubbrLangPackage.STUBB__EMAIL, oldEmail, email));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Locale> getLanguages()
  {
    if (languages == null)
    {
      languages = new EDataTypeEList<Locale>(Locale.class, this, StubbrLangPackage.STUBB__LANGUAGES);
    }
    return languages;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ChapterGlobals getGlobals()
  {
    return globals;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetGlobals(ChapterGlobals newGlobals, NotificationChain msgs)
  {
    ChapterGlobals oldGlobals = globals;
    globals = newGlobals;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, StubbrLangPackage.STUBB__GLOBALS, oldGlobals, newGlobals);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setGlobals(ChapterGlobals newGlobals)
  {
    if (newGlobals != globals)
    {
      NotificationChain msgs = null;
      if (globals != null)
        msgs = ((InternalEObject)globals).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - StubbrLangPackage.STUBB__GLOBALS, null, msgs);
      if (newGlobals != null)
        msgs = ((InternalEObject)newGlobals).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - StubbrLangPackage.STUBB__GLOBALS, null, msgs);
      msgs = basicSetGlobals(newGlobals, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, StubbrLangPackage.STUBB__GLOBALS, newGlobals, newGlobals));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ChapterStakeholder getStakeholders()
  {
    return stakeholders;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetStakeholders(ChapterStakeholder newStakeholders, NotificationChain msgs)
  {
    ChapterStakeholder oldStakeholders = stakeholders;
    stakeholders = newStakeholders;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, StubbrLangPackage.STUBB__STAKEHOLDERS, oldStakeholders, newStakeholders);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setStakeholders(ChapterStakeholder newStakeholders)
  {
    if (newStakeholders != stakeholders)
    {
      NotificationChain msgs = null;
      if (stakeholders != null)
        msgs = ((InternalEObject)stakeholders).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - StubbrLangPackage.STUBB__STAKEHOLDERS, null, msgs);
      if (newStakeholders != null)
        msgs = ((InternalEObject)newStakeholders).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - StubbrLangPackage.STUBB__STAKEHOLDERS, null, msgs);
      msgs = basicSetStakeholders(newStakeholders, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, StubbrLangPackage.STUBB__STAKEHOLDERS, newStakeholders, newStakeholders));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ChapterProjectManagement getProjectManagement()
  {
    return projectManagement;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetProjectManagement(ChapterProjectManagement newProjectManagement, NotificationChain msgs)
  {
    ChapterProjectManagement oldProjectManagement = projectManagement;
    projectManagement = newProjectManagement;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, StubbrLangPackage.STUBB__PROJECT_MANAGEMENT, oldProjectManagement, newProjectManagement);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setProjectManagement(ChapterProjectManagement newProjectManagement)
  {
    if (newProjectManagement != projectManagement)
    {
      NotificationChain msgs = null;
      if (projectManagement != null)
        msgs = ((InternalEObject)projectManagement).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - StubbrLangPackage.STUBB__PROJECT_MANAGEMENT, null, msgs);
      if (newProjectManagement != null)
        msgs = ((InternalEObject)newProjectManagement).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - StubbrLangPackage.STUBB__PROJECT_MANAGEMENT, null, msgs);
      msgs = basicSetProjectManagement(newProjectManagement, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, StubbrLangPackage.STUBB__PROJECT_MANAGEMENT, newProjectManagement, newProjectManagement));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ChapterEnvironment getEnvironment()
  {
    return environment;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetEnvironment(ChapterEnvironment newEnvironment, NotificationChain msgs)
  {
    ChapterEnvironment oldEnvironment = environment;
    environment = newEnvironment;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, StubbrLangPackage.STUBB__ENVIRONMENT, oldEnvironment, newEnvironment);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setEnvironment(ChapterEnvironment newEnvironment)
  {
    if (newEnvironment != environment)
    {
      NotificationChain msgs = null;
      if (environment != null)
        msgs = ((InternalEObject)environment).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - StubbrLangPackage.STUBB__ENVIRONMENT, null, msgs);
      if (newEnvironment != null)
        msgs = ((InternalEObject)newEnvironment).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - StubbrLangPackage.STUBB__ENVIRONMENT, null, msgs);
      msgs = basicSetEnvironment(newEnvironment, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, StubbrLangPackage.STUBB__ENVIRONMENT, newEnvironment, newEnvironment));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ChapterProjectStructure getStructure()
  {
    return structure;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetStructure(ChapterProjectStructure newStructure, NotificationChain msgs)
  {
    ChapterProjectStructure oldStructure = structure;
    structure = newStructure;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, StubbrLangPackage.STUBB__STRUCTURE, oldStructure, newStructure);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setStructure(ChapterProjectStructure newStructure)
  {
    if (newStructure != structure)
    {
      NotificationChain msgs = null;
      if (structure != null)
        msgs = ((InternalEObject)structure).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - StubbrLangPackage.STUBB__STRUCTURE, null, msgs);
      if (newStructure != null)
        msgs = ((InternalEObject)newStructure).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - StubbrLangPackage.STUBB__STRUCTURE, null, msgs);
      msgs = basicSetStructure(newStructure, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, StubbrLangPackage.STUBB__STRUCTURE, newStructure, newStructure));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ChapterPersistence getPersistence()
  {
    return persistence;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetPersistence(ChapterPersistence newPersistence, NotificationChain msgs)
  {
    ChapterPersistence oldPersistence = persistence;
    persistence = newPersistence;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, StubbrLangPackage.STUBB__PERSISTENCE, oldPersistence, newPersistence);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setPersistence(ChapterPersistence newPersistence)
  {
    if (newPersistence != persistence)
    {
      NotificationChain msgs = null;
      if (persistence != null)
        msgs = ((InternalEObject)persistence).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - StubbrLangPackage.STUBB__PERSISTENCE, null, msgs);
      if (newPersistence != null)
        msgs = ((InternalEObject)newPersistence).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - StubbrLangPackage.STUBB__PERSISTENCE, null, msgs);
      msgs = basicSetPersistence(newPersistence, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, StubbrLangPackage.STUBB__PERSISTENCE, newPersistence, newPersistence));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ChapterBusinessProcesses getBusiness()
  {
    return business;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetBusiness(ChapterBusinessProcesses newBusiness, NotificationChain msgs)
  {
    ChapterBusinessProcesses oldBusiness = business;
    business = newBusiness;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, StubbrLangPackage.STUBB__BUSINESS, oldBusiness, newBusiness);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setBusiness(ChapterBusinessProcesses newBusiness)
  {
    if (newBusiness != business)
    {
      NotificationChain msgs = null;
      if (business != null)
        msgs = ((InternalEObject)business).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - StubbrLangPackage.STUBB__BUSINESS, null, msgs);
      if (newBusiness != null)
        msgs = ((InternalEObject)newBusiness).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - StubbrLangPackage.STUBB__BUSINESS, null, msgs);
      msgs = basicSetBusiness(newBusiness, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, StubbrLangPackage.STUBB__BUSINESS, newBusiness, newBusiness));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ChapterPresentation getPresentation()
  {
    return presentation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetPresentation(ChapterPresentation newPresentation, NotificationChain msgs)
  {
    ChapterPresentation oldPresentation = presentation;
    presentation = newPresentation;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, StubbrLangPackage.STUBB__PRESENTATION, oldPresentation, newPresentation);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setPresentation(ChapterPresentation newPresentation)
  {
    if (newPresentation != presentation)
    {
      NotificationChain msgs = null;
      if (presentation != null)
        msgs = ((InternalEObject)presentation).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - StubbrLangPackage.STUBB__PRESENTATION, null, msgs);
      if (newPresentation != null)
        msgs = ((InternalEObject)newPresentation).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - StubbrLangPackage.STUBB__PRESENTATION, null, msgs);
      msgs = basicSetPresentation(newPresentation, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, StubbrLangPackage.STUBB__PRESENTATION, newPresentation, newPresentation));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ChapterWebservice getWebservice()
  {
    return webservice;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetWebservice(ChapterWebservice newWebservice, NotificationChain msgs)
  {
    ChapterWebservice oldWebservice = webservice;
    webservice = newWebservice;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, StubbrLangPackage.STUBB__WEBSERVICE, oldWebservice, newWebservice);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setWebservice(ChapterWebservice newWebservice)
  {
    if (newWebservice != webservice)
    {
      NotificationChain msgs = null;
      if (webservice != null)
        msgs = ((InternalEObject)webservice).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - StubbrLangPackage.STUBB__WEBSERVICE, null, msgs);
      if (newWebservice != null)
        msgs = ((InternalEObject)newWebservice).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - StubbrLangPackage.STUBB__WEBSERVICE, null, msgs);
      msgs = basicSetWebservice(newWebservice, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, StubbrLangPackage.STUBB__WEBSERVICE, newWebservice, newWebservice));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ChapterBehavior getBehavior()
  {
    return behavior;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetBehavior(ChapterBehavior newBehavior, NotificationChain msgs)
  {
    ChapterBehavior oldBehavior = behavior;
    behavior = newBehavior;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, StubbrLangPackage.STUBB__BEHAVIOR, oldBehavior, newBehavior);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setBehavior(ChapterBehavior newBehavior)
  {
    if (newBehavior != behavior)
    {
      NotificationChain msgs = null;
      if (behavior != null)
        msgs = ((InternalEObject)behavior).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - StubbrLangPackage.STUBB__BEHAVIOR, null, msgs);
      if (newBehavior != null)
        msgs = ((InternalEObject)newBehavior).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - StubbrLangPackage.STUBB__BEHAVIOR, null, msgs);
      msgs = basicSetBehavior(newBehavior, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, StubbrLangPackage.STUBB__BEHAVIOR, newBehavior, newBehavior));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ChapterTesting getTesting()
  {
    return testing;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetTesting(ChapterTesting newTesting, NotificationChain msgs)
  {
    ChapterTesting oldTesting = testing;
    testing = newTesting;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, StubbrLangPackage.STUBB__TESTING, oldTesting, newTesting);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setTesting(ChapterTesting newTesting)
  {
    if (newTesting != testing)
    {
      NotificationChain msgs = null;
      if (testing != null)
        msgs = ((InternalEObject)testing).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - StubbrLangPackage.STUBB__TESTING, null, msgs);
      if (newTesting != null)
        msgs = ((InternalEObject)newTesting).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - StubbrLangPackage.STUBB__TESTING, null, msgs);
      msgs = basicSetTesting(newTesting, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, StubbrLangPackage.STUBB__TESTING, newTesting, newTesting));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case StubbrLangPackage.STUBB__IMPORT_SECTION:
        return basicSetImportSection(null, msgs);
      case StubbrLangPackage.STUBB__GLOBALS:
        return basicSetGlobals(null, msgs);
      case StubbrLangPackage.STUBB__STAKEHOLDERS:
        return basicSetStakeholders(null, msgs);
      case StubbrLangPackage.STUBB__PROJECT_MANAGEMENT:
        return basicSetProjectManagement(null, msgs);
      case StubbrLangPackage.STUBB__ENVIRONMENT:
        return basicSetEnvironment(null, msgs);
      case StubbrLangPackage.STUBB__STRUCTURE:
        return basicSetStructure(null, msgs);
      case StubbrLangPackage.STUBB__PERSISTENCE:
        return basicSetPersistence(null, msgs);
      case StubbrLangPackage.STUBB__BUSINESS:
        return basicSetBusiness(null, msgs);
      case StubbrLangPackage.STUBB__PRESENTATION:
        return basicSetPresentation(null, msgs);
      case StubbrLangPackage.STUBB__WEBSERVICE:
        return basicSetWebservice(null, msgs);
      case StubbrLangPackage.STUBB__BEHAVIOR:
        return basicSetBehavior(null, msgs);
      case StubbrLangPackage.STUBB__TESTING:
        return basicSetTesting(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case StubbrLangPackage.STUBB__IMPORTED_NAMESPACE:
        return getImportedNamespace();
      case StubbrLangPackage.STUBB__IMPORT_SECTION:
        return getImportSection();
      case StubbrLangPackage.STUBB__NAME:
        return getName();
      case StubbrLangPackage.STUBB__LABEL:
        return getLabel();
      case StubbrLangPackage.STUBB__DOCUMENTATION:
        return getDocumentation();
      case StubbrLangPackage.STUBB__PACKAGE_NAME:
        return getPackageName();
      case StubbrLangPackage.STUBB__PREFIX:
        return getPrefix();
      case StubbrLangPackage.STUBB__VERSION:
        return getVersion();
      case StubbrLangPackage.STUBB__AUTHOR:
        return getAuthor();
      case StubbrLangPackage.STUBB__EMAIL:
        return getEmail();
      case StubbrLangPackage.STUBB__LANGUAGES:
        return getLanguages();
      case StubbrLangPackage.STUBB__GLOBALS:
        return getGlobals();
      case StubbrLangPackage.STUBB__STAKEHOLDERS:
        return getStakeholders();
      case StubbrLangPackage.STUBB__PROJECT_MANAGEMENT:
        return getProjectManagement();
      case StubbrLangPackage.STUBB__ENVIRONMENT:
        return getEnvironment();
      case StubbrLangPackage.STUBB__STRUCTURE:
        return getStructure();
      case StubbrLangPackage.STUBB__PERSISTENCE:
        return getPersistence();
      case StubbrLangPackage.STUBB__BUSINESS:
        return getBusiness();
      case StubbrLangPackage.STUBB__PRESENTATION:
        return getPresentation();
      case StubbrLangPackage.STUBB__WEBSERVICE:
        return getWebservice();
      case StubbrLangPackage.STUBB__BEHAVIOR:
        return getBehavior();
      case StubbrLangPackage.STUBB__TESTING:
        return getTesting();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case StubbrLangPackage.STUBB__IMPORTED_NAMESPACE:
        setImportedNamespace((String)newValue);
        return;
      case StubbrLangPackage.STUBB__IMPORT_SECTION:
        setImportSection((XImportSection)newValue);
        return;
      case StubbrLangPackage.STUBB__NAME:
        setName((String)newValue);
        return;
      case StubbrLangPackage.STUBB__LABEL:
        setLabel((String)newValue);
        return;
      case StubbrLangPackage.STUBB__DOCUMENTATION:
        setDocumentation((String)newValue);
        return;
      case StubbrLangPackage.STUBB__PACKAGE_NAME:
        setPackageName((String)newValue);
        return;
      case StubbrLangPackage.STUBB__PREFIX:
        setPrefix((String)newValue);
        return;
      case StubbrLangPackage.STUBB__VERSION:
        setVersion((String)newValue);
        return;
      case StubbrLangPackage.STUBB__AUTHOR:
        setAuthor((String)newValue);
        return;
      case StubbrLangPackage.STUBB__EMAIL:
        setEmail((String)newValue);
        return;
      case StubbrLangPackage.STUBB__LANGUAGES:
        getLanguages().clear();
        getLanguages().addAll((Collection<? extends Locale>)newValue);
        return;
      case StubbrLangPackage.STUBB__GLOBALS:
        setGlobals((ChapterGlobals)newValue);
        return;
      case StubbrLangPackage.STUBB__STAKEHOLDERS:
        setStakeholders((ChapterStakeholder)newValue);
        return;
      case StubbrLangPackage.STUBB__PROJECT_MANAGEMENT:
        setProjectManagement((ChapterProjectManagement)newValue);
        return;
      case StubbrLangPackage.STUBB__ENVIRONMENT:
        setEnvironment((ChapterEnvironment)newValue);
        return;
      case StubbrLangPackage.STUBB__STRUCTURE:
        setStructure((ChapterProjectStructure)newValue);
        return;
      case StubbrLangPackage.STUBB__PERSISTENCE:
        setPersistence((ChapterPersistence)newValue);
        return;
      case StubbrLangPackage.STUBB__BUSINESS:
        setBusiness((ChapterBusinessProcesses)newValue);
        return;
      case StubbrLangPackage.STUBB__PRESENTATION:
        setPresentation((ChapterPresentation)newValue);
        return;
      case StubbrLangPackage.STUBB__WEBSERVICE:
        setWebservice((ChapterWebservice)newValue);
        return;
      case StubbrLangPackage.STUBB__BEHAVIOR:
        setBehavior((ChapterBehavior)newValue);
        return;
      case StubbrLangPackage.STUBB__TESTING:
        setTesting((ChapterTesting)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case StubbrLangPackage.STUBB__IMPORTED_NAMESPACE:
        setImportedNamespace(IMPORTED_NAMESPACE_EDEFAULT);
        return;
      case StubbrLangPackage.STUBB__IMPORT_SECTION:
        setImportSection((XImportSection)null);
        return;
      case StubbrLangPackage.STUBB__NAME:
        setName(NAME_EDEFAULT);
        return;
      case StubbrLangPackage.STUBB__LABEL:
        setLabel(LABEL_EDEFAULT);
        return;
      case StubbrLangPackage.STUBB__DOCUMENTATION:
        setDocumentation(DOCUMENTATION_EDEFAULT);
        return;
      case StubbrLangPackage.STUBB__PACKAGE_NAME:
        setPackageName(PACKAGE_NAME_EDEFAULT);
        return;
      case StubbrLangPackage.STUBB__PREFIX:
        setPrefix(PREFIX_EDEFAULT);
        return;
      case StubbrLangPackage.STUBB__VERSION:
        setVersion(VERSION_EDEFAULT);
        return;
      case StubbrLangPackage.STUBB__AUTHOR:
        setAuthor(AUTHOR_EDEFAULT);
        return;
      case StubbrLangPackage.STUBB__EMAIL:
        setEmail(EMAIL_EDEFAULT);
        return;
      case StubbrLangPackage.STUBB__LANGUAGES:
        getLanguages().clear();
        return;
      case StubbrLangPackage.STUBB__GLOBALS:
        setGlobals((ChapterGlobals)null);
        return;
      case StubbrLangPackage.STUBB__STAKEHOLDERS:
        setStakeholders((ChapterStakeholder)null);
        return;
      case StubbrLangPackage.STUBB__PROJECT_MANAGEMENT:
        setProjectManagement((ChapterProjectManagement)null);
        return;
      case StubbrLangPackage.STUBB__ENVIRONMENT:
        setEnvironment((ChapterEnvironment)null);
        return;
      case StubbrLangPackage.STUBB__STRUCTURE:
        setStructure((ChapterProjectStructure)null);
        return;
      case StubbrLangPackage.STUBB__PERSISTENCE:
        setPersistence((ChapterPersistence)null);
        return;
      case StubbrLangPackage.STUBB__BUSINESS:
        setBusiness((ChapterBusinessProcesses)null);
        return;
      case StubbrLangPackage.STUBB__PRESENTATION:
        setPresentation((ChapterPresentation)null);
        return;
      case StubbrLangPackage.STUBB__WEBSERVICE:
        setWebservice((ChapterWebservice)null);
        return;
      case StubbrLangPackage.STUBB__BEHAVIOR:
        setBehavior((ChapterBehavior)null);
        return;
      case StubbrLangPackage.STUBB__TESTING:
        setTesting((ChapterTesting)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case StubbrLangPackage.STUBB__IMPORTED_NAMESPACE:
        return IMPORTED_NAMESPACE_EDEFAULT == null ? importedNamespace != null : !IMPORTED_NAMESPACE_EDEFAULT.equals(importedNamespace);
      case StubbrLangPackage.STUBB__IMPORT_SECTION:
        return importSection != null;
      case StubbrLangPackage.STUBB__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case StubbrLangPackage.STUBB__LABEL:
        return LABEL_EDEFAULT == null ? label != null : !LABEL_EDEFAULT.equals(label);
      case StubbrLangPackage.STUBB__DOCUMENTATION:
        return DOCUMENTATION_EDEFAULT == null ? documentation != null : !DOCUMENTATION_EDEFAULT.equals(documentation);
      case StubbrLangPackage.STUBB__PACKAGE_NAME:
        return PACKAGE_NAME_EDEFAULT == null ? packageName != null : !PACKAGE_NAME_EDEFAULT.equals(packageName);
      case StubbrLangPackage.STUBB__PREFIX:
        return PREFIX_EDEFAULT == null ? prefix != null : !PREFIX_EDEFAULT.equals(prefix);
      case StubbrLangPackage.STUBB__VERSION:
        return VERSION_EDEFAULT == null ? version != null : !VERSION_EDEFAULT.equals(version);
      case StubbrLangPackage.STUBB__AUTHOR:
        return AUTHOR_EDEFAULT == null ? author != null : !AUTHOR_EDEFAULT.equals(author);
      case StubbrLangPackage.STUBB__EMAIL:
        return EMAIL_EDEFAULT == null ? email != null : !EMAIL_EDEFAULT.equals(email);
      case StubbrLangPackage.STUBB__LANGUAGES:
        return languages != null && !languages.isEmpty();
      case StubbrLangPackage.STUBB__GLOBALS:
        return globals != null;
      case StubbrLangPackage.STUBB__STAKEHOLDERS:
        return stakeholders != null;
      case StubbrLangPackage.STUBB__PROJECT_MANAGEMENT:
        return projectManagement != null;
      case StubbrLangPackage.STUBB__ENVIRONMENT:
        return environment != null;
      case StubbrLangPackage.STUBB__STRUCTURE:
        return structure != null;
      case StubbrLangPackage.STUBB__PERSISTENCE:
        return persistence != null;
      case StubbrLangPackage.STUBB__BUSINESS:
        return business != null;
      case StubbrLangPackage.STUBB__PRESENTATION:
        return presentation != null;
      case StubbrLangPackage.STUBB__WEBSERVICE:
        return webservice != null;
      case StubbrLangPackage.STUBB__BEHAVIOR:
        return behavior != null;
      case StubbrLangPackage.STUBB__TESTING:
        return testing != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (importedNamespace: ");
    result.append(importedNamespace);
    result.append(", name: ");
    result.append(name);
    result.append(", label: ");
    result.append(label);
    result.append(", documentation: ");
    result.append(documentation);
    result.append(", packageName: ");
    result.append(packageName);
    result.append(", prefix: ");
    result.append(prefix);
    result.append(", version: ");
    result.append(version);
    result.append(", author: ");
    result.append(author);
    result.append(", email: ");
    result.append(email);
    result.append(", languages: ");
    result.append(languages);
    result.append(')');
    return result.toString();
  }

} //StubbImpl
