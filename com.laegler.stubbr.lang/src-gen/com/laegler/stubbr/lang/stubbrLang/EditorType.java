/**
 * generated by Xtext 2.10.0
 */
package com.laegler.stubbr.lang.stubbrLang;

import java.util.Arrays;
import java.util.Collections;
import java.util.List;

import org.eclipse.emf.common.util.Enumerator;

/**
 * <!-- begin-user-doc -->
 * A representation of the literals of the enumeration '<em><b>Editor Type</b></em>',
 * and utility methods for working with them.
 * <!-- end-user-doc -->
 * @see com.laegler.stubbr.lang.stubbrLang.StubbrLangPackage#getEditorType()
 * @model
 * @generated
 */
public enum EditorType implements Enumerator
{
  /**
   * The '<em><b>BLANK</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #BLANK_VALUE
   * @generated
   * @ordered
   */
  BLANK(0, "BLANK", "TargetType not specified"),

  /**
   * The '<em><b>BPMNMODELER</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #BPMNMODELER_VALUE
   * @generated
   * @ordered
   */
  BPMNMODELER(1, "BPMNMODELER", "Eclipse BPMN-Modeler"),

  /**
   * The '<em><b>YOAQIANG</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #YOAQIANG_VALUE
   * @generated
   * @ordered
   */
  YOAQIANG(2, "YOAQIANG", "Yoaqiang"),

  /**
   * The '<em><b>SIGNAVIO</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #SIGNAVIO_VALUE
   * @generated
   * @ordered
   */
  SIGNAVIO(3, "SIGNAVIO", "Signavio Process Editor"),

  /**
   * The '<em><b>MODELIO</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #MODELIO_VALUE
   * @generated
   * @ordered
   */
  MODELIO(4, "MODELIO", "Modelio"),

  /**
   * The '<em><b>VISIO</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #VISIO_VALUE
   * @generated
   * @ordered
   */
  VISIO(5, "VISIO", "Microsoft Visio"),

  /**
   * The '<em><b>ADONIS</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #ADONIS_VALUE
   * @generated
   * @ordered
   */
  ADONIS(6, "ADONIS", "Adonis"),

  /**
   * The '<em><b>ARIS</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #ARIS_VALUE
   * @generated
   * @ordered
   */
  ARIS(7, "ARIS", "ARIS Express"),

  /**
   * The '<em><b>ACTIVITI</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #ACTIVITI_VALUE
   * @generated
   * @ordered
   */
  ACTIVITI(8, "ACTIVITI", "Activiti Modeler"),

  /**
   * The '<em><b>SPARX</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #SPARX_VALUE
   * @generated
   * @ordered
   */
  SPARX(9, "SPARX", "Sparx Enterprise Architect");

  /**
   * The '<em><b>BLANK</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of '<em><b>BLANK</b></em>' literal object isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @see #BLANK
   * @model literal="TargetType not specified"
   * @generated
   * @ordered
   */
  public static final int BLANK_VALUE = 0;

  /**
   * The '<em><b>BPMNMODELER</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of '<em><b>BPMNMODELER</b></em>' literal object isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @see #BPMNMODELER
   * @model literal="Eclipse BPMN-Modeler"
   * @generated
   * @ordered
   */
  public static final int BPMNMODELER_VALUE = 1;

  /**
   * The '<em><b>YOAQIANG</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of '<em><b>YOAQIANG</b></em>' literal object isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @see #YOAQIANG
   * @model literal="Yoaqiang"
   * @generated
   * @ordered
   */
  public static final int YOAQIANG_VALUE = 2;

  /**
   * The '<em><b>SIGNAVIO</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of '<em><b>SIGNAVIO</b></em>' literal object isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @see #SIGNAVIO
   * @model literal="Signavio Process Editor"
   * @generated
   * @ordered
   */
  public static final int SIGNAVIO_VALUE = 3;

  /**
   * The '<em><b>MODELIO</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of '<em><b>MODELIO</b></em>' literal object isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @see #MODELIO
   * @model literal="Modelio"
   * @generated
   * @ordered
   */
  public static final int MODELIO_VALUE = 4;

  /**
   * The '<em><b>VISIO</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of '<em><b>VISIO</b></em>' literal object isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @see #VISIO
   * @model literal="Microsoft Visio"
   * @generated
   * @ordered
   */
  public static final int VISIO_VALUE = 5;

  /**
   * The '<em><b>ADONIS</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of '<em><b>ADONIS</b></em>' literal object isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @see #ADONIS
   * @model literal="Adonis"
   * @generated
   * @ordered
   */
  public static final int ADONIS_VALUE = 6;

  /**
   * The '<em><b>ARIS</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of '<em><b>ARIS</b></em>' literal object isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @see #ARIS
   * @model literal="ARIS Express"
   * @generated
   * @ordered
   */
  public static final int ARIS_VALUE = 7;

  /**
   * The '<em><b>ACTIVITI</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of '<em><b>ACTIVITI</b></em>' literal object isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @see #ACTIVITI
   * @model literal="Activiti Modeler"
   * @generated
   * @ordered
   */
  public static final int ACTIVITI_VALUE = 8;

  /**
   * The '<em><b>SPARX</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of '<em><b>SPARX</b></em>' literal object isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @see #SPARX
   * @model literal="Sparx Enterprise Architect"
   * @generated
   * @ordered
   */
  public static final int SPARX_VALUE = 9;

  /**
   * An array of all the '<em><b>Editor Type</b></em>' enumerators.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private static final EditorType[] VALUES_ARRAY =
    new EditorType[]
    {
      BLANK,
      BPMNMODELER,
      YOAQIANG,
      SIGNAVIO,
      MODELIO,
      VISIO,
      ADONIS,
      ARIS,
      ACTIVITI,
      SPARX,
    };

  /**
   * A public read-only list of all the '<em><b>Editor Type</b></em>' enumerators.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final List<EditorType> VALUES = Collections.unmodifiableList(Arrays.asList(VALUES_ARRAY));

  /**
   * Returns the '<em><b>Editor Type</b></em>' literal with the specified literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param literal the literal.
   * @return the matching enumerator or <code>null</code>.
   * @generated
   */
  public static EditorType get(String literal)
  {
    for (int i = 0; i < VALUES_ARRAY.length; ++i)
    {
      EditorType result = VALUES_ARRAY[i];
      if (result.toString().equals(literal))
      {
        return result;
      }
    }
    return null;
  }

  /**
   * Returns the '<em><b>Editor Type</b></em>' literal with the specified name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param name the name.
   * @return the matching enumerator or <code>null</code>.
   * @generated
   */
  public static EditorType getByName(String name)
  {
    for (int i = 0; i < VALUES_ARRAY.length; ++i)
    {
      EditorType result = VALUES_ARRAY[i];
      if (result.getName().equals(name))
      {
        return result;
      }
    }
    return null;
  }

  /**
   * Returns the '<em><b>Editor Type</b></em>' literal with the specified integer value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the integer value.
   * @return the matching enumerator or <code>null</code>.
   * @generated
   */
  public static EditorType get(int value)
  {
    switch (value)
    {
      case BLANK_VALUE: return BLANK;
      case BPMNMODELER_VALUE: return BPMNMODELER;
      case YOAQIANG_VALUE: return YOAQIANG;
      case SIGNAVIO_VALUE: return SIGNAVIO;
      case MODELIO_VALUE: return MODELIO;
      case VISIO_VALUE: return VISIO;
      case ADONIS_VALUE: return ADONIS;
      case ARIS_VALUE: return ARIS;
      case ACTIVITI_VALUE: return ACTIVITI;
      case SPARX_VALUE: return SPARX;
    }
    return null;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private final int value;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private final String name;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private final String literal;

  /**
   * Only this class can construct instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EditorType(int value, String name, String literal)
  {
    this.value = value;
    this.name = name;
    this.literal = literal;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public int getValue()
  {
    return value;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getLiteral()
  {
    return literal;
  }

  /**
   * Returns the literal value of the enumerator, which is its string representation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    return literal;
  }
  
} //EditorType
