/**
 * generated by Xtext 2.10.0
 */
package com.laegler.stubbr.lang.stubbrLang;

import java.util.Arrays;
import java.util.Collections;
import java.util.List;

import org.eclipse.emf.common.util.Enumerator;

/**
 * <!-- begin-user-doc -->
 * A representation of the literals of the enumeration '<em><b>Task Type</b></em>',
 * and utility methods for working with them.
 * <!-- end-user-doc -->
 * @see com.laegler.stubbr.lang.stubbrLang.StubbrLangPackage#getTaskType()
 * @model
 * @generated
 */
public enum TaskType implements Enumerator
{
  /**
   * The '<em><b>BLANK</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #BLANK_VALUE
   * @generated
   * @ordered
   */
  BLANK(0, "BLANK", "task"),

  /**
   * The '<em><b>BUSINESSRULE</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #BUSINESSRULE_VALUE
   * @generated
   * @ordered
   */
  BUSINESSRULE(1, "BUSINESSRULE", "business rule task"),

  /**
   * The '<em><b>MANUAL</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #MANUAL_VALUE
   * @generated
   * @ordered
   */
  MANUAL(2, "MANUAL", "manual task"),

  /**
   * The '<em><b>RECEIVE</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #RECEIVE_VALUE
   * @generated
   * @ordered
   */
  RECEIVE(3, "RECEIVE", "receive task"),

  /**
   * The '<em><b>SCRIPT</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #SCRIPT_VALUE
   * @generated
   * @ordered
   */
  SCRIPT(4, "SCRIPT", "script task"),

  /**
   * The '<em><b>SEND</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #SEND_VALUE
   * @generated
   * @ordered
   */
  SEND(5, "SEND", "send task"),

  /**
   * The '<em><b>SERVICE</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #SERVICE_VALUE
   * @generated
   * @ordered
   */
  SERVICE(6, "SERVICE", "service task"),

  /**
   * The '<em><b>USER</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #USER_VALUE
   * @generated
   * @ordered
   */
  USER(7, "USER", "user task");

  /**
   * The '<em><b>BLANK</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of '<em><b>BLANK</b></em>' literal object isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @see #BLANK
   * @model literal="task"
   * @generated
   * @ordered
   */
  public static final int BLANK_VALUE = 0;

  /**
   * The '<em><b>BUSINESSRULE</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of '<em><b>BUSINESSRULE</b></em>' literal object isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @see #BUSINESSRULE
   * @model literal="business rule task"
   * @generated
   * @ordered
   */
  public static final int BUSINESSRULE_VALUE = 1;

  /**
   * The '<em><b>MANUAL</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of '<em><b>MANUAL</b></em>' literal object isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @see #MANUAL
   * @model literal="manual task"
   * @generated
   * @ordered
   */
  public static final int MANUAL_VALUE = 2;

  /**
   * The '<em><b>RECEIVE</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of '<em><b>RECEIVE</b></em>' literal object isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @see #RECEIVE
   * @model literal="receive task"
   * @generated
   * @ordered
   */
  public static final int RECEIVE_VALUE = 3;

  /**
   * The '<em><b>SCRIPT</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of '<em><b>SCRIPT</b></em>' literal object isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @see #SCRIPT
   * @model literal="script task"
   * @generated
   * @ordered
   */
  public static final int SCRIPT_VALUE = 4;

  /**
   * The '<em><b>SEND</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of '<em><b>SEND</b></em>' literal object isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @see #SEND
   * @model literal="send task"
   * @generated
   * @ordered
   */
  public static final int SEND_VALUE = 5;

  /**
   * The '<em><b>SERVICE</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of '<em><b>SERVICE</b></em>' literal object isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @see #SERVICE
   * @model literal="service task"
   * @generated
   * @ordered
   */
  public static final int SERVICE_VALUE = 6;

  /**
   * The '<em><b>USER</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of '<em><b>USER</b></em>' literal object isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @see #USER
   * @model literal="user task"
   * @generated
   * @ordered
   */
  public static final int USER_VALUE = 7;

  /**
   * An array of all the '<em><b>Task Type</b></em>' enumerators.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private static final TaskType[] VALUES_ARRAY =
    new TaskType[]
    {
      BLANK,
      BUSINESSRULE,
      MANUAL,
      RECEIVE,
      SCRIPT,
      SEND,
      SERVICE,
      USER,
    };

  /**
   * A public read-only list of all the '<em><b>Task Type</b></em>' enumerators.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final List<TaskType> VALUES = Collections.unmodifiableList(Arrays.asList(VALUES_ARRAY));

  /**
   * Returns the '<em><b>Task Type</b></em>' literal with the specified literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param literal the literal.
   * @return the matching enumerator or <code>null</code>.
   * @generated
   */
  public static TaskType get(String literal)
  {
    for (int i = 0; i < VALUES_ARRAY.length; ++i)
    {
      TaskType result = VALUES_ARRAY[i];
      if (result.toString().equals(literal))
      {
        return result;
      }
    }
    return null;
  }

  /**
   * Returns the '<em><b>Task Type</b></em>' literal with the specified name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param name the name.
   * @return the matching enumerator or <code>null</code>.
   * @generated
   */
  public static TaskType getByName(String name)
  {
    for (int i = 0; i < VALUES_ARRAY.length; ++i)
    {
      TaskType result = VALUES_ARRAY[i];
      if (result.getName().equals(name))
      {
        return result;
      }
    }
    return null;
  }

  /**
   * Returns the '<em><b>Task Type</b></em>' literal with the specified integer value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the integer value.
   * @return the matching enumerator or <code>null</code>.
   * @generated
   */
  public static TaskType get(int value)
  {
    switch (value)
    {
      case BLANK_VALUE: return BLANK;
      case BUSINESSRULE_VALUE: return BUSINESSRULE;
      case MANUAL_VALUE: return MANUAL;
      case RECEIVE_VALUE: return RECEIVE;
      case SCRIPT_VALUE: return SCRIPT;
      case SEND_VALUE: return SEND;
      case SERVICE_VALUE: return SERVICE;
      case USER_VALUE: return USER;
    }
    return null;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private final int value;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private final String name;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private final String literal;

  /**
   * Only this class can construct instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private TaskType(int value, String name, String literal)
  {
    this.value = value;
    this.name = name;
    this.literal = literal;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public int getValue()
  {
    return value;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getLiteral()
  {
    return literal;
  }

  /**
   * Returns the literal value of the enumerator, which is its string representation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    return literal;
  }
  
} //TaskType
