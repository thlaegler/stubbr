package com.laegler.stubbr.lang.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import com.laegler.stubbr.lang.services.StubbrLangGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
@SuppressWarnings("all")
public class InternalStubbrLangParser extends AbstractInternalAntlrParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "RULE_STRING", "RULE_ID", "RULE_VERSION", "RULE_INT", "RULE_HEX", "RULE_DECIMAL", "RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS", "RULE_ANY_OTHER", "'package'", "'project'", "'{'", "'label'", "'documentation'", "'packageName'", "'prefix'", "'version'", "'author'", "'eMail'", "'language'", "','", "'}'", "'globals'", "'loggerName'", "'loggerType'", "'useSpringMVC'", "'management'", "'projects'", "'sourceCodeManagement'", "'issueManagement'", "'distroManagement'", "'continousIntegration'", "'suffix'", "'structure'", "'nestedParentProject'", "'properties'", "'persistence'", "'databases'", "'datasources'", "'persistenceUnit'", "'customIds'", "'idType'", "'testing'", "'testMethods'", "'testCases'", "'stakeholders'", "'organizations'", "'groups'", "'roles'", "'persons'", "'organization'", "'group'", "'role'", "'person'", "'environment'", "'infrastructure'", "'envVariables'", "'runtime'", "'java'", "'jdkVersion'", "'jvm'", "'database'", "'type'", "'entity'", "'extends'", "'enumeration'", "'attribute'", "'primaryKey'", "'javaType'", "'relationship'", "'from'", "'to'", "'action'", "'value'", "'business'", "'process'", "'pool'", "'actor'", "'initializing'", "'lane'", "'non-interrupting'", "'view'", "'callactivity'", "'calling'", "'subprocess'", "'merge'", "'option'", "'default'", "'send message'", "'datatype'", "'send data'", "'annotation'", "'flow'", "'diagram'", "'plane'", "'for'", "'shape'", "'expanded'", "'horizontal'", "'edge'", "'bounds'", "'x'", "'y'", "'width'", "'height'", "'waypoint'", "'ui'", "'framework'", "'layout'", "'styling'", "'baseColor'", "'highLightColor'", "'textColor'", "'fontSize'", "'associatedEntities'", "'transition'", "'triggerAction'", "'callToAction'", "'listView'", "'titelBar'", "'values'", "'valuesFromAction'", "'outputText'", "'style'", "'button'", "'inputField'", "'name'", "'birthday'", "'address'", "'radioButtonGroup'", "'checkBoxGruppe'", "'upload'", "'webservices'", "'rest'", "'specification'", "'languages'", "'basepath'", "'exclude'", "'transferobjects'", "'soap'", "'namespace'", "'behavior'", "'specifications'", "'feature'", "'scenario'", "'given'", "'element'", "'when'", "'into'", "'then'", "'should'", "'='", "'+='", "'-='", "'*='", "'/='", "'%='", "'<'", "'>'", "'>='", "'||'", "'&&'", "'=='", "'!='", "'==='", "'!=='", "'instanceof'", "'->'", "'..<'", "'..'", "'=>'", "'<>'", "'?:'", "'+'", "'-'", "'*'", "'**'", "'/'", "'%'", "'!'", "'as'", "'++'", "'--'", "'.'", "'::'", "'?.'", "'('", "')'", "'#'", "'['", "']'", "'|'", "';'", "'if'", "'else'", "'switch'", "':'", "'case'", "'while'", "'do'", "'var'", "'val'", "'static'", "'import'", "'extension'", "'super'", "'new'", "'false'", "'true'", "'null'", "'typeof'", "'throw'", "'return'", "'try'", "'finally'", "'synchronized'", "'catch'", "'?'", "'&'", "'deutsch'", "'english'", "'espa\\u00F1ol'", "'\\u0440\\u0443\\u0441\\u0441\\u043A\\u0438\\u0439'", "'parent'", "'annotations'", "'commons'", "'dataModel'", "'businessModel'", "'matlab'", "'webProject'", "'restGenerator'", "'restService'", "'restClient'", "'soapService'", "'soapClient'", "'ear'", "'docker'", "'1.8'", "'1.7'", "'1.6'", "'mySql'", "'mongoDb'", "'oracleDb'", "'h2'", "'task'", "'business rule task'", "'manual task'", "'receive task'", "'script task'", "'send task'", "'service task'", "'user task'", "'event'", "'start event'", "'throwing event'", "'catching event'", "'intermediate catching event'", "'intermediate throwing event'", "'end event'", "'blank'", "'message'", "'timer'", "'error'", "'escalation'", "'cancel'", "'compensation'", "'conditional'", "'link'", "'signal'", "'terminate'", "'multiple'", "'parallel multiple'", "'gateway'", "'parallel'", "'and'", "'inclusive'", "'or gateway'", "'exclusive'", "'xor'", "'eventbased'", "'complex'", "'data input/output'", "'data input'", "'data output'", "'JSF'", "'AngularJS'", "'jaxrs-resteasy'", "'jaxrs-spec'", "'lumen'", "'android'", "'swift'", "'php'", "'html2'", "'opens'", "'enters'", "'enables'", "'clicks'", "'selects'", "'focuses'", "'gets enabled'", "'gets klicked'", "'gets selected'", "'is focused'", "'be visible'", "'be opened'"
    };
    public static final int T__144=144;
    public static final int T__265=265;
    public static final int T__143=143;
    public static final int T__264=264;
    public static final int T__146=146;
    public static final int T__267=267;
    public static final int T__50=50;
    public static final int T__145=145;
    public static final int T__266=266;
    public static final int T__140=140;
    public static final int T__261=261;
    public static final int T__260=260;
    public static final int T__142=142;
    public static final int T__263=263;
    public static final int T__141=141;
    public static final int T__262=262;
    public static final int T__59=59;
    public static final int T__55=55;
    public static final int T__56=56;
    public static final int T__57=57;
    public static final int T__58=58;
    public static final int T__51=51;
    public static final int T__137=137;
    public static final int T__258=258;
    public static final int T__52=52;
    public static final int T__136=136;
    public static final int T__257=257;
    public static final int T__53=53;
    public static final int T__139=139;
    public static final int T__54=54;
    public static final int T__138=138;
    public static final int T__259=259;
    public static final int T__133=133;
    public static final int T__254=254;
    public static final int T__132=132;
    public static final int T__253=253;
    public static final int T__60=60;
    public static final int T__135=135;
    public static final int T__256=256;
    public static final int T__61=61;
    public static final int T__134=134;
    public static final int T__255=255;
    public static final int T__250=250;
    public static final int RULE_ID=5;
    public static final int T__131=131;
    public static final int T__252=252;
    public static final int T__130=130;
    public static final int T__251=251;
    public static final int RULE_INT=7;
    public static final int T__66=66;
    public static final int T__67=67;
    public static final int T__129=129;
    public static final int T__68=68;
    public static final int T__69=69;
    public static final int T__62=62;
    public static final int T__126=126;
    public static final int T__247=247;
    public static final int T__63=63;
    public static final int T__125=125;
    public static final int T__246=246;
    public static final int T__64=64;
    public static final int T__128=128;
    public static final int T__249=249;
    public static final int T__65=65;
    public static final int T__127=127;
    public static final int T__248=248;
    public static final int T__166=166;
    public static final int T__287=287;
    public static final int T__165=165;
    public static final int T__286=286;
    public static final int T__168=168;
    public static final int T__289=289;
    public static final int T__167=167;
    public static final int T__288=288;
    public static final int T__162=162;
    public static final int T__283=283;
    public static final int T__161=161;
    public static final int T__282=282;
    public static final int T__164=164;
    public static final int T__285=285;
    public static final int T__163=163;
    public static final int T__284=284;
    public static final int T__160=160;
    public static final int T__281=281;
    public static final int T__280=280;
    public static final int T__37=37;
    public static final int T__38=38;
    public static final int T__39=39;
    public static final int T__33=33;
    public static final int T__34=34;
    public static final int T__35=35;
    public static final int T__36=36;
    public static final int T__159=159;
    public static final int T__30=30;
    public static final int T__158=158;
    public static final int T__279=279;
    public static final int T__31=31;
    public static final int T__32=32;
    public static final int T__155=155;
    public static final int T__276=276;
    public static final int T__154=154;
    public static final int T__275=275;
    public static final int T__157=157;
    public static final int T__278=278;
    public static final int T__156=156;
    public static final int T__277=277;
    public static final int T__151=151;
    public static final int T__272=272;
    public static final int T__150=150;
    public static final int T__271=271;
    public static final int T__153=153;
    public static final int T__274=274;
    public static final int T__152=152;
    public static final int T__273=273;
    public static final int T__270=270;
    public static final int T__48=48;
    public static final int T__49=49;
    public static final int T__44=44;
    public static final int T__45=45;
    public static final int T__46=46;
    public static final int T__47=47;
    public static final int T__40=40;
    public static final int T__148=148;
    public static final int T__269=269;
    public static final int T__41=41;
    public static final int T__147=147;
    public static final int T__268=268;
    public static final int T__42=42;
    public static final int T__43=43;
    public static final int T__149=149;
    public static final int T__100=100;
    public static final int T__221=221;
    public static final int T__220=220;
    public static final int T__102=102;
    public static final int T__223=223;
    public static final int T__101=101;
    public static final int T__222=222;
    public static final int T__19=19;
    public static final int T__15=15;
    public static final int T__16=16;
    public static final int T__17=17;
    public static final int T__18=18;
    public static final int T__218=218;
    public static final int T__217=217;
    public static final int T__14=14;
    public static final int T__219=219;
    public static final int T__214=214;
    public static final int T__213=213;
    public static final int T__216=216;
    public static final int T__215=215;
    public static final int T__210=210;
    public static final int T__212=212;
    public static final int T__211=211;
    public static final int RULE_DECIMAL=9;
    public static final int T__26=26;
    public static final int T__27=27;
    public static final int T__28=28;
    public static final int T__29=29;
    public static final int T__22=22;
    public static final int T__207=207;
    public static final int T__23=23;
    public static final int T__206=206;
    public static final int T__24=24;
    public static final int T__209=209;
    public static final int T__25=25;
    public static final int T__208=208;
    public static final int T__203=203;
    public static final int T__202=202;
    public static final int T__20=20;
    public static final int T__205=205;
    public static final int T__21=21;
    public static final int T__204=204;
    public static final int T__122=122;
    public static final int T__243=243;
    public static final int T__121=121;
    public static final int T__242=242;
    public static final int T__124=124;
    public static final int T__245=245;
    public static final int T__123=123;
    public static final int T__244=244;
    public static final int T__120=120;
    public static final int T__241=241;
    public static final int T__240=240;
    public static final int RULE_SL_COMMENT=11;
    public static final int T__119=119;
    public static final int T__118=118;
    public static final int T__239=239;
    public static final int T__115=115;
    public static final int T__236=236;
    public static final int EOF=-1;
    public static final int T__114=114;
    public static final int T__235=235;
    public static final int T__117=117;
    public static final int T__238=238;
    public static final int T__116=116;
    public static final int T__237=237;
    public static final int T__111=111;
    public static final int T__232=232;
    public static final int T__110=110;
    public static final int T__231=231;
    public static final int T__113=113;
    public static final int T__234=234;
    public static final int T__112=112;
    public static final int T__233=233;
    public static final int T__230=230;
    public static final int T__108=108;
    public static final int T__229=229;
    public static final int T__107=107;
    public static final int T__228=228;
    public static final int T__109=109;
    public static final int T__104=104;
    public static final int T__225=225;
    public static final int T__103=103;
    public static final int T__224=224;
    public static final int T__106=106;
    public static final int T__227=227;
    public static final int T__105=105;
    public static final int T__226=226;
    public static final int T__300=300;
    public static final int RULE_HEX=8;
    public static final int RULE_VERSION=6;
    public static final int RULE_ML_COMMENT=10;
    public static final int T__201=201;
    public static final int T__200=200;
    public static final int T__309=309;
    public static final int T__306=306;
    public static final int T__305=305;
    public static final int T__308=308;
    public static final int T__307=307;
    public static final int T__302=302;
    public static final int T__301=301;
    public static final int T__304=304;
    public static final int T__303=303;
    public static final int T__91=91;
    public static final int T__188=188;
    public static final int T__92=92;
    public static final int T__187=187;
    public static final int T__93=93;
    public static final int T__94=94;
    public static final int T__189=189;
    public static final int T__184=184;
    public static final int T__183=183;
    public static final int T__186=186;
    public static final int T__90=90;
    public static final int T__185=185;
    public static final int T__180=180;
    public static final int T__182=182;
    public static final int T__181=181;
    public static final int T__99=99;
    public static final int T__95=95;
    public static final int T__96=96;
    public static final int T__97=97;
    public static final int T__98=98;
    public static final int T__177=177;
    public static final int T__298=298;
    public static final int T__176=176;
    public static final int T__297=297;
    public static final int T__179=179;
    public static final int T__178=178;
    public static final int T__299=299;
    public static final int T__173=173;
    public static final int T__294=294;
    public static final int T__172=172;
    public static final int T__293=293;
    public static final int T__175=175;
    public static final int T__296=296;
    public static final int T__174=174;
    public static final int T__295=295;
    public static final int T__290=290;
    public static final int T__171=171;
    public static final int T__292=292;
    public static final int T__170=170;
    public static final int T__291=291;
    public static final int T__169=169;
    public static final int T__70=70;
    public static final int T__71=71;
    public static final int T__72=72;
    public static final int RULE_STRING=4;
    public static final int T__77=77;
    public static final int T__78=78;
    public static final int T__79=79;
    public static final int T__73=73;
    public static final int T__74=74;
    public static final int T__75=75;
    public static final int T__76=76;
    public static final int T__80=80;
    public static final int T__199=199;
    public static final int T__81=81;
    public static final int T__198=198;
    public static final int T__82=82;
    public static final int T__83=83;
    public static final int T__195=195;
    public static final int T__194=194;
    public static final int RULE_WS=12;
    public static final int T__197=197;
    public static final int T__196=196;
    public static final int T__191=191;
    public static final int T__190=190;
    public static final int T__193=193;
    public static final int T__192=192;
    public static final int RULE_ANY_OTHER=13;
    public static final int T__88=88;
    public static final int T__89=89;
    public static final int T__84=84;
    public static final int T__85=85;
    public static final int T__86=86;
    public static final int T__87=87;

    // delegates
    // delegators


        public InternalStubbrLangParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalStubbrLangParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        

    public String[] getTokenNames() { return InternalStubbrLangParser.tokenNames; }
    public String getGrammarFileName() { return "InternalStubbrLang.g"; }



     	private StubbrLangGrammarAccess grammarAccess;

        public InternalStubbrLangParser(TokenStream input, StubbrLangGrammarAccess grammarAccess) {
            this(input);
            this.grammarAccess = grammarAccess;
            registerRules(grammarAccess.getGrammar());
        }

        @Override
        protected String getFirstRuleName() {
        	return "Stubb";
       	}

       	@Override
       	protected StubbrLangGrammarAccess getGrammarAccess() {
       		return grammarAccess;
       	}




    // $ANTLR start "entryRuleStubb"
    // InternalStubbrLang.g:65:1: entryRuleStubb returns [EObject current=null] : iv_ruleStubb= ruleStubb EOF ;
    public final EObject entryRuleStubb() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStubb = null;


        try {
            // InternalStubbrLang.g:65:46: (iv_ruleStubb= ruleStubb EOF )
            // InternalStubbrLang.g:66:2: iv_ruleStubb= ruleStubb EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStubbRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleStubb=ruleStubb();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStubb; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStubb"


    // $ANTLR start "ruleStubb"
    // InternalStubbrLang.g:72:1: ruleStubb returns [EObject current=null] : (otherlv_0= 'package' ( (lv_importedNamespace_1_0= ruleQualifiedName ) ) ( (lv_importSection_2_0= ruleXImportSection ) )? otherlv_3= 'project' ( (lv_name_4_0= ruleQualifiedName ) ) otherlv_5= '{' (otherlv_6= 'label' ( (lv_label_7_0= RULE_STRING ) ) )? (otherlv_8= 'documentation' ( (lv_documentation_9_0= RULE_STRING ) ) )? (otherlv_10= 'packageName' ( (lv_packageName_11_0= ruleQualifiedName ) ) )? (otherlv_12= 'prefix' ( (lv_prefix_13_0= RULE_ID ) ) )? (otherlv_14= 'version' ( (lv_version_15_0= RULE_VERSION ) ) )? (otherlv_16= 'author' ( (lv_author_17_0= RULE_STRING ) ) )? (otherlv_18= 'eMail' ( (lv_email_19_0= RULE_STRING ) ) )? (otherlv_20= 'language' ( (lv_languages_21_0= ruleLocale ) ) (otherlv_22= ',' ( (lv_languages_23_0= ruleLocale ) ) )* )? ( (lv_globals_24_0= ruleChapterGlobals ) )? ( (lv_Stakeholders_25_0= ruleChapterStakeholder ) )? ( (lv_projectManagement_26_0= ruleChapterProjectManagement ) )? ( (lv_environment_27_0= ruleChapterEnvironment ) )? ( (lv_structure_28_0= ruleChapterProjectStructure ) )? ( (lv_persistence_29_0= ruleChapterPersistence ) )? ( (lv_business_30_0= ruleChapterBusinessProcesses ) )? ( (lv_presentation_31_0= ruleChapterPresentation ) )? ( (lv_webservice_32_0= ruleChapterWebservice ) )? ( (lv_behavior_33_0= ruleChapterBehavior ) )? ( (lv_testing_34_0= ruleChapterTesting ) )? otherlv_35= '}' ) ;
    public final EObject ruleStubb() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token lv_label_7_0=null;
        Token otherlv_8=null;
        Token lv_documentation_9_0=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token lv_prefix_13_0=null;
        Token otherlv_14=null;
        Token lv_version_15_0=null;
        Token otherlv_16=null;
        Token lv_author_17_0=null;
        Token otherlv_18=null;
        Token lv_email_19_0=null;
        Token otherlv_20=null;
        Token otherlv_22=null;
        Token otherlv_35=null;
        AntlrDatatypeRuleToken lv_importedNamespace_1_0 = null;

        EObject lv_importSection_2_0 = null;

        AntlrDatatypeRuleToken lv_name_4_0 = null;

        AntlrDatatypeRuleToken lv_packageName_11_0 = null;

        Enumerator lv_languages_21_0 = null;

        Enumerator lv_languages_23_0 = null;

        EObject lv_globals_24_0 = null;

        EObject lv_Stakeholders_25_0 = null;

        EObject lv_projectManagement_26_0 = null;

        EObject lv_environment_27_0 = null;

        EObject lv_structure_28_0 = null;

        EObject lv_persistence_29_0 = null;

        EObject lv_business_30_0 = null;

        EObject lv_presentation_31_0 = null;

        EObject lv_webservice_32_0 = null;

        EObject lv_behavior_33_0 = null;

        EObject lv_testing_34_0 = null;



        	enterRule();

        try {
            // InternalStubbrLang.g:78:2: ( (otherlv_0= 'package' ( (lv_importedNamespace_1_0= ruleQualifiedName ) ) ( (lv_importSection_2_0= ruleXImportSection ) )? otherlv_3= 'project' ( (lv_name_4_0= ruleQualifiedName ) ) otherlv_5= '{' (otherlv_6= 'label' ( (lv_label_7_0= RULE_STRING ) ) )? (otherlv_8= 'documentation' ( (lv_documentation_9_0= RULE_STRING ) ) )? (otherlv_10= 'packageName' ( (lv_packageName_11_0= ruleQualifiedName ) ) )? (otherlv_12= 'prefix' ( (lv_prefix_13_0= RULE_ID ) ) )? (otherlv_14= 'version' ( (lv_version_15_0= RULE_VERSION ) ) )? (otherlv_16= 'author' ( (lv_author_17_0= RULE_STRING ) ) )? (otherlv_18= 'eMail' ( (lv_email_19_0= RULE_STRING ) ) )? (otherlv_20= 'language' ( (lv_languages_21_0= ruleLocale ) ) (otherlv_22= ',' ( (lv_languages_23_0= ruleLocale ) ) )* )? ( (lv_globals_24_0= ruleChapterGlobals ) )? ( (lv_Stakeholders_25_0= ruleChapterStakeholder ) )? ( (lv_projectManagement_26_0= ruleChapterProjectManagement ) )? ( (lv_environment_27_0= ruleChapterEnvironment ) )? ( (lv_structure_28_0= ruleChapterProjectStructure ) )? ( (lv_persistence_29_0= ruleChapterPersistence ) )? ( (lv_business_30_0= ruleChapterBusinessProcesses ) )? ( (lv_presentation_31_0= ruleChapterPresentation ) )? ( (lv_webservice_32_0= ruleChapterWebservice ) )? ( (lv_behavior_33_0= ruleChapterBehavior ) )? ( (lv_testing_34_0= ruleChapterTesting ) )? otherlv_35= '}' ) )
            // InternalStubbrLang.g:79:2: (otherlv_0= 'package' ( (lv_importedNamespace_1_0= ruleQualifiedName ) ) ( (lv_importSection_2_0= ruleXImportSection ) )? otherlv_3= 'project' ( (lv_name_4_0= ruleQualifiedName ) ) otherlv_5= '{' (otherlv_6= 'label' ( (lv_label_7_0= RULE_STRING ) ) )? (otherlv_8= 'documentation' ( (lv_documentation_9_0= RULE_STRING ) ) )? (otherlv_10= 'packageName' ( (lv_packageName_11_0= ruleQualifiedName ) ) )? (otherlv_12= 'prefix' ( (lv_prefix_13_0= RULE_ID ) ) )? (otherlv_14= 'version' ( (lv_version_15_0= RULE_VERSION ) ) )? (otherlv_16= 'author' ( (lv_author_17_0= RULE_STRING ) ) )? (otherlv_18= 'eMail' ( (lv_email_19_0= RULE_STRING ) ) )? (otherlv_20= 'language' ( (lv_languages_21_0= ruleLocale ) ) (otherlv_22= ',' ( (lv_languages_23_0= ruleLocale ) ) )* )? ( (lv_globals_24_0= ruleChapterGlobals ) )? ( (lv_Stakeholders_25_0= ruleChapterStakeholder ) )? ( (lv_projectManagement_26_0= ruleChapterProjectManagement ) )? ( (lv_environment_27_0= ruleChapterEnvironment ) )? ( (lv_structure_28_0= ruleChapterProjectStructure ) )? ( (lv_persistence_29_0= ruleChapterPersistence ) )? ( (lv_business_30_0= ruleChapterBusinessProcesses ) )? ( (lv_presentation_31_0= ruleChapterPresentation ) )? ( (lv_webservice_32_0= ruleChapterWebservice ) )? ( (lv_behavior_33_0= ruleChapterBehavior ) )? ( (lv_testing_34_0= ruleChapterTesting ) )? otherlv_35= '}' )
            {
            // InternalStubbrLang.g:79:2: (otherlv_0= 'package' ( (lv_importedNamespace_1_0= ruleQualifiedName ) ) ( (lv_importSection_2_0= ruleXImportSection ) )? otherlv_3= 'project' ( (lv_name_4_0= ruleQualifiedName ) ) otherlv_5= '{' (otherlv_6= 'label' ( (lv_label_7_0= RULE_STRING ) ) )? (otherlv_8= 'documentation' ( (lv_documentation_9_0= RULE_STRING ) ) )? (otherlv_10= 'packageName' ( (lv_packageName_11_0= ruleQualifiedName ) ) )? (otherlv_12= 'prefix' ( (lv_prefix_13_0= RULE_ID ) ) )? (otherlv_14= 'version' ( (lv_version_15_0= RULE_VERSION ) ) )? (otherlv_16= 'author' ( (lv_author_17_0= RULE_STRING ) ) )? (otherlv_18= 'eMail' ( (lv_email_19_0= RULE_STRING ) ) )? (otherlv_20= 'language' ( (lv_languages_21_0= ruleLocale ) ) (otherlv_22= ',' ( (lv_languages_23_0= ruleLocale ) ) )* )? ( (lv_globals_24_0= ruleChapterGlobals ) )? ( (lv_Stakeholders_25_0= ruleChapterStakeholder ) )? ( (lv_projectManagement_26_0= ruleChapterProjectManagement ) )? ( (lv_environment_27_0= ruleChapterEnvironment ) )? ( (lv_structure_28_0= ruleChapterProjectStructure ) )? ( (lv_persistence_29_0= ruleChapterPersistence ) )? ( (lv_business_30_0= ruleChapterBusinessProcesses ) )? ( (lv_presentation_31_0= ruleChapterPresentation ) )? ( (lv_webservice_32_0= ruleChapterWebservice ) )? ( (lv_behavior_33_0= ruleChapterBehavior ) )? ( (lv_testing_34_0= ruleChapterTesting ) )? otherlv_35= '}' )
            // InternalStubbrLang.g:80:3: otherlv_0= 'package' ( (lv_importedNamespace_1_0= ruleQualifiedName ) ) ( (lv_importSection_2_0= ruleXImportSection ) )? otherlv_3= 'project' ( (lv_name_4_0= ruleQualifiedName ) ) otherlv_5= '{' (otherlv_6= 'label' ( (lv_label_7_0= RULE_STRING ) ) )? (otherlv_8= 'documentation' ( (lv_documentation_9_0= RULE_STRING ) ) )? (otherlv_10= 'packageName' ( (lv_packageName_11_0= ruleQualifiedName ) ) )? (otherlv_12= 'prefix' ( (lv_prefix_13_0= RULE_ID ) ) )? (otherlv_14= 'version' ( (lv_version_15_0= RULE_VERSION ) ) )? (otherlv_16= 'author' ( (lv_author_17_0= RULE_STRING ) ) )? (otherlv_18= 'eMail' ( (lv_email_19_0= RULE_STRING ) ) )? (otherlv_20= 'language' ( (lv_languages_21_0= ruleLocale ) ) (otherlv_22= ',' ( (lv_languages_23_0= ruleLocale ) ) )* )? ( (lv_globals_24_0= ruleChapterGlobals ) )? ( (lv_Stakeholders_25_0= ruleChapterStakeholder ) )? ( (lv_projectManagement_26_0= ruleChapterProjectManagement ) )? ( (lv_environment_27_0= ruleChapterEnvironment ) )? ( (lv_structure_28_0= ruleChapterProjectStructure ) )? ( (lv_persistence_29_0= ruleChapterPersistence ) )? ( (lv_business_30_0= ruleChapterBusinessProcesses ) )? ( (lv_presentation_31_0= ruleChapterPresentation ) )? ( (lv_webservice_32_0= ruleChapterWebservice ) )? ( (lv_behavior_33_0= ruleChapterBehavior ) )? ( (lv_testing_34_0= ruleChapterTesting ) )? otherlv_35= '}'
            {
            otherlv_0=(Token)match(input,14,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getStubbAccess().getPackageKeyword_0());
              		
            }
            // InternalStubbrLang.g:84:3: ( (lv_importedNamespace_1_0= ruleQualifiedName ) )
            // InternalStubbrLang.g:85:4: (lv_importedNamespace_1_0= ruleQualifiedName )
            {
            // InternalStubbrLang.g:85:4: (lv_importedNamespace_1_0= ruleQualifiedName )
            // InternalStubbrLang.g:86:5: lv_importedNamespace_1_0= ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getStubbAccess().getImportedNamespaceQualifiedNameParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_4);
            lv_importedNamespace_1_0=ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getStubbRule());
              					}
              					set(
              						current,
              						"importedNamespace",
              						lv_importedNamespace_1_0,
              						"org.eclipse.xtext.xbase.Xbase.QualifiedName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalStubbrLang.g:103:3: ( (lv_importSection_2_0= ruleXImportSection ) )?
            int alt1=2;
            int LA1_0 = input.LA(1);

            if ( (LA1_0==208) ) {
                alt1=1;
            }
            switch (alt1) {
                case 1 :
                    // InternalStubbrLang.g:104:4: (lv_importSection_2_0= ruleXImportSection )
                    {
                    // InternalStubbrLang.g:104:4: (lv_importSection_2_0= ruleXImportSection )
                    // InternalStubbrLang.g:105:5: lv_importSection_2_0= ruleXImportSection
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStubbAccess().getImportSectionXImportSectionParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_5);
                    lv_importSection_2_0=ruleXImportSection();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStubbRule());
                      					}
                      					set(
                      						current,
                      						"importSection",
                      						lv_importSection_2_0,
                      						"org.eclipse.xtext.xbase.Xtype.XImportSection");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_3=(Token)match(input,15,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getStubbAccess().getProjectKeyword_3());
              		
            }
            // InternalStubbrLang.g:126:3: ( (lv_name_4_0= ruleQualifiedName ) )
            // InternalStubbrLang.g:127:4: (lv_name_4_0= ruleQualifiedName )
            {
            // InternalStubbrLang.g:127:4: (lv_name_4_0= ruleQualifiedName )
            // InternalStubbrLang.g:128:5: lv_name_4_0= ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getStubbAccess().getNameQualifiedNameParserRuleCall_4_0());
              				
            }
            pushFollow(FOLLOW_6);
            lv_name_4_0=ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getStubbRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_4_0,
              						"org.eclipse.xtext.xbase.Xbase.QualifiedName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_5=(Token)match(input,16,FOLLOW_7); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getStubbAccess().getLeftCurlyBracketKeyword_5());
              		
            }
            // InternalStubbrLang.g:149:3: (otherlv_6= 'label' ( (lv_label_7_0= RULE_STRING ) ) )?
            int alt2=2;
            int LA2_0 = input.LA(1);

            if ( (LA2_0==17) ) {
                alt2=1;
            }
            switch (alt2) {
                case 1 :
                    // InternalStubbrLang.g:150:4: otherlv_6= 'label' ( (lv_label_7_0= RULE_STRING ) )
                    {
                    otherlv_6=(Token)match(input,17,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getStubbAccess().getLabelKeyword_6_0());
                      			
                    }
                    // InternalStubbrLang.g:154:4: ( (lv_label_7_0= RULE_STRING ) )
                    // InternalStubbrLang.g:155:5: (lv_label_7_0= RULE_STRING )
                    {
                    // InternalStubbrLang.g:155:5: (lv_label_7_0= RULE_STRING )
                    // InternalStubbrLang.g:156:6: lv_label_7_0= RULE_STRING
                    {
                    lv_label_7_0=(Token)match(input,RULE_STRING,FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_label_7_0, grammarAccess.getStubbAccess().getLabelSTRINGTerminalRuleCall_6_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getStubbRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"label",
                      							lv_label_7_0,
                      							"org.eclipse.xtext.xbase.Xtype.STRING");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:173:3: (otherlv_8= 'documentation' ( (lv_documentation_9_0= RULE_STRING ) ) )?
            int alt3=2;
            int LA3_0 = input.LA(1);

            if ( (LA3_0==18) ) {
                alt3=1;
            }
            switch (alt3) {
                case 1 :
                    // InternalStubbrLang.g:174:4: otherlv_8= 'documentation' ( (lv_documentation_9_0= RULE_STRING ) )
                    {
                    otherlv_8=(Token)match(input,18,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_8, grammarAccess.getStubbAccess().getDocumentationKeyword_7_0());
                      			
                    }
                    // InternalStubbrLang.g:178:4: ( (lv_documentation_9_0= RULE_STRING ) )
                    // InternalStubbrLang.g:179:5: (lv_documentation_9_0= RULE_STRING )
                    {
                    // InternalStubbrLang.g:179:5: (lv_documentation_9_0= RULE_STRING )
                    // InternalStubbrLang.g:180:6: lv_documentation_9_0= RULE_STRING
                    {
                    lv_documentation_9_0=(Token)match(input,RULE_STRING,FOLLOW_10); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_documentation_9_0, grammarAccess.getStubbAccess().getDocumentationSTRINGTerminalRuleCall_7_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getStubbRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"documentation",
                      							lv_documentation_9_0,
                      							"org.eclipse.xtext.xbase.Xtype.STRING");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:197:3: (otherlv_10= 'packageName' ( (lv_packageName_11_0= ruleQualifiedName ) ) )?
            int alt4=2;
            int LA4_0 = input.LA(1);

            if ( (LA4_0==19) ) {
                alt4=1;
            }
            switch (alt4) {
                case 1 :
                    // InternalStubbrLang.g:198:4: otherlv_10= 'packageName' ( (lv_packageName_11_0= ruleQualifiedName ) )
                    {
                    otherlv_10=(Token)match(input,19,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_10, grammarAccess.getStubbAccess().getPackageNameKeyword_8_0());
                      			
                    }
                    // InternalStubbrLang.g:202:4: ( (lv_packageName_11_0= ruleQualifiedName ) )
                    // InternalStubbrLang.g:203:5: (lv_packageName_11_0= ruleQualifiedName )
                    {
                    // InternalStubbrLang.g:203:5: (lv_packageName_11_0= ruleQualifiedName )
                    // InternalStubbrLang.g:204:6: lv_packageName_11_0= ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getStubbAccess().getPackageNameQualifiedNameParserRuleCall_8_1_0());
                      					
                    }
                    pushFollow(FOLLOW_11);
                    lv_packageName_11_0=ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getStubbRule());
                      						}
                      						set(
                      							current,
                      							"packageName",
                      							lv_packageName_11_0,
                      							"org.eclipse.xtext.xbase.Xbase.QualifiedName");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:222:3: (otherlv_12= 'prefix' ( (lv_prefix_13_0= RULE_ID ) ) )?
            int alt5=2;
            int LA5_0 = input.LA(1);

            if ( (LA5_0==20) ) {
                alt5=1;
            }
            switch (alt5) {
                case 1 :
                    // InternalStubbrLang.g:223:4: otherlv_12= 'prefix' ( (lv_prefix_13_0= RULE_ID ) )
                    {
                    otherlv_12=(Token)match(input,20,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_12, grammarAccess.getStubbAccess().getPrefixKeyword_9_0());
                      			
                    }
                    // InternalStubbrLang.g:227:4: ( (lv_prefix_13_0= RULE_ID ) )
                    // InternalStubbrLang.g:228:5: (lv_prefix_13_0= RULE_ID )
                    {
                    // InternalStubbrLang.g:228:5: (lv_prefix_13_0= RULE_ID )
                    // InternalStubbrLang.g:229:6: lv_prefix_13_0= RULE_ID
                    {
                    lv_prefix_13_0=(Token)match(input,RULE_ID,FOLLOW_12); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_prefix_13_0, grammarAccess.getStubbAccess().getPrefixIDTerminalRuleCall_9_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getStubbRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"prefix",
                      							lv_prefix_13_0,
                      							"org.eclipse.xtext.xbase.Xtype.ID");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:246:3: (otherlv_14= 'version' ( (lv_version_15_0= RULE_VERSION ) ) )?
            int alt6=2;
            int LA6_0 = input.LA(1);

            if ( (LA6_0==21) ) {
                alt6=1;
            }
            switch (alt6) {
                case 1 :
                    // InternalStubbrLang.g:247:4: otherlv_14= 'version' ( (lv_version_15_0= RULE_VERSION ) )
                    {
                    otherlv_14=(Token)match(input,21,FOLLOW_13); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_14, grammarAccess.getStubbAccess().getVersionKeyword_10_0());
                      			
                    }
                    // InternalStubbrLang.g:251:4: ( (lv_version_15_0= RULE_VERSION ) )
                    // InternalStubbrLang.g:252:5: (lv_version_15_0= RULE_VERSION )
                    {
                    // InternalStubbrLang.g:252:5: (lv_version_15_0= RULE_VERSION )
                    // InternalStubbrLang.g:253:6: lv_version_15_0= RULE_VERSION
                    {
                    lv_version_15_0=(Token)match(input,RULE_VERSION,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_version_15_0, grammarAccess.getStubbAccess().getVersionVERSIONTerminalRuleCall_10_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getStubbRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"version",
                      							lv_version_15_0,
                      							"com.laegler.stubbr.lang.StubbrLang.VERSION");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:270:3: (otherlv_16= 'author' ( (lv_author_17_0= RULE_STRING ) ) )?
            int alt7=2;
            int LA7_0 = input.LA(1);

            if ( (LA7_0==22) ) {
                alt7=1;
            }
            switch (alt7) {
                case 1 :
                    // InternalStubbrLang.g:271:4: otherlv_16= 'author' ( (lv_author_17_0= RULE_STRING ) )
                    {
                    otherlv_16=(Token)match(input,22,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_16, grammarAccess.getStubbAccess().getAuthorKeyword_11_0());
                      			
                    }
                    // InternalStubbrLang.g:275:4: ( (lv_author_17_0= RULE_STRING ) )
                    // InternalStubbrLang.g:276:5: (lv_author_17_0= RULE_STRING )
                    {
                    // InternalStubbrLang.g:276:5: (lv_author_17_0= RULE_STRING )
                    // InternalStubbrLang.g:277:6: lv_author_17_0= RULE_STRING
                    {
                    lv_author_17_0=(Token)match(input,RULE_STRING,FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_author_17_0, grammarAccess.getStubbAccess().getAuthorSTRINGTerminalRuleCall_11_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getStubbRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"author",
                      							lv_author_17_0,
                      							"org.eclipse.xtext.xbase.Xtype.STRING");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:294:3: (otherlv_18= 'eMail' ( (lv_email_19_0= RULE_STRING ) ) )?
            int alt8=2;
            int LA8_0 = input.LA(1);

            if ( (LA8_0==23) ) {
                alt8=1;
            }
            switch (alt8) {
                case 1 :
                    // InternalStubbrLang.g:295:4: otherlv_18= 'eMail' ( (lv_email_19_0= RULE_STRING ) )
                    {
                    otherlv_18=(Token)match(input,23,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_18, grammarAccess.getStubbAccess().getEMailKeyword_12_0());
                      			
                    }
                    // InternalStubbrLang.g:299:4: ( (lv_email_19_0= RULE_STRING ) )
                    // InternalStubbrLang.g:300:5: (lv_email_19_0= RULE_STRING )
                    {
                    // InternalStubbrLang.g:300:5: (lv_email_19_0= RULE_STRING )
                    // InternalStubbrLang.g:301:6: lv_email_19_0= RULE_STRING
                    {
                    lv_email_19_0=(Token)match(input,RULE_STRING,FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_email_19_0, grammarAccess.getStubbAccess().getEmailSTRINGTerminalRuleCall_12_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getStubbRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"email",
                      							lv_email_19_0,
                      							"org.eclipse.xtext.xbase.Xtype.STRING");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:318:3: (otherlv_20= 'language' ( (lv_languages_21_0= ruleLocale ) ) (otherlv_22= ',' ( (lv_languages_23_0= ruleLocale ) ) )* )?
            int alt10=2;
            int LA10_0 = input.LA(1);

            if ( (LA10_0==24) ) {
                alt10=1;
            }
            switch (alt10) {
                case 1 :
                    // InternalStubbrLang.g:319:4: otherlv_20= 'language' ( (lv_languages_21_0= ruleLocale ) ) (otherlv_22= ',' ( (lv_languages_23_0= ruleLocale ) ) )*
                    {
                    otherlv_20=(Token)match(input,24,FOLLOW_17); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_20, grammarAccess.getStubbAccess().getLanguageKeyword_13_0());
                      			
                    }
                    // InternalStubbrLang.g:323:4: ( (lv_languages_21_0= ruleLocale ) )
                    // InternalStubbrLang.g:324:5: (lv_languages_21_0= ruleLocale )
                    {
                    // InternalStubbrLang.g:324:5: (lv_languages_21_0= ruleLocale )
                    // InternalStubbrLang.g:325:6: lv_languages_21_0= ruleLocale
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getStubbAccess().getLanguagesLocaleEnumRuleCall_13_1_0());
                      					
                    }
                    pushFollow(FOLLOW_18);
                    lv_languages_21_0=ruleLocale();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getStubbRule());
                      						}
                      						add(
                      							current,
                      							"languages",
                      							lv_languages_21_0,
                      							"com.laegler.stubbr.lang.StubbrLang.Locale");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalStubbrLang.g:342:4: (otherlv_22= ',' ( (lv_languages_23_0= ruleLocale ) ) )*
                    loop9:
                    do {
                        int alt9=2;
                        int LA9_0 = input.LA(1);

                        if ( (LA9_0==25) ) {
                            alt9=1;
                        }


                        switch (alt9) {
                    	case 1 :
                    	    // InternalStubbrLang.g:343:5: otherlv_22= ',' ( (lv_languages_23_0= ruleLocale ) )
                    	    {
                    	    otherlv_22=(Token)match(input,25,FOLLOW_17); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_22, grammarAccess.getStubbAccess().getCommaKeyword_13_2_0());
                    	      				
                    	    }
                    	    // InternalStubbrLang.g:347:5: ( (lv_languages_23_0= ruleLocale ) )
                    	    // InternalStubbrLang.g:348:6: (lv_languages_23_0= ruleLocale )
                    	    {
                    	    // InternalStubbrLang.g:348:6: (lv_languages_23_0= ruleLocale )
                    	    // InternalStubbrLang.g:349:7: lv_languages_23_0= ruleLocale
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getStubbAccess().getLanguagesLocaleEnumRuleCall_13_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_18);
                    	    lv_languages_23_0=ruleLocale();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getStubbRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"languages",
                    	      								lv_languages_23_0,
                    	      								"com.laegler.stubbr.lang.StubbrLang.Locale");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop9;
                        }
                    } while (true);


                    }
                    break;

            }

            // InternalStubbrLang.g:368:3: ( (lv_globals_24_0= ruleChapterGlobals ) )?
            int alt11=2;
            int LA11_0 = input.LA(1);

            if ( (LA11_0==27) ) {
                alt11=1;
            }
            switch (alt11) {
                case 1 :
                    // InternalStubbrLang.g:369:4: (lv_globals_24_0= ruleChapterGlobals )
                    {
                    // InternalStubbrLang.g:369:4: (lv_globals_24_0= ruleChapterGlobals )
                    // InternalStubbrLang.g:370:5: lv_globals_24_0= ruleChapterGlobals
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStubbAccess().getGlobalsChapterGlobalsParserRuleCall_14_0());
                      				
                    }
                    pushFollow(FOLLOW_19);
                    lv_globals_24_0=ruleChapterGlobals();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStubbRule());
                      					}
                      					set(
                      						current,
                      						"globals",
                      						lv_globals_24_0,
                      						"com.laegler.stubbr.lang.StubbrLang.ChapterGlobals");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:387:3: ( (lv_Stakeholders_25_0= ruleChapterStakeholder ) )?
            int alt12=2;
            int LA12_0 = input.LA(1);

            if ( (LA12_0==50) ) {
                alt12=1;
            }
            switch (alt12) {
                case 1 :
                    // InternalStubbrLang.g:388:4: (lv_Stakeholders_25_0= ruleChapterStakeholder )
                    {
                    // InternalStubbrLang.g:388:4: (lv_Stakeholders_25_0= ruleChapterStakeholder )
                    // InternalStubbrLang.g:389:5: lv_Stakeholders_25_0= ruleChapterStakeholder
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStubbAccess().getStakeholdersChapterStakeholderParserRuleCall_15_0());
                      				
                    }
                    pushFollow(FOLLOW_20);
                    lv_Stakeholders_25_0=ruleChapterStakeholder();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStubbRule());
                      					}
                      					set(
                      						current,
                      						"Stakeholders",
                      						lv_Stakeholders_25_0,
                      						"com.laegler.stubbr.lang.StubbrLang.ChapterStakeholder");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:406:3: ( (lv_projectManagement_26_0= ruleChapterProjectManagement ) )?
            int alt13=2;
            int LA13_0 = input.LA(1);

            if ( (LA13_0==31) ) {
                alt13=1;
            }
            switch (alt13) {
                case 1 :
                    // InternalStubbrLang.g:407:4: (lv_projectManagement_26_0= ruleChapterProjectManagement )
                    {
                    // InternalStubbrLang.g:407:4: (lv_projectManagement_26_0= ruleChapterProjectManagement )
                    // InternalStubbrLang.g:408:5: lv_projectManagement_26_0= ruleChapterProjectManagement
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStubbAccess().getProjectManagementChapterProjectManagementParserRuleCall_16_0());
                      				
                    }
                    pushFollow(FOLLOW_21);
                    lv_projectManagement_26_0=ruleChapterProjectManagement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStubbRule());
                      					}
                      					set(
                      						current,
                      						"projectManagement",
                      						lv_projectManagement_26_0,
                      						"com.laegler.stubbr.lang.StubbrLang.ChapterProjectManagement");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:425:3: ( (lv_environment_27_0= ruleChapterEnvironment ) )?
            int alt14=2;
            int LA14_0 = input.LA(1);

            if ( (LA14_0==59) ) {
                alt14=1;
            }
            switch (alt14) {
                case 1 :
                    // InternalStubbrLang.g:426:4: (lv_environment_27_0= ruleChapterEnvironment )
                    {
                    // InternalStubbrLang.g:426:4: (lv_environment_27_0= ruleChapterEnvironment )
                    // InternalStubbrLang.g:427:5: lv_environment_27_0= ruleChapterEnvironment
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStubbAccess().getEnvironmentChapterEnvironmentParserRuleCall_17_0());
                      				
                    }
                    pushFollow(FOLLOW_22);
                    lv_environment_27_0=ruleChapterEnvironment();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStubbRule());
                      					}
                      					set(
                      						current,
                      						"environment",
                      						lv_environment_27_0,
                      						"com.laegler.stubbr.lang.StubbrLang.ChapterEnvironment");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:444:3: ( (lv_structure_28_0= ruleChapterProjectStructure ) )?
            int alt15=2;
            int LA15_0 = input.LA(1);

            if ( (LA15_0==38) ) {
                alt15=1;
            }
            switch (alt15) {
                case 1 :
                    // InternalStubbrLang.g:445:4: (lv_structure_28_0= ruleChapterProjectStructure )
                    {
                    // InternalStubbrLang.g:445:4: (lv_structure_28_0= ruleChapterProjectStructure )
                    // InternalStubbrLang.g:446:5: lv_structure_28_0= ruleChapterProjectStructure
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStubbAccess().getStructureChapterProjectStructureParserRuleCall_18_0());
                      				
                    }
                    pushFollow(FOLLOW_23);
                    lv_structure_28_0=ruleChapterProjectStructure();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStubbRule());
                      					}
                      					set(
                      						current,
                      						"structure",
                      						lv_structure_28_0,
                      						"com.laegler.stubbr.lang.StubbrLang.ChapterProjectStructure");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:463:3: ( (lv_persistence_29_0= ruleChapterPersistence ) )?
            int alt16=2;
            int LA16_0 = input.LA(1);

            if ( (LA16_0==41) ) {
                alt16=1;
            }
            switch (alt16) {
                case 1 :
                    // InternalStubbrLang.g:464:4: (lv_persistence_29_0= ruleChapterPersistence )
                    {
                    // InternalStubbrLang.g:464:4: (lv_persistence_29_0= ruleChapterPersistence )
                    // InternalStubbrLang.g:465:5: lv_persistence_29_0= ruleChapterPersistence
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStubbAccess().getPersistenceChapterPersistenceParserRuleCall_19_0());
                      				
                    }
                    pushFollow(FOLLOW_24);
                    lv_persistence_29_0=ruleChapterPersistence();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStubbRule());
                      					}
                      					set(
                      						current,
                      						"persistence",
                      						lv_persistence_29_0,
                      						"com.laegler.stubbr.lang.StubbrLang.ChapterPersistence");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:482:3: ( (lv_business_30_0= ruleChapterBusinessProcesses ) )?
            int alt17=2;
            int LA17_0 = input.LA(1);

            if ( (LA17_0==79) ) {
                alt17=1;
            }
            switch (alt17) {
                case 1 :
                    // InternalStubbrLang.g:483:4: (lv_business_30_0= ruleChapterBusinessProcesses )
                    {
                    // InternalStubbrLang.g:483:4: (lv_business_30_0= ruleChapterBusinessProcesses )
                    // InternalStubbrLang.g:484:5: lv_business_30_0= ruleChapterBusinessProcesses
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStubbAccess().getBusinessChapterBusinessProcessesParserRuleCall_20_0());
                      				
                    }
                    pushFollow(FOLLOW_25);
                    lv_business_30_0=ruleChapterBusinessProcesses();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStubbRule());
                      					}
                      					set(
                      						current,
                      						"business",
                      						lv_business_30_0,
                      						"com.laegler.stubbr.lang.StubbrLang.ChapterBusinessProcesses");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:501:3: ( (lv_presentation_31_0= ruleChapterPresentation ) )?
            int alt18=2;
            int LA18_0 = input.LA(1);

            if ( (LA18_0==111) ) {
                alt18=1;
            }
            switch (alt18) {
                case 1 :
                    // InternalStubbrLang.g:502:4: (lv_presentation_31_0= ruleChapterPresentation )
                    {
                    // InternalStubbrLang.g:502:4: (lv_presentation_31_0= ruleChapterPresentation )
                    // InternalStubbrLang.g:503:5: lv_presentation_31_0= ruleChapterPresentation
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStubbAccess().getPresentationChapterPresentationParserRuleCall_21_0());
                      				
                    }
                    pushFollow(FOLLOW_26);
                    lv_presentation_31_0=ruleChapterPresentation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStubbRule());
                      					}
                      					set(
                      						current,
                      						"presentation",
                      						lv_presentation_31_0,
                      						"com.laegler.stubbr.lang.StubbrLang.ChapterPresentation");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:520:3: ( (lv_webservice_32_0= ruleChapterWebservice ) )?
            int alt19=2;
            int LA19_0 = input.LA(1);

            if ( (LA19_0==137) ) {
                alt19=1;
            }
            switch (alt19) {
                case 1 :
                    // InternalStubbrLang.g:521:4: (lv_webservice_32_0= ruleChapterWebservice )
                    {
                    // InternalStubbrLang.g:521:4: (lv_webservice_32_0= ruleChapterWebservice )
                    // InternalStubbrLang.g:522:5: lv_webservice_32_0= ruleChapterWebservice
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStubbAccess().getWebserviceChapterWebserviceParserRuleCall_22_0());
                      				
                    }
                    pushFollow(FOLLOW_27);
                    lv_webservice_32_0=ruleChapterWebservice();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStubbRule());
                      					}
                      					set(
                      						current,
                      						"webservice",
                      						lv_webservice_32_0,
                      						"com.laegler.stubbr.lang.StubbrLang.ChapterWebservice");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:539:3: ( (lv_behavior_33_0= ruleChapterBehavior ) )?
            int alt20=2;
            int LA20_0 = input.LA(1);

            if ( (LA20_0==146) ) {
                alt20=1;
            }
            switch (alt20) {
                case 1 :
                    // InternalStubbrLang.g:540:4: (lv_behavior_33_0= ruleChapterBehavior )
                    {
                    // InternalStubbrLang.g:540:4: (lv_behavior_33_0= ruleChapterBehavior )
                    // InternalStubbrLang.g:541:5: lv_behavior_33_0= ruleChapterBehavior
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStubbAccess().getBehaviorChapterBehaviorParserRuleCall_23_0());
                      				
                    }
                    pushFollow(FOLLOW_28);
                    lv_behavior_33_0=ruleChapterBehavior();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStubbRule());
                      					}
                      					set(
                      						current,
                      						"behavior",
                      						lv_behavior_33_0,
                      						"com.laegler.stubbr.lang.StubbrLang.ChapterBehavior");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:558:3: ( (lv_testing_34_0= ruleChapterTesting ) )?
            int alt21=2;
            int LA21_0 = input.LA(1);

            if ( (LA21_0==47) ) {
                alt21=1;
            }
            switch (alt21) {
                case 1 :
                    // InternalStubbrLang.g:559:4: (lv_testing_34_0= ruleChapterTesting )
                    {
                    // InternalStubbrLang.g:559:4: (lv_testing_34_0= ruleChapterTesting )
                    // InternalStubbrLang.g:560:5: lv_testing_34_0= ruleChapterTesting
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStubbAccess().getTestingChapterTestingParserRuleCall_24_0());
                      				
                    }
                    pushFollow(FOLLOW_29);
                    lv_testing_34_0=ruleChapterTesting();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStubbRule());
                      					}
                      					set(
                      						current,
                      						"testing",
                      						lv_testing_34_0,
                      						"com.laegler.stubbr.lang.StubbrLang.ChapterTesting");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_35=(Token)match(input,26,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_35, grammarAccess.getStubbAccess().getRightCurlyBracketKeyword_25());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStubb"


    // $ANTLR start "entryRuleChapterGlobals"
    // InternalStubbrLang.g:585:1: entryRuleChapterGlobals returns [EObject current=null] : iv_ruleChapterGlobals= ruleChapterGlobals EOF ;
    public final EObject entryRuleChapterGlobals() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleChapterGlobals = null;


        try {
            // InternalStubbrLang.g:585:55: (iv_ruleChapterGlobals= ruleChapterGlobals EOF )
            // InternalStubbrLang.g:586:2: iv_ruleChapterGlobals= ruleChapterGlobals EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getChapterGlobalsRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleChapterGlobals=ruleChapterGlobals();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleChapterGlobals; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleChapterGlobals"


    // $ANTLR start "ruleChapterGlobals"
    // InternalStubbrLang.g:592:1: ruleChapterGlobals returns [EObject current=null] : (otherlv_0= 'globals' otherlv_1= '{' (otherlv_2= 'loggerName' ( (lv_loggerName_3_0= RULE_ID ) ) )? (otherlv_4= 'loggerType' ( (lv_loggerType_5_0= ruleQualifiedName ) ) )? ( (lv_useSpringMVC_6_0= 'useSpringMVC' ) )? otherlv_7= '}' ) ;
    public final EObject ruleChapterGlobals() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token lv_loggerName_3_0=null;
        Token otherlv_4=null;
        Token lv_useSpringMVC_6_0=null;
        Token otherlv_7=null;
        AntlrDatatypeRuleToken lv_loggerType_5_0 = null;



        	enterRule();

        try {
            // InternalStubbrLang.g:598:2: ( (otherlv_0= 'globals' otherlv_1= '{' (otherlv_2= 'loggerName' ( (lv_loggerName_3_0= RULE_ID ) ) )? (otherlv_4= 'loggerType' ( (lv_loggerType_5_0= ruleQualifiedName ) ) )? ( (lv_useSpringMVC_6_0= 'useSpringMVC' ) )? otherlv_7= '}' ) )
            // InternalStubbrLang.g:599:2: (otherlv_0= 'globals' otherlv_1= '{' (otherlv_2= 'loggerName' ( (lv_loggerName_3_0= RULE_ID ) ) )? (otherlv_4= 'loggerType' ( (lv_loggerType_5_0= ruleQualifiedName ) ) )? ( (lv_useSpringMVC_6_0= 'useSpringMVC' ) )? otherlv_7= '}' )
            {
            // InternalStubbrLang.g:599:2: (otherlv_0= 'globals' otherlv_1= '{' (otherlv_2= 'loggerName' ( (lv_loggerName_3_0= RULE_ID ) ) )? (otherlv_4= 'loggerType' ( (lv_loggerType_5_0= ruleQualifiedName ) ) )? ( (lv_useSpringMVC_6_0= 'useSpringMVC' ) )? otherlv_7= '}' )
            // InternalStubbrLang.g:600:3: otherlv_0= 'globals' otherlv_1= '{' (otherlv_2= 'loggerName' ( (lv_loggerName_3_0= RULE_ID ) ) )? (otherlv_4= 'loggerType' ( (lv_loggerType_5_0= ruleQualifiedName ) ) )? ( (lv_useSpringMVC_6_0= 'useSpringMVC' ) )? otherlv_7= '}'
            {
            otherlv_0=(Token)match(input,27,FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getChapterGlobalsAccess().getGlobalsKeyword_0());
              		
            }
            otherlv_1=(Token)match(input,16,FOLLOW_30); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getChapterGlobalsAccess().getLeftCurlyBracketKeyword_1());
              		
            }
            // InternalStubbrLang.g:608:3: (otherlv_2= 'loggerName' ( (lv_loggerName_3_0= RULE_ID ) ) )?
            int alt22=2;
            int LA22_0 = input.LA(1);

            if ( (LA22_0==28) ) {
                alt22=1;
            }
            switch (alt22) {
                case 1 :
                    // InternalStubbrLang.g:609:4: otherlv_2= 'loggerName' ( (lv_loggerName_3_0= RULE_ID ) )
                    {
                    otherlv_2=(Token)match(input,28,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getChapterGlobalsAccess().getLoggerNameKeyword_2_0());
                      			
                    }
                    // InternalStubbrLang.g:613:4: ( (lv_loggerName_3_0= RULE_ID ) )
                    // InternalStubbrLang.g:614:5: (lv_loggerName_3_0= RULE_ID )
                    {
                    // InternalStubbrLang.g:614:5: (lv_loggerName_3_0= RULE_ID )
                    // InternalStubbrLang.g:615:6: lv_loggerName_3_0= RULE_ID
                    {
                    lv_loggerName_3_0=(Token)match(input,RULE_ID,FOLLOW_31); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_loggerName_3_0, grammarAccess.getChapterGlobalsAccess().getLoggerNameIDTerminalRuleCall_2_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getChapterGlobalsRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"loggerName",
                      							lv_loggerName_3_0,
                      							"org.eclipse.xtext.xbase.Xtype.ID");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:632:3: (otherlv_4= 'loggerType' ( (lv_loggerType_5_0= ruleQualifiedName ) ) )?
            int alt23=2;
            int LA23_0 = input.LA(1);

            if ( (LA23_0==29) ) {
                alt23=1;
            }
            switch (alt23) {
                case 1 :
                    // InternalStubbrLang.g:633:4: otherlv_4= 'loggerType' ( (lv_loggerType_5_0= ruleQualifiedName ) )
                    {
                    otherlv_4=(Token)match(input,29,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getChapterGlobalsAccess().getLoggerTypeKeyword_3_0());
                      			
                    }
                    // InternalStubbrLang.g:637:4: ( (lv_loggerType_5_0= ruleQualifiedName ) )
                    // InternalStubbrLang.g:638:5: (lv_loggerType_5_0= ruleQualifiedName )
                    {
                    // InternalStubbrLang.g:638:5: (lv_loggerType_5_0= ruleQualifiedName )
                    // InternalStubbrLang.g:639:6: lv_loggerType_5_0= ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getChapterGlobalsAccess().getLoggerTypeQualifiedNameParserRuleCall_3_1_0());
                      					
                    }
                    pushFollow(FOLLOW_32);
                    lv_loggerType_5_0=ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getChapterGlobalsRule());
                      						}
                      						set(
                      							current,
                      							"loggerType",
                      							lv_loggerType_5_0,
                      							"org.eclipse.xtext.xbase.Xbase.QualifiedName");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:657:3: ( (lv_useSpringMVC_6_0= 'useSpringMVC' ) )?
            int alt24=2;
            int LA24_0 = input.LA(1);

            if ( (LA24_0==30) ) {
                alt24=1;
            }
            switch (alt24) {
                case 1 :
                    // InternalStubbrLang.g:658:4: (lv_useSpringMVC_6_0= 'useSpringMVC' )
                    {
                    // InternalStubbrLang.g:658:4: (lv_useSpringMVC_6_0= 'useSpringMVC' )
                    // InternalStubbrLang.g:659:5: lv_useSpringMVC_6_0= 'useSpringMVC'
                    {
                    lv_useSpringMVC_6_0=(Token)match(input,30,FOLLOW_29); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_useSpringMVC_6_0, grammarAccess.getChapterGlobalsAccess().getUseSpringMVCUseSpringMVCKeyword_4_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getChapterGlobalsRule());
                      					}
                      					setWithLastConsumed(current, "useSpringMVC", true, "useSpringMVC");
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_7=(Token)match(input,26,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_7, grammarAccess.getChapterGlobalsAccess().getRightCurlyBracketKeyword_5());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleChapterGlobals"


    // $ANTLR start "entryRuleChapterProjectManagement"
    // InternalStubbrLang.g:679:1: entryRuleChapterProjectManagement returns [EObject current=null] : iv_ruleChapterProjectManagement= ruleChapterProjectManagement EOF ;
    public final EObject entryRuleChapterProjectManagement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleChapterProjectManagement = null;


        try {
            // InternalStubbrLang.g:679:65: (iv_ruleChapterProjectManagement= ruleChapterProjectManagement EOF )
            // InternalStubbrLang.g:680:2: iv_ruleChapterProjectManagement= ruleChapterProjectManagement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getChapterProjectManagementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleChapterProjectManagement=ruleChapterProjectManagement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleChapterProjectManagement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleChapterProjectManagement"


    // $ANTLR start "ruleChapterProjectManagement"
    // InternalStubbrLang.g:686:1: ruleChapterProjectManagement returns [EObject current=null] : (otherlv_0= 'management' otherlv_1= '{' (otherlv_2= 'projects' ( (lv_projects_3_0= ruleDevProject ) )* )? (otherlv_4= 'sourceCodeManagement' ( (lv_scm_5_0= ruleLevel1Attribute ) )* )? (otherlv_6= 'issueManagement' ( (lv_issueManagement_7_0= ruleLevel1Attribute ) )* )? (otherlv_8= 'distroManagement' ( (lv_distroManagement_9_0= ruleLevel1Attribute ) )* )? (otherlv_10= 'continousIntegration' ( (lv_ci_11_0= ruleLevel1Attribute ) )* )? otherlv_12= '}' ) ;
    public final EObject ruleChapterProjectManagement() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        EObject lv_projects_3_0 = null;

        EObject lv_scm_5_0 = null;

        EObject lv_issueManagement_7_0 = null;

        EObject lv_distroManagement_9_0 = null;

        EObject lv_ci_11_0 = null;



        	enterRule();

        try {
            // InternalStubbrLang.g:692:2: ( (otherlv_0= 'management' otherlv_1= '{' (otherlv_2= 'projects' ( (lv_projects_3_0= ruleDevProject ) )* )? (otherlv_4= 'sourceCodeManagement' ( (lv_scm_5_0= ruleLevel1Attribute ) )* )? (otherlv_6= 'issueManagement' ( (lv_issueManagement_7_0= ruleLevel1Attribute ) )* )? (otherlv_8= 'distroManagement' ( (lv_distroManagement_9_0= ruleLevel1Attribute ) )* )? (otherlv_10= 'continousIntegration' ( (lv_ci_11_0= ruleLevel1Attribute ) )* )? otherlv_12= '}' ) )
            // InternalStubbrLang.g:693:2: (otherlv_0= 'management' otherlv_1= '{' (otherlv_2= 'projects' ( (lv_projects_3_0= ruleDevProject ) )* )? (otherlv_4= 'sourceCodeManagement' ( (lv_scm_5_0= ruleLevel1Attribute ) )* )? (otherlv_6= 'issueManagement' ( (lv_issueManagement_7_0= ruleLevel1Attribute ) )* )? (otherlv_8= 'distroManagement' ( (lv_distroManagement_9_0= ruleLevel1Attribute ) )* )? (otherlv_10= 'continousIntegration' ( (lv_ci_11_0= ruleLevel1Attribute ) )* )? otherlv_12= '}' )
            {
            // InternalStubbrLang.g:693:2: (otherlv_0= 'management' otherlv_1= '{' (otherlv_2= 'projects' ( (lv_projects_3_0= ruleDevProject ) )* )? (otherlv_4= 'sourceCodeManagement' ( (lv_scm_5_0= ruleLevel1Attribute ) )* )? (otherlv_6= 'issueManagement' ( (lv_issueManagement_7_0= ruleLevel1Attribute ) )* )? (otherlv_8= 'distroManagement' ( (lv_distroManagement_9_0= ruleLevel1Attribute ) )* )? (otherlv_10= 'continousIntegration' ( (lv_ci_11_0= ruleLevel1Attribute ) )* )? otherlv_12= '}' )
            // InternalStubbrLang.g:694:3: otherlv_0= 'management' otherlv_1= '{' (otherlv_2= 'projects' ( (lv_projects_3_0= ruleDevProject ) )* )? (otherlv_4= 'sourceCodeManagement' ( (lv_scm_5_0= ruleLevel1Attribute ) )* )? (otherlv_6= 'issueManagement' ( (lv_issueManagement_7_0= ruleLevel1Attribute ) )* )? (otherlv_8= 'distroManagement' ( (lv_distroManagement_9_0= ruleLevel1Attribute ) )* )? (otherlv_10= 'continousIntegration' ( (lv_ci_11_0= ruleLevel1Attribute ) )* )? otherlv_12= '}'
            {
            otherlv_0=(Token)match(input,31,FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getChapterProjectManagementAccess().getManagementKeyword_0());
              		
            }
            otherlv_1=(Token)match(input,16,FOLLOW_33); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getChapterProjectManagementAccess().getLeftCurlyBracketKeyword_1());
              		
            }
            // InternalStubbrLang.g:702:3: (otherlv_2= 'projects' ( (lv_projects_3_0= ruleDevProject ) )* )?
            int alt26=2;
            int LA26_0 = input.LA(1);

            if ( (LA26_0==32) ) {
                alt26=1;
            }
            switch (alt26) {
                case 1 :
                    // InternalStubbrLang.g:703:4: otherlv_2= 'projects' ( (lv_projects_3_0= ruleDevProject ) )*
                    {
                    otherlv_2=(Token)match(input,32,FOLLOW_34); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getChapterProjectManagementAccess().getProjectsKeyword_2_0());
                      			
                    }
                    // InternalStubbrLang.g:707:4: ( (lv_projects_3_0= ruleDevProject ) )*
                    loop25:
                    do {
                        int alt25=2;
                        int LA25_0 = input.LA(1);

                        if ( (LA25_0==18||LA25_0==41||(LA25_0>=79 && LA25_0<=80)||(LA25_0>=228 && LA25_0<=241)) ) {
                            alt25=1;
                        }


                        switch (alt25) {
                    	case 1 :
                    	    // InternalStubbrLang.g:708:5: (lv_projects_3_0= ruleDevProject )
                    	    {
                    	    // InternalStubbrLang.g:708:5: (lv_projects_3_0= ruleDevProject )
                    	    // InternalStubbrLang.g:709:6: lv_projects_3_0= ruleDevProject
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getChapterProjectManagementAccess().getProjectsDevProjectParserRuleCall_2_1_0());
                    	      					
                    	    }
                    	    pushFollow(FOLLOW_34);
                    	    lv_projects_3_0=ruleDevProject();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getChapterProjectManagementRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"projects",
                    	      							lv_projects_3_0,
                    	      							"com.laegler.stubbr.lang.StubbrLang.DevProject");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop25;
                        }
                    } while (true);


                    }
                    break;

            }

            // InternalStubbrLang.g:727:3: (otherlv_4= 'sourceCodeManagement' ( (lv_scm_5_0= ruleLevel1Attribute ) )* )?
            int alt28=2;
            int LA28_0 = input.LA(1);

            if ( (LA28_0==33) ) {
                alt28=1;
            }
            switch (alt28) {
                case 1 :
                    // InternalStubbrLang.g:728:4: otherlv_4= 'sourceCodeManagement' ( (lv_scm_5_0= ruleLevel1Attribute ) )*
                    {
                    otherlv_4=(Token)match(input,33,FOLLOW_35); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getChapterProjectManagementAccess().getSourceCodeManagementKeyword_3_0());
                      			
                    }
                    // InternalStubbrLang.g:732:4: ( (lv_scm_5_0= ruleLevel1Attribute ) )*
                    loop27:
                    do {
                        int alt27=2;
                        int LA27_0 = input.LA(1);

                        if ( (LA27_0==71) ) {
                            alt27=1;
                        }


                        switch (alt27) {
                    	case 1 :
                    	    // InternalStubbrLang.g:733:5: (lv_scm_5_0= ruleLevel1Attribute )
                    	    {
                    	    // InternalStubbrLang.g:733:5: (lv_scm_5_0= ruleLevel1Attribute )
                    	    // InternalStubbrLang.g:734:6: lv_scm_5_0= ruleLevel1Attribute
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getChapterProjectManagementAccess().getScmLevel1AttributeParserRuleCall_3_1_0());
                    	      					
                    	    }
                    	    pushFollow(FOLLOW_35);
                    	    lv_scm_5_0=ruleLevel1Attribute();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getChapterProjectManagementRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"scm",
                    	      							lv_scm_5_0,
                    	      							"com.laegler.stubbr.lang.StubbrLang.Level1Attribute");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop27;
                        }
                    } while (true);


                    }
                    break;

            }

            // InternalStubbrLang.g:752:3: (otherlv_6= 'issueManagement' ( (lv_issueManagement_7_0= ruleLevel1Attribute ) )* )?
            int alt30=2;
            int LA30_0 = input.LA(1);

            if ( (LA30_0==34) ) {
                alt30=1;
            }
            switch (alt30) {
                case 1 :
                    // InternalStubbrLang.g:753:4: otherlv_6= 'issueManagement' ( (lv_issueManagement_7_0= ruleLevel1Attribute ) )*
                    {
                    otherlv_6=(Token)match(input,34,FOLLOW_36); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getChapterProjectManagementAccess().getIssueManagementKeyword_4_0());
                      			
                    }
                    // InternalStubbrLang.g:757:4: ( (lv_issueManagement_7_0= ruleLevel1Attribute ) )*
                    loop29:
                    do {
                        int alt29=2;
                        int LA29_0 = input.LA(1);

                        if ( (LA29_0==71) ) {
                            alt29=1;
                        }


                        switch (alt29) {
                    	case 1 :
                    	    // InternalStubbrLang.g:758:5: (lv_issueManagement_7_0= ruleLevel1Attribute )
                    	    {
                    	    // InternalStubbrLang.g:758:5: (lv_issueManagement_7_0= ruleLevel1Attribute )
                    	    // InternalStubbrLang.g:759:6: lv_issueManagement_7_0= ruleLevel1Attribute
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getChapterProjectManagementAccess().getIssueManagementLevel1AttributeParserRuleCall_4_1_0());
                    	      					
                    	    }
                    	    pushFollow(FOLLOW_36);
                    	    lv_issueManagement_7_0=ruleLevel1Attribute();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getChapterProjectManagementRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"issueManagement",
                    	      							lv_issueManagement_7_0,
                    	      							"com.laegler.stubbr.lang.StubbrLang.Level1Attribute");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop29;
                        }
                    } while (true);


                    }
                    break;

            }

            // InternalStubbrLang.g:777:3: (otherlv_8= 'distroManagement' ( (lv_distroManagement_9_0= ruleLevel1Attribute ) )* )?
            int alt32=2;
            int LA32_0 = input.LA(1);

            if ( (LA32_0==35) ) {
                alt32=1;
            }
            switch (alt32) {
                case 1 :
                    // InternalStubbrLang.g:778:4: otherlv_8= 'distroManagement' ( (lv_distroManagement_9_0= ruleLevel1Attribute ) )*
                    {
                    otherlv_8=(Token)match(input,35,FOLLOW_37); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_8, grammarAccess.getChapterProjectManagementAccess().getDistroManagementKeyword_5_0());
                      			
                    }
                    // InternalStubbrLang.g:782:4: ( (lv_distroManagement_9_0= ruleLevel1Attribute ) )*
                    loop31:
                    do {
                        int alt31=2;
                        int LA31_0 = input.LA(1);

                        if ( (LA31_0==71) ) {
                            alt31=1;
                        }


                        switch (alt31) {
                    	case 1 :
                    	    // InternalStubbrLang.g:783:5: (lv_distroManagement_9_0= ruleLevel1Attribute )
                    	    {
                    	    // InternalStubbrLang.g:783:5: (lv_distroManagement_9_0= ruleLevel1Attribute )
                    	    // InternalStubbrLang.g:784:6: lv_distroManagement_9_0= ruleLevel1Attribute
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getChapterProjectManagementAccess().getDistroManagementLevel1AttributeParserRuleCall_5_1_0());
                    	      					
                    	    }
                    	    pushFollow(FOLLOW_37);
                    	    lv_distroManagement_9_0=ruleLevel1Attribute();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getChapterProjectManagementRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"distroManagement",
                    	      							lv_distroManagement_9_0,
                    	      							"com.laegler.stubbr.lang.StubbrLang.Level1Attribute");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop31;
                        }
                    } while (true);


                    }
                    break;

            }

            // InternalStubbrLang.g:802:3: (otherlv_10= 'continousIntegration' ( (lv_ci_11_0= ruleLevel1Attribute ) )* )?
            int alt34=2;
            int LA34_0 = input.LA(1);

            if ( (LA34_0==36) ) {
                alt34=1;
            }
            switch (alt34) {
                case 1 :
                    // InternalStubbrLang.g:803:4: otherlv_10= 'continousIntegration' ( (lv_ci_11_0= ruleLevel1Attribute ) )*
                    {
                    otherlv_10=(Token)match(input,36,FOLLOW_38); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_10, grammarAccess.getChapterProjectManagementAccess().getContinousIntegrationKeyword_6_0());
                      			
                    }
                    // InternalStubbrLang.g:807:4: ( (lv_ci_11_0= ruleLevel1Attribute ) )*
                    loop33:
                    do {
                        int alt33=2;
                        int LA33_0 = input.LA(1);

                        if ( (LA33_0==71) ) {
                            alt33=1;
                        }


                        switch (alt33) {
                    	case 1 :
                    	    // InternalStubbrLang.g:808:5: (lv_ci_11_0= ruleLevel1Attribute )
                    	    {
                    	    // InternalStubbrLang.g:808:5: (lv_ci_11_0= ruleLevel1Attribute )
                    	    // InternalStubbrLang.g:809:6: lv_ci_11_0= ruleLevel1Attribute
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getChapterProjectManagementAccess().getCiLevel1AttributeParserRuleCall_6_1_0());
                    	      					
                    	    }
                    	    pushFollow(FOLLOW_38);
                    	    lv_ci_11_0=ruleLevel1Attribute();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getChapterProjectManagementRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"ci",
                    	      							lv_ci_11_0,
                    	      							"com.laegler.stubbr.lang.StubbrLang.Level1Attribute");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop33;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_12=(Token)match(input,26,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_12, grammarAccess.getChapterProjectManagementAccess().getRightCurlyBracketKeyword_7());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleChapterProjectManagement"


    // $ANTLR start "entryRuleDevProject"
    // InternalStubbrLang.g:835:1: entryRuleDevProject returns [EObject current=null] : iv_ruleDevProject= ruleDevProject EOF ;
    public final EObject entryRuleDevProject() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDevProject = null;


        try {
            // InternalStubbrLang.g:835:51: (iv_ruleDevProject= ruleDevProject EOF )
            // InternalStubbrLang.g:836:2: iv_ruleDevProject= ruleDevProject EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDevProjectRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDevProject=ruleDevProject();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDevProject; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDevProject"


    // $ANTLR start "ruleDevProject"
    // InternalStubbrLang.g:842:1: ruleDevProject returns [EObject current=null] : ( ( (lv_project_0_0= ruleDevProjectType ) ) ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )? (otherlv_7= 'suffix' ( (lv_suffix_8_0= ruleQualifiedName ) ) )? otherlv_9= '}' ) ;
    public final EObject ruleDevProject() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_3=null;
        Token lv_label_4_0=null;
        Token otherlv_5=null;
        Token lv_documentation_6_0=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Enumerator lv_project_0_0 = null;

        AntlrDatatypeRuleToken lv_name_1_0 = null;

        AntlrDatatypeRuleToken lv_suffix_8_0 = null;



        	enterRule();

        try {
            // InternalStubbrLang.g:848:2: ( ( ( (lv_project_0_0= ruleDevProjectType ) ) ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )? (otherlv_7= 'suffix' ( (lv_suffix_8_0= ruleQualifiedName ) ) )? otherlv_9= '}' ) )
            // InternalStubbrLang.g:849:2: ( ( (lv_project_0_0= ruleDevProjectType ) ) ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )? (otherlv_7= 'suffix' ( (lv_suffix_8_0= ruleQualifiedName ) ) )? otherlv_9= '}' )
            {
            // InternalStubbrLang.g:849:2: ( ( (lv_project_0_0= ruleDevProjectType ) ) ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )? (otherlv_7= 'suffix' ( (lv_suffix_8_0= ruleQualifiedName ) ) )? otherlv_9= '}' )
            // InternalStubbrLang.g:850:3: ( (lv_project_0_0= ruleDevProjectType ) ) ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )? (otherlv_7= 'suffix' ( (lv_suffix_8_0= ruleQualifiedName ) ) )? otherlv_9= '}'
            {
            // InternalStubbrLang.g:850:3: ( (lv_project_0_0= ruleDevProjectType ) )
            // InternalStubbrLang.g:851:4: (lv_project_0_0= ruleDevProjectType )
            {
            // InternalStubbrLang.g:851:4: (lv_project_0_0= ruleDevProjectType )
            // InternalStubbrLang.g:852:5: lv_project_0_0= ruleDevProjectType
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getDevProjectAccess().getProjectDevProjectTypeEnumRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_3);
            lv_project_0_0=ruleDevProjectType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getDevProjectRule());
              					}
              					set(
              						current,
              						"project",
              						lv_project_0_0,
              						"com.laegler.stubbr.lang.StubbrLang.DevProjectType");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalStubbrLang.g:869:3: ( (lv_name_1_0= ruleQualifiedName ) )
            // InternalStubbrLang.g:870:4: (lv_name_1_0= ruleQualifiedName )
            {
            // InternalStubbrLang.g:870:4: (lv_name_1_0= ruleQualifiedName )
            // InternalStubbrLang.g:871:5: lv_name_1_0= ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getDevProjectAccess().getNameQualifiedNameParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_6);
            lv_name_1_0=ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getDevProjectRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"org.eclipse.xtext.xbase.Xbase.QualifiedName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,16,FOLLOW_39); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getDevProjectAccess().getLeftCurlyBracketKeyword_2());
              		
            }
            // InternalStubbrLang.g:892:3: (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )?
            int alt35=2;
            int LA35_0 = input.LA(1);

            if ( (LA35_0==17) ) {
                alt35=1;
            }
            switch (alt35) {
                case 1 :
                    // InternalStubbrLang.g:893:4: otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) )
                    {
                    otherlv_3=(Token)match(input,17,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getDevProjectAccess().getLabelKeyword_3_0());
                      			
                    }
                    // InternalStubbrLang.g:897:4: ( (lv_label_4_0= RULE_STRING ) )
                    // InternalStubbrLang.g:898:5: (lv_label_4_0= RULE_STRING )
                    {
                    // InternalStubbrLang.g:898:5: (lv_label_4_0= RULE_STRING )
                    // InternalStubbrLang.g:899:6: lv_label_4_0= RULE_STRING
                    {
                    lv_label_4_0=(Token)match(input,RULE_STRING,FOLLOW_40); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_label_4_0, grammarAccess.getDevProjectAccess().getLabelSTRINGTerminalRuleCall_3_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getDevProjectRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"label",
                      							lv_label_4_0,
                      							"org.eclipse.xtext.xbase.Xtype.STRING");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:916:3: (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )?
            int alt36=2;
            int LA36_0 = input.LA(1);

            if ( (LA36_0==18) ) {
                alt36=1;
            }
            switch (alt36) {
                case 1 :
                    // InternalStubbrLang.g:917:4: otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) )
                    {
                    otherlv_5=(Token)match(input,18,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getDevProjectAccess().getDocumentationKeyword_4_0());
                      			
                    }
                    // InternalStubbrLang.g:921:4: ( (lv_documentation_6_0= RULE_STRING ) )
                    // InternalStubbrLang.g:922:5: (lv_documentation_6_0= RULE_STRING )
                    {
                    // InternalStubbrLang.g:922:5: (lv_documentation_6_0= RULE_STRING )
                    // InternalStubbrLang.g:923:6: lv_documentation_6_0= RULE_STRING
                    {
                    lv_documentation_6_0=(Token)match(input,RULE_STRING,FOLLOW_41); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_documentation_6_0, grammarAccess.getDevProjectAccess().getDocumentationSTRINGTerminalRuleCall_4_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getDevProjectRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"documentation",
                      							lv_documentation_6_0,
                      							"org.eclipse.xtext.xbase.Xtype.STRING");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:940:3: (otherlv_7= 'suffix' ( (lv_suffix_8_0= ruleQualifiedName ) ) )?
            int alt37=2;
            int LA37_0 = input.LA(1);

            if ( (LA37_0==37) ) {
                alt37=1;
            }
            switch (alt37) {
                case 1 :
                    // InternalStubbrLang.g:941:4: otherlv_7= 'suffix' ( (lv_suffix_8_0= ruleQualifiedName ) )
                    {
                    otherlv_7=(Token)match(input,37,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getDevProjectAccess().getSuffixKeyword_5_0());
                      			
                    }
                    // InternalStubbrLang.g:945:4: ( (lv_suffix_8_0= ruleQualifiedName ) )
                    // InternalStubbrLang.g:946:5: (lv_suffix_8_0= ruleQualifiedName )
                    {
                    // InternalStubbrLang.g:946:5: (lv_suffix_8_0= ruleQualifiedName )
                    // InternalStubbrLang.g:947:6: lv_suffix_8_0= ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDevProjectAccess().getSuffixQualifiedNameParserRuleCall_5_1_0());
                      					
                    }
                    pushFollow(FOLLOW_29);
                    lv_suffix_8_0=ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDevProjectRule());
                      						}
                      						set(
                      							current,
                      							"suffix",
                      							lv_suffix_8_0,
                      							"org.eclipse.xtext.xbase.Xbase.QualifiedName");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_9=(Token)match(input,26,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_9, grammarAccess.getDevProjectAccess().getRightCurlyBracketKeyword_6());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDevProject"


    // $ANTLR start "entryRuleChapterProjectStructure"
    // InternalStubbrLang.g:973:1: entryRuleChapterProjectStructure returns [EObject current=null] : iv_ruleChapterProjectStructure= ruleChapterProjectStructure EOF ;
    public final EObject entryRuleChapterProjectStructure() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleChapterProjectStructure = null;


        try {
            // InternalStubbrLang.g:973:64: (iv_ruleChapterProjectStructure= ruleChapterProjectStructure EOF )
            // InternalStubbrLang.g:974:2: iv_ruleChapterProjectStructure= ruleChapterProjectStructure EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getChapterProjectStructureRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleChapterProjectStructure=ruleChapterProjectStructure();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleChapterProjectStructure; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleChapterProjectStructure"


    // $ANTLR start "ruleChapterProjectStructure"
    // InternalStubbrLang.g:980:1: ruleChapterProjectStructure returns [EObject current=null] : (otherlv_0= 'structure' otherlv_1= '{' ( (lv_isNestedParent_2_0= 'nestedParentProject' ) )? (otherlv_3= 'properties' ( (lv_testMethods_4_0= ruleLevel1Attribute ) )* )? otherlv_5= '}' ) ;
    public final EObject ruleChapterProjectStructure() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token lv_isNestedParent_2_0=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_testMethods_4_0 = null;



        	enterRule();

        try {
            // InternalStubbrLang.g:986:2: ( (otherlv_0= 'structure' otherlv_1= '{' ( (lv_isNestedParent_2_0= 'nestedParentProject' ) )? (otherlv_3= 'properties' ( (lv_testMethods_4_0= ruleLevel1Attribute ) )* )? otherlv_5= '}' ) )
            // InternalStubbrLang.g:987:2: (otherlv_0= 'structure' otherlv_1= '{' ( (lv_isNestedParent_2_0= 'nestedParentProject' ) )? (otherlv_3= 'properties' ( (lv_testMethods_4_0= ruleLevel1Attribute ) )* )? otherlv_5= '}' )
            {
            // InternalStubbrLang.g:987:2: (otherlv_0= 'structure' otherlv_1= '{' ( (lv_isNestedParent_2_0= 'nestedParentProject' ) )? (otherlv_3= 'properties' ( (lv_testMethods_4_0= ruleLevel1Attribute ) )* )? otherlv_5= '}' )
            // InternalStubbrLang.g:988:3: otherlv_0= 'structure' otherlv_1= '{' ( (lv_isNestedParent_2_0= 'nestedParentProject' ) )? (otherlv_3= 'properties' ( (lv_testMethods_4_0= ruleLevel1Attribute ) )* )? otherlv_5= '}'
            {
            otherlv_0=(Token)match(input,38,FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getChapterProjectStructureAccess().getStructureKeyword_0());
              		
            }
            otherlv_1=(Token)match(input,16,FOLLOW_42); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getChapterProjectStructureAccess().getLeftCurlyBracketKeyword_1());
              		
            }
            // InternalStubbrLang.g:996:3: ( (lv_isNestedParent_2_0= 'nestedParentProject' ) )?
            int alt38=2;
            int LA38_0 = input.LA(1);

            if ( (LA38_0==39) ) {
                alt38=1;
            }
            switch (alt38) {
                case 1 :
                    // InternalStubbrLang.g:997:4: (lv_isNestedParent_2_0= 'nestedParentProject' )
                    {
                    // InternalStubbrLang.g:997:4: (lv_isNestedParent_2_0= 'nestedParentProject' )
                    // InternalStubbrLang.g:998:5: lv_isNestedParent_2_0= 'nestedParentProject'
                    {
                    lv_isNestedParent_2_0=(Token)match(input,39,FOLLOW_43); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_isNestedParent_2_0, grammarAccess.getChapterProjectStructureAccess().getIsNestedParentNestedParentProjectKeyword_2_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getChapterProjectStructureRule());
                      					}
                      					setWithLastConsumed(current, "isNestedParent", true, "nestedParentProject");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:1010:3: (otherlv_3= 'properties' ( (lv_testMethods_4_0= ruleLevel1Attribute ) )* )?
            int alt40=2;
            int LA40_0 = input.LA(1);

            if ( (LA40_0==40) ) {
                alt40=1;
            }
            switch (alt40) {
                case 1 :
                    // InternalStubbrLang.g:1011:4: otherlv_3= 'properties' ( (lv_testMethods_4_0= ruleLevel1Attribute ) )*
                    {
                    otherlv_3=(Token)match(input,40,FOLLOW_38); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getChapterProjectStructureAccess().getPropertiesKeyword_3_0());
                      			
                    }
                    // InternalStubbrLang.g:1015:4: ( (lv_testMethods_4_0= ruleLevel1Attribute ) )*
                    loop39:
                    do {
                        int alt39=2;
                        int LA39_0 = input.LA(1);

                        if ( (LA39_0==71) ) {
                            alt39=1;
                        }


                        switch (alt39) {
                    	case 1 :
                    	    // InternalStubbrLang.g:1016:5: (lv_testMethods_4_0= ruleLevel1Attribute )
                    	    {
                    	    // InternalStubbrLang.g:1016:5: (lv_testMethods_4_0= ruleLevel1Attribute )
                    	    // InternalStubbrLang.g:1017:6: lv_testMethods_4_0= ruleLevel1Attribute
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getChapterProjectStructureAccess().getTestMethodsLevel1AttributeParserRuleCall_3_1_0());
                    	      					
                    	    }
                    	    pushFollow(FOLLOW_38);
                    	    lv_testMethods_4_0=ruleLevel1Attribute();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getChapterProjectStructureRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"testMethods",
                    	      							lv_testMethods_4_0,
                    	      							"com.laegler.stubbr.lang.StubbrLang.Level1Attribute");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop39;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_5=(Token)match(input,26,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getChapterProjectStructureAccess().getRightCurlyBracketKeyword_4());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleChapterProjectStructure"


    // $ANTLR start "entryRuleChapterPersistence"
    // InternalStubbrLang.g:1043:1: entryRuleChapterPersistence returns [EObject current=null] : iv_ruleChapterPersistence= ruleChapterPersistence EOF ;
    public final EObject entryRuleChapterPersistence() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleChapterPersistence = null;


        try {
            // InternalStubbrLang.g:1043:59: (iv_ruleChapterPersistence= ruleChapterPersistence EOF )
            // InternalStubbrLang.g:1044:2: iv_ruleChapterPersistence= ruleChapterPersistence EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getChapterPersistenceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleChapterPersistence=ruleChapterPersistence();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleChapterPersistence; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleChapterPersistence"


    // $ANTLR start "ruleChapterPersistence"
    // InternalStubbrLang.g:1050:1: ruleChapterPersistence returns [EObject current=null] : (otherlv_0= 'persistence' otherlv_1= '{' (otherlv_2= 'databases' ( (lv_databases_3_0= ruleDatabase ) )* )? (otherlv_4= 'datasources' ( (lv_datasources_5_0= ruleLevel1Attribute ) )* )? (otherlv_6= 'persistenceUnit' ( (lv_persistenceUnits_7_0= ruleLevel1Attribute ) )* )? ( (lv_entities_8_0= ruleEntity ) )* ( (lv_enumerations_9_0= ruleEnumeration ) )* ( (lv_relationships_10_0= ruleRelationship ) )* ( (lv_customIds_11_0= 'customIds' ) )? (otherlv_12= 'idType' ( (lv_javaType_13_0= ruleJvmTypeReference ) ) )? otherlv_14= '}' ) ;
    public final EObject ruleChapterPersistence() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token lv_customIds_11_0=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        EObject lv_databases_3_0 = null;

        EObject lv_datasources_5_0 = null;

        EObject lv_persistenceUnits_7_0 = null;

        EObject lv_entities_8_0 = null;

        EObject lv_enumerations_9_0 = null;

        EObject lv_relationships_10_0 = null;

        EObject lv_javaType_13_0 = null;



        	enterRule();

        try {
            // InternalStubbrLang.g:1056:2: ( (otherlv_0= 'persistence' otherlv_1= '{' (otherlv_2= 'databases' ( (lv_databases_3_0= ruleDatabase ) )* )? (otherlv_4= 'datasources' ( (lv_datasources_5_0= ruleLevel1Attribute ) )* )? (otherlv_6= 'persistenceUnit' ( (lv_persistenceUnits_7_0= ruleLevel1Attribute ) )* )? ( (lv_entities_8_0= ruleEntity ) )* ( (lv_enumerations_9_0= ruleEnumeration ) )* ( (lv_relationships_10_0= ruleRelationship ) )* ( (lv_customIds_11_0= 'customIds' ) )? (otherlv_12= 'idType' ( (lv_javaType_13_0= ruleJvmTypeReference ) ) )? otherlv_14= '}' ) )
            // InternalStubbrLang.g:1057:2: (otherlv_0= 'persistence' otherlv_1= '{' (otherlv_2= 'databases' ( (lv_databases_3_0= ruleDatabase ) )* )? (otherlv_4= 'datasources' ( (lv_datasources_5_0= ruleLevel1Attribute ) )* )? (otherlv_6= 'persistenceUnit' ( (lv_persistenceUnits_7_0= ruleLevel1Attribute ) )* )? ( (lv_entities_8_0= ruleEntity ) )* ( (lv_enumerations_9_0= ruleEnumeration ) )* ( (lv_relationships_10_0= ruleRelationship ) )* ( (lv_customIds_11_0= 'customIds' ) )? (otherlv_12= 'idType' ( (lv_javaType_13_0= ruleJvmTypeReference ) ) )? otherlv_14= '}' )
            {
            // InternalStubbrLang.g:1057:2: (otherlv_0= 'persistence' otherlv_1= '{' (otherlv_2= 'databases' ( (lv_databases_3_0= ruleDatabase ) )* )? (otherlv_4= 'datasources' ( (lv_datasources_5_0= ruleLevel1Attribute ) )* )? (otherlv_6= 'persistenceUnit' ( (lv_persistenceUnits_7_0= ruleLevel1Attribute ) )* )? ( (lv_entities_8_0= ruleEntity ) )* ( (lv_enumerations_9_0= ruleEnumeration ) )* ( (lv_relationships_10_0= ruleRelationship ) )* ( (lv_customIds_11_0= 'customIds' ) )? (otherlv_12= 'idType' ( (lv_javaType_13_0= ruleJvmTypeReference ) ) )? otherlv_14= '}' )
            // InternalStubbrLang.g:1058:3: otherlv_0= 'persistence' otherlv_1= '{' (otherlv_2= 'databases' ( (lv_databases_3_0= ruleDatabase ) )* )? (otherlv_4= 'datasources' ( (lv_datasources_5_0= ruleLevel1Attribute ) )* )? (otherlv_6= 'persistenceUnit' ( (lv_persistenceUnits_7_0= ruleLevel1Attribute ) )* )? ( (lv_entities_8_0= ruleEntity ) )* ( (lv_enumerations_9_0= ruleEnumeration ) )* ( (lv_relationships_10_0= ruleRelationship ) )* ( (lv_customIds_11_0= 'customIds' ) )? (otherlv_12= 'idType' ( (lv_javaType_13_0= ruleJvmTypeReference ) ) )? otherlv_14= '}'
            {
            otherlv_0=(Token)match(input,41,FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getChapterPersistenceAccess().getPersistenceKeyword_0());
              		
            }
            otherlv_1=(Token)match(input,16,FOLLOW_44); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getChapterPersistenceAccess().getLeftCurlyBracketKeyword_1());
              		
            }
            // InternalStubbrLang.g:1066:3: (otherlv_2= 'databases' ( (lv_databases_3_0= ruleDatabase ) )* )?
            int alt42=2;
            int LA42_0 = input.LA(1);

            if ( (LA42_0==42) ) {
                alt42=1;
            }
            switch (alt42) {
                case 1 :
                    // InternalStubbrLang.g:1067:4: otherlv_2= 'databases' ( (lv_databases_3_0= ruleDatabase ) )*
                    {
                    otherlv_2=(Token)match(input,42,FOLLOW_45); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getChapterPersistenceAccess().getDatabasesKeyword_2_0());
                      			
                    }
                    // InternalStubbrLang.g:1071:4: ( (lv_databases_3_0= ruleDatabase ) )*
                    loop41:
                    do {
                        int alt41=2;
                        int LA41_0 = input.LA(1);

                        if ( (LA41_0==66) ) {
                            alt41=1;
                        }


                        switch (alt41) {
                    	case 1 :
                    	    // InternalStubbrLang.g:1072:5: (lv_databases_3_0= ruleDatabase )
                    	    {
                    	    // InternalStubbrLang.g:1072:5: (lv_databases_3_0= ruleDatabase )
                    	    // InternalStubbrLang.g:1073:6: lv_databases_3_0= ruleDatabase
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getChapterPersistenceAccess().getDatabasesDatabaseParserRuleCall_2_1_0());
                    	      					
                    	    }
                    	    pushFollow(FOLLOW_45);
                    	    lv_databases_3_0=ruleDatabase();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getChapterPersistenceRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"databases",
                    	      							lv_databases_3_0,
                    	      							"com.laegler.stubbr.lang.StubbrLang.Database");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop41;
                        }
                    } while (true);


                    }
                    break;

            }

            // InternalStubbrLang.g:1091:3: (otherlv_4= 'datasources' ( (lv_datasources_5_0= ruleLevel1Attribute ) )* )?
            int alt44=2;
            int LA44_0 = input.LA(1);

            if ( (LA44_0==43) ) {
                alt44=1;
            }
            switch (alt44) {
                case 1 :
                    // InternalStubbrLang.g:1092:4: otherlv_4= 'datasources' ( (lv_datasources_5_0= ruleLevel1Attribute ) )*
                    {
                    otherlv_4=(Token)match(input,43,FOLLOW_46); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getChapterPersistenceAccess().getDatasourcesKeyword_3_0());
                      			
                    }
                    // InternalStubbrLang.g:1096:4: ( (lv_datasources_5_0= ruleLevel1Attribute ) )*
                    loop43:
                    do {
                        int alt43=2;
                        int LA43_0 = input.LA(1);

                        if ( (LA43_0==71) ) {
                            alt43=1;
                        }


                        switch (alt43) {
                    	case 1 :
                    	    // InternalStubbrLang.g:1097:5: (lv_datasources_5_0= ruleLevel1Attribute )
                    	    {
                    	    // InternalStubbrLang.g:1097:5: (lv_datasources_5_0= ruleLevel1Attribute )
                    	    // InternalStubbrLang.g:1098:6: lv_datasources_5_0= ruleLevel1Attribute
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getChapterPersistenceAccess().getDatasourcesLevel1AttributeParserRuleCall_3_1_0());
                    	      					
                    	    }
                    	    pushFollow(FOLLOW_46);
                    	    lv_datasources_5_0=ruleLevel1Attribute();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getChapterPersistenceRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"datasources",
                    	      							lv_datasources_5_0,
                    	      							"com.laegler.stubbr.lang.StubbrLang.Level1Attribute");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop43;
                        }
                    } while (true);


                    }
                    break;

            }

            // InternalStubbrLang.g:1116:3: (otherlv_6= 'persistenceUnit' ( (lv_persistenceUnits_7_0= ruleLevel1Attribute ) )* )?
            int alt46=2;
            int LA46_0 = input.LA(1);

            if ( (LA46_0==44) ) {
                alt46=1;
            }
            switch (alt46) {
                case 1 :
                    // InternalStubbrLang.g:1117:4: otherlv_6= 'persistenceUnit' ( (lv_persistenceUnits_7_0= ruleLevel1Attribute ) )*
                    {
                    otherlv_6=(Token)match(input,44,FOLLOW_47); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getChapterPersistenceAccess().getPersistenceUnitKeyword_4_0());
                      			
                    }
                    // InternalStubbrLang.g:1121:4: ( (lv_persistenceUnits_7_0= ruleLevel1Attribute ) )*
                    loop45:
                    do {
                        int alt45=2;
                        int LA45_0 = input.LA(1);

                        if ( (LA45_0==71) ) {
                            alt45=1;
                        }


                        switch (alt45) {
                    	case 1 :
                    	    // InternalStubbrLang.g:1122:5: (lv_persistenceUnits_7_0= ruleLevel1Attribute )
                    	    {
                    	    // InternalStubbrLang.g:1122:5: (lv_persistenceUnits_7_0= ruleLevel1Attribute )
                    	    // InternalStubbrLang.g:1123:6: lv_persistenceUnits_7_0= ruleLevel1Attribute
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getChapterPersistenceAccess().getPersistenceUnitsLevel1AttributeParserRuleCall_4_1_0());
                    	      					
                    	    }
                    	    pushFollow(FOLLOW_47);
                    	    lv_persistenceUnits_7_0=ruleLevel1Attribute();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getChapterPersistenceRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"persistenceUnits",
                    	      							lv_persistenceUnits_7_0,
                    	      							"com.laegler.stubbr.lang.StubbrLang.Level1Attribute");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop45;
                        }
                    } while (true);


                    }
                    break;

            }

            // InternalStubbrLang.g:1141:3: ( (lv_entities_8_0= ruleEntity ) )*
            loop47:
            do {
                int alt47=2;
                int LA47_0 = input.LA(1);

                if ( (LA47_0==68) ) {
                    alt47=1;
                }


                switch (alt47) {
            	case 1 :
            	    // InternalStubbrLang.g:1142:4: (lv_entities_8_0= ruleEntity )
            	    {
            	    // InternalStubbrLang.g:1142:4: (lv_entities_8_0= ruleEntity )
            	    // InternalStubbrLang.g:1143:5: lv_entities_8_0= ruleEntity
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getChapterPersistenceAccess().getEntitiesEntityParserRuleCall_5_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_48);
            	    lv_entities_8_0=ruleEntity();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getChapterPersistenceRule());
            	      					}
            	      					add(
            	      						current,
            	      						"entities",
            	      						lv_entities_8_0,
            	      						"com.laegler.stubbr.lang.StubbrLang.Entity");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop47;
                }
            } while (true);

            // InternalStubbrLang.g:1160:3: ( (lv_enumerations_9_0= ruleEnumeration ) )*
            loop48:
            do {
                int alt48=2;
                int LA48_0 = input.LA(1);

                if ( (LA48_0==70) ) {
                    alt48=1;
                }


                switch (alt48) {
            	case 1 :
            	    // InternalStubbrLang.g:1161:4: (lv_enumerations_9_0= ruleEnumeration )
            	    {
            	    // InternalStubbrLang.g:1161:4: (lv_enumerations_9_0= ruleEnumeration )
            	    // InternalStubbrLang.g:1162:5: lv_enumerations_9_0= ruleEnumeration
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getChapterPersistenceAccess().getEnumerationsEnumerationParserRuleCall_6_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_49);
            	    lv_enumerations_9_0=ruleEnumeration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getChapterPersistenceRule());
            	      					}
            	      					add(
            	      						current,
            	      						"enumerations",
            	      						lv_enumerations_9_0,
            	      						"com.laegler.stubbr.lang.StubbrLang.Enumeration");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop48;
                }
            } while (true);

            // InternalStubbrLang.g:1179:3: ( (lv_relationships_10_0= ruleRelationship ) )*
            loop49:
            do {
                int alt49=2;
                int LA49_0 = input.LA(1);

                if ( (LA49_0==74) ) {
                    alt49=1;
                }


                switch (alt49) {
            	case 1 :
            	    // InternalStubbrLang.g:1180:4: (lv_relationships_10_0= ruleRelationship )
            	    {
            	    // InternalStubbrLang.g:1180:4: (lv_relationships_10_0= ruleRelationship )
            	    // InternalStubbrLang.g:1181:5: lv_relationships_10_0= ruleRelationship
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getChapterPersistenceAccess().getRelationshipsRelationshipParserRuleCall_7_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_50);
            	    lv_relationships_10_0=ruleRelationship();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getChapterPersistenceRule());
            	      					}
            	      					add(
            	      						current,
            	      						"relationships",
            	      						lv_relationships_10_0,
            	      						"com.laegler.stubbr.lang.StubbrLang.Relationship");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop49;
                }
            } while (true);

            // InternalStubbrLang.g:1198:3: ( (lv_customIds_11_0= 'customIds' ) )?
            int alt50=2;
            int LA50_0 = input.LA(1);

            if ( (LA50_0==45) ) {
                alt50=1;
            }
            switch (alt50) {
                case 1 :
                    // InternalStubbrLang.g:1199:4: (lv_customIds_11_0= 'customIds' )
                    {
                    // InternalStubbrLang.g:1199:4: (lv_customIds_11_0= 'customIds' )
                    // InternalStubbrLang.g:1200:5: lv_customIds_11_0= 'customIds'
                    {
                    lv_customIds_11_0=(Token)match(input,45,FOLLOW_51); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_customIds_11_0, grammarAccess.getChapterPersistenceAccess().getCustomIdsCustomIdsKeyword_8_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getChapterPersistenceRule());
                      					}
                      					setWithLastConsumed(current, "customIds", true, "customIds");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:1212:3: (otherlv_12= 'idType' ( (lv_javaType_13_0= ruleJvmTypeReference ) ) )?
            int alt51=2;
            int LA51_0 = input.LA(1);

            if ( (LA51_0==46) ) {
                alt51=1;
            }
            switch (alt51) {
                case 1 :
                    // InternalStubbrLang.g:1213:4: otherlv_12= 'idType' ( (lv_javaType_13_0= ruleJvmTypeReference ) )
                    {
                    otherlv_12=(Token)match(input,46,FOLLOW_52); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_12, grammarAccess.getChapterPersistenceAccess().getIdTypeKeyword_9_0());
                      			
                    }
                    // InternalStubbrLang.g:1217:4: ( (lv_javaType_13_0= ruleJvmTypeReference ) )
                    // InternalStubbrLang.g:1218:5: (lv_javaType_13_0= ruleJvmTypeReference )
                    {
                    // InternalStubbrLang.g:1218:5: (lv_javaType_13_0= ruleJvmTypeReference )
                    // InternalStubbrLang.g:1219:6: lv_javaType_13_0= ruleJvmTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getChapterPersistenceAccess().getJavaTypeJvmTypeReferenceParserRuleCall_9_1_0());
                      					
                    }
                    pushFollow(FOLLOW_29);
                    lv_javaType_13_0=ruleJvmTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getChapterPersistenceRule());
                      						}
                      						set(
                      							current,
                      							"javaType",
                      							lv_javaType_13_0,
                      							"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_14=(Token)match(input,26,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_14, grammarAccess.getChapterPersistenceAccess().getRightCurlyBracketKeyword_10());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleChapterPersistence"


    // $ANTLR start "entryRuleChapterTesting"
    // InternalStubbrLang.g:1245:1: entryRuleChapterTesting returns [EObject current=null] : iv_ruleChapterTesting= ruleChapterTesting EOF ;
    public final EObject entryRuleChapterTesting() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleChapterTesting = null;


        try {
            // InternalStubbrLang.g:1245:55: (iv_ruleChapterTesting= ruleChapterTesting EOF )
            // InternalStubbrLang.g:1246:2: iv_ruleChapterTesting= ruleChapterTesting EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getChapterTestingRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleChapterTesting=ruleChapterTesting();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleChapterTesting; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleChapterTesting"


    // $ANTLR start "ruleChapterTesting"
    // InternalStubbrLang.g:1252:1: ruleChapterTesting returns [EObject current=null] : (otherlv_0= 'testing' otherlv_1= '{' (otherlv_2= 'testMethods' ( (lv_testMethods_3_0= ruleLevel1Attribute ) )* )? (otherlv_4= 'testCases' ( (lv_testCases_5_0= ruleLevel1Attribute ) )* )? otherlv_6= '}' ) ;
    public final EObject ruleChapterTesting() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_testMethods_3_0 = null;

        EObject lv_testCases_5_0 = null;



        	enterRule();

        try {
            // InternalStubbrLang.g:1258:2: ( (otherlv_0= 'testing' otherlv_1= '{' (otherlv_2= 'testMethods' ( (lv_testMethods_3_0= ruleLevel1Attribute ) )* )? (otherlv_4= 'testCases' ( (lv_testCases_5_0= ruleLevel1Attribute ) )* )? otherlv_6= '}' ) )
            // InternalStubbrLang.g:1259:2: (otherlv_0= 'testing' otherlv_1= '{' (otherlv_2= 'testMethods' ( (lv_testMethods_3_0= ruleLevel1Attribute ) )* )? (otherlv_4= 'testCases' ( (lv_testCases_5_0= ruleLevel1Attribute ) )* )? otherlv_6= '}' )
            {
            // InternalStubbrLang.g:1259:2: (otherlv_0= 'testing' otherlv_1= '{' (otherlv_2= 'testMethods' ( (lv_testMethods_3_0= ruleLevel1Attribute ) )* )? (otherlv_4= 'testCases' ( (lv_testCases_5_0= ruleLevel1Attribute ) )* )? otherlv_6= '}' )
            // InternalStubbrLang.g:1260:3: otherlv_0= 'testing' otherlv_1= '{' (otherlv_2= 'testMethods' ( (lv_testMethods_3_0= ruleLevel1Attribute ) )* )? (otherlv_4= 'testCases' ( (lv_testCases_5_0= ruleLevel1Attribute ) )* )? otherlv_6= '}'
            {
            otherlv_0=(Token)match(input,47,FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getChapterTestingAccess().getTestingKeyword_0());
              		
            }
            otherlv_1=(Token)match(input,16,FOLLOW_53); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getChapterTestingAccess().getLeftCurlyBracketKeyword_1());
              		
            }
            // InternalStubbrLang.g:1268:3: (otherlv_2= 'testMethods' ( (lv_testMethods_3_0= ruleLevel1Attribute ) )* )?
            int alt53=2;
            int LA53_0 = input.LA(1);

            if ( (LA53_0==48) ) {
                alt53=1;
            }
            switch (alt53) {
                case 1 :
                    // InternalStubbrLang.g:1269:4: otherlv_2= 'testMethods' ( (lv_testMethods_3_0= ruleLevel1Attribute ) )*
                    {
                    otherlv_2=(Token)match(input,48,FOLLOW_54); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getChapterTestingAccess().getTestMethodsKeyword_2_0());
                      			
                    }
                    // InternalStubbrLang.g:1273:4: ( (lv_testMethods_3_0= ruleLevel1Attribute ) )*
                    loop52:
                    do {
                        int alt52=2;
                        int LA52_0 = input.LA(1);

                        if ( (LA52_0==71) ) {
                            alt52=1;
                        }


                        switch (alt52) {
                    	case 1 :
                    	    // InternalStubbrLang.g:1274:5: (lv_testMethods_3_0= ruleLevel1Attribute )
                    	    {
                    	    // InternalStubbrLang.g:1274:5: (lv_testMethods_3_0= ruleLevel1Attribute )
                    	    // InternalStubbrLang.g:1275:6: lv_testMethods_3_0= ruleLevel1Attribute
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getChapterTestingAccess().getTestMethodsLevel1AttributeParserRuleCall_2_1_0());
                    	      					
                    	    }
                    	    pushFollow(FOLLOW_54);
                    	    lv_testMethods_3_0=ruleLevel1Attribute();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getChapterTestingRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"testMethods",
                    	      							lv_testMethods_3_0,
                    	      							"com.laegler.stubbr.lang.StubbrLang.Level1Attribute");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop52;
                        }
                    } while (true);


                    }
                    break;

            }

            // InternalStubbrLang.g:1293:3: (otherlv_4= 'testCases' ( (lv_testCases_5_0= ruleLevel1Attribute ) )* )?
            int alt55=2;
            int LA55_0 = input.LA(1);

            if ( (LA55_0==49) ) {
                alt55=1;
            }
            switch (alt55) {
                case 1 :
                    // InternalStubbrLang.g:1294:4: otherlv_4= 'testCases' ( (lv_testCases_5_0= ruleLevel1Attribute ) )*
                    {
                    otherlv_4=(Token)match(input,49,FOLLOW_38); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getChapterTestingAccess().getTestCasesKeyword_3_0());
                      			
                    }
                    // InternalStubbrLang.g:1298:4: ( (lv_testCases_5_0= ruleLevel1Attribute ) )*
                    loop54:
                    do {
                        int alt54=2;
                        int LA54_0 = input.LA(1);

                        if ( (LA54_0==71) ) {
                            alt54=1;
                        }


                        switch (alt54) {
                    	case 1 :
                    	    // InternalStubbrLang.g:1299:5: (lv_testCases_5_0= ruleLevel1Attribute )
                    	    {
                    	    // InternalStubbrLang.g:1299:5: (lv_testCases_5_0= ruleLevel1Attribute )
                    	    // InternalStubbrLang.g:1300:6: lv_testCases_5_0= ruleLevel1Attribute
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getChapterTestingAccess().getTestCasesLevel1AttributeParserRuleCall_3_1_0());
                    	      					
                    	    }
                    	    pushFollow(FOLLOW_38);
                    	    lv_testCases_5_0=ruleLevel1Attribute();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getChapterTestingRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"testCases",
                    	      							lv_testCases_5_0,
                    	      							"com.laegler.stubbr.lang.StubbrLang.Level1Attribute");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop54;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_6=(Token)match(input,26,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getChapterTestingAccess().getRightCurlyBracketKeyword_4());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleChapterTesting"


    // $ANTLR start "entryRuleChapterStakeholder"
    // InternalStubbrLang.g:1326:1: entryRuleChapterStakeholder returns [EObject current=null] : iv_ruleChapterStakeholder= ruleChapterStakeholder EOF ;
    public final EObject entryRuleChapterStakeholder() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleChapterStakeholder = null;


        try {
            // InternalStubbrLang.g:1326:59: (iv_ruleChapterStakeholder= ruleChapterStakeholder EOF )
            // InternalStubbrLang.g:1327:2: iv_ruleChapterStakeholder= ruleChapterStakeholder EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getChapterStakeholderRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleChapterStakeholder=ruleChapterStakeholder();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleChapterStakeholder; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleChapterStakeholder"


    // $ANTLR start "ruleChapterStakeholder"
    // InternalStubbrLang.g:1333:1: ruleChapterStakeholder returns [EObject current=null] : (otherlv_0= 'stakeholders' otherlv_1= '{' (otherlv_2= 'organizations' ( (lv_organizations_3_0= ruleOrganization ) )* )? (otherlv_4= 'groups' ( (lv_groups_5_0= ruleGroup ) )* )? (otherlv_6= 'roles' ( (lv_roles_7_0= ruleRole ) )* )? (otherlv_8= 'persons' ( (lv_persons_9_0= rulePerson ) )* )? otherlv_10= '}' ) ;
    public final EObject ruleChapterStakeholder() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        EObject lv_organizations_3_0 = null;

        EObject lv_groups_5_0 = null;

        EObject lv_roles_7_0 = null;

        EObject lv_persons_9_0 = null;



        	enterRule();

        try {
            // InternalStubbrLang.g:1339:2: ( (otherlv_0= 'stakeholders' otherlv_1= '{' (otherlv_2= 'organizations' ( (lv_organizations_3_0= ruleOrganization ) )* )? (otherlv_4= 'groups' ( (lv_groups_5_0= ruleGroup ) )* )? (otherlv_6= 'roles' ( (lv_roles_7_0= ruleRole ) )* )? (otherlv_8= 'persons' ( (lv_persons_9_0= rulePerson ) )* )? otherlv_10= '}' ) )
            // InternalStubbrLang.g:1340:2: (otherlv_0= 'stakeholders' otherlv_1= '{' (otherlv_2= 'organizations' ( (lv_organizations_3_0= ruleOrganization ) )* )? (otherlv_4= 'groups' ( (lv_groups_5_0= ruleGroup ) )* )? (otherlv_6= 'roles' ( (lv_roles_7_0= ruleRole ) )* )? (otherlv_8= 'persons' ( (lv_persons_9_0= rulePerson ) )* )? otherlv_10= '}' )
            {
            // InternalStubbrLang.g:1340:2: (otherlv_0= 'stakeholders' otherlv_1= '{' (otherlv_2= 'organizations' ( (lv_organizations_3_0= ruleOrganization ) )* )? (otherlv_4= 'groups' ( (lv_groups_5_0= ruleGroup ) )* )? (otherlv_6= 'roles' ( (lv_roles_7_0= ruleRole ) )* )? (otherlv_8= 'persons' ( (lv_persons_9_0= rulePerson ) )* )? otherlv_10= '}' )
            // InternalStubbrLang.g:1341:3: otherlv_0= 'stakeholders' otherlv_1= '{' (otherlv_2= 'organizations' ( (lv_organizations_3_0= ruleOrganization ) )* )? (otherlv_4= 'groups' ( (lv_groups_5_0= ruleGroup ) )* )? (otherlv_6= 'roles' ( (lv_roles_7_0= ruleRole ) )* )? (otherlv_8= 'persons' ( (lv_persons_9_0= rulePerson ) )* )? otherlv_10= '}'
            {
            otherlv_0=(Token)match(input,50,FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getChapterStakeholderAccess().getStakeholdersKeyword_0());
              		
            }
            otherlv_1=(Token)match(input,16,FOLLOW_55); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getChapterStakeholderAccess().getLeftCurlyBracketKeyword_1());
              		
            }
            // InternalStubbrLang.g:1349:3: (otherlv_2= 'organizations' ( (lv_organizations_3_0= ruleOrganization ) )* )?
            int alt57=2;
            int LA57_0 = input.LA(1);

            if ( (LA57_0==51) ) {
                alt57=1;
            }
            switch (alt57) {
                case 1 :
                    // InternalStubbrLang.g:1350:4: otherlv_2= 'organizations' ( (lv_organizations_3_0= ruleOrganization ) )*
                    {
                    otherlv_2=(Token)match(input,51,FOLLOW_56); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getChapterStakeholderAccess().getOrganizationsKeyword_2_0());
                      			
                    }
                    // InternalStubbrLang.g:1354:4: ( (lv_organizations_3_0= ruleOrganization ) )*
                    loop56:
                    do {
                        int alt56=2;
                        int LA56_0 = input.LA(1);

                        if ( (LA56_0==55) ) {
                            alt56=1;
                        }


                        switch (alt56) {
                    	case 1 :
                    	    // InternalStubbrLang.g:1355:5: (lv_organizations_3_0= ruleOrganization )
                    	    {
                    	    // InternalStubbrLang.g:1355:5: (lv_organizations_3_0= ruleOrganization )
                    	    // InternalStubbrLang.g:1356:6: lv_organizations_3_0= ruleOrganization
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getChapterStakeholderAccess().getOrganizationsOrganizationParserRuleCall_2_1_0());
                    	      					
                    	    }
                    	    pushFollow(FOLLOW_56);
                    	    lv_organizations_3_0=ruleOrganization();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getChapterStakeholderRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"organizations",
                    	      							lv_organizations_3_0,
                    	      							"com.laegler.stubbr.lang.StubbrLang.Organization");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop56;
                        }
                    } while (true);


                    }
                    break;

            }

            // InternalStubbrLang.g:1374:3: (otherlv_4= 'groups' ( (lv_groups_5_0= ruleGroup ) )* )?
            int alt59=2;
            int LA59_0 = input.LA(1);

            if ( (LA59_0==52) ) {
                alt59=1;
            }
            switch (alt59) {
                case 1 :
                    // InternalStubbrLang.g:1375:4: otherlv_4= 'groups' ( (lv_groups_5_0= ruleGroup ) )*
                    {
                    otherlv_4=(Token)match(input,52,FOLLOW_57); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getChapterStakeholderAccess().getGroupsKeyword_3_0());
                      			
                    }
                    // InternalStubbrLang.g:1379:4: ( (lv_groups_5_0= ruleGroup ) )*
                    loop58:
                    do {
                        int alt58=2;
                        int LA58_0 = input.LA(1);

                        if ( (LA58_0==56) ) {
                            alt58=1;
                        }


                        switch (alt58) {
                    	case 1 :
                    	    // InternalStubbrLang.g:1380:5: (lv_groups_5_0= ruleGroup )
                    	    {
                    	    // InternalStubbrLang.g:1380:5: (lv_groups_5_0= ruleGroup )
                    	    // InternalStubbrLang.g:1381:6: lv_groups_5_0= ruleGroup
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getChapterStakeholderAccess().getGroupsGroupParserRuleCall_3_1_0());
                    	      					
                    	    }
                    	    pushFollow(FOLLOW_57);
                    	    lv_groups_5_0=ruleGroup();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getChapterStakeholderRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"groups",
                    	      							lv_groups_5_0,
                    	      							"com.laegler.stubbr.lang.StubbrLang.Group");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop58;
                        }
                    } while (true);


                    }
                    break;

            }

            // InternalStubbrLang.g:1399:3: (otherlv_6= 'roles' ( (lv_roles_7_0= ruleRole ) )* )?
            int alt61=2;
            int LA61_0 = input.LA(1);

            if ( (LA61_0==53) ) {
                alt61=1;
            }
            switch (alt61) {
                case 1 :
                    // InternalStubbrLang.g:1400:4: otherlv_6= 'roles' ( (lv_roles_7_0= ruleRole ) )*
                    {
                    otherlv_6=(Token)match(input,53,FOLLOW_58); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getChapterStakeholderAccess().getRolesKeyword_4_0());
                      			
                    }
                    // InternalStubbrLang.g:1404:4: ( (lv_roles_7_0= ruleRole ) )*
                    loop60:
                    do {
                        int alt60=2;
                        int LA60_0 = input.LA(1);

                        if ( (LA60_0==57) ) {
                            alt60=1;
                        }


                        switch (alt60) {
                    	case 1 :
                    	    // InternalStubbrLang.g:1405:5: (lv_roles_7_0= ruleRole )
                    	    {
                    	    // InternalStubbrLang.g:1405:5: (lv_roles_7_0= ruleRole )
                    	    // InternalStubbrLang.g:1406:6: lv_roles_7_0= ruleRole
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getChapterStakeholderAccess().getRolesRoleParserRuleCall_4_1_0());
                    	      					
                    	    }
                    	    pushFollow(FOLLOW_58);
                    	    lv_roles_7_0=ruleRole();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getChapterStakeholderRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"roles",
                    	      							lv_roles_7_0,
                    	      							"com.laegler.stubbr.lang.StubbrLang.Role");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop60;
                        }
                    } while (true);


                    }
                    break;

            }

            // InternalStubbrLang.g:1424:3: (otherlv_8= 'persons' ( (lv_persons_9_0= rulePerson ) )* )?
            int alt63=2;
            int LA63_0 = input.LA(1);

            if ( (LA63_0==54) ) {
                alt63=1;
            }
            switch (alt63) {
                case 1 :
                    // InternalStubbrLang.g:1425:4: otherlv_8= 'persons' ( (lv_persons_9_0= rulePerson ) )*
                    {
                    otherlv_8=(Token)match(input,54,FOLLOW_59); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_8, grammarAccess.getChapterStakeholderAccess().getPersonsKeyword_5_0());
                      			
                    }
                    // InternalStubbrLang.g:1429:4: ( (lv_persons_9_0= rulePerson ) )*
                    loop62:
                    do {
                        int alt62=2;
                        int LA62_0 = input.LA(1);

                        if ( (LA62_0==58) ) {
                            alt62=1;
                        }


                        switch (alt62) {
                    	case 1 :
                    	    // InternalStubbrLang.g:1430:5: (lv_persons_9_0= rulePerson )
                    	    {
                    	    // InternalStubbrLang.g:1430:5: (lv_persons_9_0= rulePerson )
                    	    // InternalStubbrLang.g:1431:6: lv_persons_9_0= rulePerson
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getChapterStakeholderAccess().getPersonsPersonParserRuleCall_5_1_0());
                    	      					
                    	    }
                    	    pushFollow(FOLLOW_59);
                    	    lv_persons_9_0=rulePerson();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getChapterStakeholderRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"persons",
                    	      							lv_persons_9_0,
                    	      							"com.laegler.stubbr.lang.StubbrLang.Person");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop62;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_10=(Token)match(input,26,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_10, grammarAccess.getChapterStakeholderAccess().getRightCurlyBracketKeyword_6());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleChapterStakeholder"


    // $ANTLR start "entryRuleOrganization"
    // InternalStubbrLang.g:1457:1: entryRuleOrganization returns [EObject current=null] : iv_ruleOrganization= ruleOrganization EOF ;
    public final EObject entryRuleOrganization() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOrganization = null;


        try {
            // InternalStubbrLang.g:1457:53: (iv_ruleOrganization= ruleOrganization EOF )
            // InternalStubbrLang.g:1458:2: iv_ruleOrganization= ruleOrganization EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOrganizationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOrganization=ruleOrganization();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOrganization; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOrganization"


    // $ANTLR start "ruleOrganization"
    // InternalStubbrLang.g:1464:1: ruleOrganization returns [EObject current=null] : (otherlv_0= 'organization' ( (lv_name_1_0= ruleQualifiedName ) ) ( (lv_attributes_2_0= ruleLevel1Attribute ) )* ) ;
    public final EObject ruleOrganization() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject lv_attributes_2_0 = null;



        	enterRule();

        try {
            // InternalStubbrLang.g:1470:2: ( (otherlv_0= 'organization' ( (lv_name_1_0= ruleQualifiedName ) ) ( (lv_attributes_2_0= ruleLevel1Attribute ) )* ) )
            // InternalStubbrLang.g:1471:2: (otherlv_0= 'organization' ( (lv_name_1_0= ruleQualifiedName ) ) ( (lv_attributes_2_0= ruleLevel1Attribute ) )* )
            {
            // InternalStubbrLang.g:1471:2: (otherlv_0= 'organization' ( (lv_name_1_0= ruleQualifiedName ) ) ( (lv_attributes_2_0= ruleLevel1Attribute ) )* )
            // InternalStubbrLang.g:1472:3: otherlv_0= 'organization' ( (lv_name_1_0= ruleQualifiedName ) ) ( (lv_attributes_2_0= ruleLevel1Attribute ) )*
            {
            otherlv_0=(Token)match(input,55,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getOrganizationAccess().getOrganizationKeyword_0());
              		
            }
            // InternalStubbrLang.g:1476:3: ( (lv_name_1_0= ruleQualifiedName ) )
            // InternalStubbrLang.g:1477:4: (lv_name_1_0= ruleQualifiedName )
            {
            // InternalStubbrLang.g:1477:4: (lv_name_1_0= ruleQualifiedName )
            // InternalStubbrLang.g:1478:5: lv_name_1_0= ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getOrganizationAccess().getNameQualifiedNameParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_60);
            lv_name_1_0=ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getOrganizationRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"org.eclipse.xtext.xbase.Xbase.QualifiedName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalStubbrLang.g:1495:3: ( (lv_attributes_2_0= ruleLevel1Attribute ) )*
            loop64:
            do {
                int alt64=2;
                int LA64_0 = input.LA(1);

                if ( (LA64_0==71) ) {
                    alt64=1;
                }


                switch (alt64) {
            	case 1 :
            	    // InternalStubbrLang.g:1496:4: (lv_attributes_2_0= ruleLevel1Attribute )
            	    {
            	    // InternalStubbrLang.g:1496:4: (lv_attributes_2_0= ruleLevel1Attribute )
            	    // InternalStubbrLang.g:1497:5: lv_attributes_2_0= ruleLevel1Attribute
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getOrganizationAccess().getAttributesLevel1AttributeParserRuleCall_2_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_60);
            	    lv_attributes_2_0=ruleLevel1Attribute();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getOrganizationRule());
            	      					}
            	      					add(
            	      						current,
            	      						"attributes",
            	      						lv_attributes_2_0,
            	      						"com.laegler.stubbr.lang.StubbrLang.Level1Attribute");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop64;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOrganization"


    // $ANTLR start "entryRuleGroup"
    // InternalStubbrLang.g:1518:1: entryRuleGroup returns [EObject current=null] : iv_ruleGroup= ruleGroup EOF ;
    public final EObject entryRuleGroup() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleGroup = null;


        try {
            // InternalStubbrLang.g:1518:46: (iv_ruleGroup= ruleGroup EOF )
            // InternalStubbrLang.g:1519:2: iv_ruleGroup= ruleGroup EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getGroupRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleGroup=ruleGroup();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleGroup; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleGroup"


    // $ANTLR start "ruleGroup"
    // InternalStubbrLang.g:1525:1: ruleGroup returns [EObject current=null] : (otherlv_0= 'group' ( (lv_name_1_0= ruleQualifiedName ) ) ( (lv_attributes_2_0= ruleLevel1Attribute ) )* ) ;
    public final EObject ruleGroup() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject lv_attributes_2_0 = null;



        	enterRule();

        try {
            // InternalStubbrLang.g:1531:2: ( (otherlv_0= 'group' ( (lv_name_1_0= ruleQualifiedName ) ) ( (lv_attributes_2_0= ruleLevel1Attribute ) )* ) )
            // InternalStubbrLang.g:1532:2: (otherlv_0= 'group' ( (lv_name_1_0= ruleQualifiedName ) ) ( (lv_attributes_2_0= ruleLevel1Attribute ) )* )
            {
            // InternalStubbrLang.g:1532:2: (otherlv_0= 'group' ( (lv_name_1_0= ruleQualifiedName ) ) ( (lv_attributes_2_0= ruleLevel1Attribute ) )* )
            // InternalStubbrLang.g:1533:3: otherlv_0= 'group' ( (lv_name_1_0= ruleQualifiedName ) ) ( (lv_attributes_2_0= ruleLevel1Attribute ) )*
            {
            otherlv_0=(Token)match(input,56,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getGroupAccess().getGroupKeyword_0());
              		
            }
            // InternalStubbrLang.g:1537:3: ( (lv_name_1_0= ruleQualifiedName ) )
            // InternalStubbrLang.g:1538:4: (lv_name_1_0= ruleQualifiedName )
            {
            // InternalStubbrLang.g:1538:4: (lv_name_1_0= ruleQualifiedName )
            // InternalStubbrLang.g:1539:5: lv_name_1_0= ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getGroupAccess().getNameQualifiedNameParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_60);
            lv_name_1_0=ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getGroupRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"org.eclipse.xtext.xbase.Xbase.QualifiedName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalStubbrLang.g:1556:3: ( (lv_attributes_2_0= ruleLevel1Attribute ) )*
            loop65:
            do {
                int alt65=2;
                int LA65_0 = input.LA(1);

                if ( (LA65_0==71) ) {
                    alt65=1;
                }


                switch (alt65) {
            	case 1 :
            	    // InternalStubbrLang.g:1557:4: (lv_attributes_2_0= ruleLevel1Attribute )
            	    {
            	    // InternalStubbrLang.g:1557:4: (lv_attributes_2_0= ruleLevel1Attribute )
            	    // InternalStubbrLang.g:1558:5: lv_attributes_2_0= ruleLevel1Attribute
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getGroupAccess().getAttributesLevel1AttributeParserRuleCall_2_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_60);
            	    lv_attributes_2_0=ruleLevel1Attribute();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getGroupRule());
            	      					}
            	      					add(
            	      						current,
            	      						"attributes",
            	      						lv_attributes_2_0,
            	      						"com.laegler.stubbr.lang.StubbrLang.Level1Attribute");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop65;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleGroup"


    // $ANTLR start "entryRuleRole"
    // InternalStubbrLang.g:1579:1: entryRuleRole returns [EObject current=null] : iv_ruleRole= ruleRole EOF ;
    public final EObject entryRuleRole() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRole = null;


        try {
            // InternalStubbrLang.g:1579:45: (iv_ruleRole= ruleRole EOF )
            // InternalStubbrLang.g:1580:2: iv_ruleRole= ruleRole EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRoleRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleRole=ruleRole();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRole; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRole"


    // $ANTLR start "ruleRole"
    // InternalStubbrLang.g:1586:1: ruleRole returns [EObject current=null] : (otherlv_0= 'role' ( (lv_name_1_0= ruleQualifiedName ) ) ( (lv_attributes_2_0= ruleLevel1Attribute ) )* ) ;
    public final EObject ruleRole() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject lv_attributes_2_0 = null;



        	enterRule();

        try {
            // InternalStubbrLang.g:1592:2: ( (otherlv_0= 'role' ( (lv_name_1_0= ruleQualifiedName ) ) ( (lv_attributes_2_0= ruleLevel1Attribute ) )* ) )
            // InternalStubbrLang.g:1593:2: (otherlv_0= 'role' ( (lv_name_1_0= ruleQualifiedName ) ) ( (lv_attributes_2_0= ruleLevel1Attribute ) )* )
            {
            // InternalStubbrLang.g:1593:2: (otherlv_0= 'role' ( (lv_name_1_0= ruleQualifiedName ) ) ( (lv_attributes_2_0= ruleLevel1Attribute ) )* )
            // InternalStubbrLang.g:1594:3: otherlv_0= 'role' ( (lv_name_1_0= ruleQualifiedName ) ) ( (lv_attributes_2_0= ruleLevel1Attribute ) )*
            {
            otherlv_0=(Token)match(input,57,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getRoleAccess().getRoleKeyword_0());
              		
            }
            // InternalStubbrLang.g:1598:3: ( (lv_name_1_0= ruleQualifiedName ) )
            // InternalStubbrLang.g:1599:4: (lv_name_1_0= ruleQualifiedName )
            {
            // InternalStubbrLang.g:1599:4: (lv_name_1_0= ruleQualifiedName )
            // InternalStubbrLang.g:1600:5: lv_name_1_0= ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getRoleAccess().getNameQualifiedNameParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_60);
            lv_name_1_0=ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getRoleRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"org.eclipse.xtext.xbase.Xbase.QualifiedName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalStubbrLang.g:1617:3: ( (lv_attributes_2_0= ruleLevel1Attribute ) )*
            loop66:
            do {
                int alt66=2;
                int LA66_0 = input.LA(1);

                if ( (LA66_0==71) ) {
                    alt66=1;
                }


                switch (alt66) {
            	case 1 :
            	    // InternalStubbrLang.g:1618:4: (lv_attributes_2_0= ruleLevel1Attribute )
            	    {
            	    // InternalStubbrLang.g:1618:4: (lv_attributes_2_0= ruleLevel1Attribute )
            	    // InternalStubbrLang.g:1619:5: lv_attributes_2_0= ruleLevel1Attribute
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getRoleAccess().getAttributesLevel1AttributeParserRuleCall_2_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_60);
            	    lv_attributes_2_0=ruleLevel1Attribute();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getRoleRule());
            	      					}
            	      					add(
            	      						current,
            	      						"attributes",
            	      						lv_attributes_2_0,
            	      						"com.laegler.stubbr.lang.StubbrLang.Level1Attribute");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop66;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRole"


    // $ANTLR start "entryRulePerson"
    // InternalStubbrLang.g:1640:1: entryRulePerson returns [EObject current=null] : iv_rulePerson= rulePerson EOF ;
    public final EObject entryRulePerson() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePerson = null;


        try {
            // InternalStubbrLang.g:1640:47: (iv_rulePerson= rulePerson EOF )
            // InternalStubbrLang.g:1641:2: iv_rulePerson= rulePerson EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPersonRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePerson=rulePerson();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePerson; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePerson"


    // $ANTLR start "rulePerson"
    // InternalStubbrLang.g:1647:1: rulePerson returns [EObject current=null] : (otherlv_0= 'person' ( (lv_name_1_0= ruleQualifiedName ) ) ( (lv_attributes_2_0= ruleLevel1Attribute ) )* ) ;
    public final EObject rulePerson() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject lv_attributes_2_0 = null;



        	enterRule();

        try {
            // InternalStubbrLang.g:1653:2: ( (otherlv_0= 'person' ( (lv_name_1_0= ruleQualifiedName ) ) ( (lv_attributes_2_0= ruleLevel1Attribute ) )* ) )
            // InternalStubbrLang.g:1654:2: (otherlv_0= 'person' ( (lv_name_1_0= ruleQualifiedName ) ) ( (lv_attributes_2_0= ruleLevel1Attribute ) )* )
            {
            // InternalStubbrLang.g:1654:2: (otherlv_0= 'person' ( (lv_name_1_0= ruleQualifiedName ) ) ( (lv_attributes_2_0= ruleLevel1Attribute ) )* )
            // InternalStubbrLang.g:1655:3: otherlv_0= 'person' ( (lv_name_1_0= ruleQualifiedName ) ) ( (lv_attributes_2_0= ruleLevel1Attribute ) )*
            {
            otherlv_0=(Token)match(input,58,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getPersonAccess().getPersonKeyword_0());
              		
            }
            // InternalStubbrLang.g:1659:3: ( (lv_name_1_0= ruleQualifiedName ) )
            // InternalStubbrLang.g:1660:4: (lv_name_1_0= ruleQualifiedName )
            {
            // InternalStubbrLang.g:1660:4: (lv_name_1_0= ruleQualifiedName )
            // InternalStubbrLang.g:1661:5: lv_name_1_0= ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getPersonAccess().getNameQualifiedNameParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_60);
            lv_name_1_0=ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getPersonRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"org.eclipse.xtext.xbase.Xbase.QualifiedName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalStubbrLang.g:1678:3: ( (lv_attributes_2_0= ruleLevel1Attribute ) )*
            loop67:
            do {
                int alt67=2;
                int LA67_0 = input.LA(1);

                if ( (LA67_0==71) ) {
                    alt67=1;
                }


                switch (alt67) {
            	case 1 :
            	    // InternalStubbrLang.g:1679:4: (lv_attributes_2_0= ruleLevel1Attribute )
            	    {
            	    // InternalStubbrLang.g:1679:4: (lv_attributes_2_0= ruleLevel1Attribute )
            	    // InternalStubbrLang.g:1680:5: lv_attributes_2_0= ruleLevel1Attribute
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getPersonAccess().getAttributesLevel1AttributeParserRuleCall_2_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_60);
            	    lv_attributes_2_0=ruleLevel1Attribute();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getPersonRule());
            	      					}
            	      					add(
            	      						current,
            	      						"attributes",
            	      						lv_attributes_2_0,
            	      						"com.laegler.stubbr.lang.StubbrLang.Level1Attribute");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop67;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePerson"


    // $ANTLR start "entryRuleChapterEnvironment"
    // InternalStubbrLang.g:1701:1: entryRuleChapterEnvironment returns [EObject current=null] : iv_ruleChapterEnvironment= ruleChapterEnvironment EOF ;
    public final EObject entryRuleChapterEnvironment() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleChapterEnvironment = null;


        try {
            // InternalStubbrLang.g:1701:59: (iv_ruleChapterEnvironment= ruleChapterEnvironment EOF )
            // InternalStubbrLang.g:1702:2: iv_ruleChapterEnvironment= ruleChapterEnvironment EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getChapterEnvironmentRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleChapterEnvironment=ruleChapterEnvironment();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleChapterEnvironment; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleChapterEnvironment"


    // $ANTLR start "ruleChapterEnvironment"
    // InternalStubbrLang.g:1708:1: ruleChapterEnvironment returns [EObject current=null] : (otherlv_0= 'environment' otherlv_1= '{' (otherlv_2= 'infrastructure' ( (lv_infrastructure_3_0= ruleLevel1Attribute ) )* )? (otherlv_4= 'envVariables' ( (lv_testMethods_5_0= ruleLevel1Attribute ) )* )? (otherlv_6= 'runtime' ( (lv_runtime_7_0= ruleRuntime ) ) )? otherlv_8= '}' ) ;
    public final EObject ruleChapterEnvironment() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        EObject lv_infrastructure_3_0 = null;

        EObject lv_testMethods_5_0 = null;

        EObject lv_runtime_7_0 = null;



        	enterRule();

        try {
            // InternalStubbrLang.g:1714:2: ( (otherlv_0= 'environment' otherlv_1= '{' (otherlv_2= 'infrastructure' ( (lv_infrastructure_3_0= ruleLevel1Attribute ) )* )? (otherlv_4= 'envVariables' ( (lv_testMethods_5_0= ruleLevel1Attribute ) )* )? (otherlv_6= 'runtime' ( (lv_runtime_7_0= ruleRuntime ) ) )? otherlv_8= '}' ) )
            // InternalStubbrLang.g:1715:2: (otherlv_0= 'environment' otherlv_1= '{' (otherlv_2= 'infrastructure' ( (lv_infrastructure_3_0= ruleLevel1Attribute ) )* )? (otherlv_4= 'envVariables' ( (lv_testMethods_5_0= ruleLevel1Attribute ) )* )? (otherlv_6= 'runtime' ( (lv_runtime_7_0= ruleRuntime ) ) )? otherlv_8= '}' )
            {
            // InternalStubbrLang.g:1715:2: (otherlv_0= 'environment' otherlv_1= '{' (otherlv_2= 'infrastructure' ( (lv_infrastructure_3_0= ruleLevel1Attribute ) )* )? (otherlv_4= 'envVariables' ( (lv_testMethods_5_0= ruleLevel1Attribute ) )* )? (otherlv_6= 'runtime' ( (lv_runtime_7_0= ruleRuntime ) ) )? otherlv_8= '}' )
            // InternalStubbrLang.g:1716:3: otherlv_0= 'environment' otherlv_1= '{' (otherlv_2= 'infrastructure' ( (lv_infrastructure_3_0= ruleLevel1Attribute ) )* )? (otherlv_4= 'envVariables' ( (lv_testMethods_5_0= ruleLevel1Attribute ) )* )? (otherlv_6= 'runtime' ( (lv_runtime_7_0= ruleRuntime ) ) )? otherlv_8= '}'
            {
            otherlv_0=(Token)match(input,59,FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getChapterEnvironmentAccess().getEnvironmentKeyword_0());
              		
            }
            otherlv_1=(Token)match(input,16,FOLLOW_61); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getChapterEnvironmentAccess().getLeftCurlyBracketKeyword_1());
              		
            }
            // InternalStubbrLang.g:1724:3: (otherlv_2= 'infrastructure' ( (lv_infrastructure_3_0= ruleLevel1Attribute ) )* )?
            int alt69=2;
            int LA69_0 = input.LA(1);

            if ( (LA69_0==60) ) {
                alt69=1;
            }
            switch (alt69) {
                case 1 :
                    // InternalStubbrLang.g:1725:4: otherlv_2= 'infrastructure' ( (lv_infrastructure_3_0= ruleLevel1Attribute ) )*
                    {
                    otherlv_2=(Token)match(input,60,FOLLOW_62); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getChapterEnvironmentAccess().getInfrastructureKeyword_2_0());
                      			
                    }
                    // InternalStubbrLang.g:1729:4: ( (lv_infrastructure_3_0= ruleLevel1Attribute ) )*
                    loop68:
                    do {
                        int alt68=2;
                        int LA68_0 = input.LA(1);

                        if ( (LA68_0==71) ) {
                            alt68=1;
                        }


                        switch (alt68) {
                    	case 1 :
                    	    // InternalStubbrLang.g:1730:5: (lv_infrastructure_3_0= ruleLevel1Attribute )
                    	    {
                    	    // InternalStubbrLang.g:1730:5: (lv_infrastructure_3_0= ruleLevel1Attribute )
                    	    // InternalStubbrLang.g:1731:6: lv_infrastructure_3_0= ruleLevel1Attribute
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getChapterEnvironmentAccess().getInfrastructureLevel1AttributeParserRuleCall_2_1_0());
                    	      					
                    	    }
                    	    pushFollow(FOLLOW_62);
                    	    lv_infrastructure_3_0=ruleLevel1Attribute();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getChapterEnvironmentRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"infrastructure",
                    	      							lv_infrastructure_3_0,
                    	      							"com.laegler.stubbr.lang.StubbrLang.Level1Attribute");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop68;
                        }
                    } while (true);


                    }
                    break;

            }

            // InternalStubbrLang.g:1749:3: (otherlv_4= 'envVariables' ( (lv_testMethods_5_0= ruleLevel1Attribute ) )* )?
            int alt71=2;
            int LA71_0 = input.LA(1);

            if ( (LA71_0==61) ) {
                alt71=1;
            }
            switch (alt71) {
                case 1 :
                    // InternalStubbrLang.g:1750:4: otherlv_4= 'envVariables' ( (lv_testMethods_5_0= ruleLevel1Attribute ) )*
                    {
                    otherlv_4=(Token)match(input,61,FOLLOW_63); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getChapterEnvironmentAccess().getEnvVariablesKeyword_3_0());
                      			
                    }
                    // InternalStubbrLang.g:1754:4: ( (lv_testMethods_5_0= ruleLevel1Attribute ) )*
                    loop70:
                    do {
                        int alt70=2;
                        int LA70_0 = input.LA(1);

                        if ( (LA70_0==71) ) {
                            alt70=1;
                        }


                        switch (alt70) {
                    	case 1 :
                    	    // InternalStubbrLang.g:1755:5: (lv_testMethods_5_0= ruleLevel1Attribute )
                    	    {
                    	    // InternalStubbrLang.g:1755:5: (lv_testMethods_5_0= ruleLevel1Attribute )
                    	    // InternalStubbrLang.g:1756:6: lv_testMethods_5_0= ruleLevel1Attribute
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getChapterEnvironmentAccess().getTestMethodsLevel1AttributeParserRuleCall_3_1_0());
                    	      					
                    	    }
                    	    pushFollow(FOLLOW_63);
                    	    lv_testMethods_5_0=ruleLevel1Attribute();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getChapterEnvironmentRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"testMethods",
                    	      							lv_testMethods_5_0,
                    	      							"com.laegler.stubbr.lang.StubbrLang.Level1Attribute");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop70;
                        }
                    } while (true);


                    }
                    break;

            }

            // InternalStubbrLang.g:1774:3: (otherlv_6= 'runtime' ( (lv_runtime_7_0= ruleRuntime ) ) )?
            int alt72=2;
            int LA72_0 = input.LA(1);

            if ( (LA72_0==62) ) {
                alt72=1;
            }
            switch (alt72) {
                case 1 :
                    // InternalStubbrLang.g:1775:4: otherlv_6= 'runtime' ( (lv_runtime_7_0= ruleRuntime ) )
                    {
                    otherlv_6=(Token)match(input,62,FOLLOW_64); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getChapterEnvironmentAccess().getRuntimeKeyword_4_0());
                      			
                    }
                    // InternalStubbrLang.g:1779:4: ( (lv_runtime_7_0= ruleRuntime ) )
                    // InternalStubbrLang.g:1780:5: (lv_runtime_7_0= ruleRuntime )
                    {
                    // InternalStubbrLang.g:1780:5: (lv_runtime_7_0= ruleRuntime )
                    // InternalStubbrLang.g:1781:6: lv_runtime_7_0= ruleRuntime
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getChapterEnvironmentAccess().getRuntimeRuntimeParserRuleCall_4_1_0());
                      					
                    }
                    pushFollow(FOLLOW_29);
                    lv_runtime_7_0=ruleRuntime();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getChapterEnvironmentRule());
                      						}
                      						set(
                      							current,
                      							"runtime",
                      							lv_runtime_7_0,
                      							"com.laegler.stubbr.lang.StubbrLang.Runtime");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_8=(Token)match(input,26,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_8, grammarAccess.getChapterEnvironmentAccess().getRightCurlyBracketKeyword_5());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleChapterEnvironment"


    // $ANTLR start "entryRuleRuntime"
    // InternalStubbrLang.g:1807:1: entryRuleRuntime returns [EObject current=null] : iv_ruleRuntime= ruleRuntime EOF ;
    public final EObject entryRuleRuntime() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRuntime = null;


        try {
            // InternalStubbrLang.g:1807:48: (iv_ruleRuntime= ruleRuntime EOF )
            // InternalStubbrLang.g:1808:2: iv_ruleRuntime= ruleRuntime EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRuntimeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleRuntime=ruleRuntime();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRuntime; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRuntime"


    // $ANTLR start "ruleRuntime"
    // InternalStubbrLang.g:1814:1: ruleRuntime returns [EObject current=null] : (otherlv_0= 'java' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )? (otherlv_7= 'jdkVersion' ( (lv_jdkVersion_8_0= RULE_VERSION ) ) )? (otherlv_9= 'jvm' ( (lv_jvm_10_0= ruleJvmEnum ) ) )? (otherlv_11= 'version' ( (lv_version_12_0= RULE_VERSION ) ) )? otherlv_13= '}' ) ;
    public final EObject ruleRuntime() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token lv_label_4_0=null;
        Token otherlv_5=null;
        Token lv_documentation_6_0=null;
        Token otherlv_7=null;
        Token lv_jdkVersion_8_0=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token lv_version_12_0=null;
        Token otherlv_13=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        Enumerator lv_jvm_10_0 = null;



        	enterRule();

        try {
            // InternalStubbrLang.g:1820:2: ( (otherlv_0= 'java' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )? (otherlv_7= 'jdkVersion' ( (lv_jdkVersion_8_0= RULE_VERSION ) ) )? (otherlv_9= 'jvm' ( (lv_jvm_10_0= ruleJvmEnum ) ) )? (otherlv_11= 'version' ( (lv_version_12_0= RULE_VERSION ) ) )? otherlv_13= '}' ) )
            // InternalStubbrLang.g:1821:2: (otherlv_0= 'java' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )? (otherlv_7= 'jdkVersion' ( (lv_jdkVersion_8_0= RULE_VERSION ) ) )? (otherlv_9= 'jvm' ( (lv_jvm_10_0= ruleJvmEnum ) ) )? (otherlv_11= 'version' ( (lv_version_12_0= RULE_VERSION ) ) )? otherlv_13= '}' )
            {
            // InternalStubbrLang.g:1821:2: (otherlv_0= 'java' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )? (otherlv_7= 'jdkVersion' ( (lv_jdkVersion_8_0= RULE_VERSION ) ) )? (otherlv_9= 'jvm' ( (lv_jvm_10_0= ruleJvmEnum ) ) )? (otherlv_11= 'version' ( (lv_version_12_0= RULE_VERSION ) ) )? otherlv_13= '}' )
            // InternalStubbrLang.g:1822:3: otherlv_0= 'java' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )? (otherlv_7= 'jdkVersion' ( (lv_jdkVersion_8_0= RULE_VERSION ) ) )? (otherlv_9= 'jvm' ( (lv_jvm_10_0= ruleJvmEnum ) ) )? (otherlv_11= 'version' ( (lv_version_12_0= RULE_VERSION ) ) )? otherlv_13= '}'
            {
            otherlv_0=(Token)match(input,63,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getRuntimeAccess().getJavaKeyword_0());
              		
            }
            // InternalStubbrLang.g:1826:3: ( (lv_name_1_0= ruleQualifiedName ) )
            // InternalStubbrLang.g:1827:4: (lv_name_1_0= ruleQualifiedName )
            {
            // InternalStubbrLang.g:1827:4: (lv_name_1_0= ruleQualifiedName )
            // InternalStubbrLang.g:1828:5: lv_name_1_0= ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getRuntimeAccess().getNameQualifiedNameParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_6);
            lv_name_1_0=ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getRuntimeRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"org.eclipse.xtext.xbase.Xbase.QualifiedName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,16,FOLLOW_65); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getRuntimeAccess().getLeftCurlyBracketKeyword_2());
              		
            }
            // InternalStubbrLang.g:1849:3: (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )?
            int alt73=2;
            int LA73_0 = input.LA(1);

            if ( (LA73_0==17) ) {
                alt73=1;
            }
            switch (alt73) {
                case 1 :
                    // InternalStubbrLang.g:1850:4: otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) )
                    {
                    otherlv_3=(Token)match(input,17,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getRuntimeAccess().getLabelKeyword_3_0());
                      			
                    }
                    // InternalStubbrLang.g:1854:4: ( (lv_label_4_0= RULE_STRING ) )
                    // InternalStubbrLang.g:1855:5: (lv_label_4_0= RULE_STRING )
                    {
                    // InternalStubbrLang.g:1855:5: (lv_label_4_0= RULE_STRING )
                    // InternalStubbrLang.g:1856:6: lv_label_4_0= RULE_STRING
                    {
                    lv_label_4_0=(Token)match(input,RULE_STRING,FOLLOW_66); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_label_4_0, grammarAccess.getRuntimeAccess().getLabelSTRINGTerminalRuleCall_3_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getRuntimeRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"label",
                      							lv_label_4_0,
                      							"org.eclipse.xtext.xbase.Xtype.STRING");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:1873:3: (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )?
            int alt74=2;
            int LA74_0 = input.LA(1);

            if ( (LA74_0==18) ) {
                alt74=1;
            }
            switch (alt74) {
                case 1 :
                    // InternalStubbrLang.g:1874:4: otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) )
                    {
                    otherlv_5=(Token)match(input,18,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getRuntimeAccess().getDocumentationKeyword_4_0());
                      			
                    }
                    // InternalStubbrLang.g:1878:4: ( (lv_documentation_6_0= RULE_STRING ) )
                    // InternalStubbrLang.g:1879:5: (lv_documentation_6_0= RULE_STRING )
                    {
                    // InternalStubbrLang.g:1879:5: (lv_documentation_6_0= RULE_STRING )
                    // InternalStubbrLang.g:1880:6: lv_documentation_6_0= RULE_STRING
                    {
                    lv_documentation_6_0=(Token)match(input,RULE_STRING,FOLLOW_67); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_documentation_6_0, grammarAccess.getRuntimeAccess().getDocumentationSTRINGTerminalRuleCall_4_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getRuntimeRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"documentation",
                      							lv_documentation_6_0,
                      							"org.eclipse.xtext.xbase.Xtype.STRING");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:1897:3: (otherlv_7= 'jdkVersion' ( (lv_jdkVersion_8_0= RULE_VERSION ) ) )?
            int alt75=2;
            int LA75_0 = input.LA(1);

            if ( (LA75_0==64) ) {
                alt75=1;
            }
            switch (alt75) {
                case 1 :
                    // InternalStubbrLang.g:1898:4: otherlv_7= 'jdkVersion' ( (lv_jdkVersion_8_0= RULE_VERSION ) )
                    {
                    otherlv_7=(Token)match(input,64,FOLLOW_13); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getRuntimeAccess().getJdkVersionKeyword_5_0());
                      			
                    }
                    // InternalStubbrLang.g:1902:4: ( (lv_jdkVersion_8_0= RULE_VERSION ) )
                    // InternalStubbrLang.g:1903:5: (lv_jdkVersion_8_0= RULE_VERSION )
                    {
                    // InternalStubbrLang.g:1903:5: (lv_jdkVersion_8_0= RULE_VERSION )
                    // InternalStubbrLang.g:1904:6: lv_jdkVersion_8_0= RULE_VERSION
                    {
                    lv_jdkVersion_8_0=(Token)match(input,RULE_VERSION,FOLLOW_68); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_jdkVersion_8_0, grammarAccess.getRuntimeAccess().getJdkVersionVERSIONTerminalRuleCall_5_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getRuntimeRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"jdkVersion",
                      							lv_jdkVersion_8_0,
                      							"com.laegler.stubbr.lang.StubbrLang.VERSION");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:1921:3: (otherlv_9= 'jvm' ( (lv_jvm_10_0= ruleJvmEnum ) ) )?
            int alt76=2;
            int LA76_0 = input.LA(1);

            if ( (LA76_0==65) ) {
                alt76=1;
            }
            switch (alt76) {
                case 1 :
                    // InternalStubbrLang.g:1922:4: otherlv_9= 'jvm' ( (lv_jvm_10_0= ruleJvmEnum ) )
                    {
                    otherlv_9=(Token)match(input,65,FOLLOW_69); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_9, grammarAccess.getRuntimeAccess().getJvmKeyword_6_0());
                      			
                    }
                    // InternalStubbrLang.g:1926:4: ( (lv_jvm_10_0= ruleJvmEnum ) )
                    // InternalStubbrLang.g:1927:5: (lv_jvm_10_0= ruleJvmEnum )
                    {
                    // InternalStubbrLang.g:1927:5: (lv_jvm_10_0= ruleJvmEnum )
                    // InternalStubbrLang.g:1928:6: lv_jvm_10_0= ruleJvmEnum
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getRuntimeAccess().getJvmJvmEnumEnumRuleCall_6_1_0());
                      					
                    }
                    pushFollow(FOLLOW_70);
                    lv_jvm_10_0=ruleJvmEnum();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getRuntimeRule());
                      						}
                      						set(
                      							current,
                      							"jvm",
                      							lv_jvm_10_0,
                      							"com.laegler.stubbr.lang.StubbrLang.JvmEnum");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:1946:3: (otherlv_11= 'version' ( (lv_version_12_0= RULE_VERSION ) ) )?
            int alt77=2;
            int LA77_0 = input.LA(1);

            if ( (LA77_0==21) ) {
                alt77=1;
            }
            switch (alt77) {
                case 1 :
                    // InternalStubbrLang.g:1947:4: otherlv_11= 'version' ( (lv_version_12_0= RULE_VERSION ) )
                    {
                    otherlv_11=(Token)match(input,21,FOLLOW_13); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_11, grammarAccess.getRuntimeAccess().getVersionKeyword_7_0());
                      			
                    }
                    // InternalStubbrLang.g:1951:4: ( (lv_version_12_0= RULE_VERSION ) )
                    // InternalStubbrLang.g:1952:5: (lv_version_12_0= RULE_VERSION )
                    {
                    // InternalStubbrLang.g:1952:5: (lv_version_12_0= RULE_VERSION )
                    // InternalStubbrLang.g:1953:6: lv_version_12_0= RULE_VERSION
                    {
                    lv_version_12_0=(Token)match(input,RULE_VERSION,FOLLOW_29); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_version_12_0, grammarAccess.getRuntimeAccess().getVersionVERSIONTerminalRuleCall_7_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getRuntimeRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"version",
                      							lv_version_12_0,
                      							"com.laegler.stubbr.lang.StubbrLang.VERSION");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_13=(Token)match(input,26,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_13, grammarAccess.getRuntimeAccess().getRightCurlyBracketKeyword_8());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRuntime"


    // $ANTLR start "entryRuleDatabase"
    // InternalStubbrLang.g:1978:1: entryRuleDatabase returns [EObject current=null] : iv_ruleDatabase= ruleDatabase EOF ;
    public final EObject entryRuleDatabase() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDatabase = null;


        try {
            // InternalStubbrLang.g:1978:49: (iv_ruleDatabase= ruleDatabase EOF )
            // InternalStubbrLang.g:1979:2: iv_ruleDatabase= ruleDatabase EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDatabaseRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDatabase=ruleDatabase();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDatabase; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDatabase"


    // $ANTLR start "ruleDatabase"
    // InternalStubbrLang.g:1985:1: ruleDatabase returns [EObject current=null] : (otherlv_0= 'database' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )? (otherlv_7= 'type' ( (lv_type_8_0= ruleDatabaseEnum ) ) )? (otherlv_9= 'version' ( (lv_version_10_0= RULE_VERSION ) ) )? otherlv_11= '}' ) ;
    public final EObject ruleDatabase() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token lv_label_4_0=null;
        Token otherlv_5=null;
        Token lv_documentation_6_0=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token lv_version_10_0=null;
        Token otherlv_11=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        Enumerator lv_type_8_0 = null;



        	enterRule();

        try {
            // InternalStubbrLang.g:1991:2: ( (otherlv_0= 'database' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )? (otherlv_7= 'type' ( (lv_type_8_0= ruleDatabaseEnum ) ) )? (otherlv_9= 'version' ( (lv_version_10_0= RULE_VERSION ) ) )? otherlv_11= '}' ) )
            // InternalStubbrLang.g:1992:2: (otherlv_0= 'database' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )? (otherlv_7= 'type' ( (lv_type_8_0= ruleDatabaseEnum ) ) )? (otherlv_9= 'version' ( (lv_version_10_0= RULE_VERSION ) ) )? otherlv_11= '}' )
            {
            // InternalStubbrLang.g:1992:2: (otherlv_0= 'database' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )? (otherlv_7= 'type' ( (lv_type_8_0= ruleDatabaseEnum ) ) )? (otherlv_9= 'version' ( (lv_version_10_0= RULE_VERSION ) ) )? otherlv_11= '}' )
            // InternalStubbrLang.g:1993:3: otherlv_0= 'database' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )? (otherlv_7= 'type' ( (lv_type_8_0= ruleDatabaseEnum ) ) )? (otherlv_9= 'version' ( (lv_version_10_0= RULE_VERSION ) ) )? otherlv_11= '}'
            {
            otherlv_0=(Token)match(input,66,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getDatabaseAccess().getDatabaseKeyword_0());
              		
            }
            // InternalStubbrLang.g:1997:3: ( (lv_name_1_0= ruleQualifiedName ) )
            // InternalStubbrLang.g:1998:4: (lv_name_1_0= ruleQualifiedName )
            {
            // InternalStubbrLang.g:1998:4: (lv_name_1_0= ruleQualifiedName )
            // InternalStubbrLang.g:1999:5: lv_name_1_0= ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getDatabaseAccess().getNameQualifiedNameParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_6);
            lv_name_1_0=ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getDatabaseRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"org.eclipse.xtext.xbase.Xbase.QualifiedName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,16,FOLLOW_71); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getDatabaseAccess().getLeftCurlyBracketKeyword_2());
              		
            }
            // InternalStubbrLang.g:2020:3: (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )?
            int alt78=2;
            int LA78_0 = input.LA(1);

            if ( (LA78_0==17) ) {
                alt78=1;
            }
            switch (alt78) {
                case 1 :
                    // InternalStubbrLang.g:2021:4: otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) )
                    {
                    otherlv_3=(Token)match(input,17,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getDatabaseAccess().getLabelKeyword_3_0());
                      			
                    }
                    // InternalStubbrLang.g:2025:4: ( (lv_label_4_0= RULE_STRING ) )
                    // InternalStubbrLang.g:2026:5: (lv_label_4_0= RULE_STRING )
                    {
                    // InternalStubbrLang.g:2026:5: (lv_label_4_0= RULE_STRING )
                    // InternalStubbrLang.g:2027:6: lv_label_4_0= RULE_STRING
                    {
                    lv_label_4_0=(Token)match(input,RULE_STRING,FOLLOW_72); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_label_4_0, grammarAccess.getDatabaseAccess().getLabelSTRINGTerminalRuleCall_3_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getDatabaseRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"label",
                      							lv_label_4_0,
                      							"org.eclipse.xtext.xbase.Xtype.STRING");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:2044:3: (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )?
            int alt79=2;
            int LA79_0 = input.LA(1);

            if ( (LA79_0==18) ) {
                alt79=1;
            }
            switch (alt79) {
                case 1 :
                    // InternalStubbrLang.g:2045:4: otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) )
                    {
                    otherlv_5=(Token)match(input,18,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getDatabaseAccess().getDocumentationKeyword_4_0());
                      			
                    }
                    // InternalStubbrLang.g:2049:4: ( (lv_documentation_6_0= RULE_STRING ) )
                    // InternalStubbrLang.g:2050:5: (lv_documentation_6_0= RULE_STRING )
                    {
                    // InternalStubbrLang.g:2050:5: (lv_documentation_6_0= RULE_STRING )
                    // InternalStubbrLang.g:2051:6: lv_documentation_6_0= RULE_STRING
                    {
                    lv_documentation_6_0=(Token)match(input,RULE_STRING,FOLLOW_73); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_documentation_6_0, grammarAccess.getDatabaseAccess().getDocumentationSTRINGTerminalRuleCall_4_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getDatabaseRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"documentation",
                      							lv_documentation_6_0,
                      							"org.eclipse.xtext.xbase.Xtype.STRING");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:2068:3: (otherlv_7= 'type' ( (lv_type_8_0= ruleDatabaseEnum ) ) )?
            int alt80=2;
            int LA80_0 = input.LA(1);

            if ( (LA80_0==67) ) {
                alt80=1;
            }
            switch (alt80) {
                case 1 :
                    // InternalStubbrLang.g:2069:4: otherlv_7= 'type' ( (lv_type_8_0= ruleDatabaseEnum ) )
                    {
                    otherlv_7=(Token)match(input,67,FOLLOW_74); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getDatabaseAccess().getTypeKeyword_5_0());
                      			
                    }
                    // InternalStubbrLang.g:2073:4: ( (lv_type_8_0= ruleDatabaseEnum ) )
                    // InternalStubbrLang.g:2074:5: (lv_type_8_0= ruleDatabaseEnum )
                    {
                    // InternalStubbrLang.g:2074:5: (lv_type_8_0= ruleDatabaseEnum )
                    // InternalStubbrLang.g:2075:6: lv_type_8_0= ruleDatabaseEnum
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDatabaseAccess().getTypeDatabaseEnumEnumRuleCall_5_1_0());
                      					
                    }
                    pushFollow(FOLLOW_70);
                    lv_type_8_0=ruleDatabaseEnum();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDatabaseRule());
                      						}
                      						set(
                      							current,
                      							"type",
                      							lv_type_8_0,
                      							"com.laegler.stubbr.lang.StubbrLang.DatabaseEnum");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:2093:3: (otherlv_9= 'version' ( (lv_version_10_0= RULE_VERSION ) ) )?
            int alt81=2;
            int LA81_0 = input.LA(1);

            if ( (LA81_0==21) ) {
                alt81=1;
            }
            switch (alt81) {
                case 1 :
                    // InternalStubbrLang.g:2094:4: otherlv_9= 'version' ( (lv_version_10_0= RULE_VERSION ) )
                    {
                    otherlv_9=(Token)match(input,21,FOLLOW_13); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_9, grammarAccess.getDatabaseAccess().getVersionKeyword_6_0());
                      			
                    }
                    // InternalStubbrLang.g:2098:4: ( (lv_version_10_0= RULE_VERSION ) )
                    // InternalStubbrLang.g:2099:5: (lv_version_10_0= RULE_VERSION )
                    {
                    // InternalStubbrLang.g:2099:5: (lv_version_10_0= RULE_VERSION )
                    // InternalStubbrLang.g:2100:6: lv_version_10_0= RULE_VERSION
                    {
                    lv_version_10_0=(Token)match(input,RULE_VERSION,FOLLOW_29); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_version_10_0, grammarAccess.getDatabaseAccess().getVersionVERSIONTerminalRuleCall_6_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getDatabaseRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"version",
                      							lv_version_10_0,
                      							"com.laegler.stubbr.lang.StubbrLang.VERSION");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_11=(Token)match(input,26,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_11, grammarAccess.getDatabaseAccess().getRightCurlyBracketKeyword_7());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDatabase"


    // $ANTLR start "entryRuleEntity"
    // InternalStubbrLang.g:2125:1: entryRuleEntity returns [EObject current=null] : iv_ruleEntity= ruleEntity EOF ;
    public final EObject entryRuleEntity() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEntity = null;


        try {
            // InternalStubbrLang.g:2125:47: (iv_ruleEntity= ruleEntity EOF )
            // InternalStubbrLang.g:2126:2: iv_ruleEntity= ruleEntity EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEntityRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEntity=ruleEntity();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEntity; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEntity"


    // $ANTLR start "ruleEntity"
    // InternalStubbrLang.g:2132:1: ruleEntity returns [EObject current=null] : (otherlv_0= 'entity' ( (lv_name_1_0= ruleQualifiedName ) ) (otherlv_2= 'extends' ( (lv_superType_3_0= ruleJvmTypeReference ) ) )? otherlv_4= '{' (otherlv_5= 'label' ( (lv_label_6_0= RULE_STRING ) ) )? (otherlv_7= 'documentation' ( (lv_documentation_8_0= RULE_STRING ) ) )? ( (lv_attributes_9_0= ruleAttribute ) )* otherlv_10= '}' ) ;
    public final EObject ruleEntity() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token lv_label_6_0=null;
        Token otherlv_7=null;
        Token lv_documentation_8_0=null;
        Token otherlv_10=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject lv_superType_3_0 = null;

        EObject lv_attributes_9_0 = null;



        	enterRule();

        try {
            // InternalStubbrLang.g:2138:2: ( (otherlv_0= 'entity' ( (lv_name_1_0= ruleQualifiedName ) ) (otherlv_2= 'extends' ( (lv_superType_3_0= ruleJvmTypeReference ) ) )? otherlv_4= '{' (otherlv_5= 'label' ( (lv_label_6_0= RULE_STRING ) ) )? (otherlv_7= 'documentation' ( (lv_documentation_8_0= RULE_STRING ) ) )? ( (lv_attributes_9_0= ruleAttribute ) )* otherlv_10= '}' ) )
            // InternalStubbrLang.g:2139:2: (otherlv_0= 'entity' ( (lv_name_1_0= ruleQualifiedName ) ) (otherlv_2= 'extends' ( (lv_superType_3_0= ruleJvmTypeReference ) ) )? otherlv_4= '{' (otherlv_5= 'label' ( (lv_label_6_0= RULE_STRING ) ) )? (otherlv_7= 'documentation' ( (lv_documentation_8_0= RULE_STRING ) ) )? ( (lv_attributes_9_0= ruleAttribute ) )* otherlv_10= '}' )
            {
            // InternalStubbrLang.g:2139:2: (otherlv_0= 'entity' ( (lv_name_1_0= ruleQualifiedName ) ) (otherlv_2= 'extends' ( (lv_superType_3_0= ruleJvmTypeReference ) ) )? otherlv_4= '{' (otherlv_5= 'label' ( (lv_label_6_0= RULE_STRING ) ) )? (otherlv_7= 'documentation' ( (lv_documentation_8_0= RULE_STRING ) ) )? ( (lv_attributes_9_0= ruleAttribute ) )* otherlv_10= '}' )
            // InternalStubbrLang.g:2140:3: otherlv_0= 'entity' ( (lv_name_1_0= ruleQualifiedName ) ) (otherlv_2= 'extends' ( (lv_superType_3_0= ruleJvmTypeReference ) ) )? otherlv_4= '{' (otherlv_5= 'label' ( (lv_label_6_0= RULE_STRING ) ) )? (otherlv_7= 'documentation' ( (lv_documentation_8_0= RULE_STRING ) ) )? ( (lv_attributes_9_0= ruleAttribute ) )* otherlv_10= '}'
            {
            otherlv_0=(Token)match(input,68,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getEntityAccess().getEntityKeyword_0());
              		
            }
            // InternalStubbrLang.g:2144:3: ( (lv_name_1_0= ruleQualifiedName ) )
            // InternalStubbrLang.g:2145:4: (lv_name_1_0= ruleQualifiedName )
            {
            // InternalStubbrLang.g:2145:4: (lv_name_1_0= ruleQualifiedName )
            // InternalStubbrLang.g:2146:5: lv_name_1_0= ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getEntityAccess().getNameQualifiedNameParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_75);
            lv_name_1_0=ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getEntityRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"org.eclipse.xtext.xbase.Xbase.QualifiedName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalStubbrLang.g:2163:3: (otherlv_2= 'extends' ( (lv_superType_3_0= ruleJvmTypeReference ) ) )?
            int alt82=2;
            int LA82_0 = input.LA(1);

            if ( (LA82_0==69) ) {
                alt82=1;
            }
            switch (alt82) {
                case 1 :
                    // InternalStubbrLang.g:2164:4: otherlv_2= 'extends' ( (lv_superType_3_0= ruleJvmTypeReference ) )
                    {
                    otherlv_2=(Token)match(input,69,FOLLOW_52); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getEntityAccess().getExtendsKeyword_2_0());
                      			
                    }
                    // InternalStubbrLang.g:2168:4: ( (lv_superType_3_0= ruleJvmTypeReference ) )
                    // InternalStubbrLang.g:2169:5: (lv_superType_3_0= ruleJvmTypeReference )
                    {
                    // InternalStubbrLang.g:2169:5: (lv_superType_3_0= ruleJvmTypeReference )
                    // InternalStubbrLang.g:2170:6: lv_superType_3_0= ruleJvmTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getEntityAccess().getSuperTypeJvmTypeReferenceParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_6);
                    lv_superType_3_0=ruleJvmTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getEntityRule());
                      						}
                      						set(
                      							current,
                      							"superType",
                      							lv_superType_3_0,
                      							"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_4=(Token)match(input,16,FOLLOW_76); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getEntityAccess().getLeftCurlyBracketKeyword_3());
              		
            }
            // InternalStubbrLang.g:2192:3: (otherlv_5= 'label' ( (lv_label_6_0= RULE_STRING ) ) )?
            int alt83=2;
            int LA83_0 = input.LA(1);

            if ( (LA83_0==17) ) {
                alt83=1;
            }
            switch (alt83) {
                case 1 :
                    // InternalStubbrLang.g:2193:4: otherlv_5= 'label' ( (lv_label_6_0= RULE_STRING ) )
                    {
                    otherlv_5=(Token)match(input,17,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getEntityAccess().getLabelKeyword_4_0());
                      			
                    }
                    // InternalStubbrLang.g:2197:4: ( (lv_label_6_0= RULE_STRING ) )
                    // InternalStubbrLang.g:2198:5: (lv_label_6_0= RULE_STRING )
                    {
                    // InternalStubbrLang.g:2198:5: (lv_label_6_0= RULE_STRING )
                    // InternalStubbrLang.g:2199:6: lv_label_6_0= RULE_STRING
                    {
                    lv_label_6_0=(Token)match(input,RULE_STRING,FOLLOW_77); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_label_6_0, grammarAccess.getEntityAccess().getLabelSTRINGTerminalRuleCall_4_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getEntityRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"label",
                      							lv_label_6_0,
                      							"org.eclipse.xtext.xbase.Xtype.STRING");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:2216:3: (otherlv_7= 'documentation' ( (lv_documentation_8_0= RULE_STRING ) ) )?
            int alt84=2;
            int LA84_0 = input.LA(1);

            if ( (LA84_0==18) ) {
                alt84=1;
            }
            switch (alt84) {
                case 1 :
                    // InternalStubbrLang.g:2217:4: otherlv_7= 'documentation' ( (lv_documentation_8_0= RULE_STRING ) )
                    {
                    otherlv_7=(Token)match(input,18,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getEntityAccess().getDocumentationKeyword_5_0());
                      			
                    }
                    // InternalStubbrLang.g:2221:4: ( (lv_documentation_8_0= RULE_STRING ) )
                    // InternalStubbrLang.g:2222:5: (lv_documentation_8_0= RULE_STRING )
                    {
                    // InternalStubbrLang.g:2222:5: (lv_documentation_8_0= RULE_STRING )
                    // InternalStubbrLang.g:2223:6: lv_documentation_8_0= RULE_STRING
                    {
                    lv_documentation_8_0=(Token)match(input,RULE_STRING,FOLLOW_38); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_documentation_8_0, grammarAccess.getEntityAccess().getDocumentationSTRINGTerminalRuleCall_5_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getEntityRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"documentation",
                      							lv_documentation_8_0,
                      							"org.eclipse.xtext.xbase.Xtype.STRING");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:2240:3: ( (lv_attributes_9_0= ruleAttribute ) )*
            loop85:
            do {
                int alt85=2;
                int LA85_0 = input.LA(1);

                if ( (LA85_0==71) ) {
                    alt85=1;
                }


                switch (alt85) {
            	case 1 :
            	    // InternalStubbrLang.g:2241:4: (lv_attributes_9_0= ruleAttribute )
            	    {
            	    // InternalStubbrLang.g:2241:4: (lv_attributes_9_0= ruleAttribute )
            	    // InternalStubbrLang.g:2242:5: lv_attributes_9_0= ruleAttribute
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getEntityAccess().getAttributesAttributeParserRuleCall_6_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_38);
            	    lv_attributes_9_0=ruleAttribute();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getEntityRule());
            	      					}
            	      					add(
            	      						current,
            	      						"attributes",
            	      						lv_attributes_9_0,
            	      						"com.laegler.stubbr.lang.StubbrLang.Attribute");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop85;
                }
            } while (true);

            otherlv_10=(Token)match(input,26,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_10, grammarAccess.getEntityAccess().getRightCurlyBracketKeyword_7());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEntity"


    // $ANTLR start "entryRuleEnumeration"
    // InternalStubbrLang.g:2267:1: entryRuleEnumeration returns [EObject current=null] : iv_ruleEnumeration= ruleEnumeration EOF ;
    public final EObject entryRuleEnumeration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEnumeration = null;


        try {
            // InternalStubbrLang.g:2267:52: (iv_ruleEnumeration= ruleEnumeration EOF )
            // InternalStubbrLang.g:2268:2: iv_ruleEnumeration= ruleEnumeration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEnumerationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEnumeration=ruleEnumeration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEnumeration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEnumeration"


    // $ANTLR start "ruleEnumeration"
    // InternalStubbrLang.g:2274:1: ruleEnumeration returns [EObject current=null] : (otherlv_0= 'enumeration' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )? ( ( (lv_enumValues_7_0= RULE_ID ) ) (otherlv_8= ',' ( (lv_enumValues_9_0= RULE_ID ) ) )* )? otherlv_10= '}' ) ;
    public final EObject ruleEnumeration() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token lv_label_4_0=null;
        Token otherlv_5=null;
        Token lv_documentation_6_0=null;
        Token lv_enumValues_7_0=null;
        Token otherlv_8=null;
        Token lv_enumValues_9_0=null;
        Token otherlv_10=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;



        	enterRule();

        try {
            // InternalStubbrLang.g:2280:2: ( (otherlv_0= 'enumeration' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )? ( ( (lv_enumValues_7_0= RULE_ID ) ) (otherlv_8= ',' ( (lv_enumValues_9_0= RULE_ID ) ) )* )? otherlv_10= '}' ) )
            // InternalStubbrLang.g:2281:2: (otherlv_0= 'enumeration' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )? ( ( (lv_enumValues_7_0= RULE_ID ) ) (otherlv_8= ',' ( (lv_enumValues_9_0= RULE_ID ) ) )* )? otherlv_10= '}' )
            {
            // InternalStubbrLang.g:2281:2: (otherlv_0= 'enumeration' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )? ( ( (lv_enumValues_7_0= RULE_ID ) ) (otherlv_8= ',' ( (lv_enumValues_9_0= RULE_ID ) ) )* )? otherlv_10= '}' )
            // InternalStubbrLang.g:2282:3: otherlv_0= 'enumeration' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )? ( ( (lv_enumValues_7_0= RULE_ID ) ) (otherlv_8= ',' ( (lv_enumValues_9_0= RULE_ID ) ) )* )? otherlv_10= '}'
            {
            otherlv_0=(Token)match(input,70,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getEnumerationAccess().getEnumerationKeyword_0());
              		
            }
            // InternalStubbrLang.g:2286:3: ( (lv_name_1_0= ruleQualifiedName ) )
            // InternalStubbrLang.g:2287:4: (lv_name_1_0= ruleQualifiedName )
            {
            // InternalStubbrLang.g:2287:4: (lv_name_1_0= ruleQualifiedName )
            // InternalStubbrLang.g:2288:5: lv_name_1_0= ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getEnumerationAccess().getNameQualifiedNameParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_6);
            lv_name_1_0=ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getEnumerationRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"org.eclipse.xtext.xbase.Xbase.QualifiedName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,16,FOLLOW_78); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getEnumerationAccess().getLeftCurlyBracketKeyword_2());
              		
            }
            // InternalStubbrLang.g:2309:3: (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )?
            int alt86=2;
            int LA86_0 = input.LA(1);

            if ( (LA86_0==17) ) {
                alt86=1;
            }
            switch (alt86) {
                case 1 :
                    // InternalStubbrLang.g:2310:4: otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) )
                    {
                    otherlv_3=(Token)match(input,17,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getEnumerationAccess().getLabelKeyword_3_0());
                      			
                    }
                    // InternalStubbrLang.g:2314:4: ( (lv_label_4_0= RULE_STRING ) )
                    // InternalStubbrLang.g:2315:5: (lv_label_4_0= RULE_STRING )
                    {
                    // InternalStubbrLang.g:2315:5: (lv_label_4_0= RULE_STRING )
                    // InternalStubbrLang.g:2316:6: lv_label_4_0= RULE_STRING
                    {
                    lv_label_4_0=(Token)match(input,RULE_STRING,FOLLOW_79); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_label_4_0, grammarAccess.getEnumerationAccess().getLabelSTRINGTerminalRuleCall_3_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getEnumerationRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"label",
                      							lv_label_4_0,
                      							"org.eclipse.xtext.xbase.Xtype.STRING");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:2333:3: (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )?
            int alt87=2;
            int LA87_0 = input.LA(1);

            if ( (LA87_0==18) ) {
                alt87=1;
            }
            switch (alt87) {
                case 1 :
                    // InternalStubbrLang.g:2334:4: otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) )
                    {
                    otherlv_5=(Token)match(input,18,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getEnumerationAccess().getDocumentationKeyword_4_0());
                      			
                    }
                    // InternalStubbrLang.g:2338:4: ( (lv_documentation_6_0= RULE_STRING ) )
                    // InternalStubbrLang.g:2339:5: (lv_documentation_6_0= RULE_STRING )
                    {
                    // InternalStubbrLang.g:2339:5: (lv_documentation_6_0= RULE_STRING )
                    // InternalStubbrLang.g:2340:6: lv_documentation_6_0= RULE_STRING
                    {
                    lv_documentation_6_0=(Token)match(input,RULE_STRING,FOLLOW_80); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_documentation_6_0, grammarAccess.getEnumerationAccess().getDocumentationSTRINGTerminalRuleCall_4_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getEnumerationRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"documentation",
                      							lv_documentation_6_0,
                      							"org.eclipse.xtext.xbase.Xtype.STRING");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:2357:3: ( ( (lv_enumValues_7_0= RULE_ID ) ) (otherlv_8= ',' ( (lv_enumValues_9_0= RULE_ID ) ) )* )?
            int alt89=2;
            int LA89_0 = input.LA(1);

            if ( (LA89_0==RULE_ID) ) {
                alt89=1;
            }
            switch (alt89) {
                case 1 :
                    // InternalStubbrLang.g:2358:4: ( (lv_enumValues_7_0= RULE_ID ) ) (otherlv_8= ',' ( (lv_enumValues_9_0= RULE_ID ) ) )*
                    {
                    // InternalStubbrLang.g:2358:4: ( (lv_enumValues_7_0= RULE_ID ) )
                    // InternalStubbrLang.g:2359:5: (lv_enumValues_7_0= RULE_ID )
                    {
                    // InternalStubbrLang.g:2359:5: (lv_enumValues_7_0= RULE_ID )
                    // InternalStubbrLang.g:2360:6: lv_enumValues_7_0= RULE_ID
                    {
                    lv_enumValues_7_0=(Token)match(input,RULE_ID,FOLLOW_81); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_enumValues_7_0, grammarAccess.getEnumerationAccess().getEnumValuesIDTerminalRuleCall_5_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getEnumerationRule());
                      						}
                      						addWithLastConsumed(
                      							current,
                      							"enumValues",
                      							lv_enumValues_7_0,
                      							"org.eclipse.xtext.xbase.Xtype.ID");
                      					
                    }

                    }


                    }

                    // InternalStubbrLang.g:2376:4: (otherlv_8= ',' ( (lv_enumValues_9_0= RULE_ID ) ) )*
                    loop88:
                    do {
                        int alt88=2;
                        int LA88_0 = input.LA(1);

                        if ( (LA88_0==25) ) {
                            alt88=1;
                        }


                        switch (alt88) {
                    	case 1 :
                    	    // InternalStubbrLang.g:2377:5: otherlv_8= ',' ( (lv_enumValues_9_0= RULE_ID ) )
                    	    {
                    	    otherlv_8=(Token)match(input,25,FOLLOW_3); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_8, grammarAccess.getEnumerationAccess().getCommaKeyword_5_1_0());
                    	      				
                    	    }
                    	    // InternalStubbrLang.g:2381:5: ( (lv_enumValues_9_0= RULE_ID ) )
                    	    // InternalStubbrLang.g:2382:6: (lv_enumValues_9_0= RULE_ID )
                    	    {
                    	    // InternalStubbrLang.g:2382:6: (lv_enumValues_9_0= RULE_ID )
                    	    // InternalStubbrLang.g:2383:7: lv_enumValues_9_0= RULE_ID
                    	    {
                    	    lv_enumValues_9_0=(Token)match(input,RULE_ID,FOLLOW_81); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							newLeafNode(lv_enumValues_9_0, grammarAccess.getEnumerationAccess().getEnumValuesIDTerminalRuleCall_5_1_1_0());
                    	      						
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElement(grammarAccess.getEnumerationRule());
                    	      							}
                    	      							addWithLastConsumed(
                    	      								current,
                    	      								"enumValues",
                    	      								lv_enumValues_9_0,
                    	      								"org.eclipse.xtext.xbase.Xtype.ID");
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop88;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_10=(Token)match(input,26,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_10, grammarAccess.getEnumerationAccess().getRightCurlyBracketKeyword_6());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEnumeration"


    // $ANTLR start "entryRuleAttribute"
    // InternalStubbrLang.g:2409:1: entryRuleAttribute returns [EObject current=null] : iv_ruleAttribute= ruleAttribute EOF ;
    public final EObject entryRuleAttribute() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAttribute = null;


        try {
            // InternalStubbrLang.g:2409:50: (iv_ruleAttribute= ruleAttribute EOF )
            // InternalStubbrLang.g:2410:2: iv_ruleAttribute= ruleAttribute EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAttributeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAttribute=ruleAttribute();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAttribute; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAttribute"


    // $ANTLR start "ruleAttribute"
    // InternalStubbrLang.g:2416:1: ruleAttribute returns [EObject current=null] : (otherlv_0= 'attribute' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )? ( (lv_primaryKey_7_0= 'primaryKey' ) )? ( (otherlv_8= 'type' ( ( ruleQualifiedName ) ) ) | (otherlv_10= 'javaType' ( (lv_javaType_11_0= ruleJvmTypeReference ) ) ) )? otherlv_12= '}' ) ;
    public final EObject ruleAttribute() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token lv_label_4_0=null;
        Token otherlv_5=null;
        Token lv_documentation_6_0=null;
        Token lv_primaryKey_7_0=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject lv_javaType_11_0 = null;



        	enterRule();

        try {
            // InternalStubbrLang.g:2422:2: ( (otherlv_0= 'attribute' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )? ( (lv_primaryKey_7_0= 'primaryKey' ) )? ( (otherlv_8= 'type' ( ( ruleQualifiedName ) ) ) | (otherlv_10= 'javaType' ( (lv_javaType_11_0= ruleJvmTypeReference ) ) ) )? otherlv_12= '}' ) )
            // InternalStubbrLang.g:2423:2: (otherlv_0= 'attribute' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )? ( (lv_primaryKey_7_0= 'primaryKey' ) )? ( (otherlv_8= 'type' ( ( ruleQualifiedName ) ) ) | (otherlv_10= 'javaType' ( (lv_javaType_11_0= ruleJvmTypeReference ) ) ) )? otherlv_12= '}' )
            {
            // InternalStubbrLang.g:2423:2: (otherlv_0= 'attribute' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )? ( (lv_primaryKey_7_0= 'primaryKey' ) )? ( (otherlv_8= 'type' ( ( ruleQualifiedName ) ) ) | (otherlv_10= 'javaType' ( (lv_javaType_11_0= ruleJvmTypeReference ) ) ) )? otherlv_12= '}' )
            // InternalStubbrLang.g:2424:3: otherlv_0= 'attribute' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )? ( (lv_primaryKey_7_0= 'primaryKey' ) )? ( (otherlv_8= 'type' ( ( ruleQualifiedName ) ) ) | (otherlv_10= 'javaType' ( (lv_javaType_11_0= ruleJvmTypeReference ) ) ) )? otherlv_12= '}'
            {
            otherlv_0=(Token)match(input,71,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getAttributeAccess().getAttributeKeyword_0());
              		
            }
            // InternalStubbrLang.g:2428:3: ( (lv_name_1_0= ruleQualifiedName ) )
            // InternalStubbrLang.g:2429:4: (lv_name_1_0= ruleQualifiedName )
            {
            // InternalStubbrLang.g:2429:4: (lv_name_1_0= ruleQualifiedName )
            // InternalStubbrLang.g:2430:5: lv_name_1_0= ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAttributeAccess().getNameQualifiedNameParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_6);
            lv_name_1_0=ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAttributeRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"org.eclipse.xtext.xbase.Xbase.QualifiedName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,16,FOLLOW_82); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getAttributeAccess().getLeftCurlyBracketKeyword_2());
              		
            }
            // InternalStubbrLang.g:2451:3: (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )?
            int alt90=2;
            int LA90_0 = input.LA(1);

            if ( (LA90_0==17) ) {
                alt90=1;
            }
            switch (alt90) {
                case 1 :
                    // InternalStubbrLang.g:2452:4: otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) )
                    {
                    otherlv_3=(Token)match(input,17,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getAttributeAccess().getLabelKeyword_3_0());
                      			
                    }
                    // InternalStubbrLang.g:2456:4: ( (lv_label_4_0= RULE_STRING ) )
                    // InternalStubbrLang.g:2457:5: (lv_label_4_0= RULE_STRING )
                    {
                    // InternalStubbrLang.g:2457:5: (lv_label_4_0= RULE_STRING )
                    // InternalStubbrLang.g:2458:6: lv_label_4_0= RULE_STRING
                    {
                    lv_label_4_0=(Token)match(input,RULE_STRING,FOLLOW_83); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_label_4_0, grammarAccess.getAttributeAccess().getLabelSTRINGTerminalRuleCall_3_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getAttributeRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"label",
                      							lv_label_4_0,
                      							"org.eclipse.xtext.xbase.Xtype.STRING");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:2475:3: (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )?
            int alt91=2;
            int LA91_0 = input.LA(1);

            if ( (LA91_0==18) ) {
                alt91=1;
            }
            switch (alt91) {
                case 1 :
                    // InternalStubbrLang.g:2476:4: otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) )
                    {
                    otherlv_5=(Token)match(input,18,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getAttributeAccess().getDocumentationKeyword_4_0());
                      			
                    }
                    // InternalStubbrLang.g:2480:4: ( (lv_documentation_6_0= RULE_STRING ) )
                    // InternalStubbrLang.g:2481:5: (lv_documentation_6_0= RULE_STRING )
                    {
                    // InternalStubbrLang.g:2481:5: (lv_documentation_6_0= RULE_STRING )
                    // InternalStubbrLang.g:2482:6: lv_documentation_6_0= RULE_STRING
                    {
                    lv_documentation_6_0=(Token)match(input,RULE_STRING,FOLLOW_84); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_documentation_6_0, grammarAccess.getAttributeAccess().getDocumentationSTRINGTerminalRuleCall_4_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getAttributeRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"documentation",
                      							lv_documentation_6_0,
                      							"org.eclipse.xtext.xbase.Xtype.STRING");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:2499:3: ( (lv_primaryKey_7_0= 'primaryKey' ) )?
            int alt92=2;
            int LA92_0 = input.LA(1);

            if ( (LA92_0==72) ) {
                alt92=1;
            }
            switch (alt92) {
                case 1 :
                    // InternalStubbrLang.g:2500:4: (lv_primaryKey_7_0= 'primaryKey' )
                    {
                    // InternalStubbrLang.g:2500:4: (lv_primaryKey_7_0= 'primaryKey' )
                    // InternalStubbrLang.g:2501:5: lv_primaryKey_7_0= 'primaryKey'
                    {
                    lv_primaryKey_7_0=(Token)match(input,72,FOLLOW_85); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_primaryKey_7_0, grammarAccess.getAttributeAccess().getPrimaryKeyPrimaryKeyKeyword_5_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getAttributeRule());
                      					}
                      					setWithLastConsumed(current, "primaryKey", true, "primaryKey");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:2513:3: ( (otherlv_8= 'type' ( ( ruleQualifiedName ) ) ) | (otherlv_10= 'javaType' ( (lv_javaType_11_0= ruleJvmTypeReference ) ) ) )?
            int alt93=3;
            int LA93_0 = input.LA(1);

            if ( (LA93_0==67) ) {
                alt93=1;
            }
            else if ( (LA93_0==73) ) {
                alt93=2;
            }
            switch (alt93) {
                case 1 :
                    // InternalStubbrLang.g:2514:4: (otherlv_8= 'type' ( ( ruleQualifiedName ) ) )
                    {
                    // InternalStubbrLang.g:2514:4: (otherlv_8= 'type' ( ( ruleQualifiedName ) ) )
                    // InternalStubbrLang.g:2515:5: otherlv_8= 'type' ( ( ruleQualifiedName ) )
                    {
                    otherlv_8=(Token)match(input,67,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_8, grammarAccess.getAttributeAccess().getTypeKeyword_6_0_0());
                      				
                    }
                    // InternalStubbrLang.g:2519:5: ( ( ruleQualifiedName ) )
                    // InternalStubbrLang.g:2520:6: ( ruleQualifiedName )
                    {
                    // InternalStubbrLang.g:2520:6: ( ruleQualifiedName )
                    // InternalStubbrLang.g:2521:7: ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getAttributeRule());
                      							}
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getAttributeAccess().getTypeEntityCrossReference_6_0_1_0());
                      						
                    }
                    pushFollow(FOLLOW_29);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalStubbrLang.g:2537:4: (otherlv_10= 'javaType' ( (lv_javaType_11_0= ruleJvmTypeReference ) ) )
                    {
                    // InternalStubbrLang.g:2537:4: (otherlv_10= 'javaType' ( (lv_javaType_11_0= ruleJvmTypeReference ) ) )
                    // InternalStubbrLang.g:2538:5: otherlv_10= 'javaType' ( (lv_javaType_11_0= ruleJvmTypeReference ) )
                    {
                    otherlv_10=(Token)match(input,73,FOLLOW_52); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_10, grammarAccess.getAttributeAccess().getJavaTypeKeyword_6_1_0());
                      				
                    }
                    // InternalStubbrLang.g:2542:5: ( (lv_javaType_11_0= ruleJvmTypeReference ) )
                    // InternalStubbrLang.g:2543:6: (lv_javaType_11_0= ruleJvmTypeReference )
                    {
                    // InternalStubbrLang.g:2543:6: (lv_javaType_11_0= ruleJvmTypeReference )
                    // InternalStubbrLang.g:2544:7: lv_javaType_11_0= ruleJvmTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getAttributeAccess().getJavaTypeJvmTypeReferenceParserRuleCall_6_1_1_0());
                      						
                    }
                    pushFollow(FOLLOW_29);
                    lv_javaType_11_0=ruleJvmTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getAttributeRule());
                      							}
                      							set(
                      								current,
                      								"javaType",
                      								lv_javaType_11_0,
                      								"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }

            otherlv_12=(Token)match(input,26,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_12, grammarAccess.getAttributeAccess().getRightCurlyBracketKeyword_7());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAttribute"


    // $ANTLR start "entryRuleRelationship"
    // InternalStubbrLang.g:2571:1: entryRuleRelationship returns [EObject current=null] : iv_ruleRelationship= ruleRelationship EOF ;
    public final EObject entryRuleRelationship() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRelationship = null;


        try {
            // InternalStubbrLang.g:2571:53: (iv_ruleRelationship= ruleRelationship EOF )
            // InternalStubbrLang.g:2572:2: iv_ruleRelationship= ruleRelationship EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRelationshipRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleRelationship=ruleRelationship();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRelationship; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRelationship"


    // $ANTLR start "ruleRelationship"
    // InternalStubbrLang.g:2578:1: ruleRelationship returns [EObject current=null] : (otherlv_0= 'relationship' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )? otherlv_7= 'from' ( ( ruleQualifiedName ) ) otherlv_9= 'to' ( ( ruleQualifiedName ) ) (otherlv_11= 'action' ( (lv_action_12_0= ruleXBlockExpression ) ) )? (otherlv_13= 'type' ( (lv_type_14_0= ruleJvmTypeReference ) ) )? otherlv_15= '}' ) ;
    public final EObject ruleRelationship() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token lv_label_4_0=null;
        Token otherlv_5=null;
        Token lv_documentation_6_0=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject lv_action_12_0 = null;

        EObject lv_type_14_0 = null;



        	enterRule();

        try {
            // InternalStubbrLang.g:2584:2: ( (otherlv_0= 'relationship' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )? otherlv_7= 'from' ( ( ruleQualifiedName ) ) otherlv_9= 'to' ( ( ruleQualifiedName ) ) (otherlv_11= 'action' ( (lv_action_12_0= ruleXBlockExpression ) ) )? (otherlv_13= 'type' ( (lv_type_14_0= ruleJvmTypeReference ) ) )? otherlv_15= '}' ) )
            // InternalStubbrLang.g:2585:2: (otherlv_0= 'relationship' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )? otherlv_7= 'from' ( ( ruleQualifiedName ) ) otherlv_9= 'to' ( ( ruleQualifiedName ) ) (otherlv_11= 'action' ( (lv_action_12_0= ruleXBlockExpression ) ) )? (otherlv_13= 'type' ( (lv_type_14_0= ruleJvmTypeReference ) ) )? otherlv_15= '}' )
            {
            // InternalStubbrLang.g:2585:2: (otherlv_0= 'relationship' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )? otherlv_7= 'from' ( ( ruleQualifiedName ) ) otherlv_9= 'to' ( ( ruleQualifiedName ) ) (otherlv_11= 'action' ( (lv_action_12_0= ruleXBlockExpression ) ) )? (otherlv_13= 'type' ( (lv_type_14_0= ruleJvmTypeReference ) ) )? otherlv_15= '}' )
            // InternalStubbrLang.g:2586:3: otherlv_0= 'relationship' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )? otherlv_7= 'from' ( ( ruleQualifiedName ) ) otherlv_9= 'to' ( ( ruleQualifiedName ) ) (otherlv_11= 'action' ( (lv_action_12_0= ruleXBlockExpression ) ) )? (otherlv_13= 'type' ( (lv_type_14_0= ruleJvmTypeReference ) ) )? otherlv_15= '}'
            {
            otherlv_0=(Token)match(input,74,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getRelationshipAccess().getRelationshipKeyword_0());
              		
            }
            // InternalStubbrLang.g:2590:3: ( (lv_name_1_0= ruleQualifiedName ) )
            // InternalStubbrLang.g:2591:4: (lv_name_1_0= ruleQualifiedName )
            {
            // InternalStubbrLang.g:2591:4: (lv_name_1_0= ruleQualifiedName )
            // InternalStubbrLang.g:2592:5: lv_name_1_0= ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getRelationshipAccess().getNameQualifiedNameParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_6);
            lv_name_1_0=ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getRelationshipRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"org.eclipse.xtext.xbase.Xbase.QualifiedName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,16,FOLLOW_86); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getRelationshipAccess().getLeftCurlyBracketKeyword_2());
              		
            }
            // InternalStubbrLang.g:2613:3: (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )?
            int alt94=2;
            int LA94_0 = input.LA(1);

            if ( (LA94_0==17) ) {
                alt94=1;
            }
            switch (alt94) {
                case 1 :
                    // InternalStubbrLang.g:2614:4: otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) )
                    {
                    otherlv_3=(Token)match(input,17,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getRelationshipAccess().getLabelKeyword_3_0());
                      			
                    }
                    // InternalStubbrLang.g:2618:4: ( (lv_label_4_0= RULE_STRING ) )
                    // InternalStubbrLang.g:2619:5: (lv_label_4_0= RULE_STRING )
                    {
                    // InternalStubbrLang.g:2619:5: (lv_label_4_0= RULE_STRING )
                    // InternalStubbrLang.g:2620:6: lv_label_4_0= RULE_STRING
                    {
                    lv_label_4_0=(Token)match(input,RULE_STRING,FOLLOW_87); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_label_4_0, grammarAccess.getRelationshipAccess().getLabelSTRINGTerminalRuleCall_3_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getRelationshipRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"label",
                      							lv_label_4_0,
                      							"org.eclipse.xtext.xbase.Xtype.STRING");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:2637:3: (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )?
            int alt95=2;
            int LA95_0 = input.LA(1);

            if ( (LA95_0==18) ) {
                alt95=1;
            }
            switch (alt95) {
                case 1 :
                    // InternalStubbrLang.g:2638:4: otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) )
                    {
                    otherlv_5=(Token)match(input,18,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getRelationshipAccess().getDocumentationKeyword_4_0());
                      			
                    }
                    // InternalStubbrLang.g:2642:4: ( (lv_documentation_6_0= RULE_STRING ) )
                    // InternalStubbrLang.g:2643:5: (lv_documentation_6_0= RULE_STRING )
                    {
                    // InternalStubbrLang.g:2643:5: (lv_documentation_6_0= RULE_STRING )
                    // InternalStubbrLang.g:2644:6: lv_documentation_6_0= RULE_STRING
                    {
                    lv_documentation_6_0=(Token)match(input,RULE_STRING,FOLLOW_88); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_documentation_6_0, grammarAccess.getRelationshipAccess().getDocumentationSTRINGTerminalRuleCall_4_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getRelationshipRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"documentation",
                      							lv_documentation_6_0,
                      							"org.eclipse.xtext.xbase.Xtype.STRING");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_7=(Token)match(input,75,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_7, grammarAccess.getRelationshipAccess().getFromKeyword_5());
              		
            }
            // InternalStubbrLang.g:2665:3: ( ( ruleQualifiedName ) )
            // InternalStubbrLang.g:2666:4: ( ruleQualifiedName )
            {
            // InternalStubbrLang.g:2666:4: ( ruleQualifiedName )
            // InternalStubbrLang.g:2667:5: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getRelationshipRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getRelationshipAccess().getFromEntityCrossReference_6_0());
              				
            }
            pushFollow(FOLLOW_89);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_9=(Token)match(input,76,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_9, grammarAccess.getRelationshipAccess().getToKeyword_7());
              		
            }
            // InternalStubbrLang.g:2685:3: ( ( ruleQualifiedName ) )
            // InternalStubbrLang.g:2686:4: ( ruleQualifiedName )
            {
            // InternalStubbrLang.g:2686:4: ( ruleQualifiedName )
            // InternalStubbrLang.g:2687:5: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getRelationshipRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getRelationshipAccess().getToEntityCrossReference_8_0());
              				
            }
            pushFollow(FOLLOW_90);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalStubbrLang.g:2701:3: (otherlv_11= 'action' ( (lv_action_12_0= ruleXBlockExpression ) ) )?
            int alt96=2;
            int LA96_0 = input.LA(1);

            if ( (LA96_0==77) ) {
                alt96=1;
            }
            switch (alt96) {
                case 1 :
                    // InternalStubbrLang.g:2702:4: otherlv_11= 'action' ( (lv_action_12_0= ruleXBlockExpression ) )
                    {
                    otherlv_11=(Token)match(input,77,FOLLOW_6); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_11, grammarAccess.getRelationshipAccess().getActionKeyword_9_0());
                      			
                    }
                    // InternalStubbrLang.g:2706:4: ( (lv_action_12_0= ruleXBlockExpression ) )
                    // InternalStubbrLang.g:2707:5: (lv_action_12_0= ruleXBlockExpression )
                    {
                    // InternalStubbrLang.g:2707:5: (lv_action_12_0= ruleXBlockExpression )
                    // InternalStubbrLang.g:2708:6: lv_action_12_0= ruleXBlockExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getRelationshipAccess().getActionXBlockExpressionParserRuleCall_9_1_0());
                      					
                    }
                    pushFollow(FOLLOW_91);
                    lv_action_12_0=ruleXBlockExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getRelationshipRule());
                      						}
                      						set(
                      							current,
                      							"action",
                      							lv_action_12_0,
                      							"org.eclipse.xtext.xbase.Xbase.XBlockExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:2726:3: (otherlv_13= 'type' ( (lv_type_14_0= ruleJvmTypeReference ) ) )?
            int alt97=2;
            int LA97_0 = input.LA(1);

            if ( (LA97_0==67) ) {
                alt97=1;
            }
            switch (alt97) {
                case 1 :
                    // InternalStubbrLang.g:2727:4: otherlv_13= 'type' ( (lv_type_14_0= ruleJvmTypeReference ) )
                    {
                    otherlv_13=(Token)match(input,67,FOLLOW_52); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_13, grammarAccess.getRelationshipAccess().getTypeKeyword_10_0());
                      			
                    }
                    // InternalStubbrLang.g:2731:4: ( (lv_type_14_0= ruleJvmTypeReference ) )
                    // InternalStubbrLang.g:2732:5: (lv_type_14_0= ruleJvmTypeReference )
                    {
                    // InternalStubbrLang.g:2732:5: (lv_type_14_0= ruleJvmTypeReference )
                    // InternalStubbrLang.g:2733:6: lv_type_14_0= ruleJvmTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getRelationshipAccess().getTypeJvmTypeReferenceParserRuleCall_10_1_0());
                      					
                    }
                    pushFollow(FOLLOW_29);
                    lv_type_14_0=ruleJvmTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getRelationshipRule());
                      						}
                      						set(
                      							current,
                      							"type",
                      							lv_type_14_0,
                      							"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_15=(Token)match(input,26,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_15, grammarAccess.getRelationshipAccess().getRightCurlyBracketKeyword_11());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRelationship"


    // $ANTLR start "entryRuleLevel1Attribute"
    // InternalStubbrLang.g:2759:1: entryRuleLevel1Attribute returns [EObject current=null] : iv_ruleLevel1Attribute= ruleLevel1Attribute EOF ;
    public final EObject entryRuleLevel1Attribute() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLevel1Attribute = null;


        try {
            // InternalStubbrLang.g:2759:56: (iv_ruleLevel1Attribute= ruleLevel1Attribute EOF )
            // InternalStubbrLang.g:2760:2: iv_ruleLevel1Attribute= ruleLevel1Attribute EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLevel1AttributeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLevel1Attribute=ruleLevel1Attribute();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLevel1Attribute; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLevel1Attribute"


    // $ANTLR start "ruleLevel1Attribute"
    // InternalStubbrLang.g:2766:1: ruleLevel1Attribute returns [EObject current=null] : (otherlv_0= 'attribute' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )? (otherlv_7= 'value' ( (lv_value_8_0= RULE_STRING ) ) )? ( (lv_attributes_9_0= ruleLevel1Attribute ) )* otherlv_10= '}' ) ;
    public final EObject ruleLevel1Attribute() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token lv_label_4_0=null;
        Token otherlv_5=null;
        Token lv_documentation_6_0=null;
        Token otherlv_7=null;
        Token lv_value_8_0=null;
        Token otherlv_10=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject lv_attributes_9_0 = null;



        	enterRule();

        try {
            // InternalStubbrLang.g:2772:2: ( (otherlv_0= 'attribute' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )? (otherlv_7= 'value' ( (lv_value_8_0= RULE_STRING ) ) )? ( (lv_attributes_9_0= ruleLevel1Attribute ) )* otherlv_10= '}' ) )
            // InternalStubbrLang.g:2773:2: (otherlv_0= 'attribute' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )? (otherlv_7= 'value' ( (lv_value_8_0= RULE_STRING ) ) )? ( (lv_attributes_9_0= ruleLevel1Attribute ) )* otherlv_10= '}' )
            {
            // InternalStubbrLang.g:2773:2: (otherlv_0= 'attribute' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )? (otherlv_7= 'value' ( (lv_value_8_0= RULE_STRING ) ) )? ( (lv_attributes_9_0= ruleLevel1Attribute ) )* otherlv_10= '}' )
            // InternalStubbrLang.g:2774:3: otherlv_0= 'attribute' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )? (otherlv_7= 'value' ( (lv_value_8_0= RULE_STRING ) ) )? ( (lv_attributes_9_0= ruleLevel1Attribute ) )* otherlv_10= '}'
            {
            otherlv_0=(Token)match(input,71,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getLevel1AttributeAccess().getAttributeKeyword_0());
              		
            }
            // InternalStubbrLang.g:2778:3: ( (lv_name_1_0= ruleQualifiedName ) )
            // InternalStubbrLang.g:2779:4: (lv_name_1_0= ruleQualifiedName )
            {
            // InternalStubbrLang.g:2779:4: (lv_name_1_0= ruleQualifiedName )
            // InternalStubbrLang.g:2780:5: lv_name_1_0= ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getLevel1AttributeAccess().getNameQualifiedNameParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_6);
            lv_name_1_0=ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getLevel1AttributeRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"org.eclipse.xtext.xbase.Xbase.QualifiedName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,16,FOLLOW_92); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getLevel1AttributeAccess().getLeftCurlyBracketKeyword_2());
              		
            }
            // InternalStubbrLang.g:2801:3: (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )?
            int alt98=2;
            int LA98_0 = input.LA(1);

            if ( (LA98_0==17) ) {
                alt98=1;
            }
            switch (alt98) {
                case 1 :
                    // InternalStubbrLang.g:2802:4: otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) )
                    {
                    otherlv_3=(Token)match(input,17,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getLevel1AttributeAccess().getLabelKeyword_3_0());
                      			
                    }
                    // InternalStubbrLang.g:2806:4: ( (lv_label_4_0= RULE_STRING ) )
                    // InternalStubbrLang.g:2807:5: (lv_label_4_0= RULE_STRING )
                    {
                    // InternalStubbrLang.g:2807:5: (lv_label_4_0= RULE_STRING )
                    // InternalStubbrLang.g:2808:6: lv_label_4_0= RULE_STRING
                    {
                    lv_label_4_0=(Token)match(input,RULE_STRING,FOLLOW_93); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_label_4_0, grammarAccess.getLevel1AttributeAccess().getLabelSTRINGTerminalRuleCall_3_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getLevel1AttributeRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"label",
                      							lv_label_4_0,
                      							"org.eclipse.xtext.xbase.Xtype.STRING");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:2825:3: (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )?
            int alt99=2;
            int LA99_0 = input.LA(1);

            if ( (LA99_0==18) ) {
                alt99=1;
            }
            switch (alt99) {
                case 1 :
                    // InternalStubbrLang.g:2826:4: otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) )
                    {
                    otherlv_5=(Token)match(input,18,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getLevel1AttributeAccess().getDocumentationKeyword_4_0());
                      			
                    }
                    // InternalStubbrLang.g:2830:4: ( (lv_documentation_6_0= RULE_STRING ) )
                    // InternalStubbrLang.g:2831:5: (lv_documentation_6_0= RULE_STRING )
                    {
                    // InternalStubbrLang.g:2831:5: (lv_documentation_6_0= RULE_STRING )
                    // InternalStubbrLang.g:2832:6: lv_documentation_6_0= RULE_STRING
                    {
                    lv_documentation_6_0=(Token)match(input,RULE_STRING,FOLLOW_94); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_documentation_6_0, grammarAccess.getLevel1AttributeAccess().getDocumentationSTRINGTerminalRuleCall_4_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getLevel1AttributeRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"documentation",
                      							lv_documentation_6_0,
                      							"org.eclipse.xtext.xbase.Xtype.STRING");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:2849:3: (otherlv_7= 'value' ( (lv_value_8_0= RULE_STRING ) ) )?
            int alt100=2;
            int LA100_0 = input.LA(1);

            if ( (LA100_0==78) ) {
                alt100=1;
            }
            switch (alt100) {
                case 1 :
                    // InternalStubbrLang.g:2850:4: otherlv_7= 'value' ( (lv_value_8_0= RULE_STRING ) )
                    {
                    otherlv_7=(Token)match(input,78,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getLevel1AttributeAccess().getValueKeyword_5_0());
                      			
                    }
                    // InternalStubbrLang.g:2854:4: ( (lv_value_8_0= RULE_STRING ) )
                    // InternalStubbrLang.g:2855:5: (lv_value_8_0= RULE_STRING )
                    {
                    // InternalStubbrLang.g:2855:5: (lv_value_8_0= RULE_STRING )
                    // InternalStubbrLang.g:2856:6: lv_value_8_0= RULE_STRING
                    {
                    lv_value_8_0=(Token)match(input,RULE_STRING,FOLLOW_38); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_value_8_0, grammarAccess.getLevel1AttributeAccess().getValueSTRINGTerminalRuleCall_5_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getLevel1AttributeRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"value",
                      							lv_value_8_0,
                      							"org.eclipse.xtext.xbase.Xtype.STRING");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:2873:3: ( (lv_attributes_9_0= ruleLevel1Attribute ) )*
            loop101:
            do {
                int alt101=2;
                int LA101_0 = input.LA(1);

                if ( (LA101_0==71) ) {
                    alt101=1;
                }


                switch (alt101) {
            	case 1 :
            	    // InternalStubbrLang.g:2874:4: (lv_attributes_9_0= ruleLevel1Attribute )
            	    {
            	    // InternalStubbrLang.g:2874:4: (lv_attributes_9_0= ruleLevel1Attribute )
            	    // InternalStubbrLang.g:2875:5: lv_attributes_9_0= ruleLevel1Attribute
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getLevel1AttributeAccess().getAttributesLevel1AttributeParserRuleCall_6_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_38);
            	    lv_attributes_9_0=ruleLevel1Attribute();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getLevel1AttributeRule());
            	      					}
            	      					add(
            	      						current,
            	      						"attributes",
            	      						lv_attributes_9_0,
            	      						"com.laegler.stubbr.lang.StubbrLang.Level1Attribute");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop101;
                }
            } while (true);

            otherlv_10=(Token)match(input,26,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_10, grammarAccess.getLevel1AttributeAccess().getRightCurlyBracketKeyword_7());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLevel1Attribute"


    // $ANTLR start "entryRuleChapterBusinessProcesses"
    // InternalStubbrLang.g:2900:1: entryRuleChapterBusinessProcesses returns [EObject current=null] : iv_ruleChapterBusinessProcesses= ruleChapterBusinessProcesses EOF ;
    public final EObject entryRuleChapterBusinessProcesses() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleChapterBusinessProcesses = null;


        try {
            // InternalStubbrLang.g:2900:65: (iv_ruleChapterBusinessProcesses= ruleChapterBusinessProcesses EOF )
            // InternalStubbrLang.g:2901:2: iv_ruleChapterBusinessProcesses= ruleChapterBusinessProcesses EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getChapterBusinessProcessesRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleChapterBusinessProcesses=ruleChapterBusinessProcesses();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleChapterBusinessProcesses; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleChapterBusinessProcesses"


    // $ANTLR start "ruleChapterBusinessProcesses"
    // InternalStubbrLang.g:2907:1: ruleChapterBusinessProcesses returns [EObject current=null] : (otherlv_0= 'business' otherlv_1= '{' ( (lv_processes_2_0= ruleBusinessProcess ) )* otherlv_3= '}' ) ;
    public final EObject ruleChapterBusinessProcesses() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_processes_2_0 = null;



        	enterRule();

        try {
            // InternalStubbrLang.g:2913:2: ( (otherlv_0= 'business' otherlv_1= '{' ( (lv_processes_2_0= ruleBusinessProcess ) )* otherlv_3= '}' ) )
            // InternalStubbrLang.g:2914:2: (otherlv_0= 'business' otherlv_1= '{' ( (lv_processes_2_0= ruleBusinessProcess ) )* otherlv_3= '}' )
            {
            // InternalStubbrLang.g:2914:2: (otherlv_0= 'business' otherlv_1= '{' ( (lv_processes_2_0= ruleBusinessProcess ) )* otherlv_3= '}' )
            // InternalStubbrLang.g:2915:3: otherlv_0= 'business' otherlv_1= '{' ( (lv_processes_2_0= ruleBusinessProcess ) )* otherlv_3= '}'
            {
            otherlv_0=(Token)match(input,79,FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getChapterBusinessProcessesAccess().getBusinessKeyword_0());
              		
            }
            otherlv_1=(Token)match(input,16,FOLLOW_95); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getChapterBusinessProcessesAccess().getLeftCurlyBracketKeyword_1());
              		
            }
            // InternalStubbrLang.g:2923:3: ( (lv_processes_2_0= ruleBusinessProcess ) )*
            loop102:
            do {
                int alt102=2;
                int LA102_0 = input.LA(1);

                if ( (LA102_0==80) ) {
                    alt102=1;
                }


                switch (alt102) {
            	case 1 :
            	    // InternalStubbrLang.g:2924:4: (lv_processes_2_0= ruleBusinessProcess )
            	    {
            	    // InternalStubbrLang.g:2924:4: (lv_processes_2_0= ruleBusinessProcess )
            	    // InternalStubbrLang.g:2925:5: lv_processes_2_0= ruleBusinessProcess
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getChapterBusinessProcessesAccess().getProcessesBusinessProcessParserRuleCall_2_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_95);
            	    lv_processes_2_0=ruleBusinessProcess();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getChapterBusinessProcessesRule());
            	      					}
            	      					add(
            	      						current,
            	      						"processes",
            	      						lv_processes_2_0,
            	      						"com.laegler.stubbr.lang.StubbrLang.BusinessProcess");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop102;
                }
            } while (true);

            otherlv_3=(Token)match(input,26,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getChapterBusinessProcessesAccess().getRightCurlyBracketKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleChapterBusinessProcesses"


    // $ANTLR start "entryRuleBusinessProcess"
    // InternalStubbrLang.g:2950:1: entryRuleBusinessProcess returns [EObject current=null] : iv_ruleBusinessProcess= ruleBusinessProcess EOF ;
    public final EObject entryRuleBusinessProcess() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBusinessProcess = null;


        try {
            // InternalStubbrLang.g:2950:56: (iv_ruleBusinessProcess= ruleBusinessProcess EOF )
            // InternalStubbrLang.g:2951:2: iv_ruleBusinessProcess= ruleBusinessProcess EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBusinessProcessRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBusinessProcess=ruleBusinessProcess();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBusinessProcess; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBusinessProcess"


    // $ANTLR start "ruleBusinessProcess"
    // InternalStubbrLang.g:2957:1: ruleBusinessProcess returns [EObject current=null] : (otherlv_0= 'process' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )? ( ( (lv_pools_7_0= rulePool ) )+ | ( (lv_flowNodes_8_0= ruleFlowNode ) )+ ) otherlv_9= '}' ) ;
    public final EObject ruleBusinessProcess() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token lv_label_4_0=null;
        Token otherlv_5=null;
        Token lv_documentation_6_0=null;
        Token otherlv_9=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject lv_pools_7_0 = null;

        EObject lv_flowNodes_8_0 = null;



        	enterRule();

        try {
            // InternalStubbrLang.g:2963:2: ( (otherlv_0= 'process' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )? ( ( (lv_pools_7_0= rulePool ) )+ | ( (lv_flowNodes_8_0= ruleFlowNode ) )+ ) otherlv_9= '}' ) )
            // InternalStubbrLang.g:2964:2: (otherlv_0= 'process' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )? ( ( (lv_pools_7_0= rulePool ) )+ | ( (lv_flowNodes_8_0= ruleFlowNode ) )+ ) otherlv_9= '}' )
            {
            // InternalStubbrLang.g:2964:2: (otherlv_0= 'process' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )? ( ( (lv_pools_7_0= rulePool ) )+ | ( (lv_flowNodes_8_0= ruleFlowNode ) )+ ) otherlv_9= '}' )
            // InternalStubbrLang.g:2965:3: otherlv_0= 'process' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )? ( ( (lv_pools_7_0= rulePool ) )+ | ( (lv_flowNodes_8_0= ruleFlowNode ) )+ ) otherlv_9= '}'
            {
            otherlv_0=(Token)match(input,80,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getBusinessProcessAccess().getProcessKeyword_0());
              		
            }
            // InternalStubbrLang.g:2969:3: ( (lv_name_1_0= ruleQualifiedName ) )
            // InternalStubbrLang.g:2970:4: (lv_name_1_0= ruleQualifiedName )
            {
            // InternalStubbrLang.g:2970:4: (lv_name_1_0= ruleQualifiedName )
            // InternalStubbrLang.g:2971:5: lv_name_1_0= ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getBusinessProcessAccess().getNameQualifiedNameParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_6);
            lv_name_1_0=ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getBusinessProcessRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"org.eclipse.xtext.xbase.Xbase.QualifiedName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,16,FOLLOW_96); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getBusinessProcessAccess().getLeftCurlyBracketKeyword_2());
              		
            }
            // InternalStubbrLang.g:2992:3: (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )?
            int alt103=2;
            int LA103_0 = input.LA(1);

            if ( (LA103_0==17) ) {
                alt103=1;
            }
            switch (alt103) {
                case 1 :
                    // InternalStubbrLang.g:2993:4: otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) )
                    {
                    otherlv_3=(Token)match(input,17,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getBusinessProcessAccess().getLabelKeyword_3_0());
                      			
                    }
                    // InternalStubbrLang.g:2997:4: ( (lv_label_4_0= RULE_STRING ) )
                    // InternalStubbrLang.g:2998:5: (lv_label_4_0= RULE_STRING )
                    {
                    // InternalStubbrLang.g:2998:5: (lv_label_4_0= RULE_STRING )
                    // InternalStubbrLang.g:2999:6: lv_label_4_0= RULE_STRING
                    {
                    lv_label_4_0=(Token)match(input,RULE_STRING,FOLLOW_96); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_label_4_0, grammarAccess.getBusinessProcessAccess().getLabelSTRINGTerminalRuleCall_3_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getBusinessProcessRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"label",
                      							lv_label_4_0,
                      							"org.eclipse.xtext.xbase.Xtype.STRING");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:3016:3: (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )?
            int alt104=2;
            int LA104_0 = input.LA(1);

            if ( (LA104_0==18) ) {
                alt104=1;
            }
            switch (alt104) {
                case 1 :
                    // InternalStubbrLang.g:3017:4: otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) )
                    {
                    otherlv_5=(Token)match(input,18,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getBusinessProcessAccess().getDocumentationKeyword_4_0());
                      			
                    }
                    // InternalStubbrLang.g:3021:4: ( (lv_documentation_6_0= RULE_STRING ) )
                    // InternalStubbrLang.g:3022:5: (lv_documentation_6_0= RULE_STRING )
                    {
                    // InternalStubbrLang.g:3022:5: (lv_documentation_6_0= RULE_STRING )
                    // InternalStubbrLang.g:3023:6: lv_documentation_6_0= RULE_STRING
                    {
                    lv_documentation_6_0=(Token)match(input,RULE_STRING,FOLLOW_96); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_documentation_6_0, grammarAccess.getBusinessProcessAccess().getDocumentationSTRINGTerminalRuleCall_4_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getBusinessProcessRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"documentation",
                      							lv_documentation_6_0,
                      							"org.eclipse.xtext.xbase.Xtype.STRING");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:3040:3: ( ( (lv_pools_7_0= rulePool ) )+ | ( (lv_flowNodes_8_0= ruleFlowNode ) )+ )
            int alt107=2;
            int LA107_0 = input.LA(1);

            if ( (LA107_0==81) ) {
                alt107=1;
            }
            else if ( (LA107_0==84||LA107_0==87||(LA107_0>=89 && LA107_0<=90)||(LA107_0>=249 && LA107_0<=263)||(LA107_0>=277 && LA107_0<=285)) ) {
                alt107=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 107, 0, input);

                throw nvae;
            }
            switch (alt107) {
                case 1 :
                    // InternalStubbrLang.g:3041:4: ( (lv_pools_7_0= rulePool ) )+
                    {
                    // InternalStubbrLang.g:3041:4: ( (lv_pools_7_0= rulePool ) )+
                    int cnt105=0;
                    loop105:
                    do {
                        int alt105=2;
                        int LA105_0 = input.LA(1);

                        if ( (LA105_0==81) ) {
                            alt105=1;
                        }


                        switch (alt105) {
                    	case 1 :
                    	    // InternalStubbrLang.g:3042:5: (lv_pools_7_0= rulePool )
                    	    {
                    	    // InternalStubbrLang.g:3042:5: (lv_pools_7_0= rulePool )
                    	    // InternalStubbrLang.g:3043:6: lv_pools_7_0= rulePool
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getBusinessProcessAccess().getPoolsPoolParserRuleCall_5_0_0());
                    	      					
                    	    }
                    	    pushFollow(FOLLOW_97);
                    	    lv_pools_7_0=rulePool();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getBusinessProcessRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"pools",
                    	      							lv_pools_7_0,
                    	      							"com.laegler.stubbr.lang.StubbrLang.Pool");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt105 >= 1 ) break loop105;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(105, input);
                                throw eee;
                        }
                        cnt105++;
                    } while (true);


                    }
                    break;
                case 2 :
                    // InternalStubbrLang.g:3061:4: ( (lv_flowNodes_8_0= ruleFlowNode ) )+
                    {
                    // InternalStubbrLang.g:3061:4: ( (lv_flowNodes_8_0= ruleFlowNode ) )+
                    int cnt106=0;
                    loop106:
                    do {
                        int alt106=2;
                        int LA106_0 = input.LA(1);

                        if ( (LA106_0==84||LA106_0==87||(LA106_0>=89 && LA106_0<=90)||(LA106_0>=249 && LA106_0<=263)||(LA106_0>=277 && LA106_0<=285)) ) {
                            alt106=1;
                        }


                        switch (alt106) {
                    	case 1 :
                    	    // InternalStubbrLang.g:3062:5: (lv_flowNodes_8_0= ruleFlowNode )
                    	    {
                    	    // InternalStubbrLang.g:3062:5: (lv_flowNodes_8_0= ruleFlowNode )
                    	    // InternalStubbrLang.g:3063:6: lv_flowNodes_8_0= ruleFlowNode
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getBusinessProcessAccess().getFlowNodesFlowNodeParserRuleCall_5_1_0());
                    	      					
                    	    }
                    	    pushFollow(FOLLOW_98);
                    	    lv_flowNodes_8_0=ruleFlowNode();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getBusinessProcessRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"flowNodes",
                    	      							lv_flowNodes_8_0,
                    	      							"com.laegler.stubbr.lang.StubbrLang.FlowNode");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt106 >= 1 ) break loop106;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(106, input);
                                throw eee;
                        }
                        cnt106++;
                    } while (true);


                    }
                    break;

            }

            otherlv_9=(Token)match(input,26,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_9, grammarAccess.getBusinessProcessAccess().getRightCurlyBracketKeyword_6());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBusinessProcess"


    // $ANTLR start "entryRulePool"
    // InternalStubbrLang.g:3089:1: entryRulePool returns [EObject current=null] : iv_rulePool= rulePool EOF ;
    public final EObject entryRulePool() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePool = null;


        try {
            // InternalStubbrLang.g:3089:45: (iv_rulePool= rulePool EOF )
            // InternalStubbrLang.g:3090:2: iv_rulePool= rulePool EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPoolRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePool=rulePool();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePool; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePool"


    // $ANTLR start "rulePool"
    // InternalStubbrLang.g:3096:1: rulePool returns [EObject current=null] : ( () otherlv_1= 'pool' ( (lv_name_2_0= ruleQualifiedName ) ) otherlv_3= '{' (otherlv_4= 'label' ( (lv_label_5_0= RULE_STRING ) ) )? (otherlv_6= 'documentation' ( (lv_documentation_7_0= RULE_STRING ) ) )? (otherlv_8= 'actor' ( ( ruleQualifiedName ) ) )? ( (lv_initializing_10_0= 'initializing' ) )? ( (lv_flowNodes_11_0= ruleFlowNode ) )* otherlv_12= '}' ) ;
    public final EObject rulePool() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token lv_label_5_0=null;
        Token otherlv_6=null;
        Token lv_documentation_7_0=null;
        Token otherlv_8=null;
        Token lv_initializing_10_0=null;
        Token otherlv_12=null;
        AntlrDatatypeRuleToken lv_name_2_0 = null;

        EObject lv_flowNodes_11_0 = null;



        	enterRule();

        try {
            // InternalStubbrLang.g:3102:2: ( ( () otherlv_1= 'pool' ( (lv_name_2_0= ruleQualifiedName ) ) otherlv_3= '{' (otherlv_4= 'label' ( (lv_label_5_0= RULE_STRING ) ) )? (otherlv_6= 'documentation' ( (lv_documentation_7_0= RULE_STRING ) ) )? (otherlv_8= 'actor' ( ( ruleQualifiedName ) ) )? ( (lv_initializing_10_0= 'initializing' ) )? ( (lv_flowNodes_11_0= ruleFlowNode ) )* otherlv_12= '}' ) )
            // InternalStubbrLang.g:3103:2: ( () otherlv_1= 'pool' ( (lv_name_2_0= ruleQualifiedName ) ) otherlv_3= '{' (otherlv_4= 'label' ( (lv_label_5_0= RULE_STRING ) ) )? (otherlv_6= 'documentation' ( (lv_documentation_7_0= RULE_STRING ) ) )? (otherlv_8= 'actor' ( ( ruleQualifiedName ) ) )? ( (lv_initializing_10_0= 'initializing' ) )? ( (lv_flowNodes_11_0= ruleFlowNode ) )* otherlv_12= '}' )
            {
            // InternalStubbrLang.g:3103:2: ( () otherlv_1= 'pool' ( (lv_name_2_0= ruleQualifiedName ) ) otherlv_3= '{' (otherlv_4= 'label' ( (lv_label_5_0= RULE_STRING ) ) )? (otherlv_6= 'documentation' ( (lv_documentation_7_0= RULE_STRING ) ) )? (otherlv_8= 'actor' ( ( ruleQualifiedName ) ) )? ( (lv_initializing_10_0= 'initializing' ) )? ( (lv_flowNodes_11_0= ruleFlowNode ) )* otherlv_12= '}' )
            // InternalStubbrLang.g:3104:3: () otherlv_1= 'pool' ( (lv_name_2_0= ruleQualifiedName ) ) otherlv_3= '{' (otherlv_4= 'label' ( (lv_label_5_0= RULE_STRING ) ) )? (otherlv_6= 'documentation' ( (lv_documentation_7_0= RULE_STRING ) ) )? (otherlv_8= 'actor' ( ( ruleQualifiedName ) ) )? ( (lv_initializing_10_0= 'initializing' ) )? ( (lv_flowNodes_11_0= ruleFlowNode ) )* otherlv_12= '}'
            {
            // InternalStubbrLang.g:3104:3: ()
            // InternalStubbrLang.g:3105:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getPoolAccess().getPooolAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,81,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getPoolAccess().getPoolKeyword_1());
              		
            }
            // InternalStubbrLang.g:3115:3: ( (lv_name_2_0= ruleQualifiedName ) )
            // InternalStubbrLang.g:3116:4: (lv_name_2_0= ruleQualifiedName )
            {
            // InternalStubbrLang.g:3116:4: (lv_name_2_0= ruleQualifiedName )
            // InternalStubbrLang.g:3117:5: lv_name_2_0= ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getPoolAccess().getNameQualifiedNameParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_6);
            lv_name_2_0=ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getPoolRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_2_0,
              						"org.eclipse.xtext.xbase.Xbase.QualifiedName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,16,FOLLOW_99); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getPoolAccess().getLeftCurlyBracketKeyword_3());
              		
            }
            // InternalStubbrLang.g:3138:3: (otherlv_4= 'label' ( (lv_label_5_0= RULE_STRING ) ) )?
            int alt108=2;
            int LA108_0 = input.LA(1);

            if ( (LA108_0==17) ) {
                alt108=1;
            }
            switch (alt108) {
                case 1 :
                    // InternalStubbrLang.g:3139:4: otherlv_4= 'label' ( (lv_label_5_0= RULE_STRING ) )
                    {
                    otherlv_4=(Token)match(input,17,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getPoolAccess().getLabelKeyword_4_0());
                      			
                    }
                    // InternalStubbrLang.g:3143:4: ( (lv_label_5_0= RULE_STRING ) )
                    // InternalStubbrLang.g:3144:5: (lv_label_5_0= RULE_STRING )
                    {
                    // InternalStubbrLang.g:3144:5: (lv_label_5_0= RULE_STRING )
                    // InternalStubbrLang.g:3145:6: lv_label_5_0= RULE_STRING
                    {
                    lv_label_5_0=(Token)match(input,RULE_STRING,FOLLOW_99); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_label_5_0, grammarAccess.getPoolAccess().getLabelSTRINGTerminalRuleCall_4_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getPoolRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"label",
                      							lv_label_5_0,
                      							"org.eclipse.xtext.xbase.Xtype.STRING");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:3162:3: (otherlv_6= 'documentation' ( (lv_documentation_7_0= RULE_STRING ) ) )?
            int alt109=2;
            int LA109_0 = input.LA(1);

            if ( (LA109_0==18) ) {
                alt109=1;
            }
            switch (alt109) {
                case 1 :
                    // InternalStubbrLang.g:3163:4: otherlv_6= 'documentation' ( (lv_documentation_7_0= RULE_STRING ) )
                    {
                    otherlv_6=(Token)match(input,18,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getPoolAccess().getDocumentationKeyword_5_0());
                      			
                    }
                    // InternalStubbrLang.g:3167:4: ( (lv_documentation_7_0= RULE_STRING ) )
                    // InternalStubbrLang.g:3168:5: (lv_documentation_7_0= RULE_STRING )
                    {
                    // InternalStubbrLang.g:3168:5: (lv_documentation_7_0= RULE_STRING )
                    // InternalStubbrLang.g:3169:6: lv_documentation_7_0= RULE_STRING
                    {
                    lv_documentation_7_0=(Token)match(input,RULE_STRING,FOLLOW_99); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_documentation_7_0, grammarAccess.getPoolAccess().getDocumentationSTRINGTerminalRuleCall_5_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getPoolRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"documentation",
                      							lv_documentation_7_0,
                      							"org.eclipse.xtext.xbase.Xtype.STRING");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:3186:3: (otherlv_8= 'actor' ( ( ruleQualifiedName ) ) )?
            int alt110=2;
            int LA110_0 = input.LA(1);

            if ( (LA110_0==82) ) {
                alt110=1;
            }
            switch (alt110) {
                case 1 :
                    // InternalStubbrLang.g:3187:4: otherlv_8= 'actor' ( ( ruleQualifiedName ) )
                    {
                    otherlv_8=(Token)match(input,82,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_8, grammarAccess.getPoolAccess().getActorKeyword_6_0());
                      			
                    }
                    // InternalStubbrLang.g:3191:4: ( ( ruleQualifiedName ) )
                    // InternalStubbrLang.g:3192:5: ( ruleQualifiedName )
                    {
                    // InternalStubbrLang.g:3192:5: ( ruleQualifiedName )
                    // InternalStubbrLang.g:3193:6: ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getPoolRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPoolAccess().getActorStakeholderCrossReference_6_1_0());
                      					
                    }
                    pushFollow(FOLLOW_100);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:3208:3: ( (lv_initializing_10_0= 'initializing' ) )?
            int alt111=2;
            int LA111_0 = input.LA(1);

            if ( (LA111_0==83) ) {
                alt111=1;
            }
            switch (alt111) {
                case 1 :
                    // InternalStubbrLang.g:3209:4: (lv_initializing_10_0= 'initializing' )
                    {
                    // InternalStubbrLang.g:3209:4: (lv_initializing_10_0= 'initializing' )
                    // InternalStubbrLang.g:3210:5: lv_initializing_10_0= 'initializing'
                    {
                    lv_initializing_10_0=(Token)match(input,83,FOLLOW_98); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_initializing_10_0, grammarAccess.getPoolAccess().getInitializingInitializingKeyword_7_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getPoolRule());
                      					}
                      					setWithLastConsumed(current, "initializing", true, "initializing");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:3222:3: ( (lv_flowNodes_11_0= ruleFlowNode ) )*
            loop112:
            do {
                int alt112=2;
                int LA112_0 = input.LA(1);

                if ( (LA112_0==84||LA112_0==87||(LA112_0>=89 && LA112_0<=90)||(LA112_0>=249 && LA112_0<=263)||(LA112_0>=277 && LA112_0<=285)) ) {
                    alt112=1;
                }


                switch (alt112) {
            	case 1 :
            	    // InternalStubbrLang.g:3223:4: (lv_flowNodes_11_0= ruleFlowNode )
            	    {
            	    // InternalStubbrLang.g:3223:4: (lv_flowNodes_11_0= ruleFlowNode )
            	    // InternalStubbrLang.g:3224:5: lv_flowNodes_11_0= ruleFlowNode
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getPoolAccess().getFlowNodesFlowNodeParserRuleCall_8_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_98);
            	    lv_flowNodes_11_0=ruleFlowNode();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getPoolRule());
            	      					}
            	      					add(
            	      						current,
            	      						"flowNodes",
            	      						lv_flowNodes_11_0,
            	      						"com.laegler.stubbr.lang.StubbrLang.FlowNode");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop112;
                }
            } while (true);

            otherlv_12=(Token)match(input,26,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_12, grammarAccess.getPoolAccess().getRightCurlyBracketKeyword_9());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePool"


    // $ANTLR start "entryRuleFlowNode"
    // InternalStubbrLang.g:3249:1: entryRuleFlowNode returns [EObject current=null] : iv_ruleFlowNode= ruleFlowNode EOF ;
    public final EObject entryRuleFlowNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFlowNode = null;


        try {
            // InternalStubbrLang.g:3249:49: (iv_ruleFlowNode= ruleFlowNode EOF )
            // InternalStubbrLang.g:3250:2: iv_ruleFlowNode= ruleFlowNode EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFlowNodeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFlowNode=ruleFlowNode();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFlowNode; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFlowNode"


    // $ANTLR start "ruleFlowNode"
    // InternalStubbrLang.g:3256:1: ruleFlowNode returns [EObject current=null] : (this_Activity_0= ruleActivity | this_Gateway_1= ruleGateway | this_Event_2= ruleEvent | this_Lane_3= ruleLane ) ;
    public final EObject ruleFlowNode() throws RecognitionException {
        EObject current = null;

        EObject this_Activity_0 = null;

        EObject this_Gateway_1 = null;

        EObject this_Event_2 = null;

        EObject this_Lane_3 = null;



        	enterRule();

        try {
            // InternalStubbrLang.g:3262:2: ( (this_Activity_0= ruleActivity | this_Gateway_1= ruleGateway | this_Event_2= ruleEvent | this_Lane_3= ruleLane ) )
            // InternalStubbrLang.g:3263:2: (this_Activity_0= ruleActivity | this_Gateway_1= ruleGateway | this_Event_2= ruleEvent | this_Lane_3= ruleLane )
            {
            // InternalStubbrLang.g:3263:2: (this_Activity_0= ruleActivity | this_Gateway_1= ruleGateway | this_Event_2= ruleEvent | this_Lane_3= ruleLane )
            int alt113=4;
            switch ( input.LA(1) ) {
            case 87:
            case 89:
            case 249:
            case 250:
            case 251:
            case 252:
            case 253:
            case 254:
            case 255:
            case 256:
                {
                alt113=1;
                }
                break;
            case 90:
            case 277:
            case 278:
            case 279:
            case 280:
            case 281:
            case 282:
            case 283:
            case 284:
            case 285:
                {
                alt113=2;
                }
                break;
            case 257:
            case 258:
            case 259:
            case 260:
            case 261:
            case 262:
            case 263:
                {
                alt113=3;
                }
                break;
            case 84:
                {
                alt113=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 113, 0, input);

                throw nvae;
            }

            switch (alt113) {
                case 1 :
                    // InternalStubbrLang.g:3264:3: this_Activity_0= ruleActivity
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getFlowNodeAccess().getActivityParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Activity_0=ruleActivity();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Activity_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalStubbrLang.g:3273:3: this_Gateway_1= ruleGateway
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getFlowNodeAccess().getGatewayParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Gateway_1=ruleGateway();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Gateway_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalStubbrLang.g:3282:3: this_Event_2= ruleEvent
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getFlowNodeAccess().getEventParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Event_2=ruleEvent();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Event_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalStubbrLang.g:3291:3: this_Lane_3= ruleLane
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getFlowNodeAccess().getLaneParserRuleCall_3());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Lane_3=ruleLane();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Lane_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFlowNode"


    // $ANTLR start "entryRuleLane"
    // InternalStubbrLang.g:3303:1: entryRuleLane returns [EObject current=null] : iv_ruleLane= ruleLane EOF ;
    public final EObject entryRuleLane() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLane = null;


        try {
            // InternalStubbrLang.g:3303:45: (iv_ruleLane= ruleLane EOF )
            // InternalStubbrLang.g:3304:2: iv_ruleLane= ruleLane EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLaneRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLane=ruleLane();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLane; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLane"


    // $ANTLR start "ruleLane"
    // InternalStubbrLang.g:3310:1: ruleLane returns [EObject current=null] : (otherlv_0= 'lane' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )? (otherlv_7= 'actor' ( ( ruleQualifiedName ) ) )? ( (lv_initializing_9_0= 'initializing' ) )? ( (lv_flowNodes_10_0= ruleFlowNode ) )+ otherlv_11= '}' ) ;
    public final EObject ruleLane() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token lv_label_4_0=null;
        Token otherlv_5=null;
        Token lv_documentation_6_0=null;
        Token otherlv_7=null;
        Token lv_initializing_9_0=null;
        Token otherlv_11=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject lv_flowNodes_10_0 = null;



        	enterRule();

        try {
            // InternalStubbrLang.g:3316:2: ( (otherlv_0= 'lane' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )? (otherlv_7= 'actor' ( ( ruleQualifiedName ) ) )? ( (lv_initializing_9_0= 'initializing' ) )? ( (lv_flowNodes_10_0= ruleFlowNode ) )+ otherlv_11= '}' ) )
            // InternalStubbrLang.g:3317:2: (otherlv_0= 'lane' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )? (otherlv_7= 'actor' ( ( ruleQualifiedName ) ) )? ( (lv_initializing_9_0= 'initializing' ) )? ( (lv_flowNodes_10_0= ruleFlowNode ) )+ otherlv_11= '}' )
            {
            // InternalStubbrLang.g:3317:2: (otherlv_0= 'lane' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )? (otherlv_7= 'actor' ( ( ruleQualifiedName ) ) )? ( (lv_initializing_9_0= 'initializing' ) )? ( (lv_flowNodes_10_0= ruleFlowNode ) )+ otherlv_11= '}' )
            // InternalStubbrLang.g:3318:3: otherlv_0= 'lane' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )? (otherlv_7= 'actor' ( ( ruleQualifiedName ) ) )? ( (lv_initializing_9_0= 'initializing' ) )? ( (lv_flowNodes_10_0= ruleFlowNode ) )+ otherlv_11= '}'
            {
            otherlv_0=(Token)match(input,84,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getLaneAccess().getLaneKeyword_0());
              		
            }
            // InternalStubbrLang.g:3322:3: ( (lv_name_1_0= ruleQualifiedName ) )
            // InternalStubbrLang.g:3323:4: (lv_name_1_0= ruleQualifiedName )
            {
            // InternalStubbrLang.g:3323:4: (lv_name_1_0= ruleQualifiedName )
            // InternalStubbrLang.g:3324:5: lv_name_1_0= ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getLaneAccess().getNameQualifiedNameParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_6);
            lv_name_1_0=ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getLaneRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"org.eclipse.xtext.xbase.Xbase.QualifiedName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,16,FOLLOW_101); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getLaneAccess().getLeftCurlyBracketKeyword_2());
              		
            }
            // InternalStubbrLang.g:3345:3: (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )?
            int alt114=2;
            int LA114_0 = input.LA(1);

            if ( (LA114_0==17) ) {
                alt114=1;
            }
            switch (alt114) {
                case 1 :
                    // InternalStubbrLang.g:3346:4: otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) )
                    {
                    otherlv_3=(Token)match(input,17,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getLaneAccess().getLabelKeyword_3_0());
                      			
                    }
                    // InternalStubbrLang.g:3350:4: ( (lv_label_4_0= RULE_STRING ) )
                    // InternalStubbrLang.g:3351:5: (lv_label_4_0= RULE_STRING )
                    {
                    // InternalStubbrLang.g:3351:5: (lv_label_4_0= RULE_STRING )
                    // InternalStubbrLang.g:3352:6: lv_label_4_0= RULE_STRING
                    {
                    lv_label_4_0=(Token)match(input,RULE_STRING,FOLLOW_101); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_label_4_0, grammarAccess.getLaneAccess().getLabelSTRINGTerminalRuleCall_3_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getLaneRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"label",
                      							lv_label_4_0,
                      							"org.eclipse.xtext.xbase.Xtype.STRING");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:3369:3: (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )?
            int alt115=2;
            int LA115_0 = input.LA(1);

            if ( (LA115_0==18) ) {
                alt115=1;
            }
            switch (alt115) {
                case 1 :
                    // InternalStubbrLang.g:3370:4: otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) )
                    {
                    otherlv_5=(Token)match(input,18,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getLaneAccess().getDocumentationKeyword_4_0());
                      			
                    }
                    // InternalStubbrLang.g:3374:4: ( (lv_documentation_6_0= RULE_STRING ) )
                    // InternalStubbrLang.g:3375:5: (lv_documentation_6_0= RULE_STRING )
                    {
                    // InternalStubbrLang.g:3375:5: (lv_documentation_6_0= RULE_STRING )
                    // InternalStubbrLang.g:3376:6: lv_documentation_6_0= RULE_STRING
                    {
                    lv_documentation_6_0=(Token)match(input,RULE_STRING,FOLLOW_101); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_documentation_6_0, grammarAccess.getLaneAccess().getDocumentationSTRINGTerminalRuleCall_4_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getLaneRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"documentation",
                      							lv_documentation_6_0,
                      							"org.eclipse.xtext.xbase.Xtype.STRING");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:3393:3: (otherlv_7= 'actor' ( ( ruleQualifiedName ) ) )?
            int alt116=2;
            int LA116_0 = input.LA(1);

            if ( (LA116_0==82) ) {
                alt116=1;
            }
            switch (alt116) {
                case 1 :
                    // InternalStubbrLang.g:3394:4: otherlv_7= 'actor' ( ( ruleQualifiedName ) )
                    {
                    otherlv_7=(Token)match(input,82,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getLaneAccess().getActorKeyword_5_0());
                      			
                    }
                    // InternalStubbrLang.g:3398:4: ( ( ruleQualifiedName ) )
                    // InternalStubbrLang.g:3399:5: ( ruleQualifiedName )
                    {
                    // InternalStubbrLang.g:3399:5: ( ruleQualifiedName )
                    // InternalStubbrLang.g:3400:6: ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getLaneRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getLaneAccess().getActorStakeholderCrossReference_5_1_0());
                      					
                    }
                    pushFollow(FOLLOW_102);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:3415:3: ( (lv_initializing_9_0= 'initializing' ) )?
            int alt117=2;
            int LA117_0 = input.LA(1);

            if ( (LA117_0==83) ) {
                alt117=1;
            }
            switch (alt117) {
                case 1 :
                    // InternalStubbrLang.g:3416:4: (lv_initializing_9_0= 'initializing' )
                    {
                    // InternalStubbrLang.g:3416:4: (lv_initializing_9_0= 'initializing' )
                    // InternalStubbrLang.g:3417:5: lv_initializing_9_0= 'initializing'
                    {
                    lv_initializing_9_0=(Token)match(input,83,FOLLOW_96); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_initializing_9_0, grammarAccess.getLaneAccess().getInitializingInitializingKeyword_6_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getLaneRule());
                      					}
                      					setWithLastConsumed(current, "initializing", true, "initializing");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:3429:3: ( (lv_flowNodes_10_0= ruleFlowNode ) )+
            int cnt118=0;
            loop118:
            do {
                int alt118=2;
                int LA118_0 = input.LA(1);

                if ( (LA118_0==84||LA118_0==87||(LA118_0>=89 && LA118_0<=90)||(LA118_0>=249 && LA118_0<=263)||(LA118_0>=277 && LA118_0<=285)) ) {
                    alt118=1;
                }


                switch (alt118) {
            	case 1 :
            	    // InternalStubbrLang.g:3430:4: (lv_flowNodes_10_0= ruleFlowNode )
            	    {
            	    // InternalStubbrLang.g:3430:4: (lv_flowNodes_10_0= ruleFlowNode )
            	    // InternalStubbrLang.g:3431:5: lv_flowNodes_10_0= ruleFlowNode
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getLaneAccess().getFlowNodesFlowNodeParserRuleCall_7_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_98);
            	    lv_flowNodes_10_0=ruleFlowNode();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getLaneRule());
            	      					}
            	      					add(
            	      						current,
            	      						"flowNodes",
            	      						lv_flowNodes_10_0,
            	      						"com.laegler.stubbr.lang.StubbrLang.FlowNode");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt118 >= 1 ) break loop118;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(118, input);
                        throw eee;
                }
                cnt118++;
            } while (true);

            otherlv_11=(Token)match(input,26,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_11, grammarAccess.getLaneAccess().getRightCurlyBracketKeyword_8());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLane"


    // $ANTLR start "entryRuleEvent"
    // InternalStubbrLang.g:3456:1: entryRuleEvent returns [EObject current=null] : iv_ruleEvent= ruleEvent EOF ;
    public final EObject entryRuleEvent() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEvent = null;


        try {
            // InternalStubbrLang.g:3456:46: (iv_ruleEvent= ruleEvent EOF )
            // InternalStubbrLang.g:3457:2: iv_ruleEvent= ruleEvent EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEventRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEvent=ruleEvent();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEvent; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEvent"


    // $ANTLR start "ruleEvent"
    // InternalStubbrLang.g:3463:1: ruleEvent returns [EObject current=null] : ( ( (lv_eventType_0_0= ruleEventType ) ) (otherlv_1= 'type' ( (lv_eventDefinitionType_2_0= ruleEventDefinitionType ) ) )? ( (lv_nonInterrupting_3_0= 'non-interrupting' ) )? ( (lv_name_4_0= RULE_ID ) )? ( (lv_label_5_0= RULE_STRING ) )? (otherlv_6= 'view' ( ( ruleQualifiedName ) ) )? ( (lv_attachments_8_0= ruleAttachment ) )* ) ;
    public final EObject ruleEvent() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_nonInterrupting_3_0=null;
        Token lv_name_4_0=null;
        Token lv_label_5_0=null;
        Token otherlv_6=null;
        Enumerator lv_eventType_0_0 = null;

        Enumerator lv_eventDefinitionType_2_0 = null;

        EObject lv_attachments_8_0 = null;



        	enterRule();

        try {
            // InternalStubbrLang.g:3469:2: ( ( ( (lv_eventType_0_0= ruleEventType ) ) (otherlv_1= 'type' ( (lv_eventDefinitionType_2_0= ruleEventDefinitionType ) ) )? ( (lv_nonInterrupting_3_0= 'non-interrupting' ) )? ( (lv_name_4_0= RULE_ID ) )? ( (lv_label_5_0= RULE_STRING ) )? (otherlv_6= 'view' ( ( ruleQualifiedName ) ) )? ( (lv_attachments_8_0= ruleAttachment ) )* ) )
            // InternalStubbrLang.g:3470:2: ( ( (lv_eventType_0_0= ruleEventType ) ) (otherlv_1= 'type' ( (lv_eventDefinitionType_2_0= ruleEventDefinitionType ) ) )? ( (lv_nonInterrupting_3_0= 'non-interrupting' ) )? ( (lv_name_4_0= RULE_ID ) )? ( (lv_label_5_0= RULE_STRING ) )? (otherlv_6= 'view' ( ( ruleQualifiedName ) ) )? ( (lv_attachments_8_0= ruleAttachment ) )* )
            {
            // InternalStubbrLang.g:3470:2: ( ( (lv_eventType_0_0= ruleEventType ) ) (otherlv_1= 'type' ( (lv_eventDefinitionType_2_0= ruleEventDefinitionType ) ) )? ( (lv_nonInterrupting_3_0= 'non-interrupting' ) )? ( (lv_name_4_0= RULE_ID ) )? ( (lv_label_5_0= RULE_STRING ) )? (otherlv_6= 'view' ( ( ruleQualifiedName ) ) )? ( (lv_attachments_8_0= ruleAttachment ) )* )
            // InternalStubbrLang.g:3471:3: ( (lv_eventType_0_0= ruleEventType ) ) (otherlv_1= 'type' ( (lv_eventDefinitionType_2_0= ruleEventDefinitionType ) ) )? ( (lv_nonInterrupting_3_0= 'non-interrupting' ) )? ( (lv_name_4_0= RULE_ID ) )? ( (lv_label_5_0= RULE_STRING ) )? (otherlv_6= 'view' ( ( ruleQualifiedName ) ) )? ( (lv_attachments_8_0= ruleAttachment ) )*
            {
            // InternalStubbrLang.g:3471:3: ( (lv_eventType_0_0= ruleEventType ) )
            // InternalStubbrLang.g:3472:4: (lv_eventType_0_0= ruleEventType )
            {
            // InternalStubbrLang.g:3472:4: (lv_eventType_0_0= ruleEventType )
            // InternalStubbrLang.g:3473:5: lv_eventType_0_0= ruleEventType
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getEventAccess().getEventTypeEventTypeEnumRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_103);
            lv_eventType_0_0=ruleEventType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getEventRule());
              					}
              					set(
              						current,
              						"eventType",
              						lv_eventType_0_0,
              						"com.laegler.stubbr.lang.StubbrLang.EventType");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalStubbrLang.g:3490:3: (otherlv_1= 'type' ( (lv_eventDefinitionType_2_0= ruleEventDefinitionType ) ) )?
            int alt119=2;
            int LA119_0 = input.LA(1);

            if ( (LA119_0==67) ) {
                alt119=1;
            }
            switch (alt119) {
                case 1 :
                    // InternalStubbrLang.g:3491:4: otherlv_1= 'type' ( (lv_eventDefinitionType_2_0= ruleEventDefinitionType ) )
                    {
                    otherlv_1=(Token)match(input,67,FOLLOW_104); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getEventAccess().getTypeKeyword_1_0());
                      			
                    }
                    // InternalStubbrLang.g:3495:4: ( (lv_eventDefinitionType_2_0= ruleEventDefinitionType ) )
                    // InternalStubbrLang.g:3496:5: (lv_eventDefinitionType_2_0= ruleEventDefinitionType )
                    {
                    // InternalStubbrLang.g:3496:5: (lv_eventDefinitionType_2_0= ruleEventDefinitionType )
                    // InternalStubbrLang.g:3497:6: lv_eventDefinitionType_2_0= ruleEventDefinitionType
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getEventAccess().getEventDefinitionTypeEventDefinitionTypeEnumRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_105);
                    lv_eventDefinitionType_2_0=ruleEventDefinitionType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getEventRule());
                      						}
                      						set(
                      							current,
                      							"eventDefinitionType",
                      							lv_eventDefinitionType_2_0,
                      							"com.laegler.stubbr.lang.StubbrLang.EventDefinitionType");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:3515:3: ( (lv_nonInterrupting_3_0= 'non-interrupting' ) )?
            int alt120=2;
            int LA120_0 = input.LA(1);

            if ( (LA120_0==85) ) {
                alt120=1;
            }
            switch (alt120) {
                case 1 :
                    // InternalStubbrLang.g:3516:4: (lv_nonInterrupting_3_0= 'non-interrupting' )
                    {
                    // InternalStubbrLang.g:3516:4: (lv_nonInterrupting_3_0= 'non-interrupting' )
                    // InternalStubbrLang.g:3517:5: lv_nonInterrupting_3_0= 'non-interrupting'
                    {
                    lv_nonInterrupting_3_0=(Token)match(input,85,FOLLOW_106); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_nonInterrupting_3_0, grammarAccess.getEventAccess().getNonInterruptingNonInterruptingKeyword_2_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getEventRule());
                      					}
                      					setWithLastConsumed(current, "nonInterrupting", true, "non-interrupting");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:3529:3: ( (lv_name_4_0= RULE_ID ) )?
            int alt121=2;
            int LA121_0 = input.LA(1);

            if ( (LA121_0==RULE_ID) ) {
                alt121=1;
            }
            switch (alt121) {
                case 1 :
                    // InternalStubbrLang.g:3530:4: (lv_name_4_0= RULE_ID )
                    {
                    // InternalStubbrLang.g:3530:4: (lv_name_4_0= RULE_ID )
                    // InternalStubbrLang.g:3531:5: lv_name_4_0= RULE_ID
                    {
                    lv_name_4_0=(Token)match(input,RULE_ID,FOLLOW_107); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_name_4_0, grammarAccess.getEventAccess().getNameIDTerminalRuleCall_3_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getEventRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"name",
                      						lv_name_4_0,
                      						"org.eclipse.xtext.xbase.Xtype.ID");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:3547:3: ( (lv_label_5_0= RULE_STRING ) )?
            int alt122=2;
            int LA122_0 = input.LA(1);

            if ( (LA122_0==RULE_STRING) ) {
                alt122=1;
            }
            switch (alt122) {
                case 1 :
                    // InternalStubbrLang.g:3548:4: (lv_label_5_0= RULE_STRING )
                    {
                    // InternalStubbrLang.g:3548:4: (lv_label_5_0= RULE_STRING )
                    // InternalStubbrLang.g:3549:5: lv_label_5_0= RULE_STRING
                    {
                    lv_label_5_0=(Token)match(input,RULE_STRING,FOLLOW_108); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_label_5_0, grammarAccess.getEventAccess().getLabelSTRINGTerminalRuleCall_4_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getEventRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"label",
                      						lv_label_5_0,
                      						"org.eclipse.xtext.xbase.Xtype.STRING");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:3565:3: (otherlv_6= 'view' ( ( ruleQualifiedName ) ) )?
            int alt123=2;
            int LA123_0 = input.LA(1);

            if ( (LA123_0==86) ) {
                alt123=1;
            }
            switch (alt123) {
                case 1 :
                    // InternalStubbrLang.g:3566:4: otherlv_6= 'view' ( ( ruleQualifiedName ) )
                    {
                    otherlv_6=(Token)match(input,86,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getEventAccess().getViewKeyword_5_0());
                      			
                    }
                    // InternalStubbrLang.g:3570:4: ( ( ruleQualifiedName ) )
                    // InternalStubbrLang.g:3571:5: ( ruleQualifiedName )
                    {
                    // InternalStubbrLang.g:3571:5: ( ruleQualifiedName )
                    // InternalStubbrLang.g:3572:6: ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getEventRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getEventAccess().getDialogViewCrossReference_5_1_0());
                      					
                    }
                    pushFollow(FOLLOW_109);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:3587:3: ( (lv_attachments_8_0= ruleAttachment ) )*
            loop124:
            do {
                int alt124=2;
                int LA124_0 = input.LA(1);

                if ( (LA124_0==18||LA124_0==93||(LA124_0>=95 && LA124_0<=97)||(LA124_0>=286 && LA124_0<=288)) ) {
                    alt124=1;
                }


                switch (alt124) {
            	case 1 :
            	    // InternalStubbrLang.g:3588:4: (lv_attachments_8_0= ruleAttachment )
            	    {
            	    // InternalStubbrLang.g:3588:4: (lv_attachments_8_0= ruleAttachment )
            	    // InternalStubbrLang.g:3589:5: lv_attachments_8_0= ruleAttachment
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getEventAccess().getAttachmentsAttachmentParserRuleCall_6_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_109);
            	    lv_attachments_8_0=ruleAttachment();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getEventRule());
            	      					}
            	      					add(
            	      						current,
            	      						"attachments",
            	      						lv_attachments_8_0,
            	      						"com.laegler.stubbr.lang.StubbrLang.Attachment");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop124;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEvent"


    // $ANTLR start "entryRuleActivity"
    // InternalStubbrLang.g:3610:1: entryRuleActivity returns [EObject current=null] : iv_ruleActivity= ruleActivity EOF ;
    public final EObject entryRuleActivity() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleActivity = null;


        try {
            // InternalStubbrLang.g:3610:49: (iv_ruleActivity= ruleActivity EOF )
            // InternalStubbrLang.g:3611:2: iv_ruleActivity= ruleActivity EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getActivityRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleActivity=ruleActivity();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleActivity; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleActivity"


    // $ANTLR start "ruleActivity"
    // InternalStubbrLang.g:3617:1: ruleActivity returns [EObject current=null] : (this_Task_0= ruleTask | this_CallActivity_1= ruleCallActivity | this_SubProcess_2= ruleSubProcess ) ;
    public final EObject ruleActivity() throws RecognitionException {
        EObject current = null;

        EObject this_Task_0 = null;

        EObject this_CallActivity_1 = null;

        EObject this_SubProcess_2 = null;



        	enterRule();

        try {
            // InternalStubbrLang.g:3623:2: ( (this_Task_0= ruleTask | this_CallActivity_1= ruleCallActivity | this_SubProcess_2= ruleSubProcess ) )
            // InternalStubbrLang.g:3624:2: (this_Task_0= ruleTask | this_CallActivity_1= ruleCallActivity | this_SubProcess_2= ruleSubProcess )
            {
            // InternalStubbrLang.g:3624:2: (this_Task_0= ruleTask | this_CallActivity_1= ruleCallActivity | this_SubProcess_2= ruleSubProcess )
            int alt125=3;
            switch ( input.LA(1) ) {
            case 249:
            case 250:
            case 251:
            case 252:
            case 253:
            case 254:
            case 255:
            case 256:
                {
                alt125=1;
                }
                break;
            case 87:
                {
                alt125=2;
                }
                break;
            case 89:
                {
                alt125=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 125, 0, input);

                throw nvae;
            }

            switch (alt125) {
                case 1 :
                    // InternalStubbrLang.g:3625:3: this_Task_0= ruleTask
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getActivityAccess().getTaskParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Task_0=ruleTask();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Task_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalStubbrLang.g:3634:3: this_CallActivity_1= ruleCallActivity
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getActivityAccess().getCallActivityParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_CallActivity_1=ruleCallActivity();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_CallActivity_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalStubbrLang.g:3643:3: this_SubProcess_2= ruleSubProcess
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getActivityAccess().getSubProcessParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_SubProcess_2=ruleSubProcess();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_SubProcess_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleActivity"


    // $ANTLR start "entryRuleTask"
    // InternalStubbrLang.g:3655:1: entryRuleTask returns [EObject current=null] : iv_ruleTask= ruleTask EOF ;
    public final EObject entryRuleTask() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTask = null;


        try {
            // InternalStubbrLang.g:3655:45: (iv_ruleTask= ruleTask EOF )
            // InternalStubbrLang.g:3656:2: iv_ruleTask= ruleTask EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTaskRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTask=ruleTask();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTask; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTask"


    // $ANTLR start "ruleTask"
    // InternalStubbrLang.g:3662:1: ruleTask returns [EObject current=null] : ( ( (lv_taskType_0_0= ruleTaskType ) ) ( (lv_name_1_0= RULE_ID ) )? ( (lv_label_2_0= RULE_STRING ) )? (otherlv_3= 'view' ( ( ruleQualifiedName ) ) )? ( (lv_attachments_5_0= ruleAttachment ) )* ) ;
    public final EObject ruleTask() throws RecognitionException {
        EObject current = null;

        Token lv_name_1_0=null;
        Token lv_label_2_0=null;
        Token otherlv_3=null;
        Enumerator lv_taskType_0_0 = null;

        EObject lv_attachments_5_0 = null;



        	enterRule();

        try {
            // InternalStubbrLang.g:3668:2: ( ( ( (lv_taskType_0_0= ruleTaskType ) ) ( (lv_name_1_0= RULE_ID ) )? ( (lv_label_2_0= RULE_STRING ) )? (otherlv_3= 'view' ( ( ruleQualifiedName ) ) )? ( (lv_attachments_5_0= ruleAttachment ) )* ) )
            // InternalStubbrLang.g:3669:2: ( ( (lv_taskType_0_0= ruleTaskType ) ) ( (lv_name_1_0= RULE_ID ) )? ( (lv_label_2_0= RULE_STRING ) )? (otherlv_3= 'view' ( ( ruleQualifiedName ) ) )? ( (lv_attachments_5_0= ruleAttachment ) )* )
            {
            // InternalStubbrLang.g:3669:2: ( ( (lv_taskType_0_0= ruleTaskType ) ) ( (lv_name_1_0= RULE_ID ) )? ( (lv_label_2_0= RULE_STRING ) )? (otherlv_3= 'view' ( ( ruleQualifiedName ) ) )? ( (lv_attachments_5_0= ruleAttachment ) )* )
            // InternalStubbrLang.g:3670:3: ( (lv_taskType_0_0= ruleTaskType ) ) ( (lv_name_1_0= RULE_ID ) )? ( (lv_label_2_0= RULE_STRING ) )? (otherlv_3= 'view' ( ( ruleQualifiedName ) ) )? ( (lv_attachments_5_0= ruleAttachment ) )*
            {
            // InternalStubbrLang.g:3670:3: ( (lv_taskType_0_0= ruleTaskType ) )
            // InternalStubbrLang.g:3671:4: (lv_taskType_0_0= ruleTaskType )
            {
            // InternalStubbrLang.g:3671:4: (lv_taskType_0_0= ruleTaskType )
            // InternalStubbrLang.g:3672:5: lv_taskType_0_0= ruleTaskType
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTaskAccess().getTaskTypeTaskTypeEnumRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_106);
            lv_taskType_0_0=ruleTaskType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTaskRule());
              					}
              					set(
              						current,
              						"taskType",
              						lv_taskType_0_0,
              						"com.laegler.stubbr.lang.StubbrLang.TaskType");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalStubbrLang.g:3689:3: ( (lv_name_1_0= RULE_ID ) )?
            int alt126=2;
            int LA126_0 = input.LA(1);

            if ( (LA126_0==RULE_ID) ) {
                alt126=1;
            }
            switch (alt126) {
                case 1 :
                    // InternalStubbrLang.g:3690:4: (lv_name_1_0= RULE_ID )
                    {
                    // InternalStubbrLang.g:3690:4: (lv_name_1_0= RULE_ID )
                    // InternalStubbrLang.g:3691:5: lv_name_1_0= RULE_ID
                    {
                    lv_name_1_0=(Token)match(input,RULE_ID,FOLLOW_107); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_name_1_0, grammarAccess.getTaskAccess().getNameIDTerminalRuleCall_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getTaskRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"name",
                      						lv_name_1_0,
                      						"org.eclipse.xtext.xbase.Xtype.ID");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:3707:3: ( (lv_label_2_0= RULE_STRING ) )?
            int alt127=2;
            int LA127_0 = input.LA(1);

            if ( (LA127_0==RULE_STRING) ) {
                alt127=1;
            }
            switch (alt127) {
                case 1 :
                    // InternalStubbrLang.g:3708:4: (lv_label_2_0= RULE_STRING )
                    {
                    // InternalStubbrLang.g:3708:4: (lv_label_2_0= RULE_STRING )
                    // InternalStubbrLang.g:3709:5: lv_label_2_0= RULE_STRING
                    {
                    lv_label_2_0=(Token)match(input,RULE_STRING,FOLLOW_108); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_label_2_0, grammarAccess.getTaskAccess().getLabelSTRINGTerminalRuleCall_2_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getTaskRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"label",
                      						lv_label_2_0,
                      						"org.eclipse.xtext.xbase.Xtype.STRING");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:3725:3: (otherlv_3= 'view' ( ( ruleQualifiedName ) ) )?
            int alt128=2;
            int LA128_0 = input.LA(1);

            if ( (LA128_0==86) ) {
                alt128=1;
            }
            switch (alt128) {
                case 1 :
                    // InternalStubbrLang.g:3726:4: otherlv_3= 'view' ( ( ruleQualifiedName ) )
                    {
                    otherlv_3=(Token)match(input,86,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getTaskAccess().getViewKeyword_3_0());
                      			
                    }
                    // InternalStubbrLang.g:3730:4: ( ( ruleQualifiedName ) )
                    // InternalStubbrLang.g:3731:5: ( ruleQualifiedName )
                    {
                    // InternalStubbrLang.g:3731:5: ( ruleQualifiedName )
                    // InternalStubbrLang.g:3732:6: ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getTaskRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTaskAccess().getDialogViewCrossReference_3_1_0());
                      					
                    }
                    pushFollow(FOLLOW_109);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:3747:3: ( (lv_attachments_5_0= ruleAttachment ) )*
            loop129:
            do {
                int alt129=2;
                int LA129_0 = input.LA(1);

                if ( (LA129_0==18||LA129_0==93||(LA129_0>=95 && LA129_0<=97)||(LA129_0>=286 && LA129_0<=288)) ) {
                    alt129=1;
                }


                switch (alt129) {
            	case 1 :
            	    // InternalStubbrLang.g:3748:4: (lv_attachments_5_0= ruleAttachment )
            	    {
            	    // InternalStubbrLang.g:3748:4: (lv_attachments_5_0= ruleAttachment )
            	    // InternalStubbrLang.g:3749:5: lv_attachments_5_0= ruleAttachment
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getTaskAccess().getAttachmentsAttachmentParserRuleCall_4_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_109);
            	    lv_attachments_5_0=ruleAttachment();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getTaskRule());
            	      					}
            	      					add(
            	      						current,
            	      						"attachments",
            	      						lv_attachments_5_0,
            	      						"com.laegler.stubbr.lang.StubbrLang.Attachment");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop129;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTask"


    // $ANTLR start "entryRuleCallActivity"
    // InternalStubbrLang.g:3770:1: entryRuleCallActivity returns [EObject current=null] : iv_ruleCallActivity= ruleCallActivity EOF ;
    public final EObject entryRuleCallActivity() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCallActivity = null;


        try {
            // InternalStubbrLang.g:3770:53: (iv_ruleCallActivity= ruleCallActivity EOF )
            // InternalStubbrLang.g:3771:2: iv_ruleCallActivity= ruleCallActivity EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCallActivityRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleCallActivity=ruleCallActivity();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCallActivity; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCallActivity"


    // $ANTLR start "ruleCallActivity"
    // InternalStubbrLang.g:3777:1: ruleCallActivity returns [EObject current=null] : (otherlv_0= 'callactivity' ( (lv_name_1_0= RULE_ID ) )? ( (lv_label_2_0= RULE_STRING ) )? (otherlv_3= 'calling' ( ( ruleQualifiedName ) ) ) ( (lv_attachments_5_0= ruleAttachment ) )* ) ;
    public final EObject ruleCallActivity() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_name_1_0=null;
        Token lv_label_2_0=null;
        Token otherlv_3=null;
        EObject lv_attachments_5_0 = null;



        	enterRule();

        try {
            // InternalStubbrLang.g:3783:2: ( (otherlv_0= 'callactivity' ( (lv_name_1_0= RULE_ID ) )? ( (lv_label_2_0= RULE_STRING ) )? (otherlv_3= 'calling' ( ( ruleQualifiedName ) ) ) ( (lv_attachments_5_0= ruleAttachment ) )* ) )
            // InternalStubbrLang.g:3784:2: (otherlv_0= 'callactivity' ( (lv_name_1_0= RULE_ID ) )? ( (lv_label_2_0= RULE_STRING ) )? (otherlv_3= 'calling' ( ( ruleQualifiedName ) ) ) ( (lv_attachments_5_0= ruleAttachment ) )* )
            {
            // InternalStubbrLang.g:3784:2: (otherlv_0= 'callactivity' ( (lv_name_1_0= RULE_ID ) )? ( (lv_label_2_0= RULE_STRING ) )? (otherlv_3= 'calling' ( ( ruleQualifiedName ) ) ) ( (lv_attachments_5_0= ruleAttachment ) )* )
            // InternalStubbrLang.g:3785:3: otherlv_0= 'callactivity' ( (lv_name_1_0= RULE_ID ) )? ( (lv_label_2_0= RULE_STRING ) )? (otherlv_3= 'calling' ( ( ruleQualifiedName ) ) ) ( (lv_attachments_5_0= ruleAttachment ) )*
            {
            otherlv_0=(Token)match(input,87,FOLLOW_110); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getCallActivityAccess().getCallactivityKeyword_0());
              		
            }
            // InternalStubbrLang.g:3789:3: ( (lv_name_1_0= RULE_ID ) )?
            int alt130=2;
            int LA130_0 = input.LA(1);

            if ( (LA130_0==RULE_ID) ) {
                alt130=1;
            }
            switch (alt130) {
                case 1 :
                    // InternalStubbrLang.g:3790:4: (lv_name_1_0= RULE_ID )
                    {
                    // InternalStubbrLang.g:3790:4: (lv_name_1_0= RULE_ID )
                    // InternalStubbrLang.g:3791:5: lv_name_1_0= RULE_ID
                    {
                    lv_name_1_0=(Token)match(input,RULE_ID,FOLLOW_111); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_name_1_0, grammarAccess.getCallActivityAccess().getNameIDTerminalRuleCall_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getCallActivityRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"name",
                      						lv_name_1_0,
                      						"org.eclipse.xtext.xbase.Xtype.ID");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:3807:3: ( (lv_label_2_0= RULE_STRING ) )?
            int alt131=2;
            int LA131_0 = input.LA(1);

            if ( (LA131_0==RULE_STRING) ) {
                alt131=1;
            }
            switch (alt131) {
                case 1 :
                    // InternalStubbrLang.g:3808:4: (lv_label_2_0= RULE_STRING )
                    {
                    // InternalStubbrLang.g:3808:4: (lv_label_2_0= RULE_STRING )
                    // InternalStubbrLang.g:3809:5: lv_label_2_0= RULE_STRING
                    {
                    lv_label_2_0=(Token)match(input,RULE_STRING,FOLLOW_112); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_label_2_0, grammarAccess.getCallActivityAccess().getLabelSTRINGTerminalRuleCall_2_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getCallActivityRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"label",
                      						lv_label_2_0,
                      						"org.eclipse.xtext.xbase.Xtype.STRING");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:3825:3: (otherlv_3= 'calling' ( ( ruleQualifiedName ) ) )
            // InternalStubbrLang.g:3826:4: otherlv_3= 'calling' ( ( ruleQualifiedName ) )
            {
            otherlv_3=(Token)match(input,88,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(otherlv_3, grammarAccess.getCallActivityAccess().getCallingKeyword_3_0());
              			
            }
            // InternalStubbrLang.g:3830:4: ( ( ruleQualifiedName ) )
            // InternalStubbrLang.g:3831:5: ( ruleQualifiedName )
            {
            // InternalStubbrLang.g:3831:5: ( ruleQualifiedName )
            // InternalStubbrLang.g:3832:6: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              						if (current==null) {
              							current = createModelElement(grammarAccess.getCallActivityRule());
              						}
              					
            }
            if ( state.backtracking==0 ) {

              						newCompositeNode(grammarAccess.getCallActivityAccess().getCalledElementBusinessProcessCrossReference_3_1_0());
              					
            }
            pushFollow(FOLLOW_109);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              						afterParserOrEnumRuleCall();
              					
            }

            }


            }


            }

            // InternalStubbrLang.g:3847:3: ( (lv_attachments_5_0= ruleAttachment ) )*
            loop132:
            do {
                int alt132=2;
                int LA132_0 = input.LA(1);

                if ( (LA132_0==18||LA132_0==93||(LA132_0>=95 && LA132_0<=97)||(LA132_0>=286 && LA132_0<=288)) ) {
                    alt132=1;
                }


                switch (alt132) {
            	case 1 :
            	    // InternalStubbrLang.g:3848:4: (lv_attachments_5_0= ruleAttachment )
            	    {
            	    // InternalStubbrLang.g:3848:4: (lv_attachments_5_0= ruleAttachment )
            	    // InternalStubbrLang.g:3849:5: lv_attachments_5_0= ruleAttachment
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getCallActivityAccess().getAttachmentsAttachmentParserRuleCall_4_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_109);
            	    lv_attachments_5_0=ruleAttachment();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getCallActivityRule());
            	      					}
            	      					add(
            	      						current,
            	      						"attachments",
            	      						lv_attachments_5_0,
            	      						"com.laegler.stubbr.lang.StubbrLang.Attachment");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop132;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCallActivity"


    // $ANTLR start "entryRuleSubProcess"
    // InternalStubbrLang.g:3870:1: entryRuleSubProcess returns [EObject current=null] : iv_ruleSubProcess= ruleSubProcess EOF ;
    public final EObject entryRuleSubProcess() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSubProcess = null;


        try {
            // InternalStubbrLang.g:3870:51: (iv_ruleSubProcess= ruleSubProcess EOF )
            // InternalStubbrLang.g:3871:2: iv_ruleSubProcess= ruleSubProcess EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSubProcessRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSubProcess=ruleSubProcess();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSubProcess; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSubProcess"


    // $ANTLR start "ruleSubProcess"
    // InternalStubbrLang.g:3877:1: ruleSubProcess returns [EObject current=null] : (otherlv_0= 'subprocess' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? ( (lv_attachments_5_0= ruleAttachment ) )* ( (lv_flowNodes_6_0= ruleFlowNode ) )+ otherlv_7= '}' ) ;
    public final EObject ruleSubProcess() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token lv_label_4_0=null;
        Token otherlv_7=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject lv_attachments_5_0 = null;

        EObject lv_flowNodes_6_0 = null;



        	enterRule();

        try {
            // InternalStubbrLang.g:3883:2: ( (otherlv_0= 'subprocess' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? ( (lv_attachments_5_0= ruleAttachment ) )* ( (lv_flowNodes_6_0= ruleFlowNode ) )+ otherlv_7= '}' ) )
            // InternalStubbrLang.g:3884:2: (otherlv_0= 'subprocess' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? ( (lv_attachments_5_0= ruleAttachment ) )* ( (lv_flowNodes_6_0= ruleFlowNode ) )+ otherlv_7= '}' )
            {
            // InternalStubbrLang.g:3884:2: (otherlv_0= 'subprocess' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? ( (lv_attachments_5_0= ruleAttachment ) )* ( (lv_flowNodes_6_0= ruleFlowNode ) )+ otherlv_7= '}' )
            // InternalStubbrLang.g:3885:3: otherlv_0= 'subprocess' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? ( (lv_attachments_5_0= ruleAttachment ) )* ( (lv_flowNodes_6_0= ruleFlowNode ) )+ otherlv_7= '}'
            {
            otherlv_0=(Token)match(input,89,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getSubProcessAccess().getSubprocessKeyword_0());
              		
            }
            // InternalStubbrLang.g:3889:3: ( (lv_name_1_0= ruleQualifiedName ) )
            // InternalStubbrLang.g:3890:4: (lv_name_1_0= ruleQualifiedName )
            {
            // InternalStubbrLang.g:3890:4: (lv_name_1_0= ruleQualifiedName )
            // InternalStubbrLang.g:3891:5: lv_name_1_0= ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSubProcessAccess().getNameQualifiedNameParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_6);
            lv_name_1_0=ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSubProcessRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"org.eclipse.xtext.xbase.Xbase.QualifiedName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,16,FOLLOW_113); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getSubProcessAccess().getLeftCurlyBracketKeyword_2());
              		
            }
            // InternalStubbrLang.g:3912:3: (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )?
            int alt133=2;
            int LA133_0 = input.LA(1);

            if ( (LA133_0==17) ) {
                alt133=1;
            }
            switch (alt133) {
                case 1 :
                    // InternalStubbrLang.g:3913:4: otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) )
                    {
                    otherlv_3=(Token)match(input,17,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getSubProcessAccess().getLabelKeyword_3_0());
                      			
                    }
                    // InternalStubbrLang.g:3917:4: ( (lv_label_4_0= RULE_STRING ) )
                    // InternalStubbrLang.g:3918:5: (lv_label_4_0= RULE_STRING )
                    {
                    // InternalStubbrLang.g:3918:5: (lv_label_4_0= RULE_STRING )
                    // InternalStubbrLang.g:3919:6: lv_label_4_0= RULE_STRING
                    {
                    lv_label_4_0=(Token)match(input,RULE_STRING,FOLLOW_113); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_label_4_0, grammarAccess.getSubProcessAccess().getLabelSTRINGTerminalRuleCall_3_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getSubProcessRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"label",
                      							lv_label_4_0,
                      							"org.eclipse.xtext.xbase.Xtype.STRING");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:3936:3: ( (lv_attachments_5_0= ruleAttachment ) )*
            loop134:
            do {
                int alt134=2;
                int LA134_0 = input.LA(1);

                if ( (LA134_0==18||LA134_0==93||(LA134_0>=95 && LA134_0<=97)||(LA134_0>=286 && LA134_0<=288)) ) {
                    alt134=1;
                }


                switch (alt134) {
            	case 1 :
            	    // InternalStubbrLang.g:3937:4: (lv_attachments_5_0= ruleAttachment )
            	    {
            	    // InternalStubbrLang.g:3937:4: (lv_attachments_5_0= ruleAttachment )
            	    // InternalStubbrLang.g:3938:5: lv_attachments_5_0= ruleAttachment
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getSubProcessAccess().getAttachmentsAttachmentParserRuleCall_4_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_113);
            	    lv_attachments_5_0=ruleAttachment();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getSubProcessRule());
            	      					}
            	      					add(
            	      						current,
            	      						"attachments",
            	      						lv_attachments_5_0,
            	      						"com.laegler.stubbr.lang.StubbrLang.Attachment");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop134;
                }
            } while (true);

            // InternalStubbrLang.g:3955:3: ( (lv_flowNodes_6_0= ruleFlowNode ) )+
            int cnt135=0;
            loop135:
            do {
                int alt135=2;
                int LA135_0 = input.LA(1);

                if ( (LA135_0==84||LA135_0==87||(LA135_0>=89 && LA135_0<=90)||(LA135_0>=249 && LA135_0<=263)||(LA135_0>=277 && LA135_0<=285)) ) {
                    alt135=1;
                }


                switch (alt135) {
            	case 1 :
            	    // InternalStubbrLang.g:3956:4: (lv_flowNodes_6_0= ruleFlowNode )
            	    {
            	    // InternalStubbrLang.g:3956:4: (lv_flowNodes_6_0= ruleFlowNode )
            	    // InternalStubbrLang.g:3957:5: lv_flowNodes_6_0= ruleFlowNode
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getSubProcessAccess().getFlowNodesFlowNodeParserRuleCall_5_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_98);
            	    lv_flowNodes_6_0=ruleFlowNode();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getSubProcessRule());
            	      					}
            	      					add(
            	      						current,
            	      						"flowNodes",
            	      						lv_flowNodes_6_0,
            	      						"com.laegler.stubbr.lang.StubbrLang.FlowNode");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt135 >= 1 ) break loop135;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(135, input);
                        throw eee;
                }
                cnt135++;
            } while (true);

            otherlv_7=(Token)match(input,26,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_7, grammarAccess.getSubProcessAccess().getRightCurlyBracketKeyword_6());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSubProcess"


    // $ANTLR start "entryRuleGateway"
    // InternalStubbrLang.g:3982:1: entryRuleGateway returns [EObject current=null] : iv_ruleGateway= ruleGateway EOF ;
    public final EObject entryRuleGateway() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleGateway = null;


        try {
            // InternalStubbrLang.g:3982:48: (iv_ruleGateway= ruleGateway EOF )
            // InternalStubbrLang.g:3983:2: iv_ruleGateway= ruleGateway EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getGatewayRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleGateway=ruleGateway();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleGateway; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleGateway"


    // $ANTLR start "ruleGateway"
    // InternalStubbrLang.g:3989:1: ruleGateway returns [EObject current=null] : (this_GatewayDiverging_0= ruleGatewayDiverging | this_GatewayConverging_1= ruleGatewayConverging ) ;
    public final EObject ruleGateway() throws RecognitionException {
        EObject current = null;

        EObject this_GatewayDiverging_0 = null;

        EObject this_GatewayConverging_1 = null;



        	enterRule();

        try {
            // InternalStubbrLang.g:3995:2: ( (this_GatewayDiverging_0= ruleGatewayDiverging | this_GatewayConverging_1= ruleGatewayConverging ) )
            // InternalStubbrLang.g:3996:2: (this_GatewayDiverging_0= ruleGatewayDiverging | this_GatewayConverging_1= ruleGatewayConverging )
            {
            // InternalStubbrLang.g:3996:2: (this_GatewayDiverging_0= ruleGatewayDiverging | this_GatewayConverging_1= ruleGatewayConverging )
            int alt136=2;
            int LA136_0 = input.LA(1);

            if ( ((LA136_0>=277 && LA136_0<=285)) ) {
                alt136=1;
            }
            else if ( (LA136_0==90) ) {
                alt136=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 136, 0, input);

                throw nvae;
            }
            switch (alt136) {
                case 1 :
                    // InternalStubbrLang.g:3997:3: this_GatewayDiverging_0= ruleGatewayDiverging
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getGatewayAccess().getGatewayDivergingParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_GatewayDiverging_0=ruleGatewayDiverging();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_GatewayDiverging_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalStubbrLang.g:4006:3: this_GatewayConverging_1= ruleGatewayConverging
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getGatewayAccess().getGatewayConvergingParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_GatewayConverging_1=ruleGatewayConverging();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_GatewayConverging_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleGateway"


    // $ANTLR start "entryRuleGatewayDiverging"
    // InternalStubbrLang.g:4018:1: entryRuleGatewayDiverging returns [EObject current=null] : iv_ruleGatewayDiverging= ruleGatewayDiverging EOF ;
    public final EObject entryRuleGatewayDiverging() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleGatewayDiverging = null;


        try {
            // InternalStubbrLang.g:4018:57: (iv_ruleGatewayDiverging= ruleGatewayDiverging EOF )
            // InternalStubbrLang.g:4019:2: iv_ruleGatewayDiverging= ruleGatewayDiverging EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getGatewayDivergingRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleGatewayDiverging=ruleGatewayDiverging();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleGatewayDiverging; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleGatewayDiverging"


    // $ANTLR start "ruleGatewayDiverging"
    // InternalStubbrLang.g:4025:1: ruleGatewayDiverging returns [EObject current=null] : ( ( (lv_gatewayType_0_0= ruleGatewayType ) ) ( (lv_name_1_0= RULE_ID ) )? ( (lv_label_2_0= RULE_STRING ) )? ( (lv_attachments_3_0= ruleAttachment ) )* ( (lv_options_4_0= ruleOption ) )+ ( (lv_gatewayConverging_5_0= ruleGatewayConverging ) ) ) ;
    public final EObject ruleGatewayDiverging() throws RecognitionException {
        EObject current = null;

        Token lv_name_1_0=null;
        Token lv_label_2_0=null;
        Enumerator lv_gatewayType_0_0 = null;

        EObject lv_attachments_3_0 = null;

        EObject lv_options_4_0 = null;

        EObject lv_gatewayConverging_5_0 = null;



        	enterRule();

        try {
            // InternalStubbrLang.g:4031:2: ( ( ( (lv_gatewayType_0_0= ruleGatewayType ) ) ( (lv_name_1_0= RULE_ID ) )? ( (lv_label_2_0= RULE_STRING ) )? ( (lv_attachments_3_0= ruleAttachment ) )* ( (lv_options_4_0= ruleOption ) )+ ( (lv_gatewayConverging_5_0= ruleGatewayConverging ) ) ) )
            // InternalStubbrLang.g:4032:2: ( ( (lv_gatewayType_0_0= ruleGatewayType ) ) ( (lv_name_1_0= RULE_ID ) )? ( (lv_label_2_0= RULE_STRING ) )? ( (lv_attachments_3_0= ruleAttachment ) )* ( (lv_options_4_0= ruleOption ) )+ ( (lv_gatewayConverging_5_0= ruleGatewayConverging ) ) )
            {
            // InternalStubbrLang.g:4032:2: ( ( (lv_gatewayType_0_0= ruleGatewayType ) ) ( (lv_name_1_0= RULE_ID ) )? ( (lv_label_2_0= RULE_STRING ) )? ( (lv_attachments_3_0= ruleAttachment ) )* ( (lv_options_4_0= ruleOption ) )+ ( (lv_gatewayConverging_5_0= ruleGatewayConverging ) ) )
            // InternalStubbrLang.g:4033:3: ( (lv_gatewayType_0_0= ruleGatewayType ) ) ( (lv_name_1_0= RULE_ID ) )? ( (lv_label_2_0= RULE_STRING ) )? ( (lv_attachments_3_0= ruleAttachment ) )* ( (lv_options_4_0= ruleOption ) )+ ( (lv_gatewayConverging_5_0= ruleGatewayConverging ) )
            {
            // InternalStubbrLang.g:4033:3: ( (lv_gatewayType_0_0= ruleGatewayType ) )
            // InternalStubbrLang.g:4034:4: (lv_gatewayType_0_0= ruleGatewayType )
            {
            // InternalStubbrLang.g:4034:4: (lv_gatewayType_0_0= ruleGatewayType )
            // InternalStubbrLang.g:4035:5: lv_gatewayType_0_0= ruleGatewayType
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getGatewayDivergingAccess().getGatewayTypeGatewayTypeEnumRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_114);
            lv_gatewayType_0_0=ruleGatewayType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getGatewayDivergingRule());
              					}
              					set(
              						current,
              						"gatewayType",
              						lv_gatewayType_0_0,
              						"com.laegler.stubbr.lang.StubbrLang.GatewayType");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalStubbrLang.g:4052:3: ( (lv_name_1_0= RULE_ID ) )?
            int alt137=2;
            int LA137_0 = input.LA(1);

            if ( (LA137_0==RULE_ID) ) {
                alt137=1;
            }
            switch (alt137) {
                case 1 :
                    // InternalStubbrLang.g:4053:4: (lv_name_1_0= RULE_ID )
                    {
                    // InternalStubbrLang.g:4053:4: (lv_name_1_0= RULE_ID )
                    // InternalStubbrLang.g:4054:5: lv_name_1_0= RULE_ID
                    {
                    lv_name_1_0=(Token)match(input,RULE_ID,FOLLOW_114); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_name_1_0, grammarAccess.getGatewayDivergingAccess().getNameIDTerminalRuleCall_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getGatewayDivergingRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"name",
                      						lv_name_1_0,
                      						"org.eclipse.xtext.xbase.Xtype.ID");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:4070:3: ( (lv_label_2_0= RULE_STRING ) )?
            int alt138=2;
            int LA138_0 = input.LA(1);

            if ( (LA138_0==RULE_STRING) ) {
                alt138=1;
            }
            switch (alt138) {
                case 1 :
                    // InternalStubbrLang.g:4071:4: (lv_label_2_0= RULE_STRING )
                    {
                    // InternalStubbrLang.g:4071:4: (lv_label_2_0= RULE_STRING )
                    // InternalStubbrLang.g:4072:5: lv_label_2_0= RULE_STRING
                    {
                    lv_label_2_0=(Token)match(input,RULE_STRING,FOLLOW_114); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_label_2_0, grammarAccess.getGatewayDivergingAccess().getLabelSTRINGTerminalRuleCall_2_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getGatewayDivergingRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"label",
                      						lv_label_2_0,
                      						"org.eclipse.xtext.xbase.Xtype.STRING");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:4088:3: ( (lv_attachments_3_0= ruleAttachment ) )*
            loop139:
            do {
                int alt139=2;
                int LA139_0 = input.LA(1);

                if ( (LA139_0==18||LA139_0==93||(LA139_0>=95 && LA139_0<=97)||(LA139_0>=286 && LA139_0<=288)) ) {
                    alt139=1;
                }


                switch (alt139) {
            	case 1 :
            	    // InternalStubbrLang.g:4089:4: (lv_attachments_3_0= ruleAttachment )
            	    {
            	    // InternalStubbrLang.g:4089:4: (lv_attachments_3_0= ruleAttachment )
            	    // InternalStubbrLang.g:4090:5: lv_attachments_3_0= ruleAttachment
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getGatewayDivergingAccess().getAttachmentsAttachmentParserRuleCall_3_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_114);
            	    lv_attachments_3_0=ruleAttachment();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getGatewayDivergingRule());
            	      					}
            	      					add(
            	      						current,
            	      						"attachments",
            	      						lv_attachments_3_0,
            	      						"com.laegler.stubbr.lang.StubbrLang.Attachment");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop139;
                }
            } while (true);

            // InternalStubbrLang.g:4107:3: ( (lv_options_4_0= ruleOption ) )+
            int cnt140=0;
            loop140:
            do {
                int alt140=2;
                int LA140_0 = input.LA(1);

                if ( (LA140_0==91) ) {
                    alt140=1;
                }


                switch (alt140) {
            	case 1 :
            	    // InternalStubbrLang.g:4108:4: (lv_options_4_0= ruleOption )
            	    {
            	    // InternalStubbrLang.g:4108:4: (lv_options_4_0= ruleOption )
            	    // InternalStubbrLang.g:4109:5: lv_options_4_0= ruleOption
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getGatewayDivergingAccess().getOptionsOptionParserRuleCall_4_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_115);
            	    lv_options_4_0=ruleOption();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getGatewayDivergingRule());
            	      					}
            	      					add(
            	      						current,
            	      						"options",
            	      						lv_options_4_0,
            	      						"com.laegler.stubbr.lang.StubbrLang.Option");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt140 >= 1 ) break loop140;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(140, input);
                        throw eee;
                }
                cnt140++;
            } while (true);

            // InternalStubbrLang.g:4126:3: ( (lv_gatewayConverging_5_0= ruleGatewayConverging ) )
            // InternalStubbrLang.g:4127:4: (lv_gatewayConverging_5_0= ruleGatewayConverging )
            {
            // InternalStubbrLang.g:4127:4: (lv_gatewayConverging_5_0= ruleGatewayConverging )
            // InternalStubbrLang.g:4128:5: lv_gatewayConverging_5_0= ruleGatewayConverging
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getGatewayDivergingAccess().getGatewayConvergingGatewayConvergingParserRuleCall_5_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_gatewayConverging_5_0=ruleGatewayConverging();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getGatewayDivergingRule());
              					}
              					set(
              						current,
              						"gatewayConverging",
              						lv_gatewayConverging_5_0,
              						"com.laegler.stubbr.lang.StubbrLang.GatewayConverging");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleGatewayDiverging"


    // $ANTLR start "entryRuleGatewayConverging"
    // InternalStubbrLang.g:4149:1: entryRuleGatewayConverging returns [EObject current=null] : iv_ruleGatewayConverging= ruleGatewayConverging EOF ;
    public final EObject entryRuleGatewayConverging() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleGatewayConverging = null;


        try {
            // InternalStubbrLang.g:4149:58: (iv_ruleGatewayConverging= ruleGatewayConverging EOF )
            // InternalStubbrLang.g:4150:2: iv_ruleGatewayConverging= ruleGatewayConverging EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getGatewayConvergingRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleGatewayConverging=ruleGatewayConverging();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleGatewayConverging; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleGatewayConverging"


    // $ANTLR start "ruleGatewayConverging"
    // InternalStubbrLang.g:4156:1: ruleGatewayConverging returns [EObject current=null] : ( (otherlv_0= 'merge' ( (lv_gatewayType_1_0= ruleGatewayType ) ) ) ( (lv_name_2_0= RULE_ID ) )? ( (lv_label_3_0= RULE_STRING ) )? ( (lv_attachments_4_0= ruleAttachment ) )* ) ;
    public final EObject ruleGatewayConverging() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_name_2_0=null;
        Token lv_label_3_0=null;
        Enumerator lv_gatewayType_1_0 = null;

        EObject lv_attachments_4_0 = null;



        	enterRule();

        try {
            // InternalStubbrLang.g:4162:2: ( ( (otherlv_0= 'merge' ( (lv_gatewayType_1_0= ruleGatewayType ) ) ) ( (lv_name_2_0= RULE_ID ) )? ( (lv_label_3_0= RULE_STRING ) )? ( (lv_attachments_4_0= ruleAttachment ) )* ) )
            // InternalStubbrLang.g:4163:2: ( (otherlv_0= 'merge' ( (lv_gatewayType_1_0= ruleGatewayType ) ) ) ( (lv_name_2_0= RULE_ID ) )? ( (lv_label_3_0= RULE_STRING ) )? ( (lv_attachments_4_0= ruleAttachment ) )* )
            {
            // InternalStubbrLang.g:4163:2: ( (otherlv_0= 'merge' ( (lv_gatewayType_1_0= ruleGatewayType ) ) ) ( (lv_name_2_0= RULE_ID ) )? ( (lv_label_3_0= RULE_STRING ) )? ( (lv_attachments_4_0= ruleAttachment ) )* )
            // InternalStubbrLang.g:4164:3: (otherlv_0= 'merge' ( (lv_gatewayType_1_0= ruleGatewayType ) ) ) ( (lv_name_2_0= RULE_ID ) )? ( (lv_label_3_0= RULE_STRING ) )? ( (lv_attachments_4_0= ruleAttachment ) )*
            {
            // InternalStubbrLang.g:4164:3: (otherlv_0= 'merge' ( (lv_gatewayType_1_0= ruleGatewayType ) ) )
            // InternalStubbrLang.g:4165:4: otherlv_0= 'merge' ( (lv_gatewayType_1_0= ruleGatewayType ) )
            {
            otherlv_0=(Token)match(input,90,FOLLOW_116); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(otherlv_0, grammarAccess.getGatewayConvergingAccess().getMergeKeyword_0_0());
              			
            }
            // InternalStubbrLang.g:4169:4: ( (lv_gatewayType_1_0= ruleGatewayType ) )
            // InternalStubbrLang.g:4170:5: (lv_gatewayType_1_0= ruleGatewayType )
            {
            // InternalStubbrLang.g:4170:5: (lv_gatewayType_1_0= ruleGatewayType )
            // InternalStubbrLang.g:4171:6: lv_gatewayType_1_0= ruleGatewayType
            {
            if ( state.backtracking==0 ) {

              						newCompositeNode(grammarAccess.getGatewayConvergingAccess().getGatewayTypeGatewayTypeEnumRuleCall_0_1_0());
              					
            }
            pushFollow(FOLLOW_117);
            lv_gatewayType_1_0=ruleGatewayType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              						if (current==null) {
              							current = createModelElementForParent(grammarAccess.getGatewayConvergingRule());
              						}
              						set(
              							current,
              							"gatewayType",
              							lv_gatewayType_1_0,
              							"com.laegler.stubbr.lang.StubbrLang.GatewayType");
              						afterParserOrEnumRuleCall();
              					
            }

            }


            }


            }

            // InternalStubbrLang.g:4189:3: ( (lv_name_2_0= RULE_ID ) )?
            int alt141=2;
            int LA141_0 = input.LA(1);

            if ( (LA141_0==RULE_ID) ) {
                alt141=1;
            }
            switch (alt141) {
                case 1 :
                    // InternalStubbrLang.g:4190:4: (lv_name_2_0= RULE_ID )
                    {
                    // InternalStubbrLang.g:4190:4: (lv_name_2_0= RULE_ID )
                    // InternalStubbrLang.g:4191:5: lv_name_2_0= RULE_ID
                    {
                    lv_name_2_0=(Token)match(input,RULE_ID,FOLLOW_118); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_name_2_0, grammarAccess.getGatewayConvergingAccess().getNameIDTerminalRuleCall_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getGatewayConvergingRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"name",
                      						lv_name_2_0,
                      						"org.eclipse.xtext.xbase.Xtype.ID");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:4207:3: ( (lv_label_3_0= RULE_STRING ) )?
            int alt142=2;
            int LA142_0 = input.LA(1);

            if ( (LA142_0==RULE_STRING) ) {
                alt142=1;
            }
            switch (alt142) {
                case 1 :
                    // InternalStubbrLang.g:4208:4: (lv_label_3_0= RULE_STRING )
                    {
                    // InternalStubbrLang.g:4208:4: (lv_label_3_0= RULE_STRING )
                    // InternalStubbrLang.g:4209:5: lv_label_3_0= RULE_STRING
                    {
                    lv_label_3_0=(Token)match(input,RULE_STRING,FOLLOW_109); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_label_3_0, grammarAccess.getGatewayConvergingAccess().getLabelSTRINGTerminalRuleCall_2_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getGatewayConvergingRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"label",
                      						lv_label_3_0,
                      						"org.eclipse.xtext.xbase.Xtype.STRING");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:4225:3: ( (lv_attachments_4_0= ruleAttachment ) )*
            loop143:
            do {
                int alt143=2;
                int LA143_0 = input.LA(1);

                if ( (LA143_0==18||LA143_0==93||(LA143_0>=95 && LA143_0<=97)||(LA143_0>=286 && LA143_0<=288)) ) {
                    alt143=1;
                }


                switch (alt143) {
            	case 1 :
            	    // InternalStubbrLang.g:4226:4: (lv_attachments_4_0= ruleAttachment )
            	    {
            	    // InternalStubbrLang.g:4226:4: (lv_attachments_4_0= ruleAttachment )
            	    // InternalStubbrLang.g:4227:5: lv_attachments_4_0= ruleAttachment
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getGatewayConvergingAccess().getAttachmentsAttachmentParserRuleCall_3_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_109);
            	    lv_attachments_4_0=ruleAttachment();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getGatewayConvergingRule());
            	      					}
            	      					add(
            	      						current,
            	      						"attachments",
            	      						lv_attachments_4_0,
            	      						"com.laegler.stubbr.lang.StubbrLang.Attachment");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop143;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleGatewayConverging"


    // $ANTLR start "entryRuleOptionFlowNode"
    // InternalStubbrLang.g:4248:1: entryRuleOptionFlowNode returns [EObject current=null] : iv_ruleOptionFlowNode= ruleOptionFlowNode EOF ;
    public final EObject entryRuleOptionFlowNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOptionFlowNode = null;


        try {
            // InternalStubbrLang.g:4248:55: (iv_ruleOptionFlowNode= ruleOptionFlowNode EOF )
            // InternalStubbrLang.g:4249:2: iv_ruleOptionFlowNode= ruleOptionFlowNode EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOptionFlowNodeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOptionFlowNode=ruleOptionFlowNode();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOptionFlowNode; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOptionFlowNode"


    // $ANTLR start "ruleOptionFlowNode"
    // InternalStubbrLang.g:4255:1: ruleOptionFlowNode returns [EObject current=null] : (this_Activity_0= ruleActivity | this_Event_1= ruleEvent | this_GatewayDiverging_2= ruleGatewayDiverging ) ;
    public final EObject ruleOptionFlowNode() throws RecognitionException {
        EObject current = null;

        EObject this_Activity_0 = null;

        EObject this_Event_1 = null;

        EObject this_GatewayDiverging_2 = null;



        	enterRule();

        try {
            // InternalStubbrLang.g:4261:2: ( (this_Activity_0= ruleActivity | this_Event_1= ruleEvent | this_GatewayDiverging_2= ruleGatewayDiverging ) )
            // InternalStubbrLang.g:4262:2: (this_Activity_0= ruleActivity | this_Event_1= ruleEvent | this_GatewayDiverging_2= ruleGatewayDiverging )
            {
            // InternalStubbrLang.g:4262:2: (this_Activity_0= ruleActivity | this_Event_1= ruleEvent | this_GatewayDiverging_2= ruleGatewayDiverging )
            int alt144=3;
            switch ( input.LA(1) ) {
            case 87:
            case 89:
            case 249:
            case 250:
            case 251:
            case 252:
            case 253:
            case 254:
            case 255:
            case 256:
                {
                alt144=1;
                }
                break;
            case 257:
            case 258:
            case 259:
            case 260:
            case 261:
            case 262:
            case 263:
                {
                alt144=2;
                }
                break;
            case 277:
            case 278:
            case 279:
            case 280:
            case 281:
            case 282:
            case 283:
            case 284:
            case 285:
                {
                alt144=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 144, 0, input);

                throw nvae;
            }

            switch (alt144) {
                case 1 :
                    // InternalStubbrLang.g:4263:3: this_Activity_0= ruleActivity
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getOptionFlowNodeAccess().getActivityParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Activity_0=ruleActivity();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Activity_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalStubbrLang.g:4272:3: this_Event_1= ruleEvent
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getOptionFlowNodeAccess().getEventParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Event_1=ruleEvent();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Event_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalStubbrLang.g:4281:3: this_GatewayDiverging_2= ruleGatewayDiverging
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getOptionFlowNodeAccess().getGatewayDivergingParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_GatewayDiverging_2=ruleGatewayDiverging();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_GatewayDiverging_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOptionFlowNode"


    // $ANTLR start "entryRuleOption"
    // InternalStubbrLang.g:4293:1: entryRuleOption returns [EObject current=null] : iv_ruleOption= ruleOption EOF ;
    public final EObject entryRuleOption() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOption = null;


        try {
            // InternalStubbrLang.g:4293:47: (iv_ruleOption= ruleOption EOF )
            // InternalStubbrLang.g:4294:2: iv_ruleOption= ruleOption EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOptionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOption=ruleOption();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOption; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOption"


    // $ANTLR start "ruleOption"
    // InternalStubbrLang.g:4300:1: ruleOption returns [EObject current=null] : (otherlv_0= 'option' ( (lv_default_1_0= 'default' ) )? ( (lv_name_2_0= RULE_ID ) )? ( (lv_label_3_0= RULE_STRING ) )? ( (lv_flowNodes_4_0= ruleOptionFlowNode ) )* ) ;
    public final EObject ruleOption() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_default_1_0=null;
        Token lv_name_2_0=null;
        Token lv_label_3_0=null;
        EObject lv_flowNodes_4_0 = null;



        	enterRule();

        try {
            // InternalStubbrLang.g:4306:2: ( (otherlv_0= 'option' ( (lv_default_1_0= 'default' ) )? ( (lv_name_2_0= RULE_ID ) )? ( (lv_label_3_0= RULE_STRING ) )? ( (lv_flowNodes_4_0= ruleOptionFlowNode ) )* ) )
            // InternalStubbrLang.g:4307:2: (otherlv_0= 'option' ( (lv_default_1_0= 'default' ) )? ( (lv_name_2_0= RULE_ID ) )? ( (lv_label_3_0= RULE_STRING ) )? ( (lv_flowNodes_4_0= ruleOptionFlowNode ) )* )
            {
            // InternalStubbrLang.g:4307:2: (otherlv_0= 'option' ( (lv_default_1_0= 'default' ) )? ( (lv_name_2_0= RULE_ID ) )? ( (lv_label_3_0= RULE_STRING ) )? ( (lv_flowNodes_4_0= ruleOptionFlowNode ) )* )
            // InternalStubbrLang.g:4308:3: otherlv_0= 'option' ( (lv_default_1_0= 'default' ) )? ( (lv_name_2_0= RULE_ID ) )? ( (lv_label_3_0= RULE_STRING ) )? ( (lv_flowNodes_4_0= ruleOptionFlowNode ) )*
            {
            otherlv_0=(Token)match(input,91,FOLLOW_119); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getOptionAccess().getOptionKeyword_0());
              		
            }
            // InternalStubbrLang.g:4312:3: ( (lv_default_1_0= 'default' ) )?
            int alt145=2;
            int LA145_0 = input.LA(1);

            if ( (LA145_0==92) ) {
                alt145=1;
            }
            switch (alt145) {
                case 1 :
                    // InternalStubbrLang.g:4313:4: (lv_default_1_0= 'default' )
                    {
                    // InternalStubbrLang.g:4313:4: (lv_default_1_0= 'default' )
                    // InternalStubbrLang.g:4314:5: lv_default_1_0= 'default'
                    {
                    lv_default_1_0=(Token)match(input,92,FOLLOW_120); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_default_1_0, grammarAccess.getOptionAccess().getDefaultDefaultKeyword_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getOptionRule());
                      					}
                      					setWithLastConsumed(current, "default", true, "default");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:4326:3: ( (lv_name_2_0= RULE_ID ) )?
            int alt146=2;
            int LA146_0 = input.LA(1);

            if ( (LA146_0==RULE_ID) ) {
                alt146=1;
            }
            switch (alt146) {
                case 1 :
                    // InternalStubbrLang.g:4327:4: (lv_name_2_0= RULE_ID )
                    {
                    // InternalStubbrLang.g:4327:4: (lv_name_2_0= RULE_ID )
                    // InternalStubbrLang.g:4328:5: lv_name_2_0= RULE_ID
                    {
                    lv_name_2_0=(Token)match(input,RULE_ID,FOLLOW_121); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_name_2_0, grammarAccess.getOptionAccess().getNameIDTerminalRuleCall_2_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getOptionRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"name",
                      						lv_name_2_0,
                      						"org.eclipse.xtext.xbase.Xtype.ID");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:4344:3: ( (lv_label_3_0= RULE_STRING ) )?
            int alt147=2;
            int LA147_0 = input.LA(1);

            if ( (LA147_0==RULE_STRING) ) {
                alt147=1;
            }
            switch (alt147) {
                case 1 :
                    // InternalStubbrLang.g:4345:4: (lv_label_3_0= RULE_STRING )
                    {
                    // InternalStubbrLang.g:4345:4: (lv_label_3_0= RULE_STRING )
                    // InternalStubbrLang.g:4346:5: lv_label_3_0= RULE_STRING
                    {
                    lv_label_3_0=(Token)match(input,RULE_STRING,FOLLOW_122); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_label_3_0, grammarAccess.getOptionAccess().getLabelSTRINGTerminalRuleCall_3_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getOptionRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"label",
                      						lv_label_3_0,
                      						"org.eclipse.xtext.xbase.Xtype.STRING");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:4362:3: ( (lv_flowNodes_4_0= ruleOptionFlowNode ) )*
            loop148:
            do {
                int alt148=2;
                int LA148_0 = input.LA(1);

                if ( (LA148_0==87||LA148_0==89||(LA148_0>=249 && LA148_0<=263)||(LA148_0>=277 && LA148_0<=285)) ) {
                    alt148=1;
                }


                switch (alt148) {
            	case 1 :
            	    // InternalStubbrLang.g:4363:4: (lv_flowNodes_4_0= ruleOptionFlowNode )
            	    {
            	    // InternalStubbrLang.g:4363:4: (lv_flowNodes_4_0= ruleOptionFlowNode )
            	    // InternalStubbrLang.g:4364:5: lv_flowNodes_4_0= ruleOptionFlowNode
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getOptionAccess().getFlowNodesOptionFlowNodeParserRuleCall_4_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_122);
            	    lv_flowNodes_4_0=ruleOptionFlowNode();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getOptionRule());
            	      					}
            	      					add(
            	      						current,
            	      						"flowNodes",
            	      						lv_flowNodes_4_0,
            	      						"com.laegler.stubbr.lang.StubbrLang.OptionFlowNode");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop148;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOption"


    // $ANTLR start "entryRuleAttachment"
    // InternalStubbrLang.g:4385:1: entryRuleAttachment returns [EObject current=null] : iv_ruleAttachment= ruleAttachment EOF ;
    public final EObject entryRuleAttachment() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAttachment = null;


        try {
            // InternalStubbrLang.g:4385:51: (iv_ruleAttachment= ruleAttachment EOF )
            // InternalStubbrLang.g:4386:2: iv_ruleAttachment= ruleAttachment EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAttachmentRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAttachment=ruleAttachment();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAttachment; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAttachment"


    // $ANTLR start "ruleAttachment"
    // InternalStubbrLang.g:4392:1: ruleAttachment returns [EObject current=null] : (this_SendMessage_0= ruleSendMessage | this_SendData_1= ruleSendData | this_DataIO_2= ruleDataIO | this_Annotation_3= ruleAnnotation | this_Documentation_4= ruleDocumentation | this_Flow_5= ruleFlow ) ;
    public final EObject ruleAttachment() throws RecognitionException {
        EObject current = null;

        EObject this_SendMessage_0 = null;

        EObject this_SendData_1 = null;

        EObject this_DataIO_2 = null;

        EObject this_Annotation_3 = null;

        EObject this_Documentation_4 = null;

        EObject this_Flow_5 = null;



        	enterRule();

        try {
            // InternalStubbrLang.g:4398:2: ( (this_SendMessage_0= ruleSendMessage | this_SendData_1= ruleSendData | this_DataIO_2= ruleDataIO | this_Annotation_3= ruleAnnotation | this_Documentation_4= ruleDocumentation | this_Flow_5= ruleFlow ) )
            // InternalStubbrLang.g:4399:2: (this_SendMessage_0= ruleSendMessage | this_SendData_1= ruleSendData | this_DataIO_2= ruleDataIO | this_Annotation_3= ruleAnnotation | this_Documentation_4= ruleDocumentation | this_Flow_5= ruleFlow )
            {
            // InternalStubbrLang.g:4399:2: (this_SendMessage_0= ruleSendMessage | this_SendData_1= ruleSendData | this_DataIO_2= ruleDataIO | this_Annotation_3= ruleAnnotation | this_Documentation_4= ruleDocumentation | this_Flow_5= ruleFlow )
            int alt149=6;
            switch ( input.LA(1) ) {
            case 93:
                {
                alt149=1;
                }
                break;
            case 95:
                {
                alt149=2;
                }
                break;
            case 286:
            case 287:
            case 288:
                {
                alt149=3;
                }
                break;
            case 96:
                {
                alt149=4;
                }
                break;
            case 18:
                {
                alt149=5;
                }
                break;
            case 97:
                {
                alt149=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 149, 0, input);

                throw nvae;
            }

            switch (alt149) {
                case 1 :
                    // InternalStubbrLang.g:4400:3: this_SendMessage_0= ruleSendMessage
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAttachmentAccess().getSendMessageParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_SendMessage_0=ruleSendMessage();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_SendMessage_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalStubbrLang.g:4409:3: this_SendData_1= ruleSendData
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAttachmentAccess().getSendDataParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_SendData_1=ruleSendData();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_SendData_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalStubbrLang.g:4418:3: this_DataIO_2= ruleDataIO
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAttachmentAccess().getDataIOParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_DataIO_2=ruleDataIO();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_DataIO_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalStubbrLang.g:4427:3: this_Annotation_3= ruleAnnotation
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAttachmentAccess().getAnnotationParserRuleCall_3());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Annotation_3=ruleAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Annotation_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalStubbrLang.g:4436:3: this_Documentation_4= ruleDocumentation
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAttachmentAccess().getDocumentationParserRuleCall_4());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Documentation_4=ruleDocumentation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Documentation_4;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalStubbrLang.g:4445:3: this_Flow_5= ruleFlow
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAttachmentAccess().getFlowParserRuleCall_5());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Flow_5=ruleFlow();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Flow_5;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAttachment"


    // $ANTLR start "entryRuleSendMessage"
    // InternalStubbrLang.g:4457:1: entryRuleSendMessage returns [EObject current=null] : iv_ruleSendMessage= ruleSendMessage EOF ;
    public final EObject entryRuleSendMessage() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSendMessage = null;


        try {
            // InternalStubbrLang.g:4457:52: (iv_ruleSendMessage= ruleSendMessage EOF )
            // InternalStubbrLang.g:4458:2: iv_ruleSendMessage= ruleSendMessage EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSendMessageRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSendMessage=ruleSendMessage();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSendMessage; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSendMessage"


    // $ANTLR start "ruleSendMessage"
    // InternalStubbrLang.g:4464:1: ruleSendMessage returns [EObject current=null] : (otherlv_0= 'send message' ( (lv_name_1_0= RULE_ID ) )? ( (lv_label_2_0= RULE_STRING ) )? (otherlv_3= 'to' ( ( ruleQualifiedName ) ) ) (otherlv_5= 'datatype' ( (lv_dataType_6_0= ruleJvmTypeReference ) ) )? ) ;
    public final EObject ruleSendMessage() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_name_1_0=null;
        Token lv_label_2_0=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_dataType_6_0 = null;



        	enterRule();

        try {
            // InternalStubbrLang.g:4470:2: ( (otherlv_0= 'send message' ( (lv_name_1_0= RULE_ID ) )? ( (lv_label_2_0= RULE_STRING ) )? (otherlv_3= 'to' ( ( ruleQualifiedName ) ) ) (otherlv_5= 'datatype' ( (lv_dataType_6_0= ruleJvmTypeReference ) ) )? ) )
            // InternalStubbrLang.g:4471:2: (otherlv_0= 'send message' ( (lv_name_1_0= RULE_ID ) )? ( (lv_label_2_0= RULE_STRING ) )? (otherlv_3= 'to' ( ( ruleQualifiedName ) ) ) (otherlv_5= 'datatype' ( (lv_dataType_6_0= ruleJvmTypeReference ) ) )? )
            {
            // InternalStubbrLang.g:4471:2: (otherlv_0= 'send message' ( (lv_name_1_0= RULE_ID ) )? ( (lv_label_2_0= RULE_STRING ) )? (otherlv_3= 'to' ( ( ruleQualifiedName ) ) ) (otherlv_5= 'datatype' ( (lv_dataType_6_0= ruleJvmTypeReference ) ) )? )
            // InternalStubbrLang.g:4472:3: otherlv_0= 'send message' ( (lv_name_1_0= RULE_ID ) )? ( (lv_label_2_0= RULE_STRING ) )? (otherlv_3= 'to' ( ( ruleQualifiedName ) ) ) (otherlv_5= 'datatype' ( (lv_dataType_6_0= ruleJvmTypeReference ) ) )?
            {
            otherlv_0=(Token)match(input,93,FOLLOW_123); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getSendMessageAccess().getSendMessageKeyword_0());
              		
            }
            // InternalStubbrLang.g:4476:3: ( (lv_name_1_0= RULE_ID ) )?
            int alt150=2;
            int LA150_0 = input.LA(1);

            if ( (LA150_0==RULE_ID) ) {
                alt150=1;
            }
            switch (alt150) {
                case 1 :
                    // InternalStubbrLang.g:4477:4: (lv_name_1_0= RULE_ID )
                    {
                    // InternalStubbrLang.g:4477:4: (lv_name_1_0= RULE_ID )
                    // InternalStubbrLang.g:4478:5: lv_name_1_0= RULE_ID
                    {
                    lv_name_1_0=(Token)match(input,RULE_ID,FOLLOW_124); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_name_1_0, grammarAccess.getSendMessageAccess().getNameIDTerminalRuleCall_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getSendMessageRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"name",
                      						lv_name_1_0,
                      						"org.eclipse.xtext.xbase.Xtype.ID");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:4494:3: ( (lv_label_2_0= RULE_STRING ) )?
            int alt151=2;
            int LA151_0 = input.LA(1);

            if ( (LA151_0==RULE_STRING) ) {
                alt151=1;
            }
            switch (alt151) {
                case 1 :
                    // InternalStubbrLang.g:4495:4: (lv_label_2_0= RULE_STRING )
                    {
                    // InternalStubbrLang.g:4495:4: (lv_label_2_0= RULE_STRING )
                    // InternalStubbrLang.g:4496:5: lv_label_2_0= RULE_STRING
                    {
                    lv_label_2_0=(Token)match(input,RULE_STRING,FOLLOW_89); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_label_2_0, grammarAccess.getSendMessageAccess().getLabelSTRINGTerminalRuleCall_2_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getSendMessageRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"label",
                      						lv_label_2_0,
                      						"org.eclipse.xtext.xbase.Xtype.STRING");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:4512:3: (otherlv_3= 'to' ( ( ruleQualifiedName ) ) )
            // InternalStubbrLang.g:4513:4: otherlv_3= 'to' ( ( ruleQualifiedName ) )
            {
            otherlv_3=(Token)match(input,76,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(otherlv_3, grammarAccess.getSendMessageAccess().getToKeyword_3_0());
              			
            }
            // InternalStubbrLang.g:4517:4: ( ( ruleQualifiedName ) )
            // InternalStubbrLang.g:4518:5: ( ruleQualifiedName )
            {
            // InternalStubbrLang.g:4518:5: ( ruleQualifiedName )
            // InternalStubbrLang.g:4519:6: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              						if (current==null) {
              							current = createModelElement(grammarAccess.getSendMessageRule());
              						}
              					
            }
            if ( state.backtracking==0 ) {

              						newCompositeNode(grammarAccess.getSendMessageAccess().getReceivingElementInteractionNodeCrossReference_3_1_0());
              					
            }
            pushFollow(FOLLOW_125);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              						afterParserOrEnumRuleCall();
              					
            }

            }


            }


            }

            // InternalStubbrLang.g:4534:3: (otherlv_5= 'datatype' ( (lv_dataType_6_0= ruleJvmTypeReference ) ) )?
            int alt152=2;
            int LA152_0 = input.LA(1);

            if ( (LA152_0==94) ) {
                alt152=1;
            }
            switch (alt152) {
                case 1 :
                    // InternalStubbrLang.g:4535:4: otherlv_5= 'datatype' ( (lv_dataType_6_0= ruleJvmTypeReference ) )
                    {
                    otherlv_5=(Token)match(input,94,FOLLOW_52); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getSendMessageAccess().getDatatypeKeyword_4_0());
                      			
                    }
                    // InternalStubbrLang.g:4539:4: ( (lv_dataType_6_0= ruleJvmTypeReference ) )
                    // InternalStubbrLang.g:4540:5: (lv_dataType_6_0= ruleJvmTypeReference )
                    {
                    // InternalStubbrLang.g:4540:5: (lv_dataType_6_0= ruleJvmTypeReference )
                    // InternalStubbrLang.g:4541:6: lv_dataType_6_0= ruleJvmTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSendMessageAccess().getDataTypeJvmTypeReferenceParserRuleCall_4_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_dataType_6_0=ruleJvmTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getSendMessageRule());
                      						}
                      						set(
                      							current,
                      							"dataType",
                      							lv_dataType_6_0,
                      							"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSendMessage"


    // $ANTLR start "entryRuleSendData"
    // InternalStubbrLang.g:4563:1: entryRuleSendData returns [EObject current=null] : iv_ruleSendData= ruleSendData EOF ;
    public final EObject entryRuleSendData() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSendData = null;


        try {
            // InternalStubbrLang.g:4563:49: (iv_ruleSendData= ruleSendData EOF )
            // InternalStubbrLang.g:4564:2: iv_ruleSendData= ruleSendData EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSendDataRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSendData=ruleSendData();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSendData; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSendData"


    // $ANTLR start "ruleSendData"
    // InternalStubbrLang.g:4570:1: ruleSendData returns [EObject current=null] : (otherlv_0= 'send data' ( (lv_name_1_0= RULE_ID ) )? ( (lv_label_2_0= RULE_STRING ) )? (otherlv_3= 'to' ( ( ruleQualifiedName ) ) ) (otherlv_5= 'datatype' ( (lv_dataType_6_0= ruleJvmTypeReference ) ) )? ) ;
    public final EObject ruleSendData() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_name_1_0=null;
        Token lv_label_2_0=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_dataType_6_0 = null;



        	enterRule();

        try {
            // InternalStubbrLang.g:4576:2: ( (otherlv_0= 'send data' ( (lv_name_1_0= RULE_ID ) )? ( (lv_label_2_0= RULE_STRING ) )? (otherlv_3= 'to' ( ( ruleQualifiedName ) ) ) (otherlv_5= 'datatype' ( (lv_dataType_6_0= ruleJvmTypeReference ) ) )? ) )
            // InternalStubbrLang.g:4577:2: (otherlv_0= 'send data' ( (lv_name_1_0= RULE_ID ) )? ( (lv_label_2_0= RULE_STRING ) )? (otherlv_3= 'to' ( ( ruleQualifiedName ) ) ) (otherlv_5= 'datatype' ( (lv_dataType_6_0= ruleJvmTypeReference ) ) )? )
            {
            // InternalStubbrLang.g:4577:2: (otherlv_0= 'send data' ( (lv_name_1_0= RULE_ID ) )? ( (lv_label_2_0= RULE_STRING ) )? (otherlv_3= 'to' ( ( ruleQualifiedName ) ) ) (otherlv_5= 'datatype' ( (lv_dataType_6_0= ruleJvmTypeReference ) ) )? )
            // InternalStubbrLang.g:4578:3: otherlv_0= 'send data' ( (lv_name_1_0= RULE_ID ) )? ( (lv_label_2_0= RULE_STRING ) )? (otherlv_3= 'to' ( ( ruleQualifiedName ) ) ) (otherlv_5= 'datatype' ( (lv_dataType_6_0= ruleJvmTypeReference ) ) )?
            {
            otherlv_0=(Token)match(input,95,FOLLOW_123); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getSendDataAccess().getSendDataKeyword_0());
              		
            }
            // InternalStubbrLang.g:4582:3: ( (lv_name_1_0= RULE_ID ) )?
            int alt153=2;
            int LA153_0 = input.LA(1);

            if ( (LA153_0==RULE_ID) ) {
                alt153=1;
            }
            switch (alt153) {
                case 1 :
                    // InternalStubbrLang.g:4583:4: (lv_name_1_0= RULE_ID )
                    {
                    // InternalStubbrLang.g:4583:4: (lv_name_1_0= RULE_ID )
                    // InternalStubbrLang.g:4584:5: lv_name_1_0= RULE_ID
                    {
                    lv_name_1_0=(Token)match(input,RULE_ID,FOLLOW_124); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_name_1_0, grammarAccess.getSendDataAccess().getNameIDTerminalRuleCall_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getSendDataRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"name",
                      						lv_name_1_0,
                      						"org.eclipse.xtext.xbase.Xtype.ID");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:4600:3: ( (lv_label_2_0= RULE_STRING ) )?
            int alt154=2;
            int LA154_0 = input.LA(1);

            if ( (LA154_0==RULE_STRING) ) {
                alt154=1;
            }
            switch (alt154) {
                case 1 :
                    // InternalStubbrLang.g:4601:4: (lv_label_2_0= RULE_STRING )
                    {
                    // InternalStubbrLang.g:4601:4: (lv_label_2_0= RULE_STRING )
                    // InternalStubbrLang.g:4602:5: lv_label_2_0= RULE_STRING
                    {
                    lv_label_2_0=(Token)match(input,RULE_STRING,FOLLOW_89); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_label_2_0, grammarAccess.getSendDataAccess().getLabelSTRINGTerminalRuleCall_2_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getSendDataRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"label",
                      						lv_label_2_0,
                      						"org.eclipse.xtext.xbase.Xtype.STRING");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:4618:3: (otherlv_3= 'to' ( ( ruleQualifiedName ) ) )
            // InternalStubbrLang.g:4619:4: otherlv_3= 'to' ( ( ruleQualifiedName ) )
            {
            otherlv_3=(Token)match(input,76,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(otherlv_3, grammarAccess.getSendDataAccess().getToKeyword_3_0());
              			
            }
            // InternalStubbrLang.g:4623:4: ( ( ruleQualifiedName ) )
            // InternalStubbrLang.g:4624:5: ( ruleQualifiedName )
            {
            // InternalStubbrLang.g:4624:5: ( ruleQualifiedName )
            // InternalStubbrLang.g:4625:6: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              						if (current==null) {
              							current = createModelElement(grammarAccess.getSendDataRule());
              						}
              					
            }
            if ( state.backtracking==0 ) {

              						newCompositeNode(grammarAccess.getSendDataAccess().getReceivingElementFlowNodeCrossReference_3_1_0());
              					
            }
            pushFollow(FOLLOW_125);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              						afterParserOrEnumRuleCall();
              					
            }

            }


            }


            }

            // InternalStubbrLang.g:4640:3: (otherlv_5= 'datatype' ( (lv_dataType_6_0= ruleJvmTypeReference ) ) )?
            int alt155=2;
            int LA155_0 = input.LA(1);

            if ( (LA155_0==94) ) {
                alt155=1;
            }
            switch (alt155) {
                case 1 :
                    // InternalStubbrLang.g:4641:4: otherlv_5= 'datatype' ( (lv_dataType_6_0= ruleJvmTypeReference ) )
                    {
                    otherlv_5=(Token)match(input,94,FOLLOW_52); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getSendDataAccess().getDatatypeKeyword_4_0());
                      			
                    }
                    // InternalStubbrLang.g:4645:4: ( (lv_dataType_6_0= ruleJvmTypeReference ) )
                    // InternalStubbrLang.g:4646:5: (lv_dataType_6_0= ruleJvmTypeReference )
                    {
                    // InternalStubbrLang.g:4646:5: (lv_dataType_6_0= ruleJvmTypeReference )
                    // InternalStubbrLang.g:4647:6: lv_dataType_6_0= ruleJvmTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSendDataAccess().getDataTypeJvmTypeReferenceParserRuleCall_4_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_dataType_6_0=ruleJvmTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getSendDataRule());
                      						}
                      						set(
                      							current,
                      							"dataType",
                      							lv_dataType_6_0,
                      							"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSendData"


    // $ANTLR start "entryRuleDataIO"
    // InternalStubbrLang.g:4669:1: entryRuleDataIO returns [EObject current=null] : iv_ruleDataIO= ruleDataIO EOF ;
    public final EObject entryRuleDataIO() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDataIO = null;


        try {
            // InternalStubbrLang.g:4669:47: (iv_ruleDataIO= ruleDataIO EOF )
            // InternalStubbrLang.g:4670:2: iv_ruleDataIO= ruleDataIO EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDataIORule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDataIO=ruleDataIO();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDataIO; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDataIO"


    // $ANTLR start "ruleDataIO"
    // InternalStubbrLang.g:4676:1: ruleDataIO returns [EObject current=null] : ( ( (lv_dataIoType_0_0= ruleDataIOType ) ) ( (lv_name_1_0= RULE_ID ) )? ( (lv_label_2_0= RULE_STRING ) )? (otherlv_3= 'datatype' ( (lv_javaType_4_0= ruleJvmTypeReference ) ) )? ) ;
    public final EObject ruleDataIO() throws RecognitionException {
        EObject current = null;

        Token lv_name_1_0=null;
        Token lv_label_2_0=null;
        Token otherlv_3=null;
        Enumerator lv_dataIoType_0_0 = null;

        EObject lv_javaType_4_0 = null;



        	enterRule();

        try {
            // InternalStubbrLang.g:4682:2: ( ( ( (lv_dataIoType_0_0= ruleDataIOType ) ) ( (lv_name_1_0= RULE_ID ) )? ( (lv_label_2_0= RULE_STRING ) )? (otherlv_3= 'datatype' ( (lv_javaType_4_0= ruleJvmTypeReference ) ) )? ) )
            // InternalStubbrLang.g:4683:2: ( ( (lv_dataIoType_0_0= ruleDataIOType ) ) ( (lv_name_1_0= RULE_ID ) )? ( (lv_label_2_0= RULE_STRING ) )? (otherlv_3= 'datatype' ( (lv_javaType_4_0= ruleJvmTypeReference ) ) )? )
            {
            // InternalStubbrLang.g:4683:2: ( ( (lv_dataIoType_0_0= ruleDataIOType ) ) ( (lv_name_1_0= RULE_ID ) )? ( (lv_label_2_0= RULE_STRING ) )? (otherlv_3= 'datatype' ( (lv_javaType_4_0= ruleJvmTypeReference ) ) )? )
            // InternalStubbrLang.g:4684:3: ( (lv_dataIoType_0_0= ruleDataIOType ) ) ( (lv_name_1_0= RULE_ID ) )? ( (lv_label_2_0= RULE_STRING ) )? (otherlv_3= 'datatype' ( (lv_javaType_4_0= ruleJvmTypeReference ) ) )?
            {
            // InternalStubbrLang.g:4684:3: ( (lv_dataIoType_0_0= ruleDataIOType ) )
            // InternalStubbrLang.g:4685:4: (lv_dataIoType_0_0= ruleDataIOType )
            {
            // InternalStubbrLang.g:4685:4: (lv_dataIoType_0_0= ruleDataIOType )
            // InternalStubbrLang.g:4686:5: lv_dataIoType_0_0= ruleDataIOType
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getDataIOAccess().getDataIoTypeDataIOTypeEnumRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_126);
            lv_dataIoType_0_0=ruleDataIOType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getDataIORule());
              					}
              					set(
              						current,
              						"dataIoType",
              						lv_dataIoType_0_0,
              						"com.laegler.stubbr.lang.StubbrLang.DataIOType");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalStubbrLang.g:4703:3: ( (lv_name_1_0= RULE_ID ) )?
            int alt156=2;
            int LA156_0 = input.LA(1);

            if ( (LA156_0==RULE_ID) ) {
                alt156=1;
            }
            switch (alt156) {
                case 1 :
                    // InternalStubbrLang.g:4704:4: (lv_name_1_0= RULE_ID )
                    {
                    // InternalStubbrLang.g:4704:4: (lv_name_1_0= RULE_ID )
                    // InternalStubbrLang.g:4705:5: lv_name_1_0= RULE_ID
                    {
                    lv_name_1_0=(Token)match(input,RULE_ID,FOLLOW_127); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_name_1_0, grammarAccess.getDataIOAccess().getNameIDTerminalRuleCall_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getDataIORule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"name",
                      						lv_name_1_0,
                      						"org.eclipse.xtext.xbase.Xtype.ID");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:4721:3: ( (lv_label_2_0= RULE_STRING ) )?
            int alt157=2;
            int LA157_0 = input.LA(1);

            if ( (LA157_0==RULE_STRING) ) {
                alt157=1;
            }
            switch (alt157) {
                case 1 :
                    // InternalStubbrLang.g:4722:4: (lv_label_2_0= RULE_STRING )
                    {
                    // InternalStubbrLang.g:4722:4: (lv_label_2_0= RULE_STRING )
                    // InternalStubbrLang.g:4723:5: lv_label_2_0= RULE_STRING
                    {
                    lv_label_2_0=(Token)match(input,RULE_STRING,FOLLOW_125); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_label_2_0, grammarAccess.getDataIOAccess().getLabelSTRINGTerminalRuleCall_2_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getDataIORule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"label",
                      						lv_label_2_0,
                      						"org.eclipse.xtext.xbase.Xtype.STRING");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:4739:3: (otherlv_3= 'datatype' ( (lv_javaType_4_0= ruleJvmTypeReference ) ) )?
            int alt158=2;
            int LA158_0 = input.LA(1);

            if ( (LA158_0==94) ) {
                alt158=1;
            }
            switch (alt158) {
                case 1 :
                    // InternalStubbrLang.g:4740:4: otherlv_3= 'datatype' ( (lv_javaType_4_0= ruleJvmTypeReference ) )
                    {
                    otherlv_3=(Token)match(input,94,FOLLOW_52); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getDataIOAccess().getDatatypeKeyword_3_0());
                      			
                    }
                    // InternalStubbrLang.g:4744:4: ( (lv_javaType_4_0= ruleJvmTypeReference ) )
                    // InternalStubbrLang.g:4745:5: (lv_javaType_4_0= ruleJvmTypeReference )
                    {
                    // InternalStubbrLang.g:4745:5: (lv_javaType_4_0= ruleJvmTypeReference )
                    // InternalStubbrLang.g:4746:6: lv_javaType_4_0= ruleJvmTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDataIOAccess().getJavaTypeJvmTypeReferenceParserRuleCall_3_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_javaType_4_0=ruleJvmTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDataIORule());
                      						}
                      						set(
                      							current,
                      							"javaType",
                      							lv_javaType_4_0,
                      							"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDataIO"


    // $ANTLR start "entryRuleAnnotation"
    // InternalStubbrLang.g:4768:1: entryRuleAnnotation returns [EObject current=null] : iv_ruleAnnotation= ruleAnnotation EOF ;
    public final EObject entryRuleAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAnnotation = null;


        try {
            // InternalStubbrLang.g:4768:51: (iv_ruleAnnotation= ruleAnnotation EOF )
            // InternalStubbrLang.g:4769:2: iv_ruleAnnotation= ruleAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnnotationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAnnotation=ruleAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAnnotation; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAnnotation"


    // $ANTLR start "ruleAnnotation"
    // InternalStubbrLang.g:4775:1: ruleAnnotation returns [EObject current=null] : (otherlv_0= 'annotation' ( (lv_name_1_0= RULE_ID ) )? ( (lv_text_2_0= RULE_STRING ) ) ) ;
    public final EObject ruleAnnotation() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_name_1_0=null;
        Token lv_text_2_0=null;


        	enterRule();

        try {
            // InternalStubbrLang.g:4781:2: ( (otherlv_0= 'annotation' ( (lv_name_1_0= RULE_ID ) )? ( (lv_text_2_0= RULE_STRING ) ) ) )
            // InternalStubbrLang.g:4782:2: (otherlv_0= 'annotation' ( (lv_name_1_0= RULE_ID ) )? ( (lv_text_2_0= RULE_STRING ) ) )
            {
            // InternalStubbrLang.g:4782:2: (otherlv_0= 'annotation' ( (lv_name_1_0= RULE_ID ) )? ( (lv_text_2_0= RULE_STRING ) ) )
            // InternalStubbrLang.g:4783:3: otherlv_0= 'annotation' ( (lv_name_1_0= RULE_ID ) )? ( (lv_text_2_0= RULE_STRING ) )
            {
            otherlv_0=(Token)match(input,96,FOLLOW_128); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getAnnotationAccess().getAnnotationKeyword_0());
              		
            }
            // InternalStubbrLang.g:4787:3: ( (lv_name_1_0= RULE_ID ) )?
            int alt159=2;
            int LA159_0 = input.LA(1);

            if ( (LA159_0==RULE_ID) ) {
                alt159=1;
            }
            switch (alt159) {
                case 1 :
                    // InternalStubbrLang.g:4788:4: (lv_name_1_0= RULE_ID )
                    {
                    // InternalStubbrLang.g:4788:4: (lv_name_1_0= RULE_ID )
                    // InternalStubbrLang.g:4789:5: lv_name_1_0= RULE_ID
                    {
                    lv_name_1_0=(Token)match(input,RULE_ID,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_name_1_0, grammarAccess.getAnnotationAccess().getNameIDTerminalRuleCall_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getAnnotationRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"name",
                      						lv_name_1_0,
                      						"org.eclipse.xtext.xbase.Xtype.ID");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:4805:3: ( (lv_text_2_0= RULE_STRING ) )
            // InternalStubbrLang.g:4806:4: (lv_text_2_0= RULE_STRING )
            {
            // InternalStubbrLang.g:4806:4: (lv_text_2_0= RULE_STRING )
            // InternalStubbrLang.g:4807:5: lv_text_2_0= RULE_STRING
            {
            lv_text_2_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_text_2_0, grammarAccess.getAnnotationAccess().getTextSTRINGTerminalRuleCall_2_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getAnnotationRule());
              					}
              					setWithLastConsumed(
              						current,
              						"text",
              						lv_text_2_0,
              						"org.eclipse.xtext.xbase.Xtype.STRING");
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAnnotation"


    // $ANTLR start "entryRuleDocumentation"
    // InternalStubbrLang.g:4827:1: entryRuleDocumentation returns [EObject current=null] : iv_ruleDocumentation= ruleDocumentation EOF ;
    public final EObject entryRuleDocumentation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDocumentation = null;


        try {
            // InternalStubbrLang.g:4827:54: (iv_ruleDocumentation= ruleDocumentation EOF )
            // InternalStubbrLang.g:4828:2: iv_ruleDocumentation= ruleDocumentation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDocumentationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDocumentation=ruleDocumentation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDocumentation; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDocumentation"


    // $ANTLR start "ruleDocumentation"
    // InternalStubbrLang.g:4834:1: ruleDocumentation returns [EObject current=null] : (otherlv_0= 'documentation' ( (lv_name_1_0= RULE_ID ) )? ( (lv_text_2_0= RULE_STRING ) ) ) ;
    public final EObject ruleDocumentation() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_name_1_0=null;
        Token lv_text_2_0=null;


        	enterRule();

        try {
            // InternalStubbrLang.g:4840:2: ( (otherlv_0= 'documentation' ( (lv_name_1_0= RULE_ID ) )? ( (lv_text_2_0= RULE_STRING ) ) ) )
            // InternalStubbrLang.g:4841:2: (otherlv_0= 'documentation' ( (lv_name_1_0= RULE_ID ) )? ( (lv_text_2_0= RULE_STRING ) ) )
            {
            // InternalStubbrLang.g:4841:2: (otherlv_0= 'documentation' ( (lv_name_1_0= RULE_ID ) )? ( (lv_text_2_0= RULE_STRING ) ) )
            // InternalStubbrLang.g:4842:3: otherlv_0= 'documentation' ( (lv_name_1_0= RULE_ID ) )? ( (lv_text_2_0= RULE_STRING ) )
            {
            otherlv_0=(Token)match(input,18,FOLLOW_128); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getDocumentationAccess().getDocumentationKeyword_0());
              		
            }
            // InternalStubbrLang.g:4846:3: ( (lv_name_1_0= RULE_ID ) )?
            int alt160=2;
            int LA160_0 = input.LA(1);

            if ( (LA160_0==RULE_ID) ) {
                alt160=1;
            }
            switch (alt160) {
                case 1 :
                    // InternalStubbrLang.g:4847:4: (lv_name_1_0= RULE_ID )
                    {
                    // InternalStubbrLang.g:4847:4: (lv_name_1_0= RULE_ID )
                    // InternalStubbrLang.g:4848:5: lv_name_1_0= RULE_ID
                    {
                    lv_name_1_0=(Token)match(input,RULE_ID,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_name_1_0, grammarAccess.getDocumentationAccess().getNameIDTerminalRuleCall_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getDocumentationRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"name",
                      						lv_name_1_0,
                      						"org.eclipse.xtext.xbase.Xtype.ID");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:4864:3: ( (lv_text_2_0= RULE_STRING ) )
            // InternalStubbrLang.g:4865:4: (lv_text_2_0= RULE_STRING )
            {
            // InternalStubbrLang.g:4865:4: (lv_text_2_0= RULE_STRING )
            // InternalStubbrLang.g:4866:5: lv_text_2_0= RULE_STRING
            {
            lv_text_2_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_text_2_0, grammarAccess.getDocumentationAccess().getTextSTRINGTerminalRuleCall_2_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getDocumentationRule());
              					}
              					setWithLastConsumed(
              						current,
              						"text",
              						lv_text_2_0,
              						"org.eclipse.xtext.xbase.Xtype.STRING");
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDocumentation"


    // $ANTLR start "entryRuleFlow"
    // InternalStubbrLang.g:4886:1: entryRuleFlow returns [EObject current=null] : iv_ruleFlow= ruleFlow EOF ;
    public final EObject entryRuleFlow() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFlow = null;


        try {
            // InternalStubbrLang.g:4886:45: (iv_ruleFlow= ruleFlow EOF )
            // InternalStubbrLang.g:4887:2: iv_ruleFlow= ruleFlow EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFlowRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFlow=ruleFlow();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFlow; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFlow"


    // $ANTLR start "ruleFlow"
    // InternalStubbrLang.g:4893:1: ruleFlow returns [EObject current=null] : (otherlv_0= 'flow' ( (lv_name_1_0= RULE_ID ) )? ( (lv_label_2_0= RULE_STRING ) )? (otherlv_3= 'to' ( ( ruleQualifiedName ) ) ) ) ;
    public final EObject ruleFlow() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_name_1_0=null;
        Token lv_label_2_0=null;
        Token otherlv_3=null;


        	enterRule();

        try {
            // InternalStubbrLang.g:4899:2: ( (otherlv_0= 'flow' ( (lv_name_1_0= RULE_ID ) )? ( (lv_label_2_0= RULE_STRING ) )? (otherlv_3= 'to' ( ( ruleQualifiedName ) ) ) ) )
            // InternalStubbrLang.g:4900:2: (otherlv_0= 'flow' ( (lv_name_1_0= RULE_ID ) )? ( (lv_label_2_0= RULE_STRING ) )? (otherlv_3= 'to' ( ( ruleQualifiedName ) ) ) )
            {
            // InternalStubbrLang.g:4900:2: (otherlv_0= 'flow' ( (lv_name_1_0= RULE_ID ) )? ( (lv_label_2_0= RULE_STRING ) )? (otherlv_3= 'to' ( ( ruleQualifiedName ) ) ) )
            // InternalStubbrLang.g:4901:3: otherlv_0= 'flow' ( (lv_name_1_0= RULE_ID ) )? ( (lv_label_2_0= RULE_STRING ) )? (otherlv_3= 'to' ( ( ruleQualifiedName ) ) )
            {
            otherlv_0=(Token)match(input,97,FOLLOW_123); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getFlowAccess().getFlowKeyword_0());
              		
            }
            // InternalStubbrLang.g:4905:3: ( (lv_name_1_0= RULE_ID ) )?
            int alt161=2;
            int LA161_0 = input.LA(1);

            if ( (LA161_0==RULE_ID) ) {
                alt161=1;
            }
            switch (alt161) {
                case 1 :
                    // InternalStubbrLang.g:4906:4: (lv_name_1_0= RULE_ID )
                    {
                    // InternalStubbrLang.g:4906:4: (lv_name_1_0= RULE_ID )
                    // InternalStubbrLang.g:4907:5: lv_name_1_0= RULE_ID
                    {
                    lv_name_1_0=(Token)match(input,RULE_ID,FOLLOW_124); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_name_1_0, grammarAccess.getFlowAccess().getNameIDTerminalRuleCall_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getFlowRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"name",
                      						lv_name_1_0,
                      						"org.eclipse.xtext.xbase.Xtype.ID");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:4923:3: ( (lv_label_2_0= RULE_STRING ) )?
            int alt162=2;
            int LA162_0 = input.LA(1);

            if ( (LA162_0==RULE_STRING) ) {
                alt162=1;
            }
            switch (alt162) {
                case 1 :
                    // InternalStubbrLang.g:4924:4: (lv_label_2_0= RULE_STRING )
                    {
                    // InternalStubbrLang.g:4924:4: (lv_label_2_0= RULE_STRING )
                    // InternalStubbrLang.g:4925:5: lv_label_2_0= RULE_STRING
                    {
                    lv_label_2_0=(Token)match(input,RULE_STRING,FOLLOW_89); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_label_2_0, grammarAccess.getFlowAccess().getLabelSTRINGTerminalRuleCall_2_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getFlowRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"label",
                      						lv_label_2_0,
                      						"org.eclipse.xtext.xbase.Xtype.STRING");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:4941:3: (otherlv_3= 'to' ( ( ruleQualifiedName ) ) )
            // InternalStubbrLang.g:4942:4: otherlv_3= 'to' ( ( ruleQualifiedName ) )
            {
            otherlv_3=(Token)match(input,76,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(otherlv_3, grammarAccess.getFlowAccess().getToKeyword_3_0());
              			
            }
            // InternalStubbrLang.g:4946:4: ( ( ruleQualifiedName ) )
            // InternalStubbrLang.g:4947:5: ( ruleQualifiedName )
            {
            // InternalStubbrLang.g:4947:5: ( ruleQualifiedName )
            // InternalStubbrLang.g:4948:6: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              						if (current==null) {
              							current = createModelElement(grammarAccess.getFlowRule());
              						}
              					
            }
            if ( state.backtracking==0 ) {

              						newCompositeNode(grammarAccess.getFlowAccess().getTargetRefFlowNodeCrossReference_3_1_0());
              					
            }
            pushFollow(FOLLOW_2);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              						afterParserOrEnumRuleCall();
              					
            }

            }


            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFlow"


    // $ANTLR start "entryRuleDiDiagram"
    // InternalStubbrLang.g:4967:1: entryRuleDiDiagram returns [EObject current=null] : iv_ruleDiDiagram= ruleDiDiagram EOF ;
    public final EObject entryRuleDiDiagram() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDiDiagram = null;


        try {
            // InternalStubbrLang.g:4967:50: (iv_ruleDiDiagram= ruleDiDiagram EOF )
            // InternalStubbrLang.g:4968:2: iv_ruleDiDiagram= ruleDiDiagram EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDiDiagramRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDiDiagram=ruleDiDiagram();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDiDiagram; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDiDiagram"


    // $ANTLR start "ruleDiDiagram"
    // InternalStubbrLang.g:4974:1: ruleDiDiagram returns [EObject current=null] : (otherlv_0= 'diagram' ( (lv_name_1_0= RULE_ID ) )? ( (lv_label_2_0= RULE_STRING ) )? ( (lv_plane_3_0= ruleDiPlane ) ) ) ;
    public final EObject ruleDiDiagram() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_name_1_0=null;
        Token lv_label_2_0=null;
        EObject lv_plane_3_0 = null;



        	enterRule();

        try {
            // InternalStubbrLang.g:4980:2: ( (otherlv_0= 'diagram' ( (lv_name_1_0= RULE_ID ) )? ( (lv_label_2_0= RULE_STRING ) )? ( (lv_plane_3_0= ruleDiPlane ) ) ) )
            // InternalStubbrLang.g:4981:2: (otherlv_0= 'diagram' ( (lv_name_1_0= RULE_ID ) )? ( (lv_label_2_0= RULE_STRING ) )? ( (lv_plane_3_0= ruleDiPlane ) ) )
            {
            // InternalStubbrLang.g:4981:2: (otherlv_0= 'diagram' ( (lv_name_1_0= RULE_ID ) )? ( (lv_label_2_0= RULE_STRING ) )? ( (lv_plane_3_0= ruleDiPlane ) ) )
            // InternalStubbrLang.g:4982:3: otherlv_0= 'diagram' ( (lv_name_1_0= RULE_ID ) )? ( (lv_label_2_0= RULE_STRING ) )? ( (lv_plane_3_0= ruleDiPlane ) )
            {
            otherlv_0=(Token)match(input,98,FOLLOW_129); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getDiDiagramAccess().getDiagramKeyword_0());
              		
            }
            // InternalStubbrLang.g:4986:3: ( (lv_name_1_0= RULE_ID ) )?
            int alt163=2;
            int LA163_0 = input.LA(1);

            if ( (LA163_0==RULE_ID) ) {
                alt163=1;
            }
            switch (alt163) {
                case 1 :
                    // InternalStubbrLang.g:4987:4: (lv_name_1_0= RULE_ID )
                    {
                    // InternalStubbrLang.g:4987:4: (lv_name_1_0= RULE_ID )
                    // InternalStubbrLang.g:4988:5: lv_name_1_0= RULE_ID
                    {
                    lv_name_1_0=(Token)match(input,RULE_ID,FOLLOW_129); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_name_1_0, grammarAccess.getDiDiagramAccess().getNameIDTerminalRuleCall_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getDiDiagramRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"name",
                      						lv_name_1_0,
                      						"org.eclipse.xtext.xbase.Xtype.ID");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:5004:3: ( (lv_label_2_0= RULE_STRING ) )?
            int alt164=2;
            int LA164_0 = input.LA(1);

            if ( (LA164_0==RULE_STRING) ) {
                alt164=1;
            }
            switch (alt164) {
                case 1 :
                    // InternalStubbrLang.g:5005:4: (lv_label_2_0= RULE_STRING )
                    {
                    // InternalStubbrLang.g:5005:4: (lv_label_2_0= RULE_STRING )
                    // InternalStubbrLang.g:5006:5: lv_label_2_0= RULE_STRING
                    {
                    lv_label_2_0=(Token)match(input,RULE_STRING,FOLLOW_129); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_label_2_0, grammarAccess.getDiDiagramAccess().getLabelSTRINGTerminalRuleCall_2_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getDiDiagramRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"label",
                      						lv_label_2_0,
                      						"org.eclipse.xtext.xbase.Xtype.STRING");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:5022:3: ( (lv_plane_3_0= ruleDiPlane ) )
            // InternalStubbrLang.g:5023:4: (lv_plane_3_0= ruleDiPlane )
            {
            // InternalStubbrLang.g:5023:4: (lv_plane_3_0= ruleDiPlane )
            // InternalStubbrLang.g:5024:5: lv_plane_3_0= ruleDiPlane
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getDiDiagramAccess().getPlaneDiPlaneParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_plane_3_0=ruleDiPlane();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getDiDiagramRule());
              					}
              					set(
              						current,
              						"plane",
              						lv_plane_3_0,
              						"com.laegler.stubbr.lang.StubbrLang.DiPlane");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDiDiagram"


    // $ANTLR start "entryRuleDiPlane"
    // InternalStubbrLang.g:5045:1: entryRuleDiPlane returns [EObject current=null] : iv_ruleDiPlane= ruleDiPlane EOF ;
    public final EObject entryRuleDiPlane() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDiPlane = null;


        try {
            // InternalStubbrLang.g:5045:48: (iv_ruleDiPlane= ruleDiPlane EOF )
            // InternalStubbrLang.g:5046:2: iv_ruleDiPlane= ruleDiPlane EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDiPlaneRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDiPlane=ruleDiPlane();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDiPlane; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDiPlane"


    // $ANTLR start "ruleDiPlane"
    // InternalStubbrLang.g:5052:1: ruleDiPlane returns [EObject current=null] : (otherlv_0= 'plane' ( (lv_name_1_0= RULE_ID ) )? (otherlv_2= 'for' ( ( ruleQualifiedName ) ) )? ( (lv_planeElements_4_0= ruleDiPlaneElement ) )+ ) ;
    public final EObject ruleDiPlane() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_name_1_0=null;
        Token otherlv_2=null;
        EObject lv_planeElements_4_0 = null;



        	enterRule();

        try {
            // InternalStubbrLang.g:5058:2: ( (otherlv_0= 'plane' ( (lv_name_1_0= RULE_ID ) )? (otherlv_2= 'for' ( ( ruleQualifiedName ) ) )? ( (lv_planeElements_4_0= ruleDiPlaneElement ) )+ ) )
            // InternalStubbrLang.g:5059:2: (otherlv_0= 'plane' ( (lv_name_1_0= RULE_ID ) )? (otherlv_2= 'for' ( ( ruleQualifiedName ) ) )? ( (lv_planeElements_4_0= ruleDiPlaneElement ) )+ )
            {
            // InternalStubbrLang.g:5059:2: (otherlv_0= 'plane' ( (lv_name_1_0= RULE_ID ) )? (otherlv_2= 'for' ( ( ruleQualifiedName ) ) )? ( (lv_planeElements_4_0= ruleDiPlaneElement ) )+ )
            // InternalStubbrLang.g:5060:3: otherlv_0= 'plane' ( (lv_name_1_0= RULE_ID ) )? (otherlv_2= 'for' ( ( ruleQualifiedName ) ) )? ( (lv_planeElements_4_0= ruleDiPlaneElement ) )+
            {
            otherlv_0=(Token)match(input,99,FOLLOW_130); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getDiPlaneAccess().getPlaneKeyword_0());
              		
            }
            // InternalStubbrLang.g:5064:3: ( (lv_name_1_0= RULE_ID ) )?
            int alt165=2;
            int LA165_0 = input.LA(1);

            if ( (LA165_0==RULE_ID) ) {
                alt165=1;
            }
            switch (alt165) {
                case 1 :
                    // InternalStubbrLang.g:5065:4: (lv_name_1_0= RULE_ID )
                    {
                    // InternalStubbrLang.g:5065:4: (lv_name_1_0= RULE_ID )
                    // InternalStubbrLang.g:5066:5: lv_name_1_0= RULE_ID
                    {
                    lv_name_1_0=(Token)match(input,RULE_ID,FOLLOW_130); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_name_1_0, grammarAccess.getDiPlaneAccess().getNameIDTerminalRuleCall_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getDiPlaneRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"name",
                      						lv_name_1_0,
                      						"org.eclipse.xtext.xbase.Xtype.ID");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:5082:3: (otherlv_2= 'for' ( ( ruleQualifiedName ) ) )?
            int alt166=2;
            int LA166_0 = input.LA(1);

            if ( (LA166_0==100) ) {
                alt166=1;
            }
            switch (alt166) {
                case 1 :
                    // InternalStubbrLang.g:5083:4: otherlv_2= 'for' ( ( ruleQualifiedName ) )
                    {
                    otherlv_2=(Token)match(input,100,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getDiPlaneAccess().getForKeyword_2_0());
                      			
                    }
                    // InternalStubbrLang.g:5087:4: ( ( ruleQualifiedName ) )
                    // InternalStubbrLang.g:5088:5: ( ruleQualifiedName )
                    {
                    // InternalStubbrLang.g:5088:5: ( ruleQualifiedName )
                    // InternalStubbrLang.g:5089:6: ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getDiPlaneRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDiPlaneAccess().getBpmnElementBusinessProcessCrossReference_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_130);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:5104:3: ( (lv_planeElements_4_0= ruleDiPlaneElement ) )+
            int cnt167=0;
            loop167:
            do {
                int alt167=2;
                int LA167_0 = input.LA(1);

                if ( (LA167_0==101||LA167_0==104) ) {
                    alt167=1;
                }


                switch (alt167) {
            	case 1 :
            	    // InternalStubbrLang.g:5105:4: (lv_planeElements_4_0= ruleDiPlaneElement )
            	    {
            	    // InternalStubbrLang.g:5105:4: (lv_planeElements_4_0= ruleDiPlaneElement )
            	    // InternalStubbrLang.g:5106:5: lv_planeElements_4_0= ruleDiPlaneElement
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getDiPlaneAccess().getPlaneElementsDiPlaneElementParserRuleCall_3_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_131);
            	    lv_planeElements_4_0=ruleDiPlaneElement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getDiPlaneRule());
            	      					}
            	      					add(
            	      						current,
            	      						"planeElements",
            	      						lv_planeElements_4_0,
            	      						"com.laegler.stubbr.lang.StubbrLang.DiPlaneElement");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt167 >= 1 ) break loop167;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(167, input);
                        throw eee;
                }
                cnt167++;
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDiPlane"


    // $ANTLR start "entryRuleDiPlaneElement"
    // InternalStubbrLang.g:5127:1: entryRuleDiPlaneElement returns [EObject current=null] : iv_ruleDiPlaneElement= ruleDiPlaneElement EOF ;
    public final EObject entryRuleDiPlaneElement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDiPlaneElement = null;


        try {
            // InternalStubbrLang.g:5127:55: (iv_ruleDiPlaneElement= ruleDiPlaneElement EOF )
            // InternalStubbrLang.g:5128:2: iv_ruleDiPlaneElement= ruleDiPlaneElement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDiPlaneElementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDiPlaneElement=ruleDiPlaneElement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDiPlaneElement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDiPlaneElement"


    // $ANTLR start "ruleDiPlaneElement"
    // InternalStubbrLang.g:5134:1: ruleDiPlaneElement returns [EObject current=null] : (this_DiShape_0= ruleDiShape | this_DiEdge_1= ruleDiEdge ) ;
    public final EObject ruleDiPlaneElement() throws RecognitionException {
        EObject current = null;

        EObject this_DiShape_0 = null;

        EObject this_DiEdge_1 = null;



        	enterRule();

        try {
            // InternalStubbrLang.g:5140:2: ( (this_DiShape_0= ruleDiShape | this_DiEdge_1= ruleDiEdge ) )
            // InternalStubbrLang.g:5141:2: (this_DiShape_0= ruleDiShape | this_DiEdge_1= ruleDiEdge )
            {
            // InternalStubbrLang.g:5141:2: (this_DiShape_0= ruleDiShape | this_DiEdge_1= ruleDiEdge )
            int alt168=2;
            int LA168_0 = input.LA(1);

            if ( (LA168_0==101) ) {
                alt168=1;
            }
            else if ( (LA168_0==104) ) {
                alt168=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 168, 0, input);

                throw nvae;
            }
            switch (alt168) {
                case 1 :
                    // InternalStubbrLang.g:5142:3: this_DiShape_0= ruleDiShape
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDiPlaneElementAccess().getDiShapeParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_DiShape_0=ruleDiShape();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_DiShape_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalStubbrLang.g:5151:3: this_DiEdge_1= ruleDiEdge
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDiPlaneElementAccess().getDiEdgeParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_DiEdge_1=ruleDiEdge();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_DiEdge_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDiPlaneElement"


    // $ANTLR start "entryRuleDiShape"
    // InternalStubbrLang.g:5163:1: entryRuleDiShape returns [EObject current=null] : iv_ruleDiShape= ruleDiShape EOF ;
    public final EObject entryRuleDiShape() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDiShape = null;


        try {
            // InternalStubbrLang.g:5163:48: (iv_ruleDiShape= ruleDiShape EOF )
            // InternalStubbrLang.g:5164:2: iv_ruleDiShape= ruleDiShape EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDiShapeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDiShape=ruleDiShape();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDiShape; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDiShape"


    // $ANTLR start "ruleDiShape"
    // InternalStubbrLang.g:5170:1: ruleDiShape returns [EObject current=null] : (otherlv_0= 'shape' ( (lv_name_1_0= RULE_ID ) )? (otherlv_2= 'for' ( ( ruleQualifiedName ) ) )? ( ( ( ( ({...}? => ( ({...}? => ( (lv_bounds_5_0= ruleDiBounds ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_isExpanded_6_0= 'expanded' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_isHorizontal_7_0= 'horizontal' ) ) ) ) ) )+ {...}?) ) ) ) ;
    public final EObject ruleDiShape() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_name_1_0=null;
        Token otherlv_2=null;
        Token lv_isExpanded_6_0=null;
        Token lv_isHorizontal_7_0=null;
        EObject lv_bounds_5_0 = null;



        	enterRule();

        try {
            // InternalStubbrLang.g:5176:2: ( (otherlv_0= 'shape' ( (lv_name_1_0= RULE_ID ) )? (otherlv_2= 'for' ( ( ruleQualifiedName ) ) )? ( ( ( ( ({...}? => ( ({...}? => ( (lv_bounds_5_0= ruleDiBounds ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_isExpanded_6_0= 'expanded' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_isHorizontal_7_0= 'horizontal' ) ) ) ) ) )+ {...}?) ) ) ) )
            // InternalStubbrLang.g:5177:2: (otherlv_0= 'shape' ( (lv_name_1_0= RULE_ID ) )? (otherlv_2= 'for' ( ( ruleQualifiedName ) ) )? ( ( ( ( ({...}? => ( ({...}? => ( (lv_bounds_5_0= ruleDiBounds ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_isExpanded_6_0= 'expanded' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_isHorizontal_7_0= 'horizontal' ) ) ) ) ) )+ {...}?) ) ) )
            {
            // InternalStubbrLang.g:5177:2: (otherlv_0= 'shape' ( (lv_name_1_0= RULE_ID ) )? (otherlv_2= 'for' ( ( ruleQualifiedName ) ) )? ( ( ( ( ({...}? => ( ({...}? => ( (lv_bounds_5_0= ruleDiBounds ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_isExpanded_6_0= 'expanded' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_isHorizontal_7_0= 'horizontal' ) ) ) ) ) )+ {...}?) ) ) )
            // InternalStubbrLang.g:5178:3: otherlv_0= 'shape' ( (lv_name_1_0= RULE_ID ) )? (otherlv_2= 'for' ( ( ruleQualifiedName ) ) )? ( ( ( ( ({...}? => ( ({...}? => ( (lv_bounds_5_0= ruleDiBounds ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_isExpanded_6_0= 'expanded' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_isHorizontal_7_0= 'horizontal' ) ) ) ) ) )+ {...}?) ) )
            {
            otherlv_0=(Token)match(input,101,FOLLOW_132); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getDiShapeAccess().getShapeKeyword_0());
              		
            }
            // InternalStubbrLang.g:5182:3: ( (lv_name_1_0= RULE_ID ) )?
            int alt169=2;
            int LA169_0 = input.LA(1);

            if ( (LA169_0==RULE_ID) ) {
                alt169=1;
            }
            switch (alt169) {
                case 1 :
                    // InternalStubbrLang.g:5183:4: (lv_name_1_0= RULE_ID )
                    {
                    // InternalStubbrLang.g:5183:4: (lv_name_1_0= RULE_ID )
                    // InternalStubbrLang.g:5184:5: lv_name_1_0= RULE_ID
                    {
                    lv_name_1_0=(Token)match(input,RULE_ID,FOLLOW_133); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_name_1_0, grammarAccess.getDiShapeAccess().getNameIDTerminalRuleCall_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getDiShapeRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"name",
                      						lv_name_1_0,
                      						"org.eclipse.xtext.xbase.Xtype.ID");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:5200:3: (otherlv_2= 'for' ( ( ruleQualifiedName ) ) )?
            int alt170=2;
            int LA170_0 = input.LA(1);

            if ( (LA170_0==100) ) {
                alt170=1;
            }
            switch (alt170) {
                case 1 :
                    // InternalStubbrLang.g:5201:4: otherlv_2= 'for' ( ( ruleQualifiedName ) )
                    {
                    otherlv_2=(Token)match(input,100,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getDiShapeAccess().getForKeyword_2_0());
                      			
                    }
                    // InternalStubbrLang.g:5205:4: ( ( ruleQualifiedName ) )
                    // InternalStubbrLang.g:5206:5: ( ruleQualifiedName )
                    {
                    // InternalStubbrLang.g:5206:5: ( ruleQualifiedName )
                    // InternalStubbrLang.g:5207:6: ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getDiShapeRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDiShapeAccess().getFlowNodeFlowNodeCrossReference_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_134);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:5222:3: ( ( ( ( ({...}? => ( ({...}? => ( (lv_bounds_5_0= ruleDiBounds ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_isExpanded_6_0= 'expanded' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_isHorizontal_7_0= 'horizontal' ) ) ) ) ) )+ {...}?) ) )
            // InternalStubbrLang.g:5223:4: ( ( ( ({...}? => ( ({...}? => ( (lv_bounds_5_0= ruleDiBounds ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_isExpanded_6_0= 'expanded' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_isHorizontal_7_0= 'horizontal' ) ) ) ) ) )+ {...}?) )
            {
            // InternalStubbrLang.g:5223:4: ( ( ( ({...}? => ( ({...}? => ( (lv_bounds_5_0= ruleDiBounds ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_isExpanded_6_0= 'expanded' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_isHorizontal_7_0= 'horizontal' ) ) ) ) ) )+ {...}?) )
            // InternalStubbrLang.g:5224:5: ( ( ({...}? => ( ({...}? => ( (lv_bounds_5_0= ruleDiBounds ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_isExpanded_6_0= 'expanded' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_isHorizontal_7_0= 'horizontal' ) ) ) ) ) )+ {...}?)
            {
            getUnorderedGroupHelper().enter(grammarAccess.getDiShapeAccess().getUnorderedGroup_3());
            // InternalStubbrLang.g:5227:5: ( ( ({...}? => ( ({...}? => ( (lv_bounds_5_0= ruleDiBounds ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_isExpanded_6_0= 'expanded' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_isHorizontal_7_0= 'horizontal' ) ) ) ) ) )+ {...}?)
            // InternalStubbrLang.g:5228:6: ( ({...}? => ( ({...}? => ( (lv_bounds_5_0= ruleDiBounds ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_isExpanded_6_0= 'expanded' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_isHorizontal_7_0= 'horizontal' ) ) ) ) ) )+ {...}?
            {
            // InternalStubbrLang.g:5228:6: ( ({...}? => ( ({...}? => ( (lv_bounds_5_0= ruleDiBounds ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_isExpanded_6_0= 'expanded' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_isHorizontal_7_0= 'horizontal' ) ) ) ) ) )+
            int cnt171=0;
            loop171:
            do {
                int alt171=4;
                int LA171_0 = input.LA(1);

                if ( LA171_0 == 105 && getUnorderedGroupHelper().canSelect(grammarAccess.getDiShapeAccess().getUnorderedGroup_3(), 0) ) {
                    alt171=1;
                }
                else if ( LA171_0 == 102 && getUnorderedGroupHelper().canSelect(grammarAccess.getDiShapeAccess().getUnorderedGroup_3(), 1) ) {
                    alt171=2;
                }
                else if ( LA171_0 == 103 && getUnorderedGroupHelper().canSelect(grammarAccess.getDiShapeAccess().getUnorderedGroup_3(), 2) ) {
                    alt171=3;
                }


                switch (alt171) {
            	case 1 :
            	    // InternalStubbrLang.g:5229:4: ({...}? => ( ({...}? => ( (lv_bounds_5_0= ruleDiBounds ) ) ) ) )
            	    {
            	    // InternalStubbrLang.g:5229:4: ({...}? => ( ({...}? => ( (lv_bounds_5_0= ruleDiBounds ) ) ) ) )
            	    // InternalStubbrLang.g:5230:5: {...}? => ( ({...}? => ( (lv_bounds_5_0= ruleDiBounds ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDiShapeAccess().getUnorderedGroup_3(), 0) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDiShape", "getUnorderedGroupHelper().canSelect(grammarAccess.getDiShapeAccess().getUnorderedGroup_3(), 0)");
            	    }
            	    // InternalStubbrLang.g:5230:104: ( ({...}? => ( (lv_bounds_5_0= ruleDiBounds ) ) ) )
            	    // InternalStubbrLang.g:5231:6: ({...}? => ( (lv_bounds_5_0= ruleDiBounds ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getDiShapeAccess().getUnorderedGroup_3(), 0);
            	    // InternalStubbrLang.g:5234:9: ({...}? => ( (lv_bounds_5_0= ruleDiBounds ) ) )
            	    // InternalStubbrLang.g:5234:10: {...}? => ( (lv_bounds_5_0= ruleDiBounds ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDiShape", "true");
            	    }
            	    // InternalStubbrLang.g:5234:19: ( (lv_bounds_5_0= ruleDiBounds ) )
            	    // InternalStubbrLang.g:5234:20: (lv_bounds_5_0= ruleDiBounds )
            	    {
            	    // InternalStubbrLang.g:5234:20: (lv_bounds_5_0= ruleDiBounds )
            	    // InternalStubbrLang.g:5235:10: lv_bounds_5_0= ruleDiBounds
            	    {
            	    if ( state.backtracking==0 ) {

            	      										newCompositeNode(grammarAccess.getDiShapeAccess().getBoundsDiBoundsParserRuleCall_3_0_0());
            	      									
            	    }
            	    pushFollow(FOLLOW_135);
            	    lv_bounds_5_0=ruleDiBounds();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      										if (current==null) {
            	      											current = createModelElementForParent(grammarAccess.getDiShapeRule());
            	      										}
            	      										set(
            	      											current,
            	      											"bounds",
            	      											lv_bounds_5_0,
            	      											"com.laegler.stubbr.lang.StubbrLang.DiBounds");
            	      										afterParserOrEnumRuleCall();
            	      									
            	    }

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDiShapeAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalStubbrLang.g:5257:4: ({...}? => ( ({...}? => ( (lv_isExpanded_6_0= 'expanded' ) ) ) ) )
            	    {
            	    // InternalStubbrLang.g:5257:4: ({...}? => ( ({...}? => ( (lv_isExpanded_6_0= 'expanded' ) ) ) ) )
            	    // InternalStubbrLang.g:5258:5: {...}? => ( ({...}? => ( (lv_isExpanded_6_0= 'expanded' ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDiShapeAccess().getUnorderedGroup_3(), 1) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDiShape", "getUnorderedGroupHelper().canSelect(grammarAccess.getDiShapeAccess().getUnorderedGroup_3(), 1)");
            	    }
            	    // InternalStubbrLang.g:5258:104: ( ({...}? => ( (lv_isExpanded_6_0= 'expanded' ) ) ) )
            	    // InternalStubbrLang.g:5259:6: ({...}? => ( (lv_isExpanded_6_0= 'expanded' ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getDiShapeAccess().getUnorderedGroup_3(), 1);
            	    // InternalStubbrLang.g:5262:9: ({...}? => ( (lv_isExpanded_6_0= 'expanded' ) ) )
            	    // InternalStubbrLang.g:5262:10: {...}? => ( (lv_isExpanded_6_0= 'expanded' ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDiShape", "true");
            	    }
            	    // InternalStubbrLang.g:5262:19: ( (lv_isExpanded_6_0= 'expanded' ) )
            	    // InternalStubbrLang.g:5262:20: (lv_isExpanded_6_0= 'expanded' )
            	    {
            	    // InternalStubbrLang.g:5262:20: (lv_isExpanded_6_0= 'expanded' )
            	    // InternalStubbrLang.g:5263:10: lv_isExpanded_6_0= 'expanded'
            	    {
            	    lv_isExpanded_6_0=(Token)match(input,102,FOLLOW_135); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      										newLeafNode(lv_isExpanded_6_0, grammarAccess.getDiShapeAccess().getIsExpandedExpandedKeyword_3_1_0());
            	      									
            	    }
            	    if ( state.backtracking==0 ) {

            	      										if (current==null) {
            	      											current = createModelElement(grammarAccess.getDiShapeRule());
            	      										}
            	      										setWithLastConsumed(current, "isExpanded", true, "expanded");
            	      									
            	    }

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDiShapeAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalStubbrLang.g:5280:4: ({...}? => ( ({...}? => ( (lv_isHorizontal_7_0= 'horizontal' ) ) ) ) )
            	    {
            	    // InternalStubbrLang.g:5280:4: ({...}? => ( ({...}? => ( (lv_isHorizontal_7_0= 'horizontal' ) ) ) ) )
            	    // InternalStubbrLang.g:5281:5: {...}? => ( ({...}? => ( (lv_isHorizontal_7_0= 'horizontal' ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDiShapeAccess().getUnorderedGroup_3(), 2) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDiShape", "getUnorderedGroupHelper().canSelect(grammarAccess.getDiShapeAccess().getUnorderedGroup_3(), 2)");
            	    }
            	    // InternalStubbrLang.g:5281:104: ( ({...}? => ( (lv_isHorizontal_7_0= 'horizontal' ) ) ) )
            	    // InternalStubbrLang.g:5282:6: ({...}? => ( (lv_isHorizontal_7_0= 'horizontal' ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getDiShapeAccess().getUnorderedGroup_3(), 2);
            	    // InternalStubbrLang.g:5285:9: ({...}? => ( (lv_isHorizontal_7_0= 'horizontal' ) ) )
            	    // InternalStubbrLang.g:5285:10: {...}? => ( (lv_isHorizontal_7_0= 'horizontal' ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDiShape", "true");
            	    }
            	    // InternalStubbrLang.g:5285:19: ( (lv_isHorizontal_7_0= 'horizontal' ) )
            	    // InternalStubbrLang.g:5285:20: (lv_isHorizontal_7_0= 'horizontal' )
            	    {
            	    // InternalStubbrLang.g:5285:20: (lv_isHorizontal_7_0= 'horizontal' )
            	    // InternalStubbrLang.g:5286:10: lv_isHorizontal_7_0= 'horizontal'
            	    {
            	    lv_isHorizontal_7_0=(Token)match(input,103,FOLLOW_135); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      										newLeafNode(lv_isHorizontal_7_0, grammarAccess.getDiShapeAccess().getIsHorizontalHorizontalKeyword_3_2_0());
            	      									
            	    }
            	    if ( state.backtracking==0 ) {

            	      										if (current==null) {
            	      											current = createModelElement(grammarAccess.getDiShapeRule());
            	      										}
            	      										setWithLastConsumed(current, "isHorizontal", true, "horizontal");
            	      									
            	    }

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDiShapeAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt171 >= 1 ) break loop171;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(171, input);
                        throw eee;
                }
                cnt171++;
            } while (true);

            if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getDiShapeAccess().getUnorderedGroup_3()) ) {
                if (state.backtracking>0) {state.failed=true; return current;}
                throw new FailedPredicateException(input, "ruleDiShape", "getUnorderedGroupHelper().canLeave(grammarAccess.getDiShapeAccess().getUnorderedGroup_3())");
            }

            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getDiShapeAccess().getUnorderedGroup_3());

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDiShape"


    // $ANTLR start "entryRuleDiEdge"
    // InternalStubbrLang.g:5315:1: entryRuleDiEdge returns [EObject current=null] : iv_ruleDiEdge= ruleDiEdge EOF ;
    public final EObject entryRuleDiEdge() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDiEdge = null;


        try {
            // InternalStubbrLang.g:5315:47: (iv_ruleDiEdge= ruleDiEdge EOF )
            // InternalStubbrLang.g:5316:2: iv_ruleDiEdge= ruleDiEdge EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDiEdgeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDiEdge=ruleDiEdge();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDiEdge; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDiEdge"


    // $ANTLR start "ruleDiEdge"
    // InternalStubbrLang.g:5322:1: ruleDiEdge returns [EObject current=null] : (otherlv_0= 'edge' ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= 'for' ( ( ruleQualifiedName ) ) ) (otherlv_4= 'from' ( ( ruleQualifiedName ) ) ) (otherlv_6= 'to' ( ( ruleQualifiedName ) ) ) ( (lv_waypoints_8_0= ruleDiWaypoint ) )+ ) ;
    public final EObject ruleDiEdge() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_name_1_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_waypoints_8_0 = null;



        	enterRule();

        try {
            // InternalStubbrLang.g:5328:2: ( (otherlv_0= 'edge' ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= 'for' ( ( ruleQualifiedName ) ) ) (otherlv_4= 'from' ( ( ruleQualifiedName ) ) ) (otherlv_6= 'to' ( ( ruleQualifiedName ) ) ) ( (lv_waypoints_8_0= ruleDiWaypoint ) )+ ) )
            // InternalStubbrLang.g:5329:2: (otherlv_0= 'edge' ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= 'for' ( ( ruleQualifiedName ) ) ) (otherlv_4= 'from' ( ( ruleQualifiedName ) ) ) (otherlv_6= 'to' ( ( ruleQualifiedName ) ) ) ( (lv_waypoints_8_0= ruleDiWaypoint ) )+ )
            {
            // InternalStubbrLang.g:5329:2: (otherlv_0= 'edge' ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= 'for' ( ( ruleQualifiedName ) ) ) (otherlv_4= 'from' ( ( ruleQualifiedName ) ) ) (otherlv_6= 'to' ( ( ruleQualifiedName ) ) ) ( (lv_waypoints_8_0= ruleDiWaypoint ) )+ )
            // InternalStubbrLang.g:5330:3: otherlv_0= 'edge' ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= 'for' ( ( ruleQualifiedName ) ) ) (otherlv_4= 'from' ( ( ruleQualifiedName ) ) ) (otherlv_6= 'to' ( ( ruleQualifiedName ) ) ) ( (lv_waypoints_8_0= ruleDiWaypoint ) )+
            {
            otherlv_0=(Token)match(input,104,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getDiEdgeAccess().getEdgeKeyword_0());
              		
            }
            // InternalStubbrLang.g:5334:3: ( (lv_name_1_0= RULE_ID ) )
            // InternalStubbrLang.g:5335:4: (lv_name_1_0= RULE_ID )
            {
            // InternalStubbrLang.g:5335:4: (lv_name_1_0= RULE_ID )
            // InternalStubbrLang.g:5336:5: lv_name_1_0= RULE_ID
            {
            lv_name_1_0=(Token)match(input,RULE_ID,FOLLOW_136); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_1_0, grammarAccess.getDiEdgeAccess().getNameIDTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getDiEdgeRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_1_0,
              						"org.eclipse.xtext.xbase.Xtype.ID");
              				
            }

            }


            }

            // InternalStubbrLang.g:5352:3: (otherlv_2= 'for' ( ( ruleQualifiedName ) ) )
            // InternalStubbrLang.g:5353:4: otherlv_2= 'for' ( ( ruleQualifiedName ) )
            {
            otherlv_2=(Token)match(input,100,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(otherlv_2, grammarAccess.getDiEdgeAccess().getForKeyword_2_0());
              			
            }
            // InternalStubbrLang.g:5357:4: ( ( ruleQualifiedName ) )
            // InternalStubbrLang.g:5358:5: ( ruleQualifiedName )
            {
            // InternalStubbrLang.g:5358:5: ( ruleQualifiedName )
            // InternalStubbrLang.g:5359:6: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              						if (current==null) {
              							current = createModelElement(grammarAccess.getDiEdgeRule());
              						}
              					
            }
            if ( state.backtracking==0 ) {

              						newCompositeNode(grammarAccess.getDiEdgeAccess().getSequenceFlowSequenceFlowCrossReference_2_1_0());
              					
            }
            pushFollow(FOLLOW_88);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              						afterParserOrEnumRuleCall();
              					
            }

            }


            }


            }

            // InternalStubbrLang.g:5374:3: (otherlv_4= 'from' ( ( ruleQualifiedName ) ) )
            // InternalStubbrLang.g:5375:4: otherlv_4= 'from' ( ( ruleQualifiedName ) )
            {
            otherlv_4=(Token)match(input,75,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(otherlv_4, grammarAccess.getDiEdgeAccess().getFromKeyword_3_0());
              			
            }
            // InternalStubbrLang.g:5379:4: ( ( ruleQualifiedName ) )
            // InternalStubbrLang.g:5380:5: ( ruleQualifiedName )
            {
            // InternalStubbrLang.g:5380:5: ( ruleQualifiedName )
            // InternalStubbrLang.g:5381:6: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              						if (current==null) {
              							current = createModelElement(grammarAccess.getDiEdgeRule());
              						}
              					
            }
            if ( state.backtracking==0 ) {

              						newCompositeNode(grammarAccess.getDiEdgeAccess().getSourceDiagramShapeDiShapeCrossReference_3_1_0());
              					
            }
            pushFollow(FOLLOW_89);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              						afterParserOrEnumRuleCall();
              					
            }

            }


            }


            }

            // InternalStubbrLang.g:5396:3: (otherlv_6= 'to' ( ( ruleQualifiedName ) ) )
            // InternalStubbrLang.g:5397:4: otherlv_6= 'to' ( ( ruleQualifiedName ) )
            {
            otherlv_6=(Token)match(input,76,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(otherlv_6, grammarAccess.getDiEdgeAccess().getToKeyword_4_0());
              			
            }
            // InternalStubbrLang.g:5401:4: ( ( ruleQualifiedName ) )
            // InternalStubbrLang.g:5402:5: ( ruleQualifiedName )
            {
            // InternalStubbrLang.g:5402:5: ( ruleQualifiedName )
            // InternalStubbrLang.g:5403:6: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              						if (current==null) {
              							current = createModelElement(grammarAccess.getDiEdgeRule());
              						}
              					
            }
            if ( state.backtracking==0 ) {

              						newCompositeNode(grammarAccess.getDiEdgeAccess().getTargetDiagramShapeDiShapeCrossReference_4_1_0());
              					
            }
            pushFollow(FOLLOW_137);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              						afterParserOrEnumRuleCall();
              					
            }

            }


            }


            }

            // InternalStubbrLang.g:5418:3: ( (lv_waypoints_8_0= ruleDiWaypoint ) )+
            int cnt172=0;
            loop172:
            do {
                int alt172=2;
                int LA172_0 = input.LA(1);

                if ( (LA172_0==110) ) {
                    alt172=1;
                }


                switch (alt172) {
            	case 1 :
            	    // InternalStubbrLang.g:5419:4: (lv_waypoints_8_0= ruleDiWaypoint )
            	    {
            	    // InternalStubbrLang.g:5419:4: (lv_waypoints_8_0= ruleDiWaypoint )
            	    // InternalStubbrLang.g:5420:5: lv_waypoints_8_0= ruleDiWaypoint
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getDiEdgeAccess().getWaypointsDiWaypointParserRuleCall_5_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_138);
            	    lv_waypoints_8_0=ruleDiWaypoint();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getDiEdgeRule());
            	      					}
            	      					add(
            	      						current,
            	      						"waypoints",
            	      						lv_waypoints_8_0,
            	      						"com.laegler.stubbr.lang.StubbrLang.DiWaypoint");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt172 >= 1 ) break loop172;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(172, input);
                        throw eee;
                }
                cnt172++;
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDiEdge"


    // $ANTLR start "entryRuleDiBounds"
    // InternalStubbrLang.g:5441:1: entryRuleDiBounds returns [EObject current=null] : iv_ruleDiBounds= ruleDiBounds EOF ;
    public final EObject entryRuleDiBounds() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDiBounds = null;


        try {
            // InternalStubbrLang.g:5441:49: (iv_ruleDiBounds= ruleDiBounds EOF )
            // InternalStubbrLang.g:5442:2: iv_ruleDiBounds= ruleDiBounds EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDiBoundsRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDiBounds=ruleDiBounds();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDiBounds; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDiBounds"


    // $ANTLR start "ruleDiBounds"
    // InternalStubbrLang.g:5448:1: ruleDiBounds returns [EObject current=null] : (otherlv_0= 'bounds' ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'x' ( (lv_x_3_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'y' ( (lv_y_5_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'width' ( (lv_width_7_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'height' ( (lv_height_9_0= RULE_INT ) ) ) ) ) ) )+ {...}?) ) ) ) ;
    public final EObject ruleDiBounds() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token lv_x_3_0=null;
        Token otherlv_4=null;
        Token lv_y_5_0=null;
        Token otherlv_6=null;
        Token lv_width_7_0=null;
        Token otherlv_8=null;
        Token lv_height_9_0=null;


        	enterRule();

        try {
            // InternalStubbrLang.g:5454:2: ( (otherlv_0= 'bounds' ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'x' ( (lv_x_3_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'y' ( (lv_y_5_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'width' ( (lv_width_7_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'height' ( (lv_height_9_0= RULE_INT ) ) ) ) ) ) )+ {...}?) ) ) ) )
            // InternalStubbrLang.g:5455:2: (otherlv_0= 'bounds' ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'x' ( (lv_x_3_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'y' ( (lv_y_5_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'width' ( (lv_width_7_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'height' ( (lv_height_9_0= RULE_INT ) ) ) ) ) ) )+ {...}?) ) ) )
            {
            // InternalStubbrLang.g:5455:2: (otherlv_0= 'bounds' ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'x' ( (lv_x_3_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'y' ( (lv_y_5_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'width' ( (lv_width_7_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'height' ( (lv_height_9_0= RULE_INT ) ) ) ) ) ) )+ {...}?) ) ) )
            // InternalStubbrLang.g:5456:3: otherlv_0= 'bounds' ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'x' ( (lv_x_3_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'y' ( (lv_y_5_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'width' ( (lv_width_7_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'height' ( (lv_height_9_0= RULE_INT ) ) ) ) ) ) )+ {...}?) ) )
            {
            otherlv_0=(Token)match(input,105,FOLLOW_139); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getDiBoundsAccess().getBoundsKeyword_0());
              		
            }
            // InternalStubbrLang.g:5460:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'x' ( (lv_x_3_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'y' ( (lv_y_5_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'width' ( (lv_width_7_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'height' ( (lv_height_9_0= RULE_INT ) ) ) ) ) ) )+ {...}?) ) )
            // InternalStubbrLang.g:5461:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'x' ( (lv_x_3_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'y' ( (lv_y_5_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'width' ( (lv_width_7_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'height' ( (lv_height_9_0= RULE_INT ) ) ) ) ) ) )+ {...}?) )
            {
            // InternalStubbrLang.g:5461:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'x' ( (lv_x_3_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'y' ( (lv_y_5_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'width' ( (lv_width_7_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'height' ( (lv_height_9_0= RULE_INT ) ) ) ) ) ) )+ {...}?) )
            // InternalStubbrLang.g:5462:5: ( ( ({...}? => ( ({...}? => (otherlv_2= 'x' ( (lv_x_3_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'y' ( (lv_y_5_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'width' ( (lv_width_7_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'height' ( (lv_height_9_0= RULE_INT ) ) ) ) ) ) )+ {...}?)
            {
            getUnorderedGroupHelper().enter(grammarAccess.getDiBoundsAccess().getUnorderedGroup_1());
            // InternalStubbrLang.g:5465:5: ( ( ({...}? => ( ({...}? => (otherlv_2= 'x' ( (lv_x_3_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'y' ( (lv_y_5_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'width' ( (lv_width_7_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'height' ( (lv_height_9_0= RULE_INT ) ) ) ) ) ) )+ {...}?)
            // InternalStubbrLang.g:5466:6: ( ({...}? => ( ({...}? => (otherlv_2= 'x' ( (lv_x_3_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'y' ( (lv_y_5_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'width' ( (lv_width_7_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'height' ( (lv_height_9_0= RULE_INT ) ) ) ) ) ) )+ {...}?
            {
            // InternalStubbrLang.g:5466:6: ( ({...}? => ( ({...}? => (otherlv_2= 'x' ( (lv_x_3_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'y' ( (lv_y_5_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'width' ( (lv_width_7_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'height' ( (lv_height_9_0= RULE_INT ) ) ) ) ) ) )+
            int cnt173=0;
            loop173:
            do {
                int alt173=5;
                int LA173_0 = input.LA(1);

                if ( LA173_0 == 106 && getUnorderedGroupHelper().canSelect(grammarAccess.getDiBoundsAccess().getUnorderedGroup_1(), 0) ) {
                    alt173=1;
                }
                else if ( LA173_0 == 107 && getUnorderedGroupHelper().canSelect(grammarAccess.getDiBoundsAccess().getUnorderedGroup_1(), 1) ) {
                    alt173=2;
                }
                else if ( LA173_0 == 108 && getUnorderedGroupHelper().canSelect(grammarAccess.getDiBoundsAccess().getUnorderedGroup_1(), 2) ) {
                    alt173=3;
                }
                else if ( LA173_0 == 109 && getUnorderedGroupHelper().canSelect(grammarAccess.getDiBoundsAccess().getUnorderedGroup_1(), 3) ) {
                    alt173=4;
                }


                switch (alt173) {
            	case 1 :
            	    // InternalStubbrLang.g:5467:4: ({...}? => ( ({...}? => (otherlv_2= 'x' ( (lv_x_3_0= RULE_INT ) ) ) ) ) )
            	    {
            	    // InternalStubbrLang.g:5467:4: ({...}? => ( ({...}? => (otherlv_2= 'x' ( (lv_x_3_0= RULE_INT ) ) ) ) ) )
            	    // InternalStubbrLang.g:5468:5: {...}? => ( ({...}? => (otherlv_2= 'x' ( (lv_x_3_0= RULE_INT ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDiBoundsAccess().getUnorderedGroup_1(), 0) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDiBounds", "getUnorderedGroupHelper().canSelect(grammarAccess.getDiBoundsAccess().getUnorderedGroup_1(), 0)");
            	    }
            	    // InternalStubbrLang.g:5468:105: ( ({...}? => (otherlv_2= 'x' ( (lv_x_3_0= RULE_INT ) ) ) ) )
            	    // InternalStubbrLang.g:5469:6: ({...}? => (otherlv_2= 'x' ( (lv_x_3_0= RULE_INT ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getDiBoundsAccess().getUnorderedGroup_1(), 0);
            	    // InternalStubbrLang.g:5472:9: ({...}? => (otherlv_2= 'x' ( (lv_x_3_0= RULE_INT ) ) ) )
            	    // InternalStubbrLang.g:5472:10: {...}? => (otherlv_2= 'x' ( (lv_x_3_0= RULE_INT ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDiBounds", "true");
            	    }
            	    // InternalStubbrLang.g:5472:19: (otherlv_2= 'x' ( (lv_x_3_0= RULE_INT ) ) )
            	    // InternalStubbrLang.g:5472:20: otherlv_2= 'x' ( (lv_x_3_0= RULE_INT ) )
            	    {
            	    otherlv_2=(Token)match(input,106,FOLLOW_140); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_2, grammarAccess.getDiBoundsAccess().getXKeyword_1_0_0());
            	      								
            	    }
            	    // InternalStubbrLang.g:5476:9: ( (lv_x_3_0= RULE_INT ) )
            	    // InternalStubbrLang.g:5477:10: (lv_x_3_0= RULE_INT )
            	    {
            	    // InternalStubbrLang.g:5477:10: (lv_x_3_0= RULE_INT )
            	    // InternalStubbrLang.g:5478:11: lv_x_3_0= RULE_INT
            	    {
            	    lv_x_3_0=(Token)match(input,RULE_INT,FOLLOW_141); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_x_3_0, grammarAccess.getDiBoundsAccess().getXINTTerminalRuleCall_1_0_1_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getDiBoundsRule());
            	      											}
            	      											setWithLastConsumed(
            	      												current,
            	      												"x",
            	      												lv_x_3_0,
            	      												"com.laegler.stubbr.lang.StubbrLang.INT");
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDiBoundsAccess().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalStubbrLang.g:5500:4: ({...}? => ( ({...}? => (otherlv_4= 'y' ( (lv_y_5_0= RULE_INT ) ) ) ) ) )
            	    {
            	    // InternalStubbrLang.g:5500:4: ({...}? => ( ({...}? => (otherlv_4= 'y' ( (lv_y_5_0= RULE_INT ) ) ) ) ) )
            	    // InternalStubbrLang.g:5501:5: {...}? => ( ({...}? => (otherlv_4= 'y' ( (lv_y_5_0= RULE_INT ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDiBoundsAccess().getUnorderedGroup_1(), 1) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDiBounds", "getUnorderedGroupHelper().canSelect(grammarAccess.getDiBoundsAccess().getUnorderedGroup_1(), 1)");
            	    }
            	    // InternalStubbrLang.g:5501:105: ( ({...}? => (otherlv_4= 'y' ( (lv_y_5_0= RULE_INT ) ) ) ) )
            	    // InternalStubbrLang.g:5502:6: ({...}? => (otherlv_4= 'y' ( (lv_y_5_0= RULE_INT ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getDiBoundsAccess().getUnorderedGroup_1(), 1);
            	    // InternalStubbrLang.g:5505:9: ({...}? => (otherlv_4= 'y' ( (lv_y_5_0= RULE_INT ) ) ) )
            	    // InternalStubbrLang.g:5505:10: {...}? => (otherlv_4= 'y' ( (lv_y_5_0= RULE_INT ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDiBounds", "true");
            	    }
            	    // InternalStubbrLang.g:5505:19: (otherlv_4= 'y' ( (lv_y_5_0= RULE_INT ) ) )
            	    // InternalStubbrLang.g:5505:20: otherlv_4= 'y' ( (lv_y_5_0= RULE_INT ) )
            	    {
            	    otherlv_4=(Token)match(input,107,FOLLOW_140); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_4, grammarAccess.getDiBoundsAccess().getYKeyword_1_1_0());
            	      								
            	    }
            	    // InternalStubbrLang.g:5509:9: ( (lv_y_5_0= RULE_INT ) )
            	    // InternalStubbrLang.g:5510:10: (lv_y_5_0= RULE_INT )
            	    {
            	    // InternalStubbrLang.g:5510:10: (lv_y_5_0= RULE_INT )
            	    // InternalStubbrLang.g:5511:11: lv_y_5_0= RULE_INT
            	    {
            	    lv_y_5_0=(Token)match(input,RULE_INT,FOLLOW_141); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_y_5_0, grammarAccess.getDiBoundsAccess().getYINTTerminalRuleCall_1_1_1_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getDiBoundsRule());
            	      											}
            	      											setWithLastConsumed(
            	      												current,
            	      												"y",
            	      												lv_y_5_0,
            	      												"com.laegler.stubbr.lang.StubbrLang.INT");
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDiBoundsAccess().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalStubbrLang.g:5533:4: ({...}? => ( ({...}? => (otherlv_6= 'width' ( (lv_width_7_0= RULE_INT ) ) ) ) ) )
            	    {
            	    // InternalStubbrLang.g:5533:4: ({...}? => ( ({...}? => (otherlv_6= 'width' ( (lv_width_7_0= RULE_INT ) ) ) ) ) )
            	    // InternalStubbrLang.g:5534:5: {...}? => ( ({...}? => (otherlv_6= 'width' ( (lv_width_7_0= RULE_INT ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDiBoundsAccess().getUnorderedGroup_1(), 2) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDiBounds", "getUnorderedGroupHelper().canSelect(grammarAccess.getDiBoundsAccess().getUnorderedGroup_1(), 2)");
            	    }
            	    // InternalStubbrLang.g:5534:105: ( ({...}? => (otherlv_6= 'width' ( (lv_width_7_0= RULE_INT ) ) ) ) )
            	    // InternalStubbrLang.g:5535:6: ({...}? => (otherlv_6= 'width' ( (lv_width_7_0= RULE_INT ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getDiBoundsAccess().getUnorderedGroup_1(), 2);
            	    // InternalStubbrLang.g:5538:9: ({...}? => (otherlv_6= 'width' ( (lv_width_7_0= RULE_INT ) ) ) )
            	    // InternalStubbrLang.g:5538:10: {...}? => (otherlv_6= 'width' ( (lv_width_7_0= RULE_INT ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDiBounds", "true");
            	    }
            	    // InternalStubbrLang.g:5538:19: (otherlv_6= 'width' ( (lv_width_7_0= RULE_INT ) ) )
            	    // InternalStubbrLang.g:5538:20: otherlv_6= 'width' ( (lv_width_7_0= RULE_INT ) )
            	    {
            	    otherlv_6=(Token)match(input,108,FOLLOW_140); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_6, grammarAccess.getDiBoundsAccess().getWidthKeyword_1_2_0());
            	      								
            	    }
            	    // InternalStubbrLang.g:5542:9: ( (lv_width_7_0= RULE_INT ) )
            	    // InternalStubbrLang.g:5543:10: (lv_width_7_0= RULE_INT )
            	    {
            	    // InternalStubbrLang.g:5543:10: (lv_width_7_0= RULE_INT )
            	    // InternalStubbrLang.g:5544:11: lv_width_7_0= RULE_INT
            	    {
            	    lv_width_7_0=(Token)match(input,RULE_INT,FOLLOW_141); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_width_7_0, grammarAccess.getDiBoundsAccess().getWidthINTTerminalRuleCall_1_2_1_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getDiBoundsRule());
            	      											}
            	      											setWithLastConsumed(
            	      												current,
            	      												"width",
            	      												lv_width_7_0,
            	      												"com.laegler.stubbr.lang.StubbrLang.INT");
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDiBoundsAccess().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // InternalStubbrLang.g:5566:4: ({...}? => ( ({...}? => (otherlv_8= 'height' ( (lv_height_9_0= RULE_INT ) ) ) ) ) )
            	    {
            	    // InternalStubbrLang.g:5566:4: ({...}? => ( ({...}? => (otherlv_8= 'height' ( (lv_height_9_0= RULE_INT ) ) ) ) ) )
            	    // InternalStubbrLang.g:5567:5: {...}? => ( ({...}? => (otherlv_8= 'height' ( (lv_height_9_0= RULE_INT ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDiBoundsAccess().getUnorderedGroup_1(), 3) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDiBounds", "getUnorderedGroupHelper().canSelect(grammarAccess.getDiBoundsAccess().getUnorderedGroup_1(), 3)");
            	    }
            	    // InternalStubbrLang.g:5567:105: ( ({...}? => (otherlv_8= 'height' ( (lv_height_9_0= RULE_INT ) ) ) ) )
            	    // InternalStubbrLang.g:5568:6: ({...}? => (otherlv_8= 'height' ( (lv_height_9_0= RULE_INT ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getDiBoundsAccess().getUnorderedGroup_1(), 3);
            	    // InternalStubbrLang.g:5571:9: ({...}? => (otherlv_8= 'height' ( (lv_height_9_0= RULE_INT ) ) ) )
            	    // InternalStubbrLang.g:5571:10: {...}? => (otherlv_8= 'height' ( (lv_height_9_0= RULE_INT ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDiBounds", "true");
            	    }
            	    // InternalStubbrLang.g:5571:19: (otherlv_8= 'height' ( (lv_height_9_0= RULE_INT ) ) )
            	    // InternalStubbrLang.g:5571:20: otherlv_8= 'height' ( (lv_height_9_0= RULE_INT ) )
            	    {
            	    otherlv_8=(Token)match(input,109,FOLLOW_140); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_8, grammarAccess.getDiBoundsAccess().getHeightKeyword_1_3_0());
            	      								
            	    }
            	    // InternalStubbrLang.g:5575:9: ( (lv_height_9_0= RULE_INT ) )
            	    // InternalStubbrLang.g:5576:10: (lv_height_9_0= RULE_INT )
            	    {
            	    // InternalStubbrLang.g:5576:10: (lv_height_9_0= RULE_INT )
            	    // InternalStubbrLang.g:5577:11: lv_height_9_0= RULE_INT
            	    {
            	    lv_height_9_0=(Token)match(input,RULE_INT,FOLLOW_141); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_height_9_0, grammarAccess.getDiBoundsAccess().getHeightINTTerminalRuleCall_1_3_1_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getDiBoundsRule());
            	      											}
            	      											setWithLastConsumed(
            	      												current,
            	      												"height",
            	      												lv_height_9_0,
            	      												"com.laegler.stubbr.lang.StubbrLang.INT");
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDiBoundsAccess().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt173 >= 1 ) break loop173;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(173, input);
                        throw eee;
                }
                cnt173++;
            } while (true);

            if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getDiBoundsAccess().getUnorderedGroup_1()) ) {
                if (state.backtracking>0) {state.failed=true; return current;}
                throw new FailedPredicateException(input, "ruleDiBounds", "getUnorderedGroupHelper().canLeave(grammarAccess.getDiBoundsAccess().getUnorderedGroup_1())");
            }

            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getDiBoundsAccess().getUnorderedGroup_1());

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDiBounds"


    // $ANTLR start "entryRuleDiWaypoint"
    // InternalStubbrLang.g:5611:1: entryRuleDiWaypoint returns [EObject current=null] : iv_ruleDiWaypoint= ruleDiWaypoint EOF ;
    public final EObject entryRuleDiWaypoint() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDiWaypoint = null;


        try {
            // InternalStubbrLang.g:5611:51: (iv_ruleDiWaypoint= ruleDiWaypoint EOF )
            // InternalStubbrLang.g:5612:2: iv_ruleDiWaypoint= ruleDiWaypoint EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDiWaypointRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDiWaypoint=ruleDiWaypoint();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDiWaypoint; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDiWaypoint"


    // $ANTLR start "ruleDiWaypoint"
    // InternalStubbrLang.g:5618:1: ruleDiWaypoint returns [EObject current=null] : (otherlv_0= 'waypoint' ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'x' ( (lv_x_3_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'y' ( (lv_y_5_0= RULE_INT ) ) ) ) ) ) )+ {...}?) ) ) ) ;
    public final EObject ruleDiWaypoint() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token lv_x_3_0=null;
        Token otherlv_4=null;
        Token lv_y_5_0=null;


        	enterRule();

        try {
            // InternalStubbrLang.g:5624:2: ( (otherlv_0= 'waypoint' ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'x' ( (lv_x_3_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'y' ( (lv_y_5_0= RULE_INT ) ) ) ) ) ) )+ {...}?) ) ) ) )
            // InternalStubbrLang.g:5625:2: (otherlv_0= 'waypoint' ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'x' ( (lv_x_3_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'y' ( (lv_y_5_0= RULE_INT ) ) ) ) ) ) )+ {...}?) ) ) )
            {
            // InternalStubbrLang.g:5625:2: (otherlv_0= 'waypoint' ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'x' ( (lv_x_3_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'y' ( (lv_y_5_0= RULE_INT ) ) ) ) ) ) )+ {...}?) ) ) )
            // InternalStubbrLang.g:5626:3: otherlv_0= 'waypoint' ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'x' ( (lv_x_3_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'y' ( (lv_y_5_0= RULE_INT ) ) ) ) ) ) )+ {...}?) ) )
            {
            otherlv_0=(Token)match(input,110,FOLLOW_142); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getDiWaypointAccess().getWaypointKeyword_0());
              		
            }
            // InternalStubbrLang.g:5630:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'x' ( (lv_x_3_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'y' ( (lv_y_5_0= RULE_INT ) ) ) ) ) ) )+ {...}?) ) )
            // InternalStubbrLang.g:5631:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'x' ( (lv_x_3_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'y' ( (lv_y_5_0= RULE_INT ) ) ) ) ) ) )+ {...}?) )
            {
            // InternalStubbrLang.g:5631:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'x' ( (lv_x_3_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'y' ( (lv_y_5_0= RULE_INT ) ) ) ) ) ) )+ {...}?) )
            // InternalStubbrLang.g:5632:5: ( ( ({...}? => ( ({...}? => (otherlv_2= 'x' ( (lv_x_3_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'y' ( (lv_y_5_0= RULE_INT ) ) ) ) ) ) )+ {...}?)
            {
            getUnorderedGroupHelper().enter(grammarAccess.getDiWaypointAccess().getUnorderedGroup_1());
            // InternalStubbrLang.g:5635:5: ( ( ({...}? => ( ({...}? => (otherlv_2= 'x' ( (lv_x_3_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'y' ( (lv_y_5_0= RULE_INT ) ) ) ) ) ) )+ {...}?)
            // InternalStubbrLang.g:5636:6: ( ({...}? => ( ({...}? => (otherlv_2= 'x' ( (lv_x_3_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'y' ( (lv_y_5_0= RULE_INT ) ) ) ) ) ) )+ {...}?
            {
            // InternalStubbrLang.g:5636:6: ( ({...}? => ( ({...}? => (otherlv_2= 'x' ( (lv_x_3_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'y' ( (lv_y_5_0= RULE_INT ) ) ) ) ) ) )+
            int cnt174=0;
            loop174:
            do {
                int alt174=3;
                int LA174_0 = input.LA(1);

                if ( LA174_0 == 106 && getUnorderedGroupHelper().canSelect(grammarAccess.getDiWaypointAccess().getUnorderedGroup_1(), 0) ) {
                    alt174=1;
                }
                else if ( LA174_0 == 107 && getUnorderedGroupHelper().canSelect(grammarAccess.getDiWaypointAccess().getUnorderedGroup_1(), 1) ) {
                    alt174=2;
                }


                switch (alt174) {
            	case 1 :
            	    // InternalStubbrLang.g:5637:4: ({...}? => ( ({...}? => (otherlv_2= 'x' ( (lv_x_3_0= RULE_INT ) ) ) ) ) )
            	    {
            	    // InternalStubbrLang.g:5637:4: ({...}? => ( ({...}? => (otherlv_2= 'x' ( (lv_x_3_0= RULE_INT ) ) ) ) ) )
            	    // InternalStubbrLang.g:5638:5: {...}? => ( ({...}? => (otherlv_2= 'x' ( (lv_x_3_0= RULE_INT ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDiWaypointAccess().getUnorderedGroup_1(), 0) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDiWaypoint", "getUnorderedGroupHelper().canSelect(grammarAccess.getDiWaypointAccess().getUnorderedGroup_1(), 0)");
            	    }
            	    // InternalStubbrLang.g:5638:107: ( ({...}? => (otherlv_2= 'x' ( (lv_x_3_0= RULE_INT ) ) ) ) )
            	    // InternalStubbrLang.g:5639:6: ({...}? => (otherlv_2= 'x' ( (lv_x_3_0= RULE_INT ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getDiWaypointAccess().getUnorderedGroup_1(), 0);
            	    // InternalStubbrLang.g:5642:9: ({...}? => (otherlv_2= 'x' ( (lv_x_3_0= RULE_INT ) ) ) )
            	    // InternalStubbrLang.g:5642:10: {...}? => (otherlv_2= 'x' ( (lv_x_3_0= RULE_INT ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDiWaypoint", "true");
            	    }
            	    // InternalStubbrLang.g:5642:19: (otherlv_2= 'x' ( (lv_x_3_0= RULE_INT ) ) )
            	    // InternalStubbrLang.g:5642:20: otherlv_2= 'x' ( (lv_x_3_0= RULE_INT ) )
            	    {
            	    otherlv_2=(Token)match(input,106,FOLLOW_140); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_2, grammarAccess.getDiWaypointAccess().getXKeyword_1_0_0());
            	      								
            	    }
            	    // InternalStubbrLang.g:5646:9: ( (lv_x_3_0= RULE_INT ) )
            	    // InternalStubbrLang.g:5647:10: (lv_x_3_0= RULE_INT )
            	    {
            	    // InternalStubbrLang.g:5647:10: (lv_x_3_0= RULE_INT )
            	    // InternalStubbrLang.g:5648:11: lv_x_3_0= RULE_INT
            	    {
            	    lv_x_3_0=(Token)match(input,RULE_INT,FOLLOW_143); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_x_3_0, grammarAccess.getDiWaypointAccess().getXINTTerminalRuleCall_1_0_1_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getDiWaypointRule());
            	      											}
            	      											setWithLastConsumed(
            	      												current,
            	      												"x",
            	      												lv_x_3_0,
            	      												"com.laegler.stubbr.lang.StubbrLang.INT");
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDiWaypointAccess().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalStubbrLang.g:5670:4: ({...}? => ( ({...}? => (otherlv_4= 'y' ( (lv_y_5_0= RULE_INT ) ) ) ) ) )
            	    {
            	    // InternalStubbrLang.g:5670:4: ({...}? => ( ({...}? => (otherlv_4= 'y' ( (lv_y_5_0= RULE_INT ) ) ) ) ) )
            	    // InternalStubbrLang.g:5671:5: {...}? => ( ({...}? => (otherlv_4= 'y' ( (lv_y_5_0= RULE_INT ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDiWaypointAccess().getUnorderedGroup_1(), 1) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDiWaypoint", "getUnorderedGroupHelper().canSelect(grammarAccess.getDiWaypointAccess().getUnorderedGroup_1(), 1)");
            	    }
            	    // InternalStubbrLang.g:5671:107: ( ({...}? => (otherlv_4= 'y' ( (lv_y_5_0= RULE_INT ) ) ) ) )
            	    // InternalStubbrLang.g:5672:6: ({...}? => (otherlv_4= 'y' ( (lv_y_5_0= RULE_INT ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getDiWaypointAccess().getUnorderedGroup_1(), 1);
            	    // InternalStubbrLang.g:5675:9: ({...}? => (otherlv_4= 'y' ( (lv_y_5_0= RULE_INT ) ) ) )
            	    // InternalStubbrLang.g:5675:10: {...}? => (otherlv_4= 'y' ( (lv_y_5_0= RULE_INT ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDiWaypoint", "true");
            	    }
            	    // InternalStubbrLang.g:5675:19: (otherlv_4= 'y' ( (lv_y_5_0= RULE_INT ) ) )
            	    // InternalStubbrLang.g:5675:20: otherlv_4= 'y' ( (lv_y_5_0= RULE_INT ) )
            	    {
            	    otherlv_4=(Token)match(input,107,FOLLOW_140); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_4, grammarAccess.getDiWaypointAccess().getYKeyword_1_1_0());
            	      								
            	    }
            	    // InternalStubbrLang.g:5679:9: ( (lv_y_5_0= RULE_INT ) )
            	    // InternalStubbrLang.g:5680:10: (lv_y_5_0= RULE_INT )
            	    {
            	    // InternalStubbrLang.g:5680:10: (lv_y_5_0= RULE_INT )
            	    // InternalStubbrLang.g:5681:11: lv_y_5_0= RULE_INT
            	    {
            	    lv_y_5_0=(Token)match(input,RULE_INT,FOLLOW_143); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_y_5_0, grammarAccess.getDiWaypointAccess().getYINTTerminalRuleCall_1_1_1_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getDiWaypointRule());
            	      											}
            	      											setWithLastConsumed(
            	      												current,
            	      												"y",
            	      												lv_y_5_0,
            	      												"com.laegler.stubbr.lang.StubbrLang.INT");
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDiWaypointAccess().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt174 >= 1 ) break loop174;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(174, input);
                        throw eee;
                }
                cnt174++;
            } while (true);

            if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getDiWaypointAccess().getUnorderedGroup_1()) ) {
                if (state.backtracking>0) {state.failed=true; return current;}
                throw new FailedPredicateException(input, "ruleDiWaypoint", "getUnorderedGroupHelper().canLeave(grammarAccess.getDiWaypointAccess().getUnorderedGroup_1())");
            }

            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getDiWaypointAccess().getUnorderedGroup_1());

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDiWaypoint"


    // $ANTLR start "entryRuleChapterPresentation"
    // InternalStubbrLang.g:5715:1: entryRuleChapterPresentation returns [EObject current=null] : iv_ruleChapterPresentation= ruleChapterPresentation EOF ;
    public final EObject entryRuleChapterPresentation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleChapterPresentation = null;


        try {
            // InternalStubbrLang.g:5715:60: (iv_ruleChapterPresentation= ruleChapterPresentation EOF )
            // InternalStubbrLang.g:5716:2: iv_ruleChapterPresentation= ruleChapterPresentation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getChapterPresentationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleChapterPresentation=ruleChapterPresentation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleChapterPresentation; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleChapterPresentation"


    // $ANTLR start "ruleChapterPresentation"
    // InternalStubbrLang.g:5722:1: ruleChapterPresentation returns [EObject current=null] : (otherlv_0= 'ui' otherlv_1= '{' (otherlv_2= 'framework' ( (lv_uiFramework_3_0= ruleUiFramework ) ) )? ( (lv_layouts_4_0= ruleLayout ) )* ( (lv_stylings_5_0= ruleStyling ) )* ( (lv_views_6_0= ruleView ) )* ( (lv_transitions_7_0= ruleTransition ) )* otherlv_8= '}' ) ;
    public final EObject ruleChapterPresentation() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_8=null;
        Enumerator lv_uiFramework_3_0 = null;

        EObject lv_layouts_4_0 = null;

        EObject lv_stylings_5_0 = null;

        EObject lv_views_6_0 = null;

        EObject lv_transitions_7_0 = null;



        	enterRule();

        try {
            // InternalStubbrLang.g:5728:2: ( (otherlv_0= 'ui' otherlv_1= '{' (otherlv_2= 'framework' ( (lv_uiFramework_3_0= ruleUiFramework ) ) )? ( (lv_layouts_4_0= ruleLayout ) )* ( (lv_stylings_5_0= ruleStyling ) )* ( (lv_views_6_0= ruleView ) )* ( (lv_transitions_7_0= ruleTransition ) )* otherlv_8= '}' ) )
            // InternalStubbrLang.g:5729:2: (otherlv_0= 'ui' otherlv_1= '{' (otherlv_2= 'framework' ( (lv_uiFramework_3_0= ruleUiFramework ) ) )? ( (lv_layouts_4_0= ruleLayout ) )* ( (lv_stylings_5_0= ruleStyling ) )* ( (lv_views_6_0= ruleView ) )* ( (lv_transitions_7_0= ruleTransition ) )* otherlv_8= '}' )
            {
            // InternalStubbrLang.g:5729:2: (otherlv_0= 'ui' otherlv_1= '{' (otherlv_2= 'framework' ( (lv_uiFramework_3_0= ruleUiFramework ) ) )? ( (lv_layouts_4_0= ruleLayout ) )* ( (lv_stylings_5_0= ruleStyling ) )* ( (lv_views_6_0= ruleView ) )* ( (lv_transitions_7_0= ruleTransition ) )* otherlv_8= '}' )
            // InternalStubbrLang.g:5730:3: otherlv_0= 'ui' otherlv_1= '{' (otherlv_2= 'framework' ( (lv_uiFramework_3_0= ruleUiFramework ) ) )? ( (lv_layouts_4_0= ruleLayout ) )* ( (lv_stylings_5_0= ruleStyling ) )* ( (lv_views_6_0= ruleView ) )* ( (lv_transitions_7_0= ruleTransition ) )* otherlv_8= '}'
            {
            otherlv_0=(Token)match(input,111,FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getChapterPresentationAccess().getUiKeyword_0());
              		
            }
            otherlv_1=(Token)match(input,16,FOLLOW_144); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getChapterPresentationAccess().getLeftCurlyBracketKeyword_1());
              		
            }
            // InternalStubbrLang.g:5738:3: (otherlv_2= 'framework' ( (lv_uiFramework_3_0= ruleUiFramework ) ) )?
            int alt175=2;
            int LA175_0 = input.LA(1);

            if ( (LA175_0==112) ) {
                alt175=1;
            }
            switch (alt175) {
                case 1 :
                    // InternalStubbrLang.g:5739:4: otherlv_2= 'framework' ( (lv_uiFramework_3_0= ruleUiFramework ) )
                    {
                    otherlv_2=(Token)match(input,112,FOLLOW_145); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getChapterPresentationAccess().getFrameworkKeyword_2_0());
                      			
                    }
                    // InternalStubbrLang.g:5743:4: ( (lv_uiFramework_3_0= ruleUiFramework ) )
                    // InternalStubbrLang.g:5744:5: (lv_uiFramework_3_0= ruleUiFramework )
                    {
                    // InternalStubbrLang.g:5744:5: (lv_uiFramework_3_0= ruleUiFramework )
                    // InternalStubbrLang.g:5745:6: lv_uiFramework_3_0= ruleUiFramework
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getChapterPresentationAccess().getUiFrameworkUiFrameworkEnumRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_146);
                    lv_uiFramework_3_0=ruleUiFramework();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getChapterPresentationRule());
                      						}
                      						set(
                      							current,
                      							"uiFramework",
                      							lv_uiFramework_3_0,
                      							"com.laegler.stubbr.lang.StubbrLang.UiFramework");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:5763:3: ( (lv_layouts_4_0= ruleLayout ) )*
            loop176:
            do {
                int alt176=2;
                int LA176_0 = input.LA(1);

                if ( (LA176_0==113) ) {
                    alt176=1;
                }


                switch (alt176) {
            	case 1 :
            	    // InternalStubbrLang.g:5764:4: (lv_layouts_4_0= ruleLayout )
            	    {
            	    // InternalStubbrLang.g:5764:4: (lv_layouts_4_0= ruleLayout )
            	    // InternalStubbrLang.g:5765:5: lv_layouts_4_0= ruleLayout
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getChapterPresentationAccess().getLayoutsLayoutParserRuleCall_3_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_146);
            	    lv_layouts_4_0=ruleLayout();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getChapterPresentationRule());
            	      					}
            	      					add(
            	      						current,
            	      						"layouts",
            	      						lv_layouts_4_0,
            	      						"com.laegler.stubbr.lang.StubbrLang.Layout");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop176;
                }
            } while (true);

            // InternalStubbrLang.g:5782:3: ( (lv_stylings_5_0= ruleStyling ) )*
            loop177:
            do {
                int alt177=2;
                int LA177_0 = input.LA(1);

                if ( (LA177_0==114) ) {
                    alt177=1;
                }


                switch (alt177) {
            	case 1 :
            	    // InternalStubbrLang.g:5783:4: (lv_stylings_5_0= ruleStyling )
            	    {
            	    // InternalStubbrLang.g:5783:4: (lv_stylings_5_0= ruleStyling )
            	    // InternalStubbrLang.g:5784:5: lv_stylings_5_0= ruleStyling
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getChapterPresentationAccess().getStylingsStylingParserRuleCall_4_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_147);
            	    lv_stylings_5_0=ruleStyling();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getChapterPresentationRule());
            	      					}
            	      					add(
            	      						current,
            	      						"stylings",
            	      						lv_stylings_5_0,
            	      						"com.laegler.stubbr.lang.StubbrLang.Styling");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop177;
                }
            } while (true);

            // InternalStubbrLang.g:5801:3: ( (lv_views_6_0= ruleView ) )*
            loop178:
            do {
                int alt178=2;
                int LA178_0 = input.LA(1);

                if ( (LA178_0==86) ) {
                    alt178=1;
                }


                switch (alt178) {
            	case 1 :
            	    // InternalStubbrLang.g:5802:4: (lv_views_6_0= ruleView )
            	    {
            	    // InternalStubbrLang.g:5802:4: (lv_views_6_0= ruleView )
            	    // InternalStubbrLang.g:5803:5: lv_views_6_0= ruleView
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getChapterPresentationAccess().getViewsViewParserRuleCall_5_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_148);
            	    lv_views_6_0=ruleView();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getChapterPresentationRule());
            	      					}
            	      					add(
            	      						current,
            	      						"views",
            	      						lv_views_6_0,
            	      						"com.laegler.stubbr.lang.StubbrLang.View");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop178;
                }
            } while (true);

            // InternalStubbrLang.g:5820:3: ( (lv_transitions_7_0= ruleTransition ) )*
            loop179:
            do {
                int alt179=2;
                int LA179_0 = input.LA(1);

                if ( (LA179_0==120) ) {
                    alt179=1;
                }


                switch (alt179) {
            	case 1 :
            	    // InternalStubbrLang.g:5821:4: (lv_transitions_7_0= ruleTransition )
            	    {
            	    // InternalStubbrLang.g:5821:4: (lv_transitions_7_0= ruleTransition )
            	    // InternalStubbrLang.g:5822:5: lv_transitions_7_0= ruleTransition
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getChapterPresentationAccess().getTransitionsTransitionParserRuleCall_6_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_149);
            	    lv_transitions_7_0=ruleTransition();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getChapterPresentationRule());
            	      					}
            	      					add(
            	      						current,
            	      						"transitions",
            	      						lv_transitions_7_0,
            	      						"com.laegler.stubbr.lang.StubbrLang.Transition");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop179;
                }
            } while (true);

            otherlv_8=(Token)match(input,26,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_8, grammarAccess.getChapterPresentationAccess().getRightCurlyBracketKeyword_7());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleChapterPresentation"


    // $ANTLR start "entryRuleLayout"
    // InternalStubbrLang.g:5847:1: entryRuleLayout returns [EObject current=null] : iv_ruleLayout= ruleLayout EOF ;
    public final EObject entryRuleLayout() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLayout = null;


        try {
            // InternalStubbrLang.g:5847:47: (iv_ruleLayout= ruleLayout EOF )
            // InternalStubbrLang.g:5848:2: iv_ruleLayout= ruleLayout EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLayoutRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLayout=ruleLayout();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLayout; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLayout"


    // $ANTLR start "ruleLayout"
    // InternalStubbrLang.g:5854:1: ruleLayout returns [EObject current=null] : (otherlv_0= 'layout' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )? (otherlv_7= 'type' ( (lv_type_8_0= RULE_STRING ) ) )? otherlv_9= '}' ) ;
    public final EObject ruleLayout() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token lv_label_4_0=null;
        Token otherlv_5=null;
        Token lv_documentation_6_0=null;
        Token otherlv_7=null;
        Token lv_type_8_0=null;
        Token otherlv_9=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;



        	enterRule();

        try {
            // InternalStubbrLang.g:5860:2: ( (otherlv_0= 'layout' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )? (otherlv_7= 'type' ( (lv_type_8_0= RULE_STRING ) ) )? otherlv_9= '}' ) )
            // InternalStubbrLang.g:5861:2: (otherlv_0= 'layout' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )? (otherlv_7= 'type' ( (lv_type_8_0= RULE_STRING ) ) )? otherlv_9= '}' )
            {
            // InternalStubbrLang.g:5861:2: (otherlv_0= 'layout' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )? (otherlv_7= 'type' ( (lv_type_8_0= RULE_STRING ) ) )? otherlv_9= '}' )
            // InternalStubbrLang.g:5862:3: otherlv_0= 'layout' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )? (otherlv_7= 'type' ( (lv_type_8_0= RULE_STRING ) ) )? otherlv_9= '}'
            {
            otherlv_0=(Token)match(input,113,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getLayoutAccess().getLayoutKeyword_0());
              		
            }
            // InternalStubbrLang.g:5866:3: ( (lv_name_1_0= ruleQualifiedName ) )
            // InternalStubbrLang.g:5867:4: (lv_name_1_0= ruleQualifiedName )
            {
            // InternalStubbrLang.g:5867:4: (lv_name_1_0= ruleQualifiedName )
            // InternalStubbrLang.g:5868:5: lv_name_1_0= ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getLayoutAccess().getNameQualifiedNameParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_6);
            lv_name_1_0=ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getLayoutRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"org.eclipse.xtext.xbase.Xbase.QualifiedName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,16,FOLLOW_150); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getLayoutAccess().getLeftCurlyBracketKeyword_2());
              		
            }
            // InternalStubbrLang.g:5889:3: (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )?
            int alt180=2;
            int LA180_0 = input.LA(1);

            if ( (LA180_0==17) ) {
                alt180=1;
            }
            switch (alt180) {
                case 1 :
                    // InternalStubbrLang.g:5890:4: otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) )
                    {
                    otherlv_3=(Token)match(input,17,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getLayoutAccess().getLabelKeyword_3_0());
                      			
                    }
                    // InternalStubbrLang.g:5894:4: ( (lv_label_4_0= RULE_STRING ) )
                    // InternalStubbrLang.g:5895:5: (lv_label_4_0= RULE_STRING )
                    {
                    // InternalStubbrLang.g:5895:5: (lv_label_4_0= RULE_STRING )
                    // InternalStubbrLang.g:5896:6: lv_label_4_0= RULE_STRING
                    {
                    lv_label_4_0=(Token)match(input,RULE_STRING,FOLLOW_151); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_label_4_0, grammarAccess.getLayoutAccess().getLabelSTRINGTerminalRuleCall_3_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getLayoutRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"label",
                      							lv_label_4_0,
                      							"org.eclipse.xtext.xbase.Xtype.STRING");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:5913:3: (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )?
            int alt181=2;
            int LA181_0 = input.LA(1);

            if ( (LA181_0==18) ) {
                alt181=1;
            }
            switch (alt181) {
                case 1 :
                    // InternalStubbrLang.g:5914:4: otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) )
                    {
                    otherlv_5=(Token)match(input,18,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getLayoutAccess().getDocumentationKeyword_4_0());
                      			
                    }
                    // InternalStubbrLang.g:5918:4: ( (lv_documentation_6_0= RULE_STRING ) )
                    // InternalStubbrLang.g:5919:5: (lv_documentation_6_0= RULE_STRING )
                    {
                    // InternalStubbrLang.g:5919:5: (lv_documentation_6_0= RULE_STRING )
                    // InternalStubbrLang.g:5920:6: lv_documentation_6_0= RULE_STRING
                    {
                    lv_documentation_6_0=(Token)match(input,RULE_STRING,FOLLOW_91); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_documentation_6_0, grammarAccess.getLayoutAccess().getDocumentationSTRINGTerminalRuleCall_4_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getLayoutRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"documentation",
                      							lv_documentation_6_0,
                      							"org.eclipse.xtext.xbase.Xtype.STRING");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:5937:3: (otherlv_7= 'type' ( (lv_type_8_0= RULE_STRING ) ) )?
            int alt182=2;
            int LA182_0 = input.LA(1);

            if ( (LA182_0==67) ) {
                alt182=1;
            }
            switch (alt182) {
                case 1 :
                    // InternalStubbrLang.g:5938:4: otherlv_7= 'type' ( (lv_type_8_0= RULE_STRING ) )
                    {
                    otherlv_7=(Token)match(input,67,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getLayoutAccess().getTypeKeyword_5_0());
                      			
                    }
                    // InternalStubbrLang.g:5942:4: ( (lv_type_8_0= RULE_STRING ) )
                    // InternalStubbrLang.g:5943:5: (lv_type_8_0= RULE_STRING )
                    {
                    // InternalStubbrLang.g:5943:5: (lv_type_8_0= RULE_STRING )
                    // InternalStubbrLang.g:5944:6: lv_type_8_0= RULE_STRING
                    {
                    lv_type_8_0=(Token)match(input,RULE_STRING,FOLLOW_29); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_type_8_0, grammarAccess.getLayoutAccess().getTypeSTRINGTerminalRuleCall_5_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getLayoutRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"type",
                      							lv_type_8_0,
                      							"org.eclipse.xtext.xbase.Xtype.STRING");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_9=(Token)match(input,26,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_9, grammarAccess.getLayoutAccess().getRightCurlyBracketKeyword_6());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLayout"


    // $ANTLR start "entryRuleStyling"
    // InternalStubbrLang.g:5969:1: entryRuleStyling returns [EObject current=null] : iv_ruleStyling= ruleStyling EOF ;
    public final EObject entryRuleStyling() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStyling = null;


        try {
            // InternalStubbrLang.g:5969:48: (iv_ruleStyling= ruleStyling EOF )
            // InternalStubbrLang.g:5970:2: iv_ruleStyling= ruleStyling EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStylingRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleStyling=ruleStyling();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStyling; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStyling"


    // $ANTLR start "ruleStyling"
    // InternalStubbrLang.g:5976:1: ruleStyling returns [EObject current=null] : (otherlv_0= 'styling' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )? (otherlv_7= 'baseColor' ( (lv_baseColor_8_0= RULE_STRING ) ) )? (otherlv_9= 'highLightColor' ( (lv_highLightColor_10_0= RULE_STRING ) ) )? (otherlv_11= 'textColor' ( (lv_textColor_12_0= RULE_STRING ) ) )? (otherlv_13= 'fontSize' ( (lv_fontSize_14_0= RULE_STRING ) ) )? otherlv_15= '}' ) ;
    public final EObject ruleStyling() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token lv_label_4_0=null;
        Token otherlv_5=null;
        Token lv_documentation_6_0=null;
        Token otherlv_7=null;
        Token lv_baseColor_8_0=null;
        Token otherlv_9=null;
        Token lv_highLightColor_10_0=null;
        Token otherlv_11=null;
        Token lv_textColor_12_0=null;
        Token otherlv_13=null;
        Token lv_fontSize_14_0=null;
        Token otherlv_15=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;



        	enterRule();

        try {
            // InternalStubbrLang.g:5982:2: ( (otherlv_0= 'styling' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )? (otherlv_7= 'baseColor' ( (lv_baseColor_8_0= RULE_STRING ) ) )? (otherlv_9= 'highLightColor' ( (lv_highLightColor_10_0= RULE_STRING ) ) )? (otherlv_11= 'textColor' ( (lv_textColor_12_0= RULE_STRING ) ) )? (otherlv_13= 'fontSize' ( (lv_fontSize_14_0= RULE_STRING ) ) )? otherlv_15= '}' ) )
            // InternalStubbrLang.g:5983:2: (otherlv_0= 'styling' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )? (otherlv_7= 'baseColor' ( (lv_baseColor_8_0= RULE_STRING ) ) )? (otherlv_9= 'highLightColor' ( (lv_highLightColor_10_0= RULE_STRING ) ) )? (otherlv_11= 'textColor' ( (lv_textColor_12_0= RULE_STRING ) ) )? (otherlv_13= 'fontSize' ( (lv_fontSize_14_0= RULE_STRING ) ) )? otherlv_15= '}' )
            {
            // InternalStubbrLang.g:5983:2: (otherlv_0= 'styling' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )? (otherlv_7= 'baseColor' ( (lv_baseColor_8_0= RULE_STRING ) ) )? (otherlv_9= 'highLightColor' ( (lv_highLightColor_10_0= RULE_STRING ) ) )? (otherlv_11= 'textColor' ( (lv_textColor_12_0= RULE_STRING ) ) )? (otherlv_13= 'fontSize' ( (lv_fontSize_14_0= RULE_STRING ) ) )? otherlv_15= '}' )
            // InternalStubbrLang.g:5984:3: otherlv_0= 'styling' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )? (otherlv_7= 'baseColor' ( (lv_baseColor_8_0= RULE_STRING ) ) )? (otherlv_9= 'highLightColor' ( (lv_highLightColor_10_0= RULE_STRING ) ) )? (otherlv_11= 'textColor' ( (lv_textColor_12_0= RULE_STRING ) ) )? (otherlv_13= 'fontSize' ( (lv_fontSize_14_0= RULE_STRING ) ) )? otherlv_15= '}'
            {
            otherlv_0=(Token)match(input,114,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getStylingAccess().getStylingKeyword_0());
              		
            }
            // InternalStubbrLang.g:5988:3: ( (lv_name_1_0= ruleQualifiedName ) )
            // InternalStubbrLang.g:5989:4: (lv_name_1_0= ruleQualifiedName )
            {
            // InternalStubbrLang.g:5989:4: (lv_name_1_0= ruleQualifiedName )
            // InternalStubbrLang.g:5990:5: lv_name_1_0= ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getStylingAccess().getNameQualifiedNameParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_6);
            lv_name_1_0=ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getStylingRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"org.eclipse.xtext.xbase.Xbase.QualifiedName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,16,FOLLOW_152); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getStylingAccess().getLeftCurlyBracketKeyword_2());
              		
            }
            // InternalStubbrLang.g:6011:3: (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )?
            int alt183=2;
            int LA183_0 = input.LA(1);

            if ( (LA183_0==17) ) {
                alt183=1;
            }
            switch (alt183) {
                case 1 :
                    // InternalStubbrLang.g:6012:4: otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) )
                    {
                    otherlv_3=(Token)match(input,17,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getStylingAccess().getLabelKeyword_3_0());
                      			
                    }
                    // InternalStubbrLang.g:6016:4: ( (lv_label_4_0= RULE_STRING ) )
                    // InternalStubbrLang.g:6017:5: (lv_label_4_0= RULE_STRING )
                    {
                    // InternalStubbrLang.g:6017:5: (lv_label_4_0= RULE_STRING )
                    // InternalStubbrLang.g:6018:6: lv_label_4_0= RULE_STRING
                    {
                    lv_label_4_0=(Token)match(input,RULE_STRING,FOLLOW_153); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_label_4_0, grammarAccess.getStylingAccess().getLabelSTRINGTerminalRuleCall_3_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getStylingRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"label",
                      							lv_label_4_0,
                      							"org.eclipse.xtext.xbase.Xtype.STRING");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:6035:3: (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )?
            int alt184=2;
            int LA184_0 = input.LA(1);

            if ( (LA184_0==18) ) {
                alt184=1;
            }
            switch (alt184) {
                case 1 :
                    // InternalStubbrLang.g:6036:4: otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) )
                    {
                    otherlv_5=(Token)match(input,18,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getStylingAccess().getDocumentationKeyword_4_0());
                      			
                    }
                    // InternalStubbrLang.g:6040:4: ( (lv_documentation_6_0= RULE_STRING ) )
                    // InternalStubbrLang.g:6041:5: (lv_documentation_6_0= RULE_STRING )
                    {
                    // InternalStubbrLang.g:6041:5: (lv_documentation_6_0= RULE_STRING )
                    // InternalStubbrLang.g:6042:6: lv_documentation_6_0= RULE_STRING
                    {
                    lv_documentation_6_0=(Token)match(input,RULE_STRING,FOLLOW_154); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_documentation_6_0, grammarAccess.getStylingAccess().getDocumentationSTRINGTerminalRuleCall_4_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getStylingRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"documentation",
                      							lv_documentation_6_0,
                      							"org.eclipse.xtext.xbase.Xtype.STRING");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:6059:3: (otherlv_7= 'baseColor' ( (lv_baseColor_8_0= RULE_STRING ) ) )?
            int alt185=2;
            int LA185_0 = input.LA(1);

            if ( (LA185_0==115) ) {
                alt185=1;
            }
            switch (alt185) {
                case 1 :
                    // InternalStubbrLang.g:6060:4: otherlv_7= 'baseColor' ( (lv_baseColor_8_0= RULE_STRING ) )
                    {
                    otherlv_7=(Token)match(input,115,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getStylingAccess().getBaseColorKeyword_5_0());
                      			
                    }
                    // InternalStubbrLang.g:6064:4: ( (lv_baseColor_8_0= RULE_STRING ) )
                    // InternalStubbrLang.g:6065:5: (lv_baseColor_8_0= RULE_STRING )
                    {
                    // InternalStubbrLang.g:6065:5: (lv_baseColor_8_0= RULE_STRING )
                    // InternalStubbrLang.g:6066:6: lv_baseColor_8_0= RULE_STRING
                    {
                    lv_baseColor_8_0=(Token)match(input,RULE_STRING,FOLLOW_155); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_baseColor_8_0, grammarAccess.getStylingAccess().getBaseColorSTRINGTerminalRuleCall_5_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getStylingRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"baseColor",
                      							lv_baseColor_8_0,
                      							"org.eclipse.xtext.xbase.Xtype.STRING");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:6083:3: (otherlv_9= 'highLightColor' ( (lv_highLightColor_10_0= RULE_STRING ) ) )?
            int alt186=2;
            int LA186_0 = input.LA(1);

            if ( (LA186_0==116) ) {
                alt186=1;
            }
            switch (alt186) {
                case 1 :
                    // InternalStubbrLang.g:6084:4: otherlv_9= 'highLightColor' ( (lv_highLightColor_10_0= RULE_STRING ) )
                    {
                    otherlv_9=(Token)match(input,116,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_9, grammarAccess.getStylingAccess().getHighLightColorKeyword_6_0());
                      			
                    }
                    // InternalStubbrLang.g:6088:4: ( (lv_highLightColor_10_0= RULE_STRING ) )
                    // InternalStubbrLang.g:6089:5: (lv_highLightColor_10_0= RULE_STRING )
                    {
                    // InternalStubbrLang.g:6089:5: (lv_highLightColor_10_0= RULE_STRING )
                    // InternalStubbrLang.g:6090:6: lv_highLightColor_10_0= RULE_STRING
                    {
                    lv_highLightColor_10_0=(Token)match(input,RULE_STRING,FOLLOW_156); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_highLightColor_10_0, grammarAccess.getStylingAccess().getHighLightColorSTRINGTerminalRuleCall_6_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getStylingRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"highLightColor",
                      							lv_highLightColor_10_0,
                      							"org.eclipse.xtext.xbase.Xtype.STRING");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:6107:3: (otherlv_11= 'textColor' ( (lv_textColor_12_0= RULE_STRING ) ) )?
            int alt187=2;
            int LA187_0 = input.LA(1);

            if ( (LA187_0==117) ) {
                alt187=1;
            }
            switch (alt187) {
                case 1 :
                    // InternalStubbrLang.g:6108:4: otherlv_11= 'textColor' ( (lv_textColor_12_0= RULE_STRING ) )
                    {
                    otherlv_11=(Token)match(input,117,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_11, grammarAccess.getStylingAccess().getTextColorKeyword_7_0());
                      			
                    }
                    // InternalStubbrLang.g:6112:4: ( (lv_textColor_12_0= RULE_STRING ) )
                    // InternalStubbrLang.g:6113:5: (lv_textColor_12_0= RULE_STRING )
                    {
                    // InternalStubbrLang.g:6113:5: (lv_textColor_12_0= RULE_STRING )
                    // InternalStubbrLang.g:6114:6: lv_textColor_12_0= RULE_STRING
                    {
                    lv_textColor_12_0=(Token)match(input,RULE_STRING,FOLLOW_157); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_textColor_12_0, grammarAccess.getStylingAccess().getTextColorSTRINGTerminalRuleCall_7_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getStylingRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"textColor",
                      							lv_textColor_12_0,
                      							"org.eclipse.xtext.xbase.Xtype.STRING");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:6131:3: (otherlv_13= 'fontSize' ( (lv_fontSize_14_0= RULE_STRING ) ) )?
            int alt188=2;
            int LA188_0 = input.LA(1);

            if ( (LA188_0==118) ) {
                alt188=1;
            }
            switch (alt188) {
                case 1 :
                    // InternalStubbrLang.g:6132:4: otherlv_13= 'fontSize' ( (lv_fontSize_14_0= RULE_STRING ) )
                    {
                    otherlv_13=(Token)match(input,118,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_13, grammarAccess.getStylingAccess().getFontSizeKeyword_8_0());
                      			
                    }
                    // InternalStubbrLang.g:6136:4: ( (lv_fontSize_14_0= RULE_STRING ) )
                    // InternalStubbrLang.g:6137:5: (lv_fontSize_14_0= RULE_STRING )
                    {
                    // InternalStubbrLang.g:6137:5: (lv_fontSize_14_0= RULE_STRING )
                    // InternalStubbrLang.g:6138:6: lv_fontSize_14_0= RULE_STRING
                    {
                    lv_fontSize_14_0=(Token)match(input,RULE_STRING,FOLLOW_29); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_fontSize_14_0, grammarAccess.getStylingAccess().getFontSizeSTRINGTerminalRuleCall_8_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getStylingRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"fontSize",
                      							lv_fontSize_14_0,
                      							"org.eclipse.xtext.xbase.Xtype.STRING");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_15=(Token)match(input,26,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_15, grammarAccess.getStylingAccess().getRightCurlyBracketKeyword_9());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStyling"


    // $ANTLR start "entryRuleView"
    // InternalStubbrLang.g:6163:1: entryRuleView returns [EObject current=null] : iv_ruleView= ruleView EOF ;
    public final EObject entryRuleView() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleView = null;


        try {
            // InternalStubbrLang.g:6163:45: (iv_ruleView= ruleView EOF )
            // InternalStubbrLang.g:6164:2: iv_ruleView= ruleView EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getViewRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleView=ruleView();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleView; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleView"


    // $ANTLR start "ruleView"
    // InternalStubbrLang.g:6170:1: ruleView returns [EObject current=null] : (otherlv_0= 'view' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )? (otherlv_7= 'layout' ( ( ruleQualifiedName ) ) )? (otherlv_9= 'styling' ( ( ruleQualifiedName ) ) )? (otherlv_11= 'associatedEntities' ( ( ruleQualifiedName ) ) (otherlv_13= ',' ( ( ruleQualifiedName ) ) )* )? ( (lv_elements_15_0= ruleElement ) )* otherlv_16= '}' ) ;
    public final EObject ruleView() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token lv_label_4_0=null;
        Token otherlv_5=null;
        Token lv_documentation_6_0=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_16=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject lv_elements_15_0 = null;



        	enterRule();

        try {
            // InternalStubbrLang.g:6176:2: ( (otherlv_0= 'view' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )? (otherlv_7= 'layout' ( ( ruleQualifiedName ) ) )? (otherlv_9= 'styling' ( ( ruleQualifiedName ) ) )? (otherlv_11= 'associatedEntities' ( ( ruleQualifiedName ) ) (otherlv_13= ',' ( ( ruleQualifiedName ) ) )* )? ( (lv_elements_15_0= ruleElement ) )* otherlv_16= '}' ) )
            // InternalStubbrLang.g:6177:2: (otherlv_0= 'view' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )? (otherlv_7= 'layout' ( ( ruleQualifiedName ) ) )? (otherlv_9= 'styling' ( ( ruleQualifiedName ) ) )? (otherlv_11= 'associatedEntities' ( ( ruleQualifiedName ) ) (otherlv_13= ',' ( ( ruleQualifiedName ) ) )* )? ( (lv_elements_15_0= ruleElement ) )* otherlv_16= '}' )
            {
            // InternalStubbrLang.g:6177:2: (otherlv_0= 'view' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )? (otherlv_7= 'layout' ( ( ruleQualifiedName ) ) )? (otherlv_9= 'styling' ( ( ruleQualifiedName ) ) )? (otherlv_11= 'associatedEntities' ( ( ruleQualifiedName ) ) (otherlv_13= ',' ( ( ruleQualifiedName ) ) )* )? ( (lv_elements_15_0= ruleElement ) )* otherlv_16= '}' )
            // InternalStubbrLang.g:6178:3: otherlv_0= 'view' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )? (otherlv_7= 'layout' ( ( ruleQualifiedName ) ) )? (otherlv_9= 'styling' ( ( ruleQualifiedName ) ) )? (otherlv_11= 'associatedEntities' ( ( ruleQualifiedName ) ) (otherlv_13= ',' ( ( ruleQualifiedName ) ) )* )? ( (lv_elements_15_0= ruleElement ) )* otherlv_16= '}'
            {
            otherlv_0=(Token)match(input,86,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getViewAccess().getViewKeyword_0());
              		
            }
            // InternalStubbrLang.g:6182:3: ( (lv_name_1_0= ruleQualifiedName ) )
            // InternalStubbrLang.g:6183:4: (lv_name_1_0= ruleQualifiedName )
            {
            // InternalStubbrLang.g:6183:4: (lv_name_1_0= ruleQualifiedName )
            // InternalStubbrLang.g:6184:5: lv_name_1_0= ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getViewAccess().getNameQualifiedNameParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_6);
            lv_name_1_0=ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getViewRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"org.eclipse.xtext.xbase.Xbase.QualifiedName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,16,FOLLOW_158); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getViewAccess().getLeftCurlyBracketKeyword_2());
              		
            }
            // InternalStubbrLang.g:6205:3: (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )?
            int alt189=2;
            int LA189_0 = input.LA(1);

            if ( (LA189_0==17) ) {
                alt189=1;
            }
            switch (alt189) {
                case 1 :
                    // InternalStubbrLang.g:6206:4: otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) )
                    {
                    otherlv_3=(Token)match(input,17,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getViewAccess().getLabelKeyword_3_0());
                      			
                    }
                    // InternalStubbrLang.g:6210:4: ( (lv_label_4_0= RULE_STRING ) )
                    // InternalStubbrLang.g:6211:5: (lv_label_4_0= RULE_STRING )
                    {
                    // InternalStubbrLang.g:6211:5: (lv_label_4_0= RULE_STRING )
                    // InternalStubbrLang.g:6212:6: lv_label_4_0= RULE_STRING
                    {
                    lv_label_4_0=(Token)match(input,RULE_STRING,FOLLOW_159); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_label_4_0, grammarAccess.getViewAccess().getLabelSTRINGTerminalRuleCall_3_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getViewRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"label",
                      							lv_label_4_0,
                      							"org.eclipse.xtext.xbase.Xtype.STRING");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:6229:3: (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )?
            int alt190=2;
            int LA190_0 = input.LA(1);

            if ( (LA190_0==18) ) {
                alt190=1;
            }
            switch (alt190) {
                case 1 :
                    // InternalStubbrLang.g:6230:4: otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) )
                    {
                    otherlv_5=(Token)match(input,18,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getViewAccess().getDocumentationKeyword_4_0());
                      			
                    }
                    // InternalStubbrLang.g:6234:4: ( (lv_documentation_6_0= RULE_STRING ) )
                    // InternalStubbrLang.g:6235:5: (lv_documentation_6_0= RULE_STRING )
                    {
                    // InternalStubbrLang.g:6235:5: (lv_documentation_6_0= RULE_STRING )
                    // InternalStubbrLang.g:6236:6: lv_documentation_6_0= RULE_STRING
                    {
                    lv_documentation_6_0=(Token)match(input,RULE_STRING,FOLLOW_160); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_documentation_6_0, grammarAccess.getViewAccess().getDocumentationSTRINGTerminalRuleCall_4_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getViewRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"documentation",
                      							lv_documentation_6_0,
                      							"org.eclipse.xtext.xbase.Xtype.STRING");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:6253:3: (otherlv_7= 'layout' ( ( ruleQualifiedName ) ) )?
            int alt191=2;
            int LA191_0 = input.LA(1);

            if ( (LA191_0==113) ) {
                alt191=1;
            }
            switch (alt191) {
                case 1 :
                    // InternalStubbrLang.g:6254:4: otherlv_7= 'layout' ( ( ruleQualifiedName ) )
                    {
                    otherlv_7=(Token)match(input,113,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getViewAccess().getLayoutKeyword_5_0());
                      			
                    }
                    // InternalStubbrLang.g:6258:4: ( ( ruleQualifiedName ) )
                    // InternalStubbrLang.g:6259:5: ( ruleQualifiedName )
                    {
                    // InternalStubbrLang.g:6259:5: ( ruleQualifiedName )
                    // InternalStubbrLang.g:6260:6: ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getViewRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getViewAccess().getLayoutLayoutCrossReference_5_1_0());
                      					
                    }
                    pushFollow(FOLLOW_161);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:6275:3: (otherlv_9= 'styling' ( ( ruleQualifiedName ) ) )?
            int alt192=2;
            int LA192_0 = input.LA(1);

            if ( (LA192_0==114) ) {
                alt192=1;
            }
            switch (alt192) {
                case 1 :
                    // InternalStubbrLang.g:6276:4: otherlv_9= 'styling' ( ( ruleQualifiedName ) )
                    {
                    otherlv_9=(Token)match(input,114,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_9, grammarAccess.getViewAccess().getStylingKeyword_6_0());
                      			
                    }
                    // InternalStubbrLang.g:6280:4: ( ( ruleQualifiedName ) )
                    // InternalStubbrLang.g:6281:5: ( ruleQualifiedName )
                    {
                    // InternalStubbrLang.g:6281:5: ( ruleQualifiedName )
                    // InternalStubbrLang.g:6282:6: ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getViewRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getViewAccess().getStylingStylingCrossReference_6_1_0());
                      					
                    }
                    pushFollow(FOLLOW_162);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:6297:3: (otherlv_11= 'associatedEntities' ( ( ruleQualifiedName ) ) (otherlv_13= ',' ( ( ruleQualifiedName ) ) )* )?
            int alt194=2;
            int LA194_0 = input.LA(1);

            if ( (LA194_0==119) ) {
                alt194=1;
            }
            switch (alt194) {
                case 1 :
                    // InternalStubbrLang.g:6298:4: otherlv_11= 'associatedEntities' ( ( ruleQualifiedName ) ) (otherlv_13= ',' ( ( ruleQualifiedName ) ) )*
                    {
                    otherlv_11=(Token)match(input,119,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_11, grammarAccess.getViewAccess().getAssociatedEntitiesKeyword_7_0());
                      			
                    }
                    // InternalStubbrLang.g:6302:4: ( ( ruleQualifiedName ) )
                    // InternalStubbrLang.g:6303:5: ( ruleQualifiedName )
                    {
                    // InternalStubbrLang.g:6303:5: ( ruleQualifiedName )
                    // InternalStubbrLang.g:6304:6: ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getViewRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getViewAccess().getAssocEntitiesEntityCrossReference_7_1_0());
                      					
                    }
                    pushFollow(FOLLOW_163);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalStubbrLang.g:6318:4: (otherlv_13= ',' ( ( ruleQualifiedName ) ) )*
                    loop193:
                    do {
                        int alt193=2;
                        int LA193_0 = input.LA(1);

                        if ( (LA193_0==25) ) {
                            alt193=1;
                        }


                        switch (alt193) {
                    	case 1 :
                    	    // InternalStubbrLang.g:6319:5: otherlv_13= ',' ( ( ruleQualifiedName ) )
                    	    {
                    	    otherlv_13=(Token)match(input,25,FOLLOW_3); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_13, grammarAccess.getViewAccess().getCommaKeyword_7_2_0());
                    	      				
                    	    }
                    	    // InternalStubbrLang.g:6323:5: ( ( ruleQualifiedName ) )
                    	    // InternalStubbrLang.g:6324:6: ( ruleQualifiedName )
                    	    {
                    	    // InternalStubbrLang.g:6324:6: ( ruleQualifiedName )
                    	    // InternalStubbrLang.g:6325:7: ruleQualifiedName
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElement(grammarAccess.getViewRule());
                    	      							}
                    	      						
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getViewAccess().getAssocEntitiesEntityCrossReference_7_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_163);
                    	    ruleQualifiedName();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop193;
                        }
                    } while (true);


                    }
                    break;

            }

            // InternalStubbrLang.g:6341:3: ( (lv_elements_15_0= ruleElement ) )*
            loop195:
            do {
                int alt195=2;
                int LA195_0 = input.LA(1);

                if ( (LA195_0==123||LA195_0==127||(LA195_0>=129 && LA195_0<=136)) ) {
                    alt195=1;
                }


                switch (alt195) {
            	case 1 :
            	    // InternalStubbrLang.g:6342:4: (lv_elements_15_0= ruleElement )
            	    {
            	    // InternalStubbrLang.g:6342:4: (lv_elements_15_0= ruleElement )
            	    // InternalStubbrLang.g:6343:5: lv_elements_15_0= ruleElement
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getViewAccess().getElementsElementParserRuleCall_8_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_164);
            	    lv_elements_15_0=ruleElement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getViewRule());
            	      					}
            	      					add(
            	      						current,
            	      						"elements",
            	      						lv_elements_15_0,
            	      						"com.laegler.stubbr.lang.StubbrLang.Element");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop195;
                }
            } while (true);

            otherlv_16=(Token)match(input,26,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_16, grammarAccess.getViewAccess().getRightCurlyBracketKeyword_9());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleView"


    // $ANTLR start "entryRuleTransition"
    // InternalStubbrLang.g:6368:1: entryRuleTransition returns [EObject current=null] : iv_ruleTransition= ruleTransition EOF ;
    public final EObject entryRuleTransition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTransition = null;


        try {
            // InternalStubbrLang.g:6368:51: (iv_ruleTransition= ruleTransition EOF )
            // InternalStubbrLang.g:6369:2: iv_ruleTransition= ruleTransition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTransitionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTransition=ruleTransition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTransition; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTransition"


    // $ANTLR start "ruleTransition"
    // InternalStubbrLang.g:6375:1: ruleTransition returns [EObject current=null] : (otherlv_0= 'transition' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' ( (otherlv_3= 'from' ( ( ruleQualifiedName ) ) otherlv_5= 'to' ( ( ruleQualifiedName ) ) ) | (otherlv_7= 'triggerAction' ( (lv_name_8_0= ruleQualifiedName ) ) otherlv_9= 'from' ( ( ruleQualifiedName ) ) (otherlv_11= 'to' ( (lv_target_12_0= ruleJvmTypeReference ) ) )? (otherlv_13= 'callToAction' ( (lv_callToAction_14_0= ruleXBlockExpression ) ) )? )? ) otherlv_15= '}' ) ;
    public final EObject ruleTransition() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        AntlrDatatypeRuleToken lv_name_8_0 = null;

        EObject lv_target_12_0 = null;

        EObject lv_callToAction_14_0 = null;



        	enterRule();

        try {
            // InternalStubbrLang.g:6381:2: ( (otherlv_0= 'transition' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' ( (otherlv_3= 'from' ( ( ruleQualifiedName ) ) otherlv_5= 'to' ( ( ruleQualifiedName ) ) ) | (otherlv_7= 'triggerAction' ( (lv_name_8_0= ruleQualifiedName ) ) otherlv_9= 'from' ( ( ruleQualifiedName ) ) (otherlv_11= 'to' ( (lv_target_12_0= ruleJvmTypeReference ) ) )? (otherlv_13= 'callToAction' ( (lv_callToAction_14_0= ruleXBlockExpression ) ) )? )? ) otherlv_15= '}' ) )
            // InternalStubbrLang.g:6382:2: (otherlv_0= 'transition' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' ( (otherlv_3= 'from' ( ( ruleQualifiedName ) ) otherlv_5= 'to' ( ( ruleQualifiedName ) ) ) | (otherlv_7= 'triggerAction' ( (lv_name_8_0= ruleQualifiedName ) ) otherlv_9= 'from' ( ( ruleQualifiedName ) ) (otherlv_11= 'to' ( (lv_target_12_0= ruleJvmTypeReference ) ) )? (otherlv_13= 'callToAction' ( (lv_callToAction_14_0= ruleXBlockExpression ) ) )? )? ) otherlv_15= '}' )
            {
            // InternalStubbrLang.g:6382:2: (otherlv_0= 'transition' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' ( (otherlv_3= 'from' ( ( ruleQualifiedName ) ) otherlv_5= 'to' ( ( ruleQualifiedName ) ) ) | (otherlv_7= 'triggerAction' ( (lv_name_8_0= ruleQualifiedName ) ) otherlv_9= 'from' ( ( ruleQualifiedName ) ) (otherlv_11= 'to' ( (lv_target_12_0= ruleJvmTypeReference ) ) )? (otherlv_13= 'callToAction' ( (lv_callToAction_14_0= ruleXBlockExpression ) ) )? )? ) otherlv_15= '}' )
            // InternalStubbrLang.g:6383:3: otherlv_0= 'transition' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' ( (otherlv_3= 'from' ( ( ruleQualifiedName ) ) otherlv_5= 'to' ( ( ruleQualifiedName ) ) ) | (otherlv_7= 'triggerAction' ( (lv_name_8_0= ruleQualifiedName ) ) otherlv_9= 'from' ( ( ruleQualifiedName ) ) (otherlv_11= 'to' ( (lv_target_12_0= ruleJvmTypeReference ) ) )? (otherlv_13= 'callToAction' ( (lv_callToAction_14_0= ruleXBlockExpression ) ) )? )? ) otherlv_15= '}'
            {
            otherlv_0=(Token)match(input,120,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getTransitionAccess().getTransitionKeyword_0());
              		
            }
            // InternalStubbrLang.g:6387:3: ( (lv_name_1_0= ruleQualifiedName ) )
            // InternalStubbrLang.g:6388:4: (lv_name_1_0= ruleQualifiedName )
            {
            // InternalStubbrLang.g:6388:4: (lv_name_1_0= ruleQualifiedName )
            // InternalStubbrLang.g:6389:5: lv_name_1_0= ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTransitionAccess().getNameQualifiedNameParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_6);
            lv_name_1_0=ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTransitionRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"org.eclipse.xtext.xbase.Xbase.QualifiedName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,16,FOLLOW_165); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getTransitionAccess().getLeftCurlyBracketKeyword_2());
              		
            }
            // InternalStubbrLang.g:6410:3: ( (otherlv_3= 'from' ( ( ruleQualifiedName ) ) otherlv_5= 'to' ( ( ruleQualifiedName ) ) ) | (otherlv_7= 'triggerAction' ( (lv_name_8_0= ruleQualifiedName ) ) otherlv_9= 'from' ( ( ruleQualifiedName ) ) (otherlv_11= 'to' ( (lv_target_12_0= ruleJvmTypeReference ) ) )? (otherlv_13= 'callToAction' ( (lv_callToAction_14_0= ruleXBlockExpression ) ) )? )? )
            int alt199=2;
            int LA199_0 = input.LA(1);

            if ( (LA199_0==75) ) {
                alt199=1;
            }
            else if ( (LA199_0==26||LA199_0==121) ) {
                alt199=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 199, 0, input);

                throw nvae;
            }
            switch (alt199) {
                case 1 :
                    // InternalStubbrLang.g:6411:4: (otherlv_3= 'from' ( ( ruleQualifiedName ) ) otherlv_5= 'to' ( ( ruleQualifiedName ) ) )
                    {
                    // InternalStubbrLang.g:6411:4: (otherlv_3= 'from' ( ( ruleQualifiedName ) ) otherlv_5= 'to' ( ( ruleQualifiedName ) ) )
                    // InternalStubbrLang.g:6412:5: otherlv_3= 'from' ( ( ruleQualifiedName ) ) otherlv_5= 'to' ( ( ruleQualifiedName ) )
                    {
                    otherlv_3=(Token)match(input,75,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_3, grammarAccess.getTransitionAccess().getFromKeyword_3_0_0());
                      				
                    }
                    // InternalStubbrLang.g:6416:5: ( ( ruleQualifiedName ) )
                    // InternalStubbrLang.g:6417:6: ( ruleQualifiedName )
                    {
                    // InternalStubbrLang.g:6417:6: ( ruleQualifiedName )
                    // InternalStubbrLang.g:6418:7: ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getTransitionRule());
                      							}
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getTransitionAccess().getFromUiElementCrossReference_3_0_1_0());
                      						
                    }
                    pushFollow(FOLLOW_89);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    otherlv_5=(Token)match(input,76,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_5, grammarAccess.getTransitionAccess().getToKeyword_3_0_2());
                      				
                    }
                    // InternalStubbrLang.g:6436:5: ( ( ruleQualifiedName ) )
                    // InternalStubbrLang.g:6437:6: ( ruleQualifiedName )
                    {
                    // InternalStubbrLang.g:6437:6: ( ruleQualifiedName )
                    // InternalStubbrLang.g:6438:7: ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getTransitionRule());
                      							}
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getTransitionAccess().getToUiElementCrossReference_3_0_3_0());
                      						
                    }
                    pushFollow(FOLLOW_29);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalStubbrLang.g:6454:4: (otherlv_7= 'triggerAction' ( (lv_name_8_0= ruleQualifiedName ) ) otherlv_9= 'from' ( ( ruleQualifiedName ) ) (otherlv_11= 'to' ( (lv_target_12_0= ruleJvmTypeReference ) ) )? (otherlv_13= 'callToAction' ( (lv_callToAction_14_0= ruleXBlockExpression ) ) )? )?
                    {
                    // InternalStubbrLang.g:6454:4: (otherlv_7= 'triggerAction' ( (lv_name_8_0= ruleQualifiedName ) ) otherlv_9= 'from' ( ( ruleQualifiedName ) ) (otherlv_11= 'to' ( (lv_target_12_0= ruleJvmTypeReference ) ) )? (otherlv_13= 'callToAction' ( (lv_callToAction_14_0= ruleXBlockExpression ) ) )? )?
                    int alt198=2;
                    int LA198_0 = input.LA(1);

                    if ( (LA198_0==121) ) {
                        alt198=1;
                    }
                    switch (alt198) {
                        case 1 :
                            // InternalStubbrLang.g:6455:5: otherlv_7= 'triggerAction' ( (lv_name_8_0= ruleQualifiedName ) ) otherlv_9= 'from' ( ( ruleQualifiedName ) ) (otherlv_11= 'to' ( (lv_target_12_0= ruleJvmTypeReference ) ) )? (otherlv_13= 'callToAction' ( (lv_callToAction_14_0= ruleXBlockExpression ) ) )?
                            {
                            otherlv_7=(Token)match(input,121,FOLLOW_3); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_7, grammarAccess.getTransitionAccess().getTriggerActionKeyword_3_1_0());
                              				
                            }
                            // InternalStubbrLang.g:6459:5: ( (lv_name_8_0= ruleQualifiedName ) )
                            // InternalStubbrLang.g:6460:6: (lv_name_8_0= ruleQualifiedName )
                            {
                            // InternalStubbrLang.g:6460:6: (lv_name_8_0= ruleQualifiedName )
                            // InternalStubbrLang.g:6461:7: lv_name_8_0= ruleQualifiedName
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getTransitionAccess().getNameQualifiedNameParserRuleCall_3_1_1_0());
                              						
                            }
                            pushFollow(FOLLOW_88);
                            lv_name_8_0=ruleQualifiedName();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getTransitionRule());
                              							}
                              							set(
                              								current,
                              								"name",
                              								lv_name_8_0,
                              								"org.eclipse.xtext.xbase.Xbase.QualifiedName");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }

                            otherlv_9=(Token)match(input,75,FOLLOW_3); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_9, grammarAccess.getTransitionAccess().getFromKeyword_3_1_2());
                              				
                            }
                            // InternalStubbrLang.g:6482:5: ( ( ruleQualifiedName ) )
                            // InternalStubbrLang.g:6483:6: ( ruleQualifiedName )
                            {
                            // InternalStubbrLang.g:6483:6: ( ruleQualifiedName )
                            // InternalStubbrLang.g:6484:7: ruleQualifiedName
                            {
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getTransitionRule());
                              							}
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getTransitionAccess().getTriggerElementUiElementCrossReference_3_1_3_0());
                              						
                            }
                            pushFollow(FOLLOW_166);
                            ruleQualifiedName();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }

                            // InternalStubbrLang.g:6498:5: (otherlv_11= 'to' ( (lv_target_12_0= ruleJvmTypeReference ) ) )?
                            int alt196=2;
                            int LA196_0 = input.LA(1);

                            if ( (LA196_0==76) ) {
                                alt196=1;
                            }
                            switch (alt196) {
                                case 1 :
                                    // InternalStubbrLang.g:6499:6: otherlv_11= 'to' ( (lv_target_12_0= ruleJvmTypeReference ) )
                                    {
                                    otherlv_11=(Token)match(input,76,FOLLOW_52); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      						newLeafNode(otherlv_11, grammarAccess.getTransitionAccess().getToKeyword_3_1_4_0());
                                      					
                                    }
                                    // InternalStubbrLang.g:6503:6: ( (lv_target_12_0= ruleJvmTypeReference ) )
                                    // InternalStubbrLang.g:6504:7: (lv_target_12_0= ruleJvmTypeReference )
                                    {
                                    // InternalStubbrLang.g:6504:7: (lv_target_12_0= ruleJvmTypeReference )
                                    // InternalStubbrLang.g:6505:8: lv_target_12_0= ruleJvmTypeReference
                                    {
                                    if ( state.backtracking==0 ) {

                                      								newCompositeNode(grammarAccess.getTransitionAccess().getTargetJvmTypeReferenceParserRuleCall_3_1_4_1_0());
                                      							
                                    }
                                    pushFollow(FOLLOW_167);
                                    lv_target_12_0=ruleJvmTypeReference();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElementForParent(grammarAccess.getTransitionRule());
                                      								}
                                      								set(
                                      									current,
                                      									"target",
                                      									lv_target_12_0,
                                      									"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
                                      								afterParserOrEnumRuleCall();
                                      							
                                    }

                                    }


                                    }


                                    }
                                    break;

                            }

                            // InternalStubbrLang.g:6523:5: (otherlv_13= 'callToAction' ( (lv_callToAction_14_0= ruleXBlockExpression ) ) )?
                            int alt197=2;
                            int LA197_0 = input.LA(1);

                            if ( (LA197_0==122) ) {
                                alt197=1;
                            }
                            switch (alt197) {
                                case 1 :
                                    // InternalStubbrLang.g:6524:6: otherlv_13= 'callToAction' ( (lv_callToAction_14_0= ruleXBlockExpression ) )
                                    {
                                    otherlv_13=(Token)match(input,122,FOLLOW_6); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      						newLeafNode(otherlv_13, grammarAccess.getTransitionAccess().getCallToActionKeyword_3_1_5_0());
                                      					
                                    }
                                    // InternalStubbrLang.g:6528:6: ( (lv_callToAction_14_0= ruleXBlockExpression ) )
                                    // InternalStubbrLang.g:6529:7: (lv_callToAction_14_0= ruleXBlockExpression )
                                    {
                                    // InternalStubbrLang.g:6529:7: (lv_callToAction_14_0= ruleXBlockExpression )
                                    // InternalStubbrLang.g:6530:8: lv_callToAction_14_0= ruleXBlockExpression
                                    {
                                    if ( state.backtracking==0 ) {

                                      								newCompositeNode(grammarAccess.getTransitionAccess().getCallToActionXBlockExpressionParserRuleCall_3_1_5_1_0());
                                      							
                                    }
                                    pushFollow(FOLLOW_29);
                                    lv_callToAction_14_0=ruleXBlockExpression();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElementForParent(grammarAccess.getTransitionRule());
                                      								}
                                      								set(
                                      									current,
                                      									"callToAction",
                                      									lv_callToAction_14_0,
                                      									"org.eclipse.xtext.xbase.Xbase.XBlockExpression");
                                      								afterParserOrEnumRuleCall();
                                      							
                                    }

                                    }


                                    }


                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }
                    break;

            }

            otherlv_15=(Token)match(input,26,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_15, grammarAccess.getTransitionAccess().getRightCurlyBracketKeyword_4());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTransition"


    // $ANTLR start "entryRuleElement"
    // InternalStubbrLang.g:6558:1: entryRuleElement returns [EObject current=null] : iv_ruleElement= ruleElement EOF ;
    public final EObject entryRuleElement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleElement = null;


        try {
            // InternalStubbrLang.g:6558:48: (iv_ruleElement= ruleElement EOF )
            // InternalStubbrLang.g:6559:2: iv_ruleElement= ruleElement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getElementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleElement=ruleElement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleElement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleElement"


    // $ANTLR start "ruleElement"
    // InternalStubbrLang.g:6565:1: ruleElement returns [EObject current=null] : (this_ListView_0= ruleListView | this_OutputText_1= ruleOutputText | this_Button_2= ruleButton | this_InputField_3= ruleInputField | this_RadioButtonGroup_4= ruleRadioButtonGroup | this_CheckBoxGroup_5= ruleCheckBoxGroup | this_Upload_6= ruleUpload | this_Name_7= ruleName | this_Birthday_8= ruleBirthday | this_Address_9= ruleAddress ) ;
    public final EObject ruleElement() throws RecognitionException {
        EObject current = null;

        EObject this_ListView_0 = null;

        EObject this_OutputText_1 = null;

        EObject this_Button_2 = null;

        EObject this_InputField_3 = null;

        EObject this_RadioButtonGroup_4 = null;

        EObject this_CheckBoxGroup_5 = null;

        EObject this_Upload_6 = null;

        EObject this_Name_7 = null;

        EObject this_Birthday_8 = null;

        EObject this_Address_9 = null;



        	enterRule();

        try {
            // InternalStubbrLang.g:6571:2: ( (this_ListView_0= ruleListView | this_OutputText_1= ruleOutputText | this_Button_2= ruleButton | this_InputField_3= ruleInputField | this_RadioButtonGroup_4= ruleRadioButtonGroup | this_CheckBoxGroup_5= ruleCheckBoxGroup | this_Upload_6= ruleUpload | this_Name_7= ruleName | this_Birthday_8= ruleBirthday | this_Address_9= ruleAddress ) )
            // InternalStubbrLang.g:6572:2: (this_ListView_0= ruleListView | this_OutputText_1= ruleOutputText | this_Button_2= ruleButton | this_InputField_3= ruleInputField | this_RadioButtonGroup_4= ruleRadioButtonGroup | this_CheckBoxGroup_5= ruleCheckBoxGroup | this_Upload_6= ruleUpload | this_Name_7= ruleName | this_Birthday_8= ruleBirthday | this_Address_9= ruleAddress )
            {
            // InternalStubbrLang.g:6572:2: (this_ListView_0= ruleListView | this_OutputText_1= ruleOutputText | this_Button_2= ruleButton | this_InputField_3= ruleInputField | this_RadioButtonGroup_4= ruleRadioButtonGroup | this_CheckBoxGroup_5= ruleCheckBoxGroup | this_Upload_6= ruleUpload | this_Name_7= ruleName | this_Birthday_8= ruleBirthday | this_Address_9= ruleAddress )
            int alt200=10;
            switch ( input.LA(1) ) {
            case 123:
                {
                alt200=1;
                }
                break;
            case 127:
                {
                alt200=2;
                }
                break;
            case 129:
                {
                alt200=3;
                }
                break;
            case 130:
                {
                alt200=4;
                }
                break;
            case 134:
                {
                alt200=5;
                }
                break;
            case 135:
                {
                alt200=6;
                }
                break;
            case 136:
                {
                alt200=7;
                }
                break;
            case 131:
                {
                alt200=8;
                }
                break;
            case 132:
                {
                alt200=9;
                }
                break;
            case 133:
                {
                alt200=10;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 200, 0, input);

                throw nvae;
            }

            switch (alt200) {
                case 1 :
                    // InternalStubbrLang.g:6573:3: this_ListView_0= ruleListView
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getElementAccess().getListViewParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ListView_0=ruleListView();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ListView_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalStubbrLang.g:6582:3: this_OutputText_1= ruleOutputText
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getElementAccess().getOutputTextParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_OutputText_1=ruleOutputText();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_OutputText_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalStubbrLang.g:6591:3: this_Button_2= ruleButton
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getElementAccess().getButtonParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Button_2=ruleButton();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Button_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalStubbrLang.g:6600:3: this_InputField_3= ruleInputField
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getElementAccess().getInputFieldParserRuleCall_3());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_InputField_3=ruleInputField();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_InputField_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalStubbrLang.g:6609:3: this_RadioButtonGroup_4= ruleRadioButtonGroup
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getElementAccess().getRadioButtonGroupParserRuleCall_4());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_RadioButtonGroup_4=ruleRadioButtonGroup();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_RadioButtonGroup_4;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalStubbrLang.g:6618:3: this_CheckBoxGroup_5= ruleCheckBoxGroup
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getElementAccess().getCheckBoxGroupParserRuleCall_5());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_CheckBoxGroup_5=ruleCheckBoxGroup();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_CheckBoxGroup_5;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalStubbrLang.g:6627:3: this_Upload_6= ruleUpload
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getElementAccess().getUploadParserRuleCall_6());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Upload_6=ruleUpload();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Upload_6;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 8 :
                    // InternalStubbrLang.g:6636:3: this_Name_7= ruleName
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getElementAccess().getNameParserRuleCall_7());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Name_7=ruleName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Name_7;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 9 :
                    // InternalStubbrLang.g:6645:3: this_Birthday_8= ruleBirthday
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getElementAccess().getBirthdayParserRuleCall_8());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Birthday_8=ruleBirthday();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Birthday_8;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 10 :
                    // InternalStubbrLang.g:6654:3: this_Address_9= ruleAddress
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getElementAccess().getAddressParserRuleCall_9());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Address_9=ruleAddress();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Address_9;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleElement"


    // $ANTLR start "entryRuleListView"
    // InternalStubbrLang.g:6666:1: entryRuleListView returns [EObject current=null] : iv_ruleListView= ruleListView EOF ;
    public final EObject entryRuleListView() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleListView = null;


        try {
            // InternalStubbrLang.g:6666:49: (iv_ruleListView= ruleListView EOF )
            // InternalStubbrLang.g:6667:2: iv_ruleListView= ruleListView EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getListViewRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleListView=ruleListView();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleListView; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleListView"


    // $ANTLR start "ruleListView"
    // InternalStubbrLang.g:6673:1: ruleListView returns [EObject current=null] : (otherlv_0= 'listView' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )? ( (otherlv_7= 'titelBar' ( ( ruleQualifiedName ) ) ) | ( (otherlv_9= 'values' ( (lv_javaType_10_0= ruleJvmTypeReference ) ) ) (otherlv_11= 'valuesFromAction' ( (lv_action_12_0= ruleJvmTypeReference ) ) ) ) )? (otherlv_13= 'width' ( (lv_width_14_0= RULE_INT ) ) )? (otherlv_15= 'height' ( (lv_height_16_0= RULE_INT ) ) )? otherlv_17= '}' ) ;
    public final EObject ruleListView() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token lv_label_4_0=null;
        Token otherlv_5=null;
        Token lv_documentation_6_0=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token lv_width_14_0=null;
        Token otherlv_15=null;
        Token lv_height_16_0=null;
        Token otherlv_17=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject lv_javaType_10_0 = null;

        EObject lv_action_12_0 = null;



        	enterRule();

        try {
            // InternalStubbrLang.g:6679:2: ( (otherlv_0= 'listView' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )? ( (otherlv_7= 'titelBar' ( ( ruleQualifiedName ) ) ) | ( (otherlv_9= 'values' ( (lv_javaType_10_0= ruleJvmTypeReference ) ) ) (otherlv_11= 'valuesFromAction' ( (lv_action_12_0= ruleJvmTypeReference ) ) ) ) )? (otherlv_13= 'width' ( (lv_width_14_0= RULE_INT ) ) )? (otherlv_15= 'height' ( (lv_height_16_0= RULE_INT ) ) )? otherlv_17= '}' ) )
            // InternalStubbrLang.g:6680:2: (otherlv_0= 'listView' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )? ( (otherlv_7= 'titelBar' ( ( ruleQualifiedName ) ) ) | ( (otherlv_9= 'values' ( (lv_javaType_10_0= ruleJvmTypeReference ) ) ) (otherlv_11= 'valuesFromAction' ( (lv_action_12_0= ruleJvmTypeReference ) ) ) ) )? (otherlv_13= 'width' ( (lv_width_14_0= RULE_INT ) ) )? (otherlv_15= 'height' ( (lv_height_16_0= RULE_INT ) ) )? otherlv_17= '}' )
            {
            // InternalStubbrLang.g:6680:2: (otherlv_0= 'listView' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )? ( (otherlv_7= 'titelBar' ( ( ruleQualifiedName ) ) ) | ( (otherlv_9= 'values' ( (lv_javaType_10_0= ruleJvmTypeReference ) ) ) (otherlv_11= 'valuesFromAction' ( (lv_action_12_0= ruleJvmTypeReference ) ) ) ) )? (otherlv_13= 'width' ( (lv_width_14_0= RULE_INT ) ) )? (otherlv_15= 'height' ( (lv_height_16_0= RULE_INT ) ) )? otherlv_17= '}' )
            // InternalStubbrLang.g:6681:3: otherlv_0= 'listView' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )? ( (otherlv_7= 'titelBar' ( ( ruleQualifiedName ) ) ) | ( (otherlv_9= 'values' ( (lv_javaType_10_0= ruleJvmTypeReference ) ) ) (otherlv_11= 'valuesFromAction' ( (lv_action_12_0= ruleJvmTypeReference ) ) ) ) )? (otherlv_13= 'width' ( (lv_width_14_0= RULE_INT ) ) )? (otherlv_15= 'height' ( (lv_height_16_0= RULE_INT ) ) )? otherlv_17= '}'
            {
            otherlv_0=(Token)match(input,123,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getListViewAccess().getListViewKeyword_0());
              		
            }
            // InternalStubbrLang.g:6685:3: ( (lv_name_1_0= ruleQualifiedName ) )
            // InternalStubbrLang.g:6686:4: (lv_name_1_0= ruleQualifiedName )
            {
            // InternalStubbrLang.g:6686:4: (lv_name_1_0= ruleQualifiedName )
            // InternalStubbrLang.g:6687:5: lv_name_1_0= ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getListViewAccess().getNameQualifiedNameParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_6);
            lv_name_1_0=ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getListViewRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"org.eclipse.xtext.xbase.Xbase.QualifiedName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,16,FOLLOW_168); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getListViewAccess().getLeftCurlyBracketKeyword_2());
              		
            }
            // InternalStubbrLang.g:6708:3: (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )?
            int alt201=2;
            int LA201_0 = input.LA(1);

            if ( (LA201_0==17) ) {
                alt201=1;
            }
            switch (alt201) {
                case 1 :
                    // InternalStubbrLang.g:6709:4: otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) )
                    {
                    otherlv_3=(Token)match(input,17,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getListViewAccess().getLabelKeyword_3_0());
                      			
                    }
                    // InternalStubbrLang.g:6713:4: ( (lv_label_4_0= RULE_STRING ) )
                    // InternalStubbrLang.g:6714:5: (lv_label_4_0= RULE_STRING )
                    {
                    // InternalStubbrLang.g:6714:5: (lv_label_4_0= RULE_STRING )
                    // InternalStubbrLang.g:6715:6: lv_label_4_0= RULE_STRING
                    {
                    lv_label_4_0=(Token)match(input,RULE_STRING,FOLLOW_169); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_label_4_0, grammarAccess.getListViewAccess().getLabelSTRINGTerminalRuleCall_3_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getListViewRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"label",
                      							lv_label_4_0,
                      							"org.eclipse.xtext.xbase.Xtype.STRING");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:6732:3: (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )?
            int alt202=2;
            int LA202_0 = input.LA(1);

            if ( (LA202_0==18) ) {
                alt202=1;
            }
            switch (alt202) {
                case 1 :
                    // InternalStubbrLang.g:6733:4: otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) )
                    {
                    otherlv_5=(Token)match(input,18,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getListViewAccess().getDocumentationKeyword_4_0());
                      			
                    }
                    // InternalStubbrLang.g:6737:4: ( (lv_documentation_6_0= RULE_STRING ) )
                    // InternalStubbrLang.g:6738:5: (lv_documentation_6_0= RULE_STRING )
                    {
                    // InternalStubbrLang.g:6738:5: (lv_documentation_6_0= RULE_STRING )
                    // InternalStubbrLang.g:6739:6: lv_documentation_6_0= RULE_STRING
                    {
                    lv_documentation_6_0=(Token)match(input,RULE_STRING,FOLLOW_170); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_documentation_6_0, grammarAccess.getListViewAccess().getDocumentationSTRINGTerminalRuleCall_4_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getListViewRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"documentation",
                      							lv_documentation_6_0,
                      							"org.eclipse.xtext.xbase.Xtype.STRING");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:6756:3: ( (otherlv_7= 'titelBar' ( ( ruleQualifiedName ) ) ) | ( (otherlv_9= 'values' ( (lv_javaType_10_0= ruleJvmTypeReference ) ) ) (otherlv_11= 'valuesFromAction' ( (lv_action_12_0= ruleJvmTypeReference ) ) ) ) )?
            int alt203=3;
            int LA203_0 = input.LA(1);

            if ( (LA203_0==124) ) {
                alt203=1;
            }
            else if ( (LA203_0==125) ) {
                alt203=2;
            }
            switch (alt203) {
                case 1 :
                    // InternalStubbrLang.g:6757:4: (otherlv_7= 'titelBar' ( ( ruleQualifiedName ) ) )
                    {
                    // InternalStubbrLang.g:6757:4: (otherlv_7= 'titelBar' ( ( ruleQualifiedName ) ) )
                    // InternalStubbrLang.g:6758:5: otherlv_7= 'titelBar' ( ( ruleQualifiedName ) )
                    {
                    otherlv_7=(Token)match(input,124,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_7, grammarAccess.getListViewAccess().getTitelBarKeyword_5_0_0());
                      				
                    }
                    // InternalStubbrLang.g:6762:5: ( ( ruleQualifiedName ) )
                    // InternalStubbrLang.g:6763:6: ( ruleQualifiedName )
                    {
                    // InternalStubbrLang.g:6763:6: ( ruleQualifiedName )
                    // InternalStubbrLang.g:6764:7: ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getListViewRule());
                      							}
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getListViewAccess().getTypeEntityCrossReference_5_0_1_0());
                      						
                    }
                    pushFollow(FOLLOW_171);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalStubbrLang.g:6780:4: ( (otherlv_9= 'values' ( (lv_javaType_10_0= ruleJvmTypeReference ) ) ) (otherlv_11= 'valuesFromAction' ( (lv_action_12_0= ruleJvmTypeReference ) ) ) )
                    {
                    // InternalStubbrLang.g:6780:4: ( (otherlv_9= 'values' ( (lv_javaType_10_0= ruleJvmTypeReference ) ) ) (otherlv_11= 'valuesFromAction' ( (lv_action_12_0= ruleJvmTypeReference ) ) ) )
                    // InternalStubbrLang.g:6781:5: (otherlv_9= 'values' ( (lv_javaType_10_0= ruleJvmTypeReference ) ) ) (otherlv_11= 'valuesFromAction' ( (lv_action_12_0= ruleJvmTypeReference ) ) )
                    {
                    // InternalStubbrLang.g:6781:5: (otherlv_9= 'values' ( (lv_javaType_10_0= ruleJvmTypeReference ) ) )
                    // InternalStubbrLang.g:6782:6: otherlv_9= 'values' ( (lv_javaType_10_0= ruleJvmTypeReference ) )
                    {
                    otherlv_9=(Token)match(input,125,FOLLOW_52); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(otherlv_9, grammarAccess.getListViewAccess().getValuesKeyword_5_1_0_0());
                      					
                    }
                    // InternalStubbrLang.g:6786:6: ( (lv_javaType_10_0= ruleJvmTypeReference ) )
                    // InternalStubbrLang.g:6787:7: (lv_javaType_10_0= ruleJvmTypeReference )
                    {
                    // InternalStubbrLang.g:6787:7: (lv_javaType_10_0= ruleJvmTypeReference )
                    // InternalStubbrLang.g:6788:8: lv_javaType_10_0= ruleJvmTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      								newCompositeNode(grammarAccess.getListViewAccess().getJavaTypeJvmTypeReferenceParserRuleCall_5_1_0_1_0());
                      							
                    }
                    pushFollow(FOLLOW_172);
                    lv_javaType_10_0=ruleJvmTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      								if (current==null) {
                      									current = createModelElementForParent(grammarAccess.getListViewRule());
                      								}
                      								set(
                      									current,
                      									"javaType",
                      									lv_javaType_10_0,
                      									"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
                      								afterParserOrEnumRuleCall();
                      							
                    }

                    }


                    }


                    }

                    // InternalStubbrLang.g:6806:5: (otherlv_11= 'valuesFromAction' ( (lv_action_12_0= ruleJvmTypeReference ) ) )
                    // InternalStubbrLang.g:6807:6: otherlv_11= 'valuesFromAction' ( (lv_action_12_0= ruleJvmTypeReference ) )
                    {
                    otherlv_11=(Token)match(input,126,FOLLOW_52); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(otherlv_11, grammarAccess.getListViewAccess().getValuesFromActionKeyword_5_1_1_0());
                      					
                    }
                    // InternalStubbrLang.g:6811:6: ( (lv_action_12_0= ruleJvmTypeReference ) )
                    // InternalStubbrLang.g:6812:7: (lv_action_12_0= ruleJvmTypeReference )
                    {
                    // InternalStubbrLang.g:6812:7: (lv_action_12_0= ruleJvmTypeReference )
                    // InternalStubbrLang.g:6813:8: lv_action_12_0= ruleJvmTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      								newCompositeNode(grammarAccess.getListViewAccess().getActionJvmTypeReferenceParserRuleCall_5_1_1_1_0());
                      							
                    }
                    pushFollow(FOLLOW_171);
                    lv_action_12_0=ruleJvmTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      								if (current==null) {
                      									current = createModelElementForParent(grammarAccess.getListViewRule());
                      								}
                      								set(
                      									current,
                      									"action",
                      									lv_action_12_0,
                      									"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
                      								afterParserOrEnumRuleCall();
                      							
                    }

                    }


                    }


                    }


                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:6833:3: (otherlv_13= 'width' ( (lv_width_14_0= RULE_INT ) ) )?
            int alt204=2;
            int LA204_0 = input.LA(1);

            if ( (LA204_0==108) ) {
                alt204=1;
            }
            switch (alt204) {
                case 1 :
                    // InternalStubbrLang.g:6834:4: otherlv_13= 'width' ( (lv_width_14_0= RULE_INT ) )
                    {
                    otherlv_13=(Token)match(input,108,FOLLOW_140); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_13, grammarAccess.getListViewAccess().getWidthKeyword_6_0());
                      			
                    }
                    // InternalStubbrLang.g:6838:4: ( (lv_width_14_0= RULE_INT ) )
                    // InternalStubbrLang.g:6839:5: (lv_width_14_0= RULE_INT )
                    {
                    // InternalStubbrLang.g:6839:5: (lv_width_14_0= RULE_INT )
                    // InternalStubbrLang.g:6840:6: lv_width_14_0= RULE_INT
                    {
                    lv_width_14_0=(Token)match(input,RULE_INT,FOLLOW_173); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_width_14_0, grammarAccess.getListViewAccess().getWidthINTTerminalRuleCall_6_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getListViewRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"width",
                      							lv_width_14_0,
                      							"com.laegler.stubbr.lang.StubbrLang.INT");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:6857:3: (otherlv_15= 'height' ( (lv_height_16_0= RULE_INT ) ) )?
            int alt205=2;
            int LA205_0 = input.LA(1);

            if ( (LA205_0==109) ) {
                alt205=1;
            }
            switch (alt205) {
                case 1 :
                    // InternalStubbrLang.g:6858:4: otherlv_15= 'height' ( (lv_height_16_0= RULE_INT ) )
                    {
                    otherlv_15=(Token)match(input,109,FOLLOW_140); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_15, grammarAccess.getListViewAccess().getHeightKeyword_7_0());
                      			
                    }
                    // InternalStubbrLang.g:6862:4: ( (lv_height_16_0= RULE_INT ) )
                    // InternalStubbrLang.g:6863:5: (lv_height_16_0= RULE_INT )
                    {
                    // InternalStubbrLang.g:6863:5: (lv_height_16_0= RULE_INT )
                    // InternalStubbrLang.g:6864:6: lv_height_16_0= RULE_INT
                    {
                    lv_height_16_0=(Token)match(input,RULE_INT,FOLLOW_29); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_height_16_0, grammarAccess.getListViewAccess().getHeightINTTerminalRuleCall_7_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getListViewRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"height",
                      							lv_height_16_0,
                      							"com.laegler.stubbr.lang.StubbrLang.INT");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_17=(Token)match(input,26,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_17, grammarAccess.getListViewAccess().getRightCurlyBracketKeyword_8());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleListView"


    // $ANTLR start "entryRuleOutputText"
    // InternalStubbrLang.g:6889:1: entryRuleOutputText returns [EObject current=null] : iv_ruleOutputText= ruleOutputText EOF ;
    public final EObject entryRuleOutputText() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOutputText = null;


        try {
            // InternalStubbrLang.g:6889:51: (iv_ruleOutputText= ruleOutputText EOF )
            // InternalStubbrLang.g:6890:2: iv_ruleOutputText= ruleOutputText EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOutputTextRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOutputText=ruleOutputText();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOutputText; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOutputText"


    // $ANTLR start "ruleOutputText"
    // InternalStubbrLang.g:6896:1: ruleOutputText returns [EObject current=null] : (otherlv_0= 'outputText' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )? (otherlv_7= 'value' ( (lv_value_8_0= RULE_STRING ) ) )? (otherlv_9= 'style' ( ( ruleQualifiedName ) ) )? (otherlv_11= 'width' ( (lv_width_12_0= RULE_INT ) ) )? (otherlv_13= 'height' ( (lv_height_14_0= RULE_INT ) ) )? otherlv_15= '}' ) ;
    public final EObject ruleOutputText() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token lv_label_4_0=null;
        Token otherlv_5=null;
        Token lv_documentation_6_0=null;
        Token otherlv_7=null;
        Token lv_value_8_0=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token lv_width_12_0=null;
        Token otherlv_13=null;
        Token lv_height_14_0=null;
        Token otherlv_15=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;



        	enterRule();

        try {
            // InternalStubbrLang.g:6902:2: ( (otherlv_0= 'outputText' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )? (otherlv_7= 'value' ( (lv_value_8_0= RULE_STRING ) ) )? (otherlv_9= 'style' ( ( ruleQualifiedName ) ) )? (otherlv_11= 'width' ( (lv_width_12_0= RULE_INT ) ) )? (otherlv_13= 'height' ( (lv_height_14_0= RULE_INT ) ) )? otherlv_15= '}' ) )
            // InternalStubbrLang.g:6903:2: (otherlv_0= 'outputText' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )? (otherlv_7= 'value' ( (lv_value_8_0= RULE_STRING ) ) )? (otherlv_9= 'style' ( ( ruleQualifiedName ) ) )? (otherlv_11= 'width' ( (lv_width_12_0= RULE_INT ) ) )? (otherlv_13= 'height' ( (lv_height_14_0= RULE_INT ) ) )? otherlv_15= '}' )
            {
            // InternalStubbrLang.g:6903:2: (otherlv_0= 'outputText' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )? (otherlv_7= 'value' ( (lv_value_8_0= RULE_STRING ) ) )? (otherlv_9= 'style' ( ( ruleQualifiedName ) ) )? (otherlv_11= 'width' ( (lv_width_12_0= RULE_INT ) ) )? (otherlv_13= 'height' ( (lv_height_14_0= RULE_INT ) ) )? otherlv_15= '}' )
            // InternalStubbrLang.g:6904:3: otherlv_0= 'outputText' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )? (otherlv_7= 'value' ( (lv_value_8_0= RULE_STRING ) ) )? (otherlv_9= 'style' ( ( ruleQualifiedName ) ) )? (otherlv_11= 'width' ( (lv_width_12_0= RULE_INT ) ) )? (otherlv_13= 'height' ( (lv_height_14_0= RULE_INT ) ) )? otherlv_15= '}'
            {
            otherlv_0=(Token)match(input,127,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getOutputTextAccess().getOutputTextKeyword_0());
              		
            }
            // InternalStubbrLang.g:6908:3: ( (lv_name_1_0= ruleQualifiedName ) )
            // InternalStubbrLang.g:6909:4: (lv_name_1_0= ruleQualifiedName )
            {
            // InternalStubbrLang.g:6909:4: (lv_name_1_0= ruleQualifiedName )
            // InternalStubbrLang.g:6910:5: lv_name_1_0= ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getOutputTextAccess().getNameQualifiedNameParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_6);
            lv_name_1_0=ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getOutputTextRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"org.eclipse.xtext.xbase.Xbase.QualifiedName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,16,FOLLOW_174); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getOutputTextAccess().getLeftCurlyBracketKeyword_2());
              		
            }
            // InternalStubbrLang.g:6931:3: (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )?
            int alt206=2;
            int LA206_0 = input.LA(1);

            if ( (LA206_0==17) ) {
                alt206=1;
            }
            switch (alt206) {
                case 1 :
                    // InternalStubbrLang.g:6932:4: otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) )
                    {
                    otherlv_3=(Token)match(input,17,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getOutputTextAccess().getLabelKeyword_3_0());
                      			
                    }
                    // InternalStubbrLang.g:6936:4: ( (lv_label_4_0= RULE_STRING ) )
                    // InternalStubbrLang.g:6937:5: (lv_label_4_0= RULE_STRING )
                    {
                    // InternalStubbrLang.g:6937:5: (lv_label_4_0= RULE_STRING )
                    // InternalStubbrLang.g:6938:6: lv_label_4_0= RULE_STRING
                    {
                    lv_label_4_0=(Token)match(input,RULE_STRING,FOLLOW_175); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_label_4_0, grammarAccess.getOutputTextAccess().getLabelSTRINGTerminalRuleCall_3_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getOutputTextRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"label",
                      							lv_label_4_0,
                      							"org.eclipse.xtext.xbase.Xtype.STRING");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:6955:3: (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )?
            int alt207=2;
            int LA207_0 = input.LA(1);

            if ( (LA207_0==18) ) {
                alt207=1;
            }
            switch (alt207) {
                case 1 :
                    // InternalStubbrLang.g:6956:4: otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) )
                    {
                    otherlv_5=(Token)match(input,18,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getOutputTextAccess().getDocumentationKeyword_4_0());
                      			
                    }
                    // InternalStubbrLang.g:6960:4: ( (lv_documentation_6_0= RULE_STRING ) )
                    // InternalStubbrLang.g:6961:5: (lv_documentation_6_0= RULE_STRING )
                    {
                    // InternalStubbrLang.g:6961:5: (lv_documentation_6_0= RULE_STRING )
                    // InternalStubbrLang.g:6962:6: lv_documentation_6_0= RULE_STRING
                    {
                    lv_documentation_6_0=(Token)match(input,RULE_STRING,FOLLOW_176); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_documentation_6_0, grammarAccess.getOutputTextAccess().getDocumentationSTRINGTerminalRuleCall_4_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getOutputTextRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"documentation",
                      							lv_documentation_6_0,
                      							"org.eclipse.xtext.xbase.Xtype.STRING");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:6979:3: (otherlv_7= 'value' ( (lv_value_8_0= RULE_STRING ) ) )?
            int alt208=2;
            int LA208_0 = input.LA(1);

            if ( (LA208_0==78) ) {
                alt208=1;
            }
            switch (alt208) {
                case 1 :
                    // InternalStubbrLang.g:6980:4: otherlv_7= 'value' ( (lv_value_8_0= RULE_STRING ) )
                    {
                    otherlv_7=(Token)match(input,78,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getOutputTextAccess().getValueKeyword_5_0());
                      			
                    }
                    // InternalStubbrLang.g:6984:4: ( (lv_value_8_0= RULE_STRING ) )
                    // InternalStubbrLang.g:6985:5: (lv_value_8_0= RULE_STRING )
                    {
                    // InternalStubbrLang.g:6985:5: (lv_value_8_0= RULE_STRING )
                    // InternalStubbrLang.g:6986:6: lv_value_8_0= RULE_STRING
                    {
                    lv_value_8_0=(Token)match(input,RULE_STRING,FOLLOW_177); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_value_8_0, grammarAccess.getOutputTextAccess().getValueSTRINGTerminalRuleCall_5_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getOutputTextRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"value",
                      							lv_value_8_0,
                      							"org.eclipse.xtext.xbase.Xtype.STRING");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:7003:3: (otherlv_9= 'style' ( ( ruleQualifiedName ) ) )?
            int alt209=2;
            int LA209_0 = input.LA(1);

            if ( (LA209_0==128) ) {
                alt209=1;
            }
            switch (alt209) {
                case 1 :
                    // InternalStubbrLang.g:7004:4: otherlv_9= 'style' ( ( ruleQualifiedName ) )
                    {
                    otherlv_9=(Token)match(input,128,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_9, grammarAccess.getOutputTextAccess().getStyleKeyword_6_0());
                      			
                    }
                    // InternalStubbrLang.g:7008:4: ( ( ruleQualifiedName ) )
                    // InternalStubbrLang.g:7009:5: ( ruleQualifiedName )
                    {
                    // InternalStubbrLang.g:7009:5: ( ruleQualifiedName )
                    // InternalStubbrLang.g:7010:6: ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getOutputTextRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getOutputTextAccess().getStyleStylingCrossReference_6_1_0());
                      					
                    }
                    pushFollow(FOLLOW_171);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:7025:3: (otherlv_11= 'width' ( (lv_width_12_0= RULE_INT ) ) )?
            int alt210=2;
            int LA210_0 = input.LA(1);

            if ( (LA210_0==108) ) {
                alt210=1;
            }
            switch (alt210) {
                case 1 :
                    // InternalStubbrLang.g:7026:4: otherlv_11= 'width' ( (lv_width_12_0= RULE_INT ) )
                    {
                    otherlv_11=(Token)match(input,108,FOLLOW_140); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_11, grammarAccess.getOutputTextAccess().getWidthKeyword_7_0());
                      			
                    }
                    // InternalStubbrLang.g:7030:4: ( (lv_width_12_0= RULE_INT ) )
                    // InternalStubbrLang.g:7031:5: (lv_width_12_0= RULE_INT )
                    {
                    // InternalStubbrLang.g:7031:5: (lv_width_12_0= RULE_INT )
                    // InternalStubbrLang.g:7032:6: lv_width_12_0= RULE_INT
                    {
                    lv_width_12_0=(Token)match(input,RULE_INT,FOLLOW_173); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_width_12_0, grammarAccess.getOutputTextAccess().getWidthINTTerminalRuleCall_7_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getOutputTextRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"width",
                      							lv_width_12_0,
                      							"com.laegler.stubbr.lang.StubbrLang.INT");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:7049:3: (otherlv_13= 'height' ( (lv_height_14_0= RULE_INT ) ) )?
            int alt211=2;
            int LA211_0 = input.LA(1);

            if ( (LA211_0==109) ) {
                alt211=1;
            }
            switch (alt211) {
                case 1 :
                    // InternalStubbrLang.g:7050:4: otherlv_13= 'height' ( (lv_height_14_0= RULE_INT ) )
                    {
                    otherlv_13=(Token)match(input,109,FOLLOW_140); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_13, grammarAccess.getOutputTextAccess().getHeightKeyword_8_0());
                      			
                    }
                    // InternalStubbrLang.g:7054:4: ( (lv_height_14_0= RULE_INT ) )
                    // InternalStubbrLang.g:7055:5: (lv_height_14_0= RULE_INT )
                    {
                    // InternalStubbrLang.g:7055:5: (lv_height_14_0= RULE_INT )
                    // InternalStubbrLang.g:7056:6: lv_height_14_0= RULE_INT
                    {
                    lv_height_14_0=(Token)match(input,RULE_INT,FOLLOW_29); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_height_14_0, grammarAccess.getOutputTextAccess().getHeightINTTerminalRuleCall_8_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getOutputTextRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"height",
                      							lv_height_14_0,
                      							"com.laegler.stubbr.lang.StubbrLang.INT");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_15=(Token)match(input,26,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_15, grammarAccess.getOutputTextAccess().getRightCurlyBracketKeyword_9());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOutputText"


    // $ANTLR start "entryRuleButton"
    // InternalStubbrLang.g:7081:1: entryRuleButton returns [EObject current=null] : iv_ruleButton= ruleButton EOF ;
    public final EObject entryRuleButton() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleButton = null;


        try {
            // InternalStubbrLang.g:7081:47: (iv_ruleButton= ruleButton EOF )
            // InternalStubbrLang.g:7082:2: iv_ruleButton= ruleButton EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getButtonRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleButton=ruleButton();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleButton; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleButton"


    // $ANTLR start "ruleButton"
    // InternalStubbrLang.g:7088:1: ruleButton returns [EObject current=null] : (otherlv_0= 'button' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )? (otherlv_7= 'action' ( (lv_value_8_0= RULE_STRING ) ) )? (otherlv_9= 'style' ( ( ruleQualifiedName ) ) )? (otherlv_11= 'width' ( (lv_width_12_0= RULE_INT ) ) )? (otherlv_13= 'height' ( (lv_height_14_0= RULE_INT ) ) )? otherlv_15= '}' ) ;
    public final EObject ruleButton() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token lv_label_4_0=null;
        Token otherlv_5=null;
        Token lv_documentation_6_0=null;
        Token otherlv_7=null;
        Token lv_value_8_0=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token lv_width_12_0=null;
        Token otherlv_13=null;
        Token lv_height_14_0=null;
        Token otherlv_15=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;



        	enterRule();

        try {
            // InternalStubbrLang.g:7094:2: ( (otherlv_0= 'button' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )? (otherlv_7= 'action' ( (lv_value_8_0= RULE_STRING ) ) )? (otherlv_9= 'style' ( ( ruleQualifiedName ) ) )? (otherlv_11= 'width' ( (lv_width_12_0= RULE_INT ) ) )? (otherlv_13= 'height' ( (lv_height_14_0= RULE_INT ) ) )? otherlv_15= '}' ) )
            // InternalStubbrLang.g:7095:2: (otherlv_0= 'button' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )? (otherlv_7= 'action' ( (lv_value_8_0= RULE_STRING ) ) )? (otherlv_9= 'style' ( ( ruleQualifiedName ) ) )? (otherlv_11= 'width' ( (lv_width_12_0= RULE_INT ) ) )? (otherlv_13= 'height' ( (lv_height_14_0= RULE_INT ) ) )? otherlv_15= '}' )
            {
            // InternalStubbrLang.g:7095:2: (otherlv_0= 'button' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )? (otherlv_7= 'action' ( (lv_value_8_0= RULE_STRING ) ) )? (otherlv_9= 'style' ( ( ruleQualifiedName ) ) )? (otherlv_11= 'width' ( (lv_width_12_0= RULE_INT ) ) )? (otherlv_13= 'height' ( (lv_height_14_0= RULE_INT ) ) )? otherlv_15= '}' )
            // InternalStubbrLang.g:7096:3: otherlv_0= 'button' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )? (otherlv_7= 'action' ( (lv_value_8_0= RULE_STRING ) ) )? (otherlv_9= 'style' ( ( ruleQualifiedName ) ) )? (otherlv_11= 'width' ( (lv_width_12_0= RULE_INT ) ) )? (otherlv_13= 'height' ( (lv_height_14_0= RULE_INT ) ) )? otherlv_15= '}'
            {
            otherlv_0=(Token)match(input,129,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getButtonAccess().getButtonKeyword_0());
              		
            }
            // InternalStubbrLang.g:7100:3: ( (lv_name_1_0= ruleQualifiedName ) )
            // InternalStubbrLang.g:7101:4: (lv_name_1_0= ruleQualifiedName )
            {
            // InternalStubbrLang.g:7101:4: (lv_name_1_0= ruleQualifiedName )
            // InternalStubbrLang.g:7102:5: lv_name_1_0= ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getButtonAccess().getNameQualifiedNameParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_6);
            lv_name_1_0=ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getButtonRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"org.eclipse.xtext.xbase.Xbase.QualifiedName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,16,FOLLOW_178); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getButtonAccess().getLeftCurlyBracketKeyword_2());
              		
            }
            // InternalStubbrLang.g:7123:3: (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )?
            int alt212=2;
            int LA212_0 = input.LA(1);

            if ( (LA212_0==17) ) {
                alt212=1;
            }
            switch (alt212) {
                case 1 :
                    // InternalStubbrLang.g:7124:4: otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) )
                    {
                    otherlv_3=(Token)match(input,17,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getButtonAccess().getLabelKeyword_3_0());
                      			
                    }
                    // InternalStubbrLang.g:7128:4: ( (lv_label_4_0= RULE_STRING ) )
                    // InternalStubbrLang.g:7129:5: (lv_label_4_0= RULE_STRING )
                    {
                    // InternalStubbrLang.g:7129:5: (lv_label_4_0= RULE_STRING )
                    // InternalStubbrLang.g:7130:6: lv_label_4_0= RULE_STRING
                    {
                    lv_label_4_0=(Token)match(input,RULE_STRING,FOLLOW_179); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_label_4_0, grammarAccess.getButtonAccess().getLabelSTRINGTerminalRuleCall_3_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getButtonRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"label",
                      							lv_label_4_0,
                      							"org.eclipse.xtext.xbase.Xtype.STRING");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:7147:3: (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )?
            int alt213=2;
            int LA213_0 = input.LA(1);

            if ( (LA213_0==18) ) {
                alt213=1;
            }
            switch (alt213) {
                case 1 :
                    // InternalStubbrLang.g:7148:4: otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) )
                    {
                    otherlv_5=(Token)match(input,18,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getButtonAccess().getDocumentationKeyword_4_0());
                      			
                    }
                    // InternalStubbrLang.g:7152:4: ( (lv_documentation_6_0= RULE_STRING ) )
                    // InternalStubbrLang.g:7153:5: (lv_documentation_6_0= RULE_STRING )
                    {
                    // InternalStubbrLang.g:7153:5: (lv_documentation_6_0= RULE_STRING )
                    // InternalStubbrLang.g:7154:6: lv_documentation_6_0= RULE_STRING
                    {
                    lv_documentation_6_0=(Token)match(input,RULE_STRING,FOLLOW_180); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_documentation_6_0, grammarAccess.getButtonAccess().getDocumentationSTRINGTerminalRuleCall_4_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getButtonRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"documentation",
                      							lv_documentation_6_0,
                      							"org.eclipse.xtext.xbase.Xtype.STRING");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:7171:3: (otherlv_7= 'action' ( (lv_value_8_0= RULE_STRING ) ) )?
            int alt214=2;
            int LA214_0 = input.LA(1);

            if ( (LA214_0==77) ) {
                alt214=1;
            }
            switch (alt214) {
                case 1 :
                    // InternalStubbrLang.g:7172:4: otherlv_7= 'action' ( (lv_value_8_0= RULE_STRING ) )
                    {
                    otherlv_7=(Token)match(input,77,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getButtonAccess().getActionKeyword_5_0());
                      			
                    }
                    // InternalStubbrLang.g:7176:4: ( (lv_value_8_0= RULE_STRING ) )
                    // InternalStubbrLang.g:7177:5: (lv_value_8_0= RULE_STRING )
                    {
                    // InternalStubbrLang.g:7177:5: (lv_value_8_0= RULE_STRING )
                    // InternalStubbrLang.g:7178:6: lv_value_8_0= RULE_STRING
                    {
                    lv_value_8_0=(Token)match(input,RULE_STRING,FOLLOW_177); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_value_8_0, grammarAccess.getButtonAccess().getValueSTRINGTerminalRuleCall_5_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getButtonRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"value",
                      							lv_value_8_0,
                      							"org.eclipse.xtext.xbase.Xtype.STRING");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:7195:3: (otherlv_9= 'style' ( ( ruleQualifiedName ) ) )?
            int alt215=2;
            int LA215_0 = input.LA(1);

            if ( (LA215_0==128) ) {
                alt215=1;
            }
            switch (alt215) {
                case 1 :
                    // InternalStubbrLang.g:7196:4: otherlv_9= 'style' ( ( ruleQualifiedName ) )
                    {
                    otherlv_9=(Token)match(input,128,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_9, grammarAccess.getButtonAccess().getStyleKeyword_6_0());
                      			
                    }
                    // InternalStubbrLang.g:7200:4: ( ( ruleQualifiedName ) )
                    // InternalStubbrLang.g:7201:5: ( ruleQualifiedName )
                    {
                    // InternalStubbrLang.g:7201:5: ( ruleQualifiedName )
                    // InternalStubbrLang.g:7202:6: ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getButtonRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getButtonAccess().getStyleStylingCrossReference_6_1_0());
                      					
                    }
                    pushFollow(FOLLOW_171);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:7217:3: (otherlv_11= 'width' ( (lv_width_12_0= RULE_INT ) ) )?
            int alt216=2;
            int LA216_0 = input.LA(1);

            if ( (LA216_0==108) ) {
                alt216=1;
            }
            switch (alt216) {
                case 1 :
                    // InternalStubbrLang.g:7218:4: otherlv_11= 'width' ( (lv_width_12_0= RULE_INT ) )
                    {
                    otherlv_11=(Token)match(input,108,FOLLOW_140); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_11, grammarAccess.getButtonAccess().getWidthKeyword_7_0());
                      			
                    }
                    // InternalStubbrLang.g:7222:4: ( (lv_width_12_0= RULE_INT ) )
                    // InternalStubbrLang.g:7223:5: (lv_width_12_0= RULE_INT )
                    {
                    // InternalStubbrLang.g:7223:5: (lv_width_12_0= RULE_INT )
                    // InternalStubbrLang.g:7224:6: lv_width_12_0= RULE_INT
                    {
                    lv_width_12_0=(Token)match(input,RULE_INT,FOLLOW_173); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_width_12_0, grammarAccess.getButtonAccess().getWidthINTTerminalRuleCall_7_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getButtonRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"width",
                      							lv_width_12_0,
                      							"com.laegler.stubbr.lang.StubbrLang.INT");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:7241:3: (otherlv_13= 'height' ( (lv_height_14_0= RULE_INT ) ) )?
            int alt217=2;
            int LA217_0 = input.LA(1);

            if ( (LA217_0==109) ) {
                alt217=1;
            }
            switch (alt217) {
                case 1 :
                    // InternalStubbrLang.g:7242:4: otherlv_13= 'height' ( (lv_height_14_0= RULE_INT ) )
                    {
                    otherlv_13=(Token)match(input,109,FOLLOW_140); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_13, grammarAccess.getButtonAccess().getHeightKeyword_8_0());
                      			
                    }
                    // InternalStubbrLang.g:7246:4: ( (lv_height_14_0= RULE_INT ) )
                    // InternalStubbrLang.g:7247:5: (lv_height_14_0= RULE_INT )
                    {
                    // InternalStubbrLang.g:7247:5: (lv_height_14_0= RULE_INT )
                    // InternalStubbrLang.g:7248:6: lv_height_14_0= RULE_INT
                    {
                    lv_height_14_0=(Token)match(input,RULE_INT,FOLLOW_29); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_height_14_0, grammarAccess.getButtonAccess().getHeightINTTerminalRuleCall_8_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getButtonRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"height",
                      							lv_height_14_0,
                      							"com.laegler.stubbr.lang.StubbrLang.INT");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_15=(Token)match(input,26,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_15, grammarAccess.getButtonAccess().getRightCurlyBracketKeyword_9());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleButton"


    // $ANTLR start "entryRuleInputField"
    // InternalStubbrLang.g:7273:1: entryRuleInputField returns [EObject current=null] : iv_ruleInputField= ruleInputField EOF ;
    public final EObject entryRuleInputField() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleInputField = null;


        try {
            // InternalStubbrLang.g:7273:51: (iv_ruleInputField= ruleInputField EOF )
            // InternalStubbrLang.g:7274:2: iv_ruleInputField= ruleInputField EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getInputFieldRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleInputField=ruleInputField();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleInputField; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleInputField"


    // $ANTLR start "ruleInputField"
    // InternalStubbrLang.g:7280:1: ruleInputField returns [EObject current=null] : (otherlv_0= 'inputField' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )? ( (otherlv_7= 'type' ( ( ruleQualifiedName ) ) ) | (otherlv_9= 'javaType' ( ( ruleQualifiedName ) ) ) )? (otherlv_11= 'width' ( (lv_width_12_0= RULE_INT ) ) )? (otherlv_13= 'height' ( (lv_height_14_0= RULE_INT ) ) )? otherlv_15= '}' ) ;
    public final EObject ruleInputField() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token lv_label_4_0=null;
        Token otherlv_5=null;
        Token lv_documentation_6_0=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token lv_width_12_0=null;
        Token otherlv_13=null;
        Token lv_height_14_0=null;
        Token otherlv_15=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;



        	enterRule();

        try {
            // InternalStubbrLang.g:7286:2: ( (otherlv_0= 'inputField' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )? ( (otherlv_7= 'type' ( ( ruleQualifiedName ) ) ) | (otherlv_9= 'javaType' ( ( ruleQualifiedName ) ) ) )? (otherlv_11= 'width' ( (lv_width_12_0= RULE_INT ) ) )? (otherlv_13= 'height' ( (lv_height_14_0= RULE_INT ) ) )? otherlv_15= '}' ) )
            // InternalStubbrLang.g:7287:2: (otherlv_0= 'inputField' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )? ( (otherlv_7= 'type' ( ( ruleQualifiedName ) ) ) | (otherlv_9= 'javaType' ( ( ruleQualifiedName ) ) ) )? (otherlv_11= 'width' ( (lv_width_12_0= RULE_INT ) ) )? (otherlv_13= 'height' ( (lv_height_14_0= RULE_INT ) ) )? otherlv_15= '}' )
            {
            // InternalStubbrLang.g:7287:2: (otherlv_0= 'inputField' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )? ( (otherlv_7= 'type' ( ( ruleQualifiedName ) ) ) | (otherlv_9= 'javaType' ( ( ruleQualifiedName ) ) ) )? (otherlv_11= 'width' ( (lv_width_12_0= RULE_INT ) ) )? (otherlv_13= 'height' ( (lv_height_14_0= RULE_INT ) ) )? otherlv_15= '}' )
            // InternalStubbrLang.g:7288:3: otherlv_0= 'inputField' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )? ( (otherlv_7= 'type' ( ( ruleQualifiedName ) ) ) | (otherlv_9= 'javaType' ( ( ruleQualifiedName ) ) ) )? (otherlv_11= 'width' ( (lv_width_12_0= RULE_INT ) ) )? (otherlv_13= 'height' ( (lv_height_14_0= RULE_INT ) ) )? otherlv_15= '}'
            {
            otherlv_0=(Token)match(input,130,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getInputFieldAccess().getInputFieldKeyword_0());
              		
            }
            // InternalStubbrLang.g:7292:3: ( (lv_name_1_0= ruleQualifiedName ) )
            // InternalStubbrLang.g:7293:4: (lv_name_1_0= ruleQualifiedName )
            {
            // InternalStubbrLang.g:7293:4: (lv_name_1_0= ruleQualifiedName )
            // InternalStubbrLang.g:7294:5: lv_name_1_0= ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getInputFieldAccess().getNameQualifiedNameParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_6);
            lv_name_1_0=ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getInputFieldRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"org.eclipse.xtext.xbase.Xbase.QualifiedName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,16,FOLLOW_181); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getInputFieldAccess().getLeftCurlyBracketKeyword_2());
              		
            }
            // InternalStubbrLang.g:7315:3: (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )?
            int alt218=2;
            int LA218_0 = input.LA(1);

            if ( (LA218_0==17) ) {
                alt218=1;
            }
            switch (alt218) {
                case 1 :
                    // InternalStubbrLang.g:7316:4: otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) )
                    {
                    otherlv_3=(Token)match(input,17,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getInputFieldAccess().getLabelKeyword_3_0());
                      			
                    }
                    // InternalStubbrLang.g:7320:4: ( (lv_label_4_0= RULE_STRING ) )
                    // InternalStubbrLang.g:7321:5: (lv_label_4_0= RULE_STRING )
                    {
                    // InternalStubbrLang.g:7321:5: (lv_label_4_0= RULE_STRING )
                    // InternalStubbrLang.g:7322:6: lv_label_4_0= RULE_STRING
                    {
                    lv_label_4_0=(Token)match(input,RULE_STRING,FOLLOW_182); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_label_4_0, grammarAccess.getInputFieldAccess().getLabelSTRINGTerminalRuleCall_3_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getInputFieldRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"label",
                      							lv_label_4_0,
                      							"org.eclipse.xtext.xbase.Xtype.STRING");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:7339:3: (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )?
            int alt219=2;
            int LA219_0 = input.LA(1);

            if ( (LA219_0==18) ) {
                alt219=1;
            }
            switch (alt219) {
                case 1 :
                    // InternalStubbrLang.g:7340:4: otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) )
                    {
                    otherlv_5=(Token)match(input,18,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getInputFieldAccess().getDocumentationKeyword_4_0());
                      			
                    }
                    // InternalStubbrLang.g:7344:4: ( (lv_documentation_6_0= RULE_STRING ) )
                    // InternalStubbrLang.g:7345:5: (lv_documentation_6_0= RULE_STRING )
                    {
                    // InternalStubbrLang.g:7345:5: (lv_documentation_6_0= RULE_STRING )
                    // InternalStubbrLang.g:7346:6: lv_documentation_6_0= RULE_STRING
                    {
                    lv_documentation_6_0=(Token)match(input,RULE_STRING,FOLLOW_183); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_documentation_6_0, grammarAccess.getInputFieldAccess().getDocumentationSTRINGTerminalRuleCall_4_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getInputFieldRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"documentation",
                      							lv_documentation_6_0,
                      							"org.eclipse.xtext.xbase.Xtype.STRING");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:7363:3: ( (otherlv_7= 'type' ( ( ruleQualifiedName ) ) ) | (otherlv_9= 'javaType' ( ( ruleQualifiedName ) ) ) )?
            int alt220=3;
            int LA220_0 = input.LA(1);

            if ( (LA220_0==67) ) {
                alt220=1;
            }
            else if ( (LA220_0==73) ) {
                alt220=2;
            }
            switch (alt220) {
                case 1 :
                    // InternalStubbrLang.g:7364:4: (otherlv_7= 'type' ( ( ruleQualifiedName ) ) )
                    {
                    // InternalStubbrLang.g:7364:4: (otherlv_7= 'type' ( ( ruleQualifiedName ) ) )
                    // InternalStubbrLang.g:7365:5: otherlv_7= 'type' ( ( ruleQualifiedName ) )
                    {
                    otherlv_7=(Token)match(input,67,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_7, grammarAccess.getInputFieldAccess().getTypeKeyword_5_0_0());
                      				
                    }
                    // InternalStubbrLang.g:7369:5: ( ( ruleQualifiedName ) )
                    // InternalStubbrLang.g:7370:6: ( ruleQualifiedName )
                    {
                    // InternalStubbrLang.g:7370:6: ( ruleQualifiedName )
                    // InternalStubbrLang.g:7371:7: ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getInputFieldRule());
                      							}
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getInputFieldAccess().getTypeEntityCrossReference_5_0_1_0());
                      						
                    }
                    pushFollow(FOLLOW_171);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalStubbrLang.g:7387:4: (otherlv_9= 'javaType' ( ( ruleQualifiedName ) ) )
                    {
                    // InternalStubbrLang.g:7387:4: (otherlv_9= 'javaType' ( ( ruleQualifiedName ) ) )
                    // InternalStubbrLang.g:7388:5: otherlv_9= 'javaType' ( ( ruleQualifiedName ) )
                    {
                    otherlv_9=(Token)match(input,73,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_9, grammarAccess.getInputFieldAccess().getJavaTypeKeyword_5_1_0());
                      				
                    }
                    // InternalStubbrLang.g:7392:5: ( ( ruleQualifiedName ) )
                    // InternalStubbrLang.g:7393:6: ( ruleQualifiedName )
                    {
                    // InternalStubbrLang.g:7393:6: ( ruleQualifiedName )
                    // InternalStubbrLang.g:7394:7: ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getInputFieldRule());
                      							}
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getInputFieldAccess().getJavaTypeJvmTypeCrossReference_5_1_1_0());
                      						
                    }
                    pushFollow(FOLLOW_171);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:7410:3: (otherlv_11= 'width' ( (lv_width_12_0= RULE_INT ) ) )?
            int alt221=2;
            int LA221_0 = input.LA(1);

            if ( (LA221_0==108) ) {
                alt221=1;
            }
            switch (alt221) {
                case 1 :
                    // InternalStubbrLang.g:7411:4: otherlv_11= 'width' ( (lv_width_12_0= RULE_INT ) )
                    {
                    otherlv_11=(Token)match(input,108,FOLLOW_140); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_11, grammarAccess.getInputFieldAccess().getWidthKeyword_6_0());
                      			
                    }
                    // InternalStubbrLang.g:7415:4: ( (lv_width_12_0= RULE_INT ) )
                    // InternalStubbrLang.g:7416:5: (lv_width_12_0= RULE_INT )
                    {
                    // InternalStubbrLang.g:7416:5: (lv_width_12_0= RULE_INT )
                    // InternalStubbrLang.g:7417:6: lv_width_12_0= RULE_INT
                    {
                    lv_width_12_0=(Token)match(input,RULE_INT,FOLLOW_173); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_width_12_0, grammarAccess.getInputFieldAccess().getWidthINTTerminalRuleCall_6_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getInputFieldRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"width",
                      							lv_width_12_0,
                      							"com.laegler.stubbr.lang.StubbrLang.INT");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:7434:3: (otherlv_13= 'height' ( (lv_height_14_0= RULE_INT ) ) )?
            int alt222=2;
            int LA222_0 = input.LA(1);

            if ( (LA222_0==109) ) {
                alt222=1;
            }
            switch (alt222) {
                case 1 :
                    // InternalStubbrLang.g:7435:4: otherlv_13= 'height' ( (lv_height_14_0= RULE_INT ) )
                    {
                    otherlv_13=(Token)match(input,109,FOLLOW_140); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_13, grammarAccess.getInputFieldAccess().getHeightKeyword_7_0());
                      			
                    }
                    // InternalStubbrLang.g:7439:4: ( (lv_height_14_0= RULE_INT ) )
                    // InternalStubbrLang.g:7440:5: (lv_height_14_0= RULE_INT )
                    {
                    // InternalStubbrLang.g:7440:5: (lv_height_14_0= RULE_INT )
                    // InternalStubbrLang.g:7441:6: lv_height_14_0= RULE_INT
                    {
                    lv_height_14_0=(Token)match(input,RULE_INT,FOLLOW_29); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_height_14_0, grammarAccess.getInputFieldAccess().getHeightINTTerminalRuleCall_7_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getInputFieldRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"height",
                      							lv_height_14_0,
                      							"com.laegler.stubbr.lang.StubbrLang.INT");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_15=(Token)match(input,26,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_15, grammarAccess.getInputFieldAccess().getRightCurlyBracketKeyword_8());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleInputField"


    // $ANTLR start "entryRuleName"
    // InternalStubbrLang.g:7466:1: entryRuleName returns [EObject current=null] : iv_ruleName= ruleName EOF ;
    public final EObject entryRuleName() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleName = null;


        try {
            // InternalStubbrLang.g:7466:45: (iv_ruleName= ruleName EOF )
            // InternalStubbrLang.g:7467:2: iv_ruleName= ruleName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNameRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleName=ruleName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleName; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleName"


    // $ANTLR start "ruleName"
    // InternalStubbrLang.g:7473:1: ruleName returns [EObject current=null] : (otherlv_0= 'name' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )? ( (otherlv_7= 'type' ( ( ruleQualifiedName ) ) ) | (otherlv_9= 'javaType' ( ( ruleQualifiedName ) ) ) )? (otherlv_11= 'width' ( (lv_width_12_0= RULE_INT ) ) )? (otherlv_13= 'height' ( (lv_height_14_0= RULE_INT ) ) )? otherlv_15= '}' ) ;
    public final EObject ruleName() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token lv_label_4_0=null;
        Token otherlv_5=null;
        Token lv_documentation_6_0=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token lv_width_12_0=null;
        Token otherlv_13=null;
        Token lv_height_14_0=null;
        Token otherlv_15=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;



        	enterRule();

        try {
            // InternalStubbrLang.g:7479:2: ( (otherlv_0= 'name' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )? ( (otherlv_7= 'type' ( ( ruleQualifiedName ) ) ) | (otherlv_9= 'javaType' ( ( ruleQualifiedName ) ) ) )? (otherlv_11= 'width' ( (lv_width_12_0= RULE_INT ) ) )? (otherlv_13= 'height' ( (lv_height_14_0= RULE_INT ) ) )? otherlv_15= '}' ) )
            // InternalStubbrLang.g:7480:2: (otherlv_0= 'name' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )? ( (otherlv_7= 'type' ( ( ruleQualifiedName ) ) ) | (otherlv_9= 'javaType' ( ( ruleQualifiedName ) ) ) )? (otherlv_11= 'width' ( (lv_width_12_0= RULE_INT ) ) )? (otherlv_13= 'height' ( (lv_height_14_0= RULE_INT ) ) )? otherlv_15= '}' )
            {
            // InternalStubbrLang.g:7480:2: (otherlv_0= 'name' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )? ( (otherlv_7= 'type' ( ( ruleQualifiedName ) ) ) | (otherlv_9= 'javaType' ( ( ruleQualifiedName ) ) ) )? (otherlv_11= 'width' ( (lv_width_12_0= RULE_INT ) ) )? (otherlv_13= 'height' ( (lv_height_14_0= RULE_INT ) ) )? otherlv_15= '}' )
            // InternalStubbrLang.g:7481:3: otherlv_0= 'name' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )? ( (otherlv_7= 'type' ( ( ruleQualifiedName ) ) ) | (otherlv_9= 'javaType' ( ( ruleQualifiedName ) ) ) )? (otherlv_11= 'width' ( (lv_width_12_0= RULE_INT ) ) )? (otherlv_13= 'height' ( (lv_height_14_0= RULE_INT ) ) )? otherlv_15= '}'
            {
            otherlv_0=(Token)match(input,131,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getNameAccess().getNameKeyword_0());
              		
            }
            // InternalStubbrLang.g:7485:3: ( (lv_name_1_0= ruleQualifiedName ) )
            // InternalStubbrLang.g:7486:4: (lv_name_1_0= ruleQualifiedName )
            {
            // InternalStubbrLang.g:7486:4: (lv_name_1_0= ruleQualifiedName )
            // InternalStubbrLang.g:7487:5: lv_name_1_0= ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getNameAccess().getNameQualifiedNameParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_6);
            lv_name_1_0=ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getNameRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"org.eclipse.xtext.xbase.Xbase.QualifiedName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,16,FOLLOW_181); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getNameAccess().getLeftCurlyBracketKeyword_2());
              		
            }
            // InternalStubbrLang.g:7508:3: (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )?
            int alt223=2;
            int LA223_0 = input.LA(1);

            if ( (LA223_0==17) ) {
                alt223=1;
            }
            switch (alt223) {
                case 1 :
                    // InternalStubbrLang.g:7509:4: otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) )
                    {
                    otherlv_3=(Token)match(input,17,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getNameAccess().getLabelKeyword_3_0());
                      			
                    }
                    // InternalStubbrLang.g:7513:4: ( (lv_label_4_0= RULE_STRING ) )
                    // InternalStubbrLang.g:7514:5: (lv_label_4_0= RULE_STRING )
                    {
                    // InternalStubbrLang.g:7514:5: (lv_label_4_0= RULE_STRING )
                    // InternalStubbrLang.g:7515:6: lv_label_4_0= RULE_STRING
                    {
                    lv_label_4_0=(Token)match(input,RULE_STRING,FOLLOW_182); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_label_4_0, grammarAccess.getNameAccess().getLabelSTRINGTerminalRuleCall_3_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getNameRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"label",
                      							lv_label_4_0,
                      							"org.eclipse.xtext.xbase.Xtype.STRING");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:7532:3: (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )?
            int alt224=2;
            int LA224_0 = input.LA(1);

            if ( (LA224_0==18) ) {
                alt224=1;
            }
            switch (alt224) {
                case 1 :
                    // InternalStubbrLang.g:7533:4: otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) )
                    {
                    otherlv_5=(Token)match(input,18,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getNameAccess().getDocumentationKeyword_4_0());
                      			
                    }
                    // InternalStubbrLang.g:7537:4: ( (lv_documentation_6_0= RULE_STRING ) )
                    // InternalStubbrLang.g:7538:5: (lv_documentation_6_0= RULE_STRING )
                    {
                    // InternalStubbrLang.g:7538:5: (lv_documentation_6_0= RULE_STRING )
                    // InternalStubbrLang.g:7539:6: lv_documentation_6_0= RULE_STRING
                    {
                    lv_documentation_6_0=(Token)match(input,RULE_STRING,FOLLOW_183); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_documentation_6_0, grammarAccess.getNameAccess().getDocumentationSTRINGTerminalRuleCall_4_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getNameRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"documentation",
                      							lv_documentation_6_0,
                      							"org.eclipse.xtext.xbase.Xtype.STRING");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:7556:3: ( (otherlv_7= 'type' ( ( ruleQualifiedName ) ) ) | (otherlv_9= 'javaType' ( ( ruleQualifiedName ) ) ) )?
            int alt225=3;
            int LA225_0 = input.LA(1);

            if ( (LA225_0==67) ) {
                alt225=1;
            }
            else if ( (LA225_0==73) ) {
                alt225=2;
            }
            switch (alt225) {
                case 1 :
                    // InternalStubbrLang.g:7557:4: (otherlv_7= 'type' ( ( ruleQualifiedName ) ) )
                    {
                    // InternalStubbrLang.g:7557:4: (otherlv_7= 'type' ( ( ruleQualifiedName ) ) )
                    // InternalStubbrLang.g:7558:5: otherlv_7= 'type' ( ( ruleQualifiedName ) )
                    {
                    otherlv_7=(Token)match(input,67,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_7, grammarAccess.getNameAccess().getTypeKeyword_5_0_0());
                      				
                    }
                    // InternalStubbrLang.g:7562:5: ( ( ruleQualifiedName ) )
                    // InternalStubbrLang.g:7563:6: ( ruleQualifiedName )
                    {
                    // InternalStubbrLang.g:7563:6: ( ruleQualifiedName )
                    // InternalStubbrLang.g:7564:7: ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getNameRule());
                      							}
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getNameAccess().getTypeEntityCrossReference_5_0_1_0());
                      						
                    }
                    pushFollow(FOLLOW_171);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalStubbrLang.g:7580:4: (otherlv_9= 'javaType' ( ( ruleQualifiedName ) ) )
                    {
                    // InternalStubbrLang.g:7580:4: (otherlv_9= 'javaType' ( ( ruleQualifiedName ) ) )
                    // InternalStubbrLang.g:7581:5: otherlv_9= 'javaType' ( ( ruleQualifiedName ) )
                    {
                    otherlv_9=(Token)match(input,73,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_9, grammarAccess.getNameAccess().getJavaTypeKeyword_5_1_0());
                      				
                    }
                    // InternalStubbrLang.g:7585:5: ( ( ruleQualifiedName ) )
                    // InternalStubbrLang.g:7586:6: ( ruleQualifiedName )
                    {
                    // InternalStubbrLang.g:7586:6: ( ruleQualifiedName )
                    // InternalStubbrLang.g:7587:7: ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getNameRule());
                      							}
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getNameAccess().getJavaTypeJvmTypeCrossReference_5_1_1_0());
                      						
                    }
                    pushFollow(FOLLOW_171);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:7603:3: (otherlv_11= 'width' ( (lv_width_12_0= RULE_INT ) ) )?
            int alt226=2;
            int LA226_0 = input.LA(1);

            if ( (LA226_0==108) ) {
                alt226=1;
            }
            switch (alt226) {
                case 1 :
                    // InternalStubbrLang.g:7604:4: otherlv_11= 'width' ( (lv_width_12_0= RULE_INT ) )
                    {
                    otherlv_11=(Token)match(input,108,FOLLOW_140); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_11, grammarAccess.getNameAccess().getWidthKeyword_6_0());
                      			
                    }
                    // InternalStubbrLang.g:7608:4: ( (lv_width_12_0= RULE_INT ) )
                    // InternalStubbrLang.g:7609:5: (lv_width_12_0= RULE_INT )
                    {
                    // InternalStubbrLang.g:7609:5: (lv_width_12_0= RULE_INT )
                    // InternalStubbrLang.g:7610:6: lv_width_12_0= RULE_INT
                    {
                    lv_width_12_0=(Token)match(input,RULE_INT,FOLLOW_173); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_width_12_0, grammarAccess.getNameAccess().getWidthINTTerminalRuleCall_6_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getNameRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"width",
                      							lv_width_12_0,
                      							"com.laegler.stubbr.lang.StubbrLang.INT");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:7627:3: (otherlv_13= 'height' ( (lv_height_14_0= RULE_INT ) ) )?
            int alt227=2;
            int LA227_0 = input.LA(1);

            if ( (LA227_0==109) ) {
                alt227=1;
            }
            switch (alt227) {
                case 1 :
                    // InternalStubbrLang.g:7628:4: otherlv_13= 'height' ( (lv_height_14_0= RULE_INT ) )
                    {
                    otherlv_13=(Token)match(input,109,FOLLOW_140); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_13, grammarAccess.getNameAccess().getHeightKeyword_7_0());
                      			
                    }
                    // InternalStubbrLang.g:7632:4: ( (lv_height_14_0= RULE_INT ) )
                    // InternalStubbrLang.g:7633:5: (lv_height_14_0= RULE_INT )
                    {
                    // InternalStubbrLang.g:7633:5: (lv_height_14_0= RULE_INT )
                    // InternalStubbrLang.g:7634:6: lv_height_14_0= RULE_INT
                    {
                    lv_height_14_0=(Token)match(input,RULE_INT,FOLLOW_29); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_height_14_0, grammarAccess.getNameAccess().getHeightINTTerminalRuleCall_7_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getNameRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"height",
                      							lv_height_14_0,
                      							"com.laegler.stubbr.lang.StubbrLang.INT");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_15=(Token)match(input,26,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_15, grammarAccess.getNameAccess().getRightCurlyBracketKeyword_8());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleName"


    // $ANTLR start "entryRuleBirthday"
    // InternalStubbrLang.g:7659:1: entryRuleBirthday returns [EObject current=null] : iv_ruleBirthday= ruleBirthday EOF ;
    public final EObject entryRuleBirthday() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBirthday = null;


        try {
            // InternalStubbrLang.g:7659:49: (iv_ruleBirthday= ruleBirthday EOF )
            // InternalStubbrLang.g:7660:2: iv_ruleBirthday= ruleBirthday EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBirthdayRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBirthday=ruleBirthday();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBirthday; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBirthday"


    // $ANTLR start "ruleBirthday"
    // InternalStubbrLang.g:7666:1: ruleBirthday returns [EObject current=null] : (otherlv_0= 'birthday' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )? ( (otherlv_7= 'type' ( ( ruleQualifiedName ) ) ) | (otherlv_9= 'javaType' ( ( ruleQualifiedName ) ) ) )? (otherlv_11= 'width' ( (lv_width_12_0= RULE_INT ) ) )? (otherlv_13= 'height' ( (lv_height_14_0= RULE_INT ) ) )? otherlv_15= '}' ) ;
    public final EObject ruleBirthday() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token lv_label_4_0=null;
        Token otherlv_5=null;
        Token lv_documentation_6_0=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token lv_width_12_0=null;
        Token otherlv_13=null;
        Token lv_height_14_0=null;
        Token otherlv_15=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;



        	enterRule();

        try {
            // InternalStubbrLang.g:7672:2: ( (otherlv_0= 'birthday' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )? ( (otherlv_7= 'type' ( ( ruleQualifiedName ) ) ) | (otherlv_9= 'javaType' ( ( ruleQualifiedName ) ) ) )? (otherlv_11= 'width' ( (lv_width_12_0= RULE_INT ) ) )? (otherlv_13= 'height' ( (lv_height_14_0= RULE_INT ) ) )? otherlv_15= '}' ) )
            // InternalStubbrLang.g:7673:2: (otherlv_0= 'birthday' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )? ( (otherlv_7= 'type' ( ( ruleQualifiedName ) ) ) | (otherlv_9= 'javaType' ( ( ruleQualifiedName ) ) ) )? (otherlv_11= 'width' ( (lv_width_12_0= RULE_INT ) ) )? (otherlv_13= 'height' ( (lv_height_14_0= RULE_INT ) ) )? otherlv_15= '}' )
            {
            // InternalStubbrLang.g:7673:2: (otherlv_0= 'birthday' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )? ( (otherlv_7= 'type' ( ( ruleQualifiedName ) ) ) | (otherlv_9= 'javaType' ( ( ruleQualifiedName ) ) ) )? (otherlv_11= 'width' ( (lv_width_12_0= RULE_INT ) ) )? (otherlv_13= 'height' ( (lv_height_14_0= RULE_INT ) ) )? otherlv_15= '}' )
            // InternalStubbrLang.g:7674:3: otherlv_0= 'birthday' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )? ( (otherlv_7= 'type' ( ( ruleQualifiedName ) ) ) | (otherlv_9= 'javaType' ( ( ruleQualifiedName ) ) ) )? (otherlv_11= 'width' ( (lv_width_12_0= RULE_INT ) ) )? (otherlv_13= 'height' ( (lv_height_14_0= RULE_INT ) ) )? otherlv_15= '}'
            {
            otherlv_0=(Token)match(input,132,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getBirthdayAccess().getBirthdayKeyword_0());
              		
            }
            // InternalStubbrLang.g:7678:3: ( (lv_name_1_0= ruleQualifiedName ) )
            // InternalStubbrLang.g:7679:4: (lv_name_1_0= ruleQualifiedName )
            {
            // InternalStubbrLang.g:7679:4: (lv_name_1_0= ruleQualifiedName )
            // InternalStubbrLang.g:7680:5: lv_name_1_0= ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getBirthdayAccess().getNameQualifiedNameParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_6);
            lv_name_1_0=ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getBirthdayRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"org.eclipse.xtext.xbase.Xbase.QualifiedName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,16,FOLLOW_181); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getBirthdayAccess().getLeftCurlyBracketKeyword_2());
              		
            }
            // InternalStubbrLang.g:7701:3: (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )?
            int alt228=2;
            int LA228_0 = input.LA(1);

            if ( (LA228_0==17) ) {
                alt228=1;
            }
            switch (alt228) {
                case 1 :
                    // InternalStubbrLang.g:7702:4: otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) )
                    {
                    otherlv_3=(Token)match(input,17,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getBirthdayAccess().getLabelKeyword_3_0());
                      			
                    }
                    // InternalStubbrLang.g:7706:4: ( (lv_label_4_0= RULE_STRING ) )
                    // InternalStubbrLang.g:7707:5: (lv_label_4_0= RULE_STRING )
                    {
                    // InternalStubbrLang.g:7707:5: (lv_label_4_0= RULE_STRING )
                    // InternalStubbrLang.g:7708:6: lv_label_4_0= RULE_STRING
                    {
                    lv_label_4_0=(Token)match(input,RULE_STRING,FOLLOW_182); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_label_4_0, grammarAccess.getBirthdayAccess().getLabelSTRINGTerminalRuleCall_3_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getBirthdayRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"label",
                      							lv_label_4_0,
                      							"org.eclipse.xtext.xbase.Xtype.STRING");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:7725:3: (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )?
            int alt229=2;
            int LA229_0 = input.LA(1);

            if ( (LA229_0==18) ) {
                alt229=1;
            }
            switch (alt229) {
                case 1 :
                    // InternalStubbrLang.g:7726:4: otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) )
                    {
                    otherlv_5=(Token)match(input,18,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getBirthdayAccess().getDocumentationKeyword_4_0());
                      			
                    }
                    // InternalStubbrLang.g:7730:4: ( (lv_documentation_6_0= RULE_STRING ) )
                    // InternalStubbrLang.g:7731:5: (lv_documentation_6_0= RULE_STRING )
                    {
                    // InternalStubbrLang.g:7731:5: (lv_documentation_6_0= RULE_STRING )
                    // InternalStubbrLang.g:7732:6: lv_documentation_6_0= RULE_STRING
                    {
                    lv_documentation_6_0=(Token)match(input,RULE_STRING,FOLLOW_183); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_documentation_6_0, grammarAccess.getBirthdayAccess().getDocumentationSTRINGTerminalRuleCall_4_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getBirthdayRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"documentation",
                      							lv_documentation_6_0,
                      							"org.eclipse.xtext.xbase.Xtype.STRING");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:7749:3: ( (otherlv_7= 'type' ( ( ruleQualifiedName ) ) ) | (otherlv_9= 'javaType' ( ( ruleQualifiedName ) ) ) )?
            int alt230=3;
            int LA230_0 = input.LA(1);

            if ( (LA230_0==67) ) {
                alt230=1;
            }
            else if ( (LA230_0==73) ) {
                alt230=2;
            }
            switch (alt230) {
                case 1 :
                    // InternalStubbrLang.g:7750:4: (otherlv_7= 'type' ( ( ruleQualifiedName ) ) )
                    {
                    // InternalStubbrLang.g:7750:4: (otherlv_7= 'type' ( ( ruleQualifiedName ) ) )
                    // InternalStubbrLang.g:7751:5: otherlv_7= 'type' ( ( ruleQualifiedName ) )
                    {
                    otherlv_7=(Token)match(input,67,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_7, grammarAccess.getBirthdayAccess().getTypeKeyword_5_0_0());
                      				
                    }
                    // InternalStubbrLang.g:7755:5: ( ( ruleQualifiedName ) )
                    // InternalStubbrLang.g:7756:6: ( ruleQualifiedName )
                    {
                    // InternalStubbrLang.g:7756:6: ( ruleQualifiedName )
                    // InternalStubbrLang.g:7757:7: ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getBirthdayRule());
                      							}
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getBirthdayAccess().getTypeEntityCrossReference_5_0_1_0());
                      						
                    }
                    pushFollow(FOLLOW_171);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalStubbrLang.g:7773:4: (otherlv_9= 'javaType' ( ( ruleQualifiedName ) ) )
                    {
                    // InternalStubbrLang.g:7773:4: (otherlv_9= 'javaType' ( ( ruleQualifiedName ) ) )
                    // InternalStubbrLang.g:7774:5: otherlv_9= 'javaType' ( ( ruleQualifiedName ) )
                    {
                    otherlv_9=(Token)match(input,73,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_9, grammarAccess.getBirthdayAccess().getJavaTypeKeyword_5_1_0());
                      				
                    }
                    // InternalStubbrLang.g:7778:5: ( ( ruleQualifiedName ) )
                    // InternalStubbrLang.g:7779:6: ( ruleQualifiedName )
                    {
                    // InternalStubbrLang.g:7779:6: ( ruleQualifiedName )
                    // InternalStubbrLang.g:7780:7: ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getBirthdayRule());
                      							}
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getBirthdayAccess().getJavaTypeJvmTypeCrossReference_5_1_1_0());
                      						
                    }
                    pushFollow(FOLLOW_171);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:7796:3: (otherlv_11= 'width' ( (lv_width_12_0= RULE_INT ) ) )?
            int alt231=2;
            int LA231_0 = input.LA(1);

            if ( (LA231_0==108) ) {
                alt231=1;
            }
            switch (alt231) {
                case 1 :
                    // InternalStubbrLang.g:7797:4: otherlv_11= 'width' ( (lv_width_12_0= RULE_INT ) )
                    {
                    otherlv_11=(Token)match(input,108,FOLLOW_140); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_11, grammarAccess.getBirthdayAccess().getWidthKeyword_6_0());
                      			
                    }
                    // InternalStubbrLang.g:7801:4: ( (lv_width_12_0= RULE_INT ) )
                    // InternalStubbrLang.g:7802:5: (lv_width_12_0= RULE_INT )
                    {
                    // InternalStubbrLang.g:7802:5: (lv_width_12_0= RULE_INT )
                    // InternalStubbrLang.g:7803:6: lv_width_12_0= RULE_INT
                    {
                    lv_width_12_0=(Token)match(input,RULE_INT,FOLLOW_173); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_width_12_0, grammarAccess.getBirthdayAccess().getWidthINTTerminalRuleCall_6_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getBirthdayRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"width",
                      							lv_width_12_0,
                      							"com.laegler.stubbr.lang.StubbrLang.INT");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:7820:3: (otherlv_13= 'height' ( (lv_height_14_0= RULE_INT ) ) )?
            int alt232=2;
            int LA232_0 = input.LA(1);

            if ( (LA232_0==109) ) {
                alt232=1;
            }
            switch (alt232) {
                case 1 :
                    // InternalStubbrLang.g:7821:4: otherlv_13= 'height' ( (lv_height_14_0= RULE_INT ) )
                    {
                    otherlv_13=(Token)match(input,109,FOLLOW_140); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_13, grammarAccess.getBirthdayAccess().getHeightKeyword_7_0());
                      			
                    }
                    // InternalStubbrLang.g:7825:4: ( (lv_height_14_0= RULE_INT ) )
                    // InternalStubbrLang.g:7826:5: (lv_height_14_0= RULE_INT )
                    {
                    // InternalStubbrLang.g:7826:5: (lv_height_14_0= RULE_INT )
                    // InternalStubbrLang.g:7827:6: lv_height_14_0= RULE_INT
                    {
                    lv_height_14_0=(Token)match(input,RULE_INT,FOLLOW_29); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_height_14_0, grammarAccess.getBirthdayAccess().getHeightINTTerminalRuleCall_7_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getBirthdayRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"height",
                      							lv_height_14_0,
                      							"com.laegler.stubbr.lang.StubbrLang.INT");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_15=(Token)match(input,26,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_15, grammarAccess.getBirthdayAccess().getRightCurlyBracketKeyword_8());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBirthday"


    // $ANTLR start "entryRuleAddress"
    // InternalStubbrLang.g:7852:1: entryRuleAddress returns [EObject current=null] : iv_ruleAddress= ruleAddress EOF ;
    public final EObject entryRuleAddress() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAddress = null;


        try {
            // InternalStubbrLang.g:7852:48: (iv_ruleAddress= ruleAddress EOF )
            // InternalStubbrLang.g:7853:2: iv_ruleAddress= ruleAddress EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAddressRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAddress=ruleAddress();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAddress; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAddress"


    // $ANTLR start "ruleAddress"
    // InternalStubbrLang.g:7859:1: ruleAddress returns [EObject current=null] : (otherlv_0= 'address' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )? ( (otherlv_7= 'type' ( ( ruleQualifiedName ) ) ) | (otherlv_9= 'javaType' ( ( ruleQualifiedName ) ) ) )? (otherlv_11= 'width' ( (lv_width_12_0= RULE_INT ) ) )? (otherlv_13= 'height' ( (lv_height_14_0= RULE_INT ) ) )? otherlv_15= '}' ) ;
    public final EObject ruleAddress() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token lv_label_4_0=null;
        Token otherlv_5=null;
        Token lv_documentation_6_0=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token lv_width_12_0=null;
        Token otherlv_13=null;
        Token lv_height_14_0=null;
        Token otherlv_15=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;



        	enterRule();

        try {
            // InternalStubbrLang.g:7865:2: ( (otherlv_0= 'address' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )? ( (otherlv_7= 'type' ( ( ruleQualifiedName ) ) ) | (otherlv_9= 'javaType' ( ( ruleQualifiedName ) ) ) )? (otherlv_11= 'width' ( (lv_width_12_0= RULE_INT ) ) )? (otherlv_13= 'height' ( (lv_height_14_0= RULE_INT ) ) )? otherlv_15= '}' ) )
            // InternalStubbrLang.g:7866:2: (otherlv_0= 'address' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )? ( (otherlv_7= 'type' ( ( ruleQualifiedName ) ) ) | (otherlv_9= 'javaType' ( ( ruleQualifiedName ) ) ) )? (otherlv_11= 'width' ( (lv_width_12_0= RULE_INT ) ) )? (otherlv_13= 'height' ( (lv_height_14_0= RULE_INT ) ) )? otherlv_15= '}' )
            {
            // InternalStubbrLang.g:7866:2: (otherlv_0= 'address' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )? ( (otherlv_7= 'type' ( ( ruleQualifiedName ) ) ) | (otherlv_9= 'javaType' ( ( ruleQualifiedName ) ) ) )? (otherlv_11= 'width' ( (lv_width_12_0= RULE_INT ) ) )? (otherlv_13= 'height' ( (lv_height_14_0= RULE_INT ) ) )? otherlv_15= '}' )
            // InternalStubbrLang.g:7867:3: otherlv_0= 'address' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )? ( (otherlv_7= 'type' ( ( ruleQualifiedName ) ) ) | (otherlv_9= 'javaType' ( ( ruleQualifiedName ) ) ) )? (otherlv_11= 'width' ( (lv_width_12_0= RULE_INT ) ) )? (otherlv_13= 'height' ( (lv_height_14_0= RULE_INT ) ) )? otherlv_15= '}'
            {
            otherlv_0=(Token)match(input,133,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getAddressAccess().getAddressKeyword_0());
              		
            }
            // InternalStubbrLang.g:7871:3: ( (lv_name_1_0= ruleQualifiedName ) )
            // InternalStubbrLang.g:7872:4: (lv_name_1_0= ruleQualifiedName )
            {
            // InternalStubbrLang.g:7872:4: (lv_name_1_0= ruleQualifiedName )
            // InternalStubbrLang.g:7873:5: lv_name_1_0= ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAddressAccess().getNameQualifiedNameParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_6);
            lv_name_1_0=ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAddressRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"org.eclipse.xtext.xbase.Xbase.QualifiedName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,16,FOLLOW_181); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getAddressAccess().getLeftCurlyBracketKeyword_2());
              		
            }
            // InternalStubbrLang.g:7894:3: (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )?
            int alt233=2;
            int LA233_0 = input.LA(1);

            if ( (LA233_0==17) ) {
                alt233=1;
            }
            switch (alt233) {
                case 1 :
                    // InternalStubbrLang.g:7895:4: otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) )
                    {
                    otherlv_3=(Token)match(input,17,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getAddressAccess().getLabelKeyword_3_0());
                      			
                    }
                    // InternalStubbrLang.g:7899:4: ( (lv_label_4_0= RULE_STRING ) )
                    // InternalStubbrLang.g:7900:5: (lv_label_4_0= RULE_STRING )
                    {
                    // InternalStubbrLang.g:7900:5: (lv_label_4_0= RULE_STRING )
                    // InternalStubbrLang.g:7901:6: lv_label_4_0= RULE_STRING
                    {
                    lv_label_4_0=(Token)match(input,RULE_STRING,FOLLOW_182); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_label_4_0, grammarAccess.getAddressAccess().getLabelSTRINGTerminalRuleCall_3_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getAddressRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"label",
                      							lv_label_4_0,
                      							"org.eclipse.xtext.xbase.Xtype.STRING");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:7918:3: (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )?
            int alt234=2;
            int LA234_0 = input.LA(1);

            if ( (LA234_0==18) ) {
                alt234=1;
            }
            switch (alt234) {
                case 1 :
                    // InternalStubbrLang.g:7919:4: otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) )
                    {
                    otherlv_5=(Token)match(input,18,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getAddressAccess().getDocumentationKeyword_4_0());
                      			
                    }
                    // InternalStubbrLang.g:7923:4: ( (lv_documentation_6_0= RULE_STRING ) )
                    // InternalStubbrLang.g:7924:5: (lv_documentation_6_0= RULE_STRING )
                    {
                    // InternalStubbrLang.g:7924:5: (lv_documentation_6_0= RULE_STRING )
                    // InternalStubbrLang.g:7925:6: lv_documentation_6_0= RULE_STRING
                    {
                    lv_documentation_6_0=(Token)match(input,RULE_STRING,FOLLOW_183); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_documentation_6_0, grammarAccess.getAddressAccess().getDocumentationSTRINGTerminalRuleCall_4_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getAddressRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"documentation",
                      							lv_documentation_6_0,
                      							"org.eclipse.xtext.xbase.Xtype.STRING");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:7942:3: ( (otherlv_7= 'type' ( ( ruleQualifiedName ) ) ) | (otherlv_9= 'javaType' ( ( ruleQualifiedName ) ) ) )?
            int alt235=3;
            int LA235_0 = input.LA(1);

            if ( (LA235_0==67) ) {
                alt235=1;
            }
            else if ( (LA235_0==73) ) {
                alt235=2;
            }
            switch (alt235) {
                case 1 :
                    // InternalStubbrLang.g:7943:4: (otherlv_7= 'type' ( ( ruleQualifiedName ) ) )
                    {
                    // InternalStubbrLang.g:7943:4: (otherlv_7= 'type' ( ( ruleQualifiedName ) ) )
                    // InternalStubbrLang.g:7944:5: otherlv_7= 'type' ( ( ruleQualifiedName ) )
                    {
                    otherlv_7=(Token)match(input,67,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_7, grammarAccess.getAddressAccess().getTypeKeyword_5_0_0());
                      				
                    }
                    // InternalStubbrLang.g:7948:5: ( ( ruleQualifiedName ) )
                    // InternalStubbrLang.g:7949:6: ( ruleQualifiedName )
                    {
                    // InternalStubbrLang.g:7949:6: ( ruleQualifiedName )
                    // InternalStubbrLang.g:7950:7: ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getAddressRule());
                      							}
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getAddressAccess().getTypeEntityCrossReference_5_0_1_0());
                      						
                    }
                    pushFollow(FOLLOW_171);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalStubbrLang.g:7966:4: (otherlv_9= 'javaType' ( ( ruleQualifiedName ) ) )
                    {
                    // InternalStubbrLang.g:7966:4: (otherlv_9= 'javaType' ( ( ruleQualifiedName ) ) )
                    // InternalStubbrLang.g:7967:5: otherlv_9= 'javaType' ( ( ruleQualifiedName ) )
                    {
                    otherlv_9=(Token)match(input,73,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_9, grammarAccess.getAddressAccess().getJavaTypeKeyword_5_1_0());
                      				
                    }
                    // InternalStubbrLang.g:7971:5: ( ( ruleQualifiedName ) )
                    // InternalStubbrLang.g:7972:6: ( ruleQualifiedName )
                    {
                    // InternalStubbrLang.g:7972:6: ( ruleQualifiedName )
                    // InternalStubbrLang.g:7973:7: ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getAddressRule());
                      							}
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getAddressAccess().getJavaTypeJvmTypeCrossReference_5_1_1_0());
                      						
                    }
                    pushFollow(FOLLOW_171);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:7989:3: (otherlv_11= 'width' ( (lv_width_12_0= RULE_INT ) ) )?
            int alt236=2;
            int LA236_0 = input.LA(1);

            if ( (LA236_0==108) ) {
                alt236=1;
            }
            switch (alt236) {
                case 1 :
                    // InternalStubbrLang.g:7990:4: otherlv_11= 'width' ( (lv_width_12_0= RULE_INT ) )
                    {
                    otherlv_11=(Token)match(input,108,FOLLOW_140); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_11, grammarAccess.getAddressAccess().getWidthKeyword_6_0());
                      			
                    }
                    // InternalStubbrLang.g:7994:4: ( (lv_width_12_0= RULE_INT ) )
                    // InternalStubbrLang.g:7995:5: (lv_width_12_0= RULE_INT )
                    {
                    // InternalStubbrLang.g:7995:5: (lv_width_12_0= RULE_INT )
                    // InternalStubbrLang.g:7996:6: lv_width_12_0= RULE_INT
                    {
                    lv_width_12_0=(Token)match(input,RULE_INT,FOLLOW_173); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_width_12_0, grammarAccess.getAddressAccess().getWidthINTTerminalRuleCall_6_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getAddressRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"width",
                      							lv_width_12_0,
                      							"com.laegler.stubbr.lang.StubbrLang.INT");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:8013:3: (otherlv_13= 'height' ( (lv_height_14_0= RULE_INT ) ) )?
            int alt237=2;
            int LA237_0 = input.LA(1);

            if ( (LA237_0==109) ) {
                alt237=1;
            }
            switch (alt237) {
                case 1 :
                    // InternalStubbrLang.g:8014:4: otherlv_13= 'height' ( (lv_height_14_0= RULE_INT ) )
                    {
                    otherlv_13=(Token)match(input,109,FOLLOW_140); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_13, grammarAccess.getAddressAccess().getHeightKeyword_7_0());
                      			
                    }
                    // InternalStubbrLang.g:8018:4: ( (lv_height_14_0= RULE_INT ) )
                    // InternalStubbrLang.g:8019:5: (lv_height_14_0= RULE_INT )
                    {
                    // InternalStubbrLang.g:8019:5: (lv_height_14_0= RULE_INT )
                    // InternalStubbrLang.g:8020:6: lv_height_14_0= RULE_INT
                    {
                    lv_height_14_0=(Token)match(input,RULE_INT,FOLLOW_29); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_height_14_0, grammarAccess.getAddressAccess().getHeightINTTerminalRuleCall_7_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getAddressRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"height",
                      							lv_height_14_0,
                      							"com.laegler.stubbr.lang.StubbrLang.INT");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_15=(Token)match(input,26,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_15, grammarAccess.getAddressAccess().getRightCurlyBracketKeyword_8());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAddress"


    // $ANTLR start "entryRuleRadioButtonGroup"
    // InternalStubbrLang.g:8045:1: entryRuleRadioButtonGroup returns [EObject current=null] : iv_ruleRadioButtonGroup= ruleRadioButtonGroup EOF ;
    public final EObject entryRuleRadioButtonGroup() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRadioButtonGroup = null;


        try {
            // InternalStubbrLang.g:8045:57: (iv_ruleRadioButtonGroup= ruleRadioButtonGroup EOF )
            // InternalStubbrLang.g:8046:2: iv_ruleRadioButtonGroup= ruleRadioButtonGroup EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRadioButtonGroupRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleRadioButtonGroup=ruleRadioButtonGroup();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRadioButtonGroup; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRadioButtonGroup"


    // $ANTLR start "ruleRadioButtonGroup"
    // InternalStubbrLang.g:8052:1: ruleRadioButtonGroup returns [EObject current=null] : (otherlv_0= 'radioButtonGroup' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )? ( (otherlv_7= 'type' ( ( ruleQualifiedName ) ) ) | (otherlv_9= 'javaType' ( ( ruleQualifiedName ) ) ) )? (otherlv_11= 'width' ( (lv_width_12_0= RULE_INT ) ) )? (otherlv_13= 'height' ( (lv_height_14_0= RULE_INT ) ) )? otherlv_15= '}' ) ;
    public final EObject ruleRadioButtonGroup() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token lv_label_4_0=null;
        Token otherlv_5=null;
        Token lv_documentation_6_0=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token lv_width_12_0=null;
        Token otherlv_13=null;
        Token lv_height_14_0=null;
        Token otherlv_15=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;



        	enterRule();

        try {
            // InternalStubbrLang.g:8058:2: ( (otherlv_0= 'radioButtonGroup' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )? ( (otherlv_7= 'type' ( ( ruleQualifiedName ) ) ) | (otherlv_9= 'javaType' ( ( ruleQualifiedName ) ) ) )? (otherlv_11= 'width' ( (lv_width_12_0= RULE_INT ) ) )? (otherlv_13= 'height' ( (lv_height_14_0= RULE_INT ) ) )? otherlv_15= '}' ) )
            // InternalStubbrLang.g:8059:2: (otherlv_0= 'radioButtonGroup' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )? ( (otherlv_7= 'type' ( ( ruleQualifiedName ) ) ) | (otherlv_9= 'javaType' ( ( ruleQualifiedName ) ) ) )? (otherlv_11= 'width' ( (lv_width_12_0= RULE_INT ) ) )? (otherlv_13= 'height' ( (lv_height_14_0= RULE_INT ) ) )? otherlv_15= '}' )
            {
            // InternalStubbrLang.g:8059:2: (otherlv_0= 'radioButtonGroup' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )? ( (otherlv_7= 'type' ( ( ruleQualifiedName ) ) ) | (otherlv_9= 'javaType' ( ( ruleQualifiedName ) ) ) )? (otherlv_11= 'width' ( (lv_width_12_0= RULE_INT ) ) )? (otherlv_13= 'height' ( (lv_height_14_0= RULE_INT ) ) )? otherlv_15= '}' )
            // InternalStubbrLang.g:8060:3: otherlv_0= 'radioButtonGroup' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )? ( (otherlv_7= 'type' ( ( ruleQualifiedName ) ) ) | (otherlv_9= 'javaType' ( ( ruleQualifiedName ) ) ) )? (otherlv_11= 'width' ( (lv_width_12_0= RULE_INT ) ) )? (otherlv_13= 'height' ( (lv_height_14_0= RULE_INT ) ) )? otherlv_15= '}'
            {
            otherlv_0=(Token)match(input,134,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getRadioButtonGroupAccess().getRadioButtonGroupKeyword_0());
              		
            }
            // InternalStubbrLang.g:8064:3: ( (lv_name_1_0= ruleQualifiedName ) )
            // InternalStubbrLang.g:8065:4: (lv_name_1_0= ruleQualifiedName )
            {
            // InternalStubbrLang.g:8065:4: (lv_name_1_0= ruleQualifiedName )
            // InternalStubbrLang.g:8066:5: lv_name_1_0= ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getRadioButtonGroupAccess().getNameQualifiedNameParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_6);
            lv_name_1_0=ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getRadioButtonGroupRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"org.eclipse.xtext.xbase.Xbase.QualifiedName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,16,FOLLOW_181); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getRadioButtonGroupAccess().getLeftCurlyBracketKeyword_2());
              		
            }
            // InternalStubbrLang.g:8087:3: (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )?
            int alt238=2;
            int LA238_0 = input.LA(1);

            if ( (LA238_0==17) ) {
                alt238=1;
            }
            switch (alt238) {
                case 1 :
                    // InternalStubbrLang.g:8088:4: otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) )
                    {
                    otherlv_3=(Token)match(input,17,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getRadioButtonGroupAccess().getLabelKeyword_3_0());
                      			
                    }
                    // InternalStubbrLang.g:8092:4: ( (lv_label_4_0= RULE_STRING ) )
                    // InternalStubbrLang.g:8093:5: (lv_label_4_0= RULE_STRING )
                    {
                    // InternalStubbrLang.g:8093:5: (lv_label_4_0= RULE_STRING )
                    // InternalStubbrLang.g:8094:6: lv_label_4_0= RULE_STRING
                    {
                    lv_label_4_0=(Token)match(input,RULE_STRING,FOLLOW_182); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_label_4_0, grammarAccess.getRadioButtonGroupAccess().getLabelSTRINGTerminalRuleCall_3_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getRadioButtonGroupRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"label",
                      							lv_label_4_0,
                      							"org.eclipse.xtext.xbase.Xtype.STRING");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:8111:3: (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )?
            int alt239=2;
            int LA239_0 = input.LA(1);

            if ( (LA239_0==18) ) {
                alt239=1;
            }
            switch (alt239) {
                case 1 :
                    // InternalStubbrLang.g:8112:4: otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) )
                    {
                    otherlv_5=(Token)match(input,18,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getRadioButtonGroupAccess().getDocumentationKeyword_4_0());
                      			
                    }
                    // InternalStubbrLang.g:8116:4: ( (lv_documentation_6_0= RULE_STRING ) )
                    // InternalStubbrLang.g:8117:5: (lv_documentation_6_0= RULE_STRING )
                    {
                    // InternalStubbrLang.g:8117:5: (lv_documentation_6_0= RULE_STRING )
                    // InternalStubbrLang.g:8118:6: lv_documentation_6_0= RULE_STRING
                    {
                    lv_documentation_6_0=(Token)match(input,RULE_STRING,FOLLOW_183); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_documentation_6_0, grammarAccess.getRadioButtonGroupAccess().getDocumentationSTRINGTerminalRuleCall_4_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getRadioButtonGroupRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"documentation",
                      							lv_documentation_6_0,
                      							"org.eclipse.xtext.xbase.Xtype.STRING");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:8135:3: ( (otherlv_7= 'type' ( ( ruleQualifiedName ) ) ) | (otherlv_9= 'javaType' ( ( ruleQualifiedName ) ) ) )?
            int alt240=3;
            int LA240_0 = input.LA(1);

            if ( (LA240_0==67) ) {
                alt240=1;
            }
            else if ( (LA240_0==73) ) {
                alt240=2;
            }
            switch (alt240) {
                case 1 :
                    // InternalStubbrLang.g:8136:4: (otherlv_7= 'type' ( ( ruleQualifiedName ) ) )
                    {
                    // InternalStubbrLang.g:8136:4: (otherlv_7= 'type' ( ( ruleQualifiedName ) ) )
                    // InternalStubbrLang.g:8137:5: otherlv_7= 'type' ( ( ruleQualifiedName ) )
                    {
                    otherlv_7=(Token)match(input,67,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_7, grammarAccess.getRadioButtonGroupAccess().getTypeKeyword_5_0_0());
                      				
                    }
                    // InternalStubbrLang.g:8141:5: ( ( ruleQualifiedName ) )
                    // InternalStubbrLang.g:8142:6: ( ruleQualifiedName )
                    {
                    // InternalStubbrLang.g:8142:6: ( ruleQualifiedName )
                    // InternalStubbrLang.g:8143:7: ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getRadioButtonGroupRule());
                      							}
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getRadioButtonGroupAccess().getTypeEntityCrossReference_5_0_1_0());
                      						
                    }
                    pushFollow(FOLLOW_171);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalStubbrLang.g:8159:4: (otherlv_9= 'javaType' ( ( ruleQualifiedName ) ) )
                    {
                    // InternalStubbrLang.g:8159:4: (otherlv_9= 'javaType' ( ( ruleQualifiedName ) ) )
                    // InternalStubbrLang.g:8160:5: otherlv_9= 'javaType' ( ( ruleQualifiedName ) )
                    {
                    otherlv_9=(Token)match(input,73,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_9, grammarAccess.getRadioButtonGroupAccess().getJavaTypeKeyword_5_1_0());
                      				
                    }
                    // InternalStubbrLang.g:8164:5: ( ( ruleQualifiedName ) )
                    // InternalStubbrLang.g:8165:6: ( ruleQualifiedName )
                    {
                    // InternalStubbrLang.g:8165:6: ( ruleQualifiedName )
                    // InternalStubbrLang.g:8166:7: ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getRadioButtonGroupRule());
                      							}
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getRadioButtonGroupAccess().getJavaTypeJvmTypeCrossReference_5_1_1_0());
                      						
                    }
                    pushFollow(FOLLOW_171);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:8182:3: (otherlv_11= 'width' ( (lv_width_12_0= RULE_INT ) ) )?
            int alt241=2;
            int LA241_0 = input.LA(1);

            if ( (LA241_0==108) ) {
                alt241=1;
            }
            switch (alt241) {
                case 1 :
                    // InternalStubbrLang.g:8183:4: otherlv_11= 'width' ( (lv_width_12_0= RULE_INT ) )
                    {
                    otherlv_11=(Token)match(input,108,FOLLOW_140); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_11, grammarAccess.getRadioButtonGroupAccess().getWidthKeyword_6_0());
                      			
                    }
                    // InternalStubbrLang.g:8187:4: ( (lv_width_12_0= RULE_INT ) )
                    // InternalStubbrLang.g:8188:5: (lv_width_12_0= RULE_INT )
                    {
                    // InternalStubbrLang.g:8188:5: (lv_width_12_0= RULE_INT )
                    // InternalStubbrLang.g:8189:6: lv_width_12_0= RULE_INT
                    {
                    lv_width_12_0=(Token)match(input,RULE_INT,FOLLOW_173); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_width_12_0, grammarAccess.getRadioButtonGroupAccess().getWidthINTTerminalRuleCall_6_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getRadioButtonGroupRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"width",
                      							lv_width_12_0,
                      							"com.laegler.stubbr.lang.StubbrLang.INT");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:8206:3: (otherlv_13= 'height' ( (lv_height_14_0= RULE_INT ) ) )?
            int alt242=2;
            int LA242_0 = input.LA(1);

            if ( (LA242_0==109) ) {
                alt242=1;
            }
            switch (alt242) {
                case 1 :
                    // InternalStubbrLang.g:8207:4: otherlv_13= 'height' ( (lv_height_14_0= RULE_INT ) )
                    {
                    otherlv_13=(Token)match(input,109,FOLLOW_140); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_13, grammarAccess.getRadioButtonGroupAccess().getHeightKeyword_7_0());
                      			
                    }
                    // InternalStubbrLang.g:8211:4: ( (lv_height_14_0= RULE_INT ) )
                    // InternalStubbrLang.g:8212:5: (lv_height_14_0= RULE_INT )
                    {
                    // InternalStubbrLang.g:8212:5: (lv_height_14_0= RULE_INT )
                    // InternalStubbrLang.g:8213:6: lv_height_14_0= RULE_INT
                    {
                    lv_height_14_0=(Token)match(input,RULE_INT,FOLLOW_29); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_height_14_0, grammarAccess.getRadioButtonGroupAccess().getHeightINTTerminalRuleCall_7_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getRadioButtonGroupRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"height",
                      							lv_height_14_0,
                      							"com.laegler.stubbr.lang.StubbrLang.INT");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_15=(Token)match(input,26,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_15, grammarAccess.getRadioButtonGroupAccess().getRightCurlyBracketKeyword_8());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRadioButtonGroup"


    // $ANTLR start "entryRuleCheckBoxGroup"
    // InternalStubbrLang.g:8238:1: entryRuleCheckBoxGroup returns [EObject current=null] : iv_ruleCheckBoxGroup= ruleCheckBoxGroup EOF ;
    public final EObject entryRuleCheckBoxGroup() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCheckBoxGroup = null;


        try {
            // InternalStubbrLang.g:8238:54: (iv_ruleCheckBoxGroup= ruleCheckBoxGroup EOF )
            // InternalStubbrLang.g:8239:2: iv_ruleCheckBoxGroup= ruleCheckBoxGroup EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCheckBoxGroupRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleCheckBoxGroup=ruleCheckBoxGroup();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCheckBoxGroup; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCheckBoxGroup"


    // $ANTLR start "ruleCheckBoxGroup"
    // InternalStubbrLang.g:8245:1: ruleCheckBoxGroup returns [EObject current=null] : (otherlv_0= 'checkBoxGruppe' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )? ( (otherlv_7= 'type' ( ( ruleQualifiedName ) ) ) | (otherlv_9= 'javaType' ( ( ruleQualifiedName ) ) ) )? (otherlv_11= 'width' ( (lv_width_12_0= RULE_INT ) ) )? (otherlv_13= 'height' ( (lv_height_14_0= RULE_INT ) ) )? otherlv_15= '}' ) ;
    public final EObject ruleCheckBoxGroup() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token lv_label_4_0=null;
        Token otherlv_5=null;
        Token lv_documentation_6_0=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token lv_width_12_0=null;
        Token otherlv_13=null;
        Token lv_height_14_0=null;
        Token otherlv_15=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;



        	enterRule();

        try {
            // InternalStubbrLang.g:8251:2: ( (otherlv_0= 'checkBoxGruppe' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )? ( (otherlv_7= 'type' ( ( ruleQualifiedName ) ) ) | (otherlv_9= 'javaType' ( ( ruleQualifiedName ) ) ) )? (otherlv_11= 'width' ( (lv_width_12_0= RULE_INT ) ) )? (otherlv_13= 'height' ( (lv_height_14_0= RULE_INT ) ) )? otherlv_15= '}' ) )
            // InternalStubbrLang.g:8252:2: (otherlv_0= 'checkBoxGruppe' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )? ( (otherlv_7= 'type' ( ( ruleQualifiedName ) ) ) | (otherlv_9= 'javaType' ( ( ruleQualifiedName ) ) ) )? (otherlv_11= 'width' ( (lv_width_12_0= RULE_INT ) ) )? (otherlv_13= 'height' ( (lv_height_14_0= RULE_INT ) ) )? otherlv_15= '}' )
            {
            // InternalStubbrLang.g:8252:2: (otherlv_0= 'checkBoxGruppe' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )? ( (otherlv_7= 'type' ( ( ruleQualifiedName ) ) ) | (otherlv_9= 'javaType' ( ( ruleQualifiedName ) ) ) )? (otherlv_11= 'width' ( (lv_width_12_0= RULE_INT ) ) )? (otherlv_13= 'height' ( (lv_height_14_0= RULE_INT ) ) )? otherlv_15= '}' )
            // InternalStubbrLang.g:8253:3: otherlv_0= 'checkBoxGruppe' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )? ( (otherlv_7= 'type' ( ( ruleQualifiedName ) ) ) | (otherlv_9= 'javaType' ( ( ruleQualifiedName ) ) ) )? (otherlv_11= 'width' ( (lv_width_12_0= RULE_INT ) ) )? (otherlv_13= 'height' ( (lv_height_14_0= RULE_INT ) ) )? otherlv_15= '}'
            {
            otherlv_0=(Token)match(input,135,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getCheckBoxGroupAccess().getCheckBoxGruppeKeyword_0());
              		
            }
            // InternalStubbrLang.g:8257:3: ( (lv_name_1_0= ruleQualifiedName ) )
            // InternalStubbrLang.g:8258:4: (lv_name_1_0= ruleQualifiedName )
            {
            // InternalStubbrLang.g:8258:4: (lv_name_1_0= ruleQualifiedName )
            // InternalStubbrLang.g:8259:5: lv_name_1_0= ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getCheckBoxGroupAccess().getNameQualifiedNameParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_6);
            lv_name_1_0=ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getCheckBoxGroupRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"org.eclipse.xtext.xbase.Xbase.QualifiedName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,16,FOLLOW_181); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getCheckBoxGroupAccess().getLeftCurlyBracketKeyword_2());
              		
            }
            // InternalStubbrLang.g:8280:3: (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )?
            int alt243=2;
            int LA243_0 = input.LA(1);

            if ( (LA243_0==17) ) {
                alt243=1;
            }
            switch (alt243) {
                case 1 :
                    // InternalStubbrLang.g:8281:4: otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) )
                    {
                    otherlv_3=(Token)match(input,17,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getCheckBoxGroupAccess().getLabelKeyword_3_0());
                      			
                    }
                    // InternalStubbrLang.g:8285:4: ( (lv_label_4_0= RULE_STRING ) )
                    // InternalStubbrLang.g:8286:5: (lv_label_4_0= RULE_STRING )
                    {
                    // InternalStubbrLang.g:8286:5: (lv_label_4_0= RULE_STRING )
                    // InternalStubbrLang.g:8287:6: lv_label_4_0= RULE_STRING
                    {
                    lv_label_4_0=(Token)match(input,RULE_STRING,FOLLOW_182); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_label_4_0, grammarAccess.getCheckBoxGroupAccess().getLabelSTRINGTerminalRuleCall_3_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getCheckBoxGroupRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"label",
                      							lv_label_4_0,
                      							"org.eclipse.xtext.xbase.Xtype.STRING");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:8304:3: (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )?
            int alt244=2;
            int LA244_0 = input.LA(1);

            if ( (LA244_0==18) ) {
                alt244=1;
            }
            switch (alt244) {
                case 1 :
                    // InternalStubbrLang.g:8305:4: otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) )
                    {
                    otherlv_5=(Token)match(input,18,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getCheckBoxGroupAccess().getDocumentationKeyword_4_0());
                      			
                    }
                    // InternalStubbrLang.g:8309:4: ( (lv_documentation_6_0= RULE_STRING ) )
                    // InternalStubbrLang.g:8310:5: (lv_documentation_6_0= RULE_STRING )
                    {
                    // InternalStubbrLang.g:8310:5: (lv_documentation_6_0= RULE_STRING )
                    // InternalStubbrLang.g:8311:6: lv_documentation_6_0= RULE_STRING
                    {
                    lv_documentation_6_0=(Token)match(input,RULE_STRING,FOLLOW_183); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_documentation_6_0, grammarAccess.getCheckBoxGroupAccess().getDocumentationSTRINGTerminalRuleCall_4_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getCheckBoxGroupRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"documentation",
                      							lv_documentation_6_0,
                      							"org.eclipse.xtext.xbase.Xtype.STRING");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:8328:3: ( (otherlv_7= 'type' ( ( ruleQualifiedName ) ) ) | (otherlv_9= 'javaType' ( ( ruleQualifiedName ) ) ) )?
            int alt245=3;
            int LA245_0 = input.LA(1);

            if ( (LA245_0==67) ) {
                alt245=1;
            }
            else if ( (LA245_0==73) ) {
                alt245=2;
            }
            switch (alt245) {
                case 1 :
                    // InternalStubbrLang.g:8329:4: (otherlv_7= 'type' ( ( ruleQualifiedName ) ) )
                    {
                    // InternalStubbrLang.g:8329:4: (otherlv_7= 'type' ( ( ruleQualifiedName ) ) )
                    // InternalStubbrLang.g:8330:5: otherlv_7= 'type' ( ( ruleQualifiedName ) )
                    {
                    otherlv_7=(Token)match(input,67,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_7, grammarAccess.getCheckBoxGroupAccess().getTypeKeyword_5_0_0());
                      				
                    }
                    // InternalStubbrLang.g:8334:5: ( ( ruleQualifiedName ) )
                    // InternalStubbrLang.g:8335:6: ( ruleQualifiedName )
                    {
                    // InternalStubbrLang.g:8335:6: ( ruleQualifiedName )
                    // InternalStubbrLang.g:8336:7: ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getCheckBoxGroupRule());
                      							}
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getCheckBoxGroupAccess().getTypeEntityCrossReference_5_0_1_0());
                      						
                    }
                    pushFollow(FOLLOW_171);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalStubbrLang.g:8352:4: (otherlv_9= 'javaType' ( ( ruleQualifiedName ) ) )
                    {
                    // InternalStubbrLang.g:8352:4: (otherlv_9= 'javaType' ( ( ruleQualifiedName ) ) )
                    // InternalStubbrLang.g:8353:5: otherlv_9= 'javaType' ( ( ruleQualifiedName ) )
                    {
                    otherlv_9=(Token)match(input,73,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_9, grammarAccess.getCheckBoxGroupAccess().getJavaTypeKeyword_5_1_0());
                      				
                    }
                    // InternalStubbrLang.g:8357:5: ( ( ruleQualifiedName ) )
                    // InternalStubbrLang.g:8358:6: ( ruleQualifiedName )
                    {
                    // InternalStubbrLang.g:8358:6: ( ruleQualifiedName )
                    // InternalStubbrLang.g:8359:7: ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getCheckBoxGroupRule());
                      							}
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getCheckBoxGroupAccess().getJavaTypeJvmTypeCrossReference_5_1_1_0());
                      						
                    }
                    pushFollow(FOLLOW_171);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:8375:3: (otherlv_11= 'width' ( (lv_width_12_0= RULE_INT ) ) )?
            int alt246=2;
            int LA246_0 = input.LA(1);

            if ( (LA246_0==108) ) {
                alt246=1;
            }
            switch (alt246) {
                case 1 :
                    // InternalStubbrLang.g:8376:4: otherlv_11= 'width' ( (lv_width_12_0= RULE_INT ) )
                    {
                    otherlv_11=(Token)match(input,108,FOLLOW_140); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_11, grammarAccess.getCheckBoxGroupAccess().getWidthKeyword_6_0());
                      			
                    }
                    // InternalStubbrLang.g:8380:4: ( (lv_width_12_0= RULE_INT ) )
                    // InternalStubbrLang.g:8381:5: (lv_width_12_0= RULE_INT )
                    {
                    // InternalStubbrLang.g:8381:5: (lv_width_12_0= RULE_INT )
                    // InternalStubbrLang.g:8382:6: lv_width_12_0= RULE_INT
                    {
                    lv_width_12_0=(Token)match(input,RULE_INT,FOLLOW_173); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_width_12_0, grammarAccess.getCheckBoxGroupAccess().getWidthINTTerminalRuleCall_6_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getCheckBoxGroupRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"width",
                      							lv_width_12_0,
                      							"com.laegler.stubbr.lang.StubbrLang.INT");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:8399:3: (otherlv_13= 'height' ( (lv_height_14_0= RULE_INT ) ) )?
            int alt247=2;
            int LA247_0 = input.LA(1);

            if ( (LA247_0==109) ) {
                alt247=1;
            }
            switch (alt247) {
                case 1 :
                    // InternalStubbrLang.g:8400:4: otherlv_13= 'height' ( (lv_height_14_0= RULE_INT ) )
                    {
                    otherlv_13=(Token)match(input,109,FOLLOW_140); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_13, grammarAccess.getCheckBoxGroupAccess().getHeightKeyword_7_0());
                      			
                    }
                    // InternalStubbrLang.g:8404:4: ( (lv_height_14_0= RULE_INT ) )
                    // InternalStubbrLang.g:8405:5: (lv_height_14_0= RULE_INT )
                    {
                    // InternalStubbrLang.g:8405:5: (lv_height_14_0= RULE_INT )
                    // InternalStubbrLang.g:8406:6: lv_height_14_0= RULE_INT
                    {
                    lv_height_14_0=(Token)match(input,RULE_INT,FOLLOW_29); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_height_14_0, grammarAccess.getCheckBoxGroupAccess().getHeightINTTerminalRuleCall_7_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getCheckBoxGroupRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"height",
                      							lv_height_14_0,
                      							"com.laegler.stubbr.lang.StubbrLang.INT");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_15=(Token)match(input,26,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_15, grammarAccess.getCheckBoxGroupAccess().getRightCurlyBracketKeyword_8());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCheckBoxGroup"


    // $ANTLR start "entryRuleUpload"
    // InternalStubbrLang.g:8431:1: entryRuleUpload returns [EObject current=null] : iv_ruleUpload= ruleUpload EOF ;
    public final EObject entryRuleUpload() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleUpload = null;


        try {
            // InternalStubbrLang.g:8431:47: (iv_ruleUpload= ruleUpload EOF )
            // InternalStubbrLang.g:8432:2: iv_ruleUpload= ruleUpload EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUploadRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleUpload=ruleUpload();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUpload; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleUpload"


    // $ANTLR start "ruleUpload"
    // InternalStubbrLang.g:8438:1: ruleUpload returns [EObject current=null] : (otherlv_0= 'upload' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )? ( (otherlv_7= 'type' ( ( ruleQualifiedName ) ) ) | (otherlv_9= 'javaType' ( ( ruleQualifiedName ) ) ) )? (otherlv_11= 'width' ( (lv_width_12_0= RULE_INT ) ) )? (otherlv_13= 'height' ( (lv_height_14_0= RULE_INT ) ) )? otherlv_15= '}' ) ;
    public final EObject ruleUpload() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token lv_label_4_0=null;
        Token otherlv_5=null;
        Token lv_documentation_6_0=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token lv_width_12_0=null;
        Token otherlv_13=null;
        Token lv_height_14_0=null;
        Token otherlv_15=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;



        	enterRule();

        try {
            // InternalStubbrLang.g:8444:2: ( (otherlv_0= 'upload' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )? ( (otherlv_7= 'type' ( ( ruleQualifiedName ) ) ) | (otherlv_9= 'javaType' ( ( ruleQualifiedName ) ) ) )? (otherlv_11= 'width' ( (lv_width_12_0= RULE_INT ) ) )? (otherlv_13= 'height' ( (lv_height_14_0= RULE_INT ) ) )? otherlv_15= '}' ) )
            // InternalStubbrLang.g:8445:2: (otherlv_0= 'upload' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )? ( (otherlv_7= 'type' ( ( ruleQualifiedName ) ) ) | (otherlv_9= 'javaType' ( ( ruleQualifiedName ) ) ) )? (otherlv_11= 'width' ( (lv_width_12_0= RULE_INT ) ) )? (otherlv_13= 'height' ( (lv_height_14_0= RULE_INT ) ) )? otherlv_15= '}' )
            {
            // InternalStubbrLang.g:8445:2: (otherlv_0= 'upload' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )? ( (otherlv_7= 'type' ( ( ruleQualifiedName ) ) ) | (otherlv_9= 'javaType' ( ( ruleQualifiedName ) ) ) )? (otherlv_11= 'width' ( (lv_width_12_0= RULE_INT ) ) )? (otherlv_13= 'height' ( (lv_height_14_0= RULE_INT ) ) )? otherlv_15= '}' )
            // InternalStubbrLang.g:8446:3: otherlv_0= 'upload' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )? ( (otherlv_7= 'type' ( ( ruleQualifiedName ) ) ) | (otherlv_9= 'javaType' ( ( ruleQualifiedName ) ) ) )? (otherlv_11= 'width' ( (lv_width_12_0= RULE_INT ) ) )? (otherlv_13= 'height' ( (lv_height_14_0= RULE_INT ) ) )? otherlv_15= '}'
            {
            otherlv_0=(Token)match(input,136,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getUploadAccess().getUploadKeyword_0());
              		
            }
            // InternalStubbrLang.g:8450:3: ( (lv_name_1_0= ruleQualifiedName ) )
            // InternalStubbrLang.g:8451:4: (lv_name_1_0= ruleQualifiedName )
            {
            // InternalStubbrLang.g:8451:4: (lv_name_1_0= ruleQualifiedName )
            // InternalStubbrLang.g:8452:5: lv_name_1_0= ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getUploadAccess().getNameQualifiedNameParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_6);
            lv_name_1_0=ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getUploadRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"org.eclipse.xtext.xbase.Xbase.QualifiedName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,16,FOLLOW_181); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getUploadAccess().getLeftCurlyBracketKeyword_2());
              		
            }
            // InternalStubbrLang.g:8473:3: (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )?
            int alt248=2;
            int LA248_0 = input.LA(1);

            if ( (LA248_0==17) ) {
                alt248=1;
            }
            switch (alt248) {
                case 1 :
                    // InternalStubbrLang.g:8474:4: otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) )
                    {
                    otherlv_3=(Token)match(input,17,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getUploadAccess().getLabelKeyword_3_0());
                      			
                    }
                    // InternalStubbrLang.g:8478:4: ( (lv_label_4_0= RULE_STRING ) )
                    // InternalStubbrLang.g:8479:5: (lv_label_4_0= RULE_STRING )
                    {
                    // InternalStubbrLang.g:8479:5: (lv_label_4_0= RULE_STRING )
                    // InternalStubbrLang.g:8480:6: lv_label_4_0= RULE_STRING
                    {
                    lv_label_4_0=(Token)match(input,RULE_STRING,FOLLOW_182); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_label_4_0, grammarAccess.getUploadAccess().getLabelSTRINGTerminalRuleCall_3_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getUploadRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"label",
                      							lv_label_4_0,
                      							"org.eclipse.xtext.xbase.Xtype.STRING");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:8497:3: (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )?
            int alt249=2;
            int LA249_0 = input.LA(1);

            if ( (LA249_0==18) ) {
                alt249=1;
            }
            switch (alt249) {
                case 1 :
                    // InternalStubbrLang.g:8498:4: otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) )
                    {
                    otherlv_5=(Token)match(input,18,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getUploadAccess().getDocumentationKeyword_4_0());
                      			
                    }
                    // InternalStubbrLang.g:8502:4: ( (lv_documentation_6_0= RULE_STRING ) )
                    // InternalStubbrLang.g:8503:5: (lv_documentation_6_0= RULE_STRING )
                    {
                    // InternalStubbrLang.g:8503:5: (lv_documentation_6_0= RULE_STRING )
                    // InternalStubbrLang.g:8504:6: lv_documentation_6_0= RULE_STRING
                    {
                    lv_documentation_6_0=(Token)match(input,RULE_STRING,FOLLOW_183); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_documentation_6_0, grammarAccess.getUploadAccess().getDocumentationSTRINGTerminalRuleCall_4_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getUploadRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"documentation",
                      							lv_documentation_6_0,
                      							"org.eclipse.xtext.xbase.Xtype.STRING");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:8521:3: ( (otherlv_7= 'type' ( ( ruleQualifiedName ) ) ) | (otherlv_9= 'javaType' ( ( ruleQualifiedName ) ) ) )?
            int alt250=3;
            int LA250_0 = input.LA(1);

            if ( (LA250_0==67) ) {
                alt250=1;
            }
            else if ( (LA250_0==73) ) {
                alt250=2;
            }
            switch (alt250) {
                case 1 :
                    // InternalStubbrLang.g:8522:4: (otherlv_7= 'type' ( ( ruleQualifiedName ) ) )
                    {
                    // InternalStubbrLang.g:8522:4: (otherlv_7= 'type' ( ( ruleQualifiedName ) ) )
                    // InternalStubbrLang.g:8523:5: otherlv_7= 'type' ( ( ruleQualifiedName ) )
                    {
                    otherlv_7=(Token)match(input,67,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_7, grammarAccess.getUploadAccess().getTypeKeyword_5_0_0());
                      				
                    }
                    // InternalStubbrLang.g:8527:5: ( ( ruleQualifiedName ) )
                    // InternalStubbrLang.g:8528:6: ( ruleQualifiedName )
                    {
                    // InternalStubbrLang.g:8528:6: ( ruleQualifiedName )
                    // InternalStubbrLang.g:8529:7: ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getUploadRule());
                      							}
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getUploadAccess().getTypeEntityCrossReference_5_0_1_0());
                      						
                    }
                    pushFollow(FOLLOW_171);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalStubbrLang.g:8545:4: (otherlv_9= 'javaType' ( ( ruleQualifiedName ) ) )
                    {
                    // InternalStubbrLang.g:8545:4: (otherlv_9= 'javaType' ( ( ruleQualifiedName ) ) )
                    // InternalStubbrLang.g:8546:5: otherlv_9= 'javaType' ( ( ruleQualifiedName ) )
                    {
                    otherlv_9=(Token)match(input,73,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_9, grammarAccess.getUploadAccess().getJavaTypeKeyword_5_1_0());
                      				
                    }
                    // InternalStubbrLang.g:8550:5: ( ( ruleQualifiedName ) )
                    // InternalStubbrLang.g:8551:6: ( ruleQualifiedName )
                    {
                    // InternalStubbrLang.g:8551:6: ( ruleQualifiedName )
                    // InternalStubbrLang.g:8552:7: ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getUploadRule());
                      							}
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getUploadAccess().getJavaTypeJvmTypeCrossReference_5_1_1_0());
                      						
                    }
                    pushFollow(FOLLOW_171);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:8568:3: (otherlv_11= 'width' ( (lv_width_12_0= RULE_INT ) ) )?
            int alt251=2;
            int LA251_0 = input.LA(1);

            if ( (LA251_0==108) ) {
                alt251=1;
            }
            switch (alt251) {
                case 1 :
                    // InternalStubbrLang.g:8569:4: otherlv_11= 'width' ( (lv_width_12_0= RULE_INT ) )
                    {
                    otherlv_11=(Token)match(input,108,FOLLOW_140); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_11, grammarAccess.getUploadAccess().getWidthKeyword_6_0());
                      			
                    }
                    // InternalStubbrLang.g:8573:4: ( (lv_width_12_0= RULE_INT ) )
                    // InternalStubbrLang.g:8574:5: (lv_width_12_0= RULE_INT )
                    {
                    // InternalStubbrLang.g:8574:5: (lv_width_12_0= RULE_INT )
                    // InternalStubbrLang.g:8575:6: lv_width_12_0= RULE_INT
                    {
                    lv_width_12_0=(Token)match(input,RULE_INT,FOLLOW_173); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_width_12_0, grammarAccess.getUploadAccess().getWidthINTTerminalRuleCall_6_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getUploadRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"width",
                      							lv_width_12_0,
                      							"com.laegler.stubbr.lang.StubbrLang.INT");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:8592:3: (otherlv_13= 'height' ( (lv_height_14_0= RULE_INT ) ) )?
            int alt252=2;
            int LA252_0 = input.LA(1);

            if ( (LA252_0==109) ) {
                alt252=1;
            }
            switch (alt252) {
                case 1 :
                    // InternalStubbrLang.g:8593:4: otherlv_13= 'height' ( (lv_height_14_0= RULE_INT ) )
                    {
                    otherlv_13=(Token)match(input,109,FOLLOW_140); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_13, grammarAccess.getUploadAccess().getHeightKeyword_7_0());
                      			
                    }
                    // InternalStubbrLang.g:8597:4: ( (lv_height_14_0= RULE_INT ) )
                    // InternalStubbrLang.g:8598:5: (lv_height_14_0= RULE_INT )
                    {
                    // InternalStubbrLang.g:8598:5: (lv_height_14_0= RULE_INT )
                    // InternalStubbrLang.g:8599:6: lv_height_14_0= RULE_INT
                    {
                    lv_height_14_0=(Token)match(input,RULE_INT,FOLLOW_29); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_height_14_0, grammarAccess.getUploadAccess().getHeightINTTerminalRuleCall_7_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getUploadRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"height",
                      							lv_height_14_0,
                      							"com.laegler.stubbr.lang.StubbrLang.INT");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_15=(Token)match(input,26,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_15, grammarAccess.getUploadAccess().getRightCurlyBracketKeyword_8());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUpload"


    // $ANTLR start "entryRuleChapterWebservice"
    // InternalStubbrLang.g:8624:1: entryRuleChapterWebservice returns [EObject current=null] : iv_ruleChapterWebservice= ruleChapterWebservice EOF ;
    public final EObject entryRuleChapterWebservice() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleChapterWebservice = null;


        try {
            // InternalStubbrLang.g:8624:58: (iv_ruleChapterWebservice= ruleChapterWebservice EOF )
            // InternalStubbrLang.g:8625:2: iv_ruleChapterWebservice= ruleChapterWebservice EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getChapterWebserviceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleChapterWebservice=ruleChapterWebservice();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleChapterWebservice; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleChapterWebservice"


    // $ANTLR start "ruleChapterWebservice"
    // InternalStubbrLang.g:8631:1: ruleChapterWebservice returns [EObject current=null] : (otherlv_0= 'webservices' ( (lv_webservices_1_0= ruleWebservice ) )* ) ;
    public final EObject ruleChapterWebservice() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_webservices_1_0 = null;



        	enterRule();

        try {
            // InternalStubbrLang.g:8637:2: ( (otherlv_0= 'webservices' ( (lv_webservices_1_0= ruleWebservice ) )* ) )
            // InternalStubbrLang.g:8638:2: (otherlv_0= 'webservices' ( (lv_webservices_1_0= ruleWebservice ) )* )
            {
            // InternalStubbrLang.g:8638:2: (otherlv_0= 'webservices' ( (lv_webservices_1_0= ruleWebservice ) )* )
            // InternalStubbrLang.g:8639:3: otherlv_0= 'webservices' ( (lv_webservices_1_0= ruleWebservice ) )*
            {
            otherlv_0=(Token)match(input,137,FOLLOW_184); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getChapterWebserviceAccess().getWebservicesKeyword_0());
              		
            }
            // InternalStubbrLang.g:8643:3: ( (lv_webservices_1_0= ruleWebservice ) )*
            loop253:
            do {
                int alt253=2;
                int LA253_0 = input.LA(1);

                if ( (LA253_0==138||LA253_0==144) ) {
                    alt253=1;
                }


                switch (alt253) {
            	case 1 :
            	    // InternalStubbrLang.g:8644:4: (lv_webservices_1_0= ruleWebservice )
            	    {
            	    // InternalStubbrLang.g:8644:4: (lv_webservices_1_0= ruleWebservice )
            	    // InternalStubbrLang.g:8645:5: lv_webservices_1_0= ruleWebservice
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getChapterWebserviceAccess().getWebservicesWebserviceParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_184);
            	    lv_webservices_1_0=ruleWebservice();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getChapterWebserviceRule());
            	      					}
            	      					add(
            	      						current,
            	      						"webservices",
            	      						lv_webservices_1_0,
            	      						"com.laegler.stubbr.lang.StubbrLang.Webservice");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop253;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleChapterWebservice"


    // $ANTLR start "entryRuleWebservice"
    // InternalStubbrLang.g:8666:1: entryRuleWebservice returns [EObject current=null] : iv_ruleWebservice= ruleWebservice EOF ;
    public final EObject entryRuleWebservice() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleWebservice = null;


        try {
            // InternalStubbrLang.g:8666:51: (iv_ruleWebservice= ruleWebservice EOF )
            // InternalStubbrLang.g:8667:2: iv_ruleWebservice= ruleWebservice EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getWebserviceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleWebservice=ruleWebservice();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleWebservice; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleWebservice"


    // $ANTLR start "ruleWebservice"
    // InternalStubbrLang.g:8673:1: ruleWebservice returns [EObject current=null] : (this_RestWebservice_0= ruleRestWebservice | this_SoapWebservice_1= ruleSoapWebservice ) ;
    public final EObject ruleWebservice() throws RecognitionException {
        EObject current = null;

        EObject this_RestWebservice_0 = null;

        EObject this_SoapWebservice_1 = null;



        	enterRule();

        try {
            // InternalStubbrLang.g:8679:2: ( (this_RestWebservice_0= ruleRestWebservice | this_SoapWebservice_1= ruleSoapWebservice ) )
            // InternalStubbrLang.g:8680:2: (this_RestWebservice_0= ruleRestWebservice | this_SoapWebservice_1= ruleSoapWebservice )
            {
            // InternalStubbrLang.g:8680:2: (this_RestWebservice_0= ruleRestWebservice | this_SoapWebservice_1= ruleSoapWebservice )
            int alt254=2;
            int LA254_0 = input.LA(1);

            if ( (LA254_0==138) ) {
                alt254=1;
            }
            else if ( (LA254_0==144) ) {
                alt254=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 254, 0, input);

                throw nvae;
            }
            switch (alt254) {
                case 1 :
                    // InternalStubbrLang.g:8681:3: this_RestWebservice_0= ruleRestWebservice
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getWebserviceAccess().getRestWebserviceParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_RestWebservice_0=ruleRestWebservice();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_RestWebservice_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalStubbrLang.g:8690:3: this_SoapWebservice_1= ruleSoapWebservice
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getWebserviceAccess().getSoapWebserviceParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_SoapWebservice_1=ruleSoapWebservice();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_SoapWebservice_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleWebservice"


    // $ANTLR start "entryRuleRestWebservice"
    // InternalStubbrLang.g:8702:1: entryRuleRestWebservice returns [EObject current=null] : iv_ruleRestWebservice= ruleRestWebservice EOF ;
    public final EObject entryRuleRestWebservice() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRestWebservice = null;


        try {
            // InternalStubbrLang.g:8702:55: (iv_ruleRestWebservice= ruleRestWebservice EOF )
            // InternalStubbrLang.g:8703:2: iv_ruleRestWebservice= ruleRestWebservice EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRestWebserviceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleRestWebservice=ruleRestWebservice();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRestWebservice; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRestWebservice"


    // $ANTLR start "ruleRestWebservice"
    // InternalStubbrLang.g:8709:1: ruleRestWebservice returns [EObject current=null] : (otherlv_0= 'rest' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )? otherlv_7= 'specification' ( (lv_specification_8_0= RULE_STRING ) ) otherlv_9= 'languages' ( (lv_languages_10_0= ruleRestLanguage ) ) (otherlv_11= ',' ( (lv_languages_12_0= ruleRestLanguage ) ) )* otherlv_13= 'basepath' ( (lv_basepath_14_0= RULE_STRING ) ) otherlv_15= 'exclude' ( ( ruleQualifiedName ) ) (otherlv_17= ',' ( ( ruleQualifiedName ) ) )* otherlv_19= 'transferobjects' ( (lv_dtos_20_0= ruleEntity ) )* otherlv_21= '}' ) ;
    public final EObject ruleRestWebservice() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token lv_label_4_0=null;
        Token otherlv_5=null;
        Token lv_documentation_6_0=null;
        Token otherlv_7=null;
        Token lv_specification_8_0=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token lv_basepath_14_0=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        Enumerator lv_languages_10_0 = null;

        Enumerator lv_languages_12_0 = null;

        EObject lv_dtos_20_0 = null;



        	enterRule();

        try {
            // InternalStubbrLang.g:8715:2: ( (otherlv_0= 'rest' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )? otherlv_7= 'specification' ( (lv_specification_8_0= RULE_STRING ) ) otherlv_9= 'languages' ( (lv_languages_10_0= ruleRestLanguage ) ) (otherlv_11= ',' ( (lv_languages_12_0= ruleRestLanguage ) ) )* otherlv_13= 'basepath' ( (lv_basepath_14_0= RULE_STRING ) ) otherlv_15= 'exclude' ( ( ruleQualifiedName ) ) (otherlv_17= ',' ( ( ruleQualifiedName ) ) )* otherlv_19= 'transferobjects' ( (lv_dtos_20_0= ruleEntity ) )* otherlv_21= '}' ) )
            // InternalStubbrLang.g:8716:2: (otherlv_0= 'rest' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )? otherlv_7= 'specification' ( (lv_specification_8_0= RULE_STRING ) ) otherlv_9= 'languages' ( (lv_languages_10_0= ruleRestLanguage ) ) (otherlv_11= ',' ( (lv_languages_12_0= ruleRestLanguage ) ) )* otherlv_13= 'basepath' ( (lv_basepath_14_0= RULE_STRING ) ) otherlv_15= 'exclude' ( ( ruleQualifiedName ) ) (otherlv_17= ',' ( ( ruleQualifiedName ) ) )* otherlv_19= 'transferobjects' ( (lv_dtos_20_0= ruleEntity ) )* otherlv_21= '}' )
            {
            // InternalStubbrLang.g:8716:2: (otherlv_0= 'rest' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )? otherlv_7= 'specification' ( (lv_specification_8_0= RULE_STRING ) ) otherlv_9= 'languages' ( (lv_languages_10_0= ruleRestLanguage ) ) (otherlv_11= ',' ( (lv_languages_12_0= ruleRestLanguage ) ) )* otherlv_13= 'basepath' ( (lv_basepath_14_0= RULE_STRING ) ) otherlv_15= 'exclude' ( ( ruleQualifiedName ) ) (otherlv_17= ',' ( ( ruleQualifiedName ) ) )* otherlv_19= 'transferobjects' ( (lv_dtos_20_0= ruleEntity ) )* otherlv_21= '}' )
            // InternalStubbrLang.g:8717:3: otherlv_0= 'rest' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )? otherlv_7= 'specification' ( (lv_specification_8_0= RULE_STRING ) ) otherlv_9= 'languages' ( (lv_languages_10_0= ruleRestLanguage ) ) (otherlv_11= ',' ( (lv_languages_12_0= ruleRestLanguage ) ) )* otherlv_13= 'basepath' ( (lv_basepath_14_0= RULE_STRING ) ) otherlv_15= 'exclude' ( ( ruleQualifiedName ) ) (otherlv_17= ',' ( ( ruleQualifiedName ) ) )* otherlv_19= 'transferobjects' ( (lv_dtos_20_0= ruleEntity ) )* otherlv_21= '}'
            {
            otherlv_0=(Token)match(input,138,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getRestWebserviceAccess().getRestKeyword_0());
              		
            }
            // InternalStubbrLang.g:8721:3: ( (lv_name_1_0= ruleQualifiedName ) )
            // InternalStubbrLang.g:8722:4: (lv_name_1_0= ruleQualifiedName )
            {
            // InternalStubbrLang.g:8722:4: (lv_name_1_0= ruleQualifiedName )
            // InternalStubbrLang.g:8723:5: lv_name_1_0= ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getRestWebserviceAccess().getNameQualifiedNameParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_6);
            lv_name_1_0=ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getRestWebserviceRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"org.eclipse.xtext.xbase.Xbase.QualifiedName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,16,FOLLOW_185); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getRestWebserviceAccess().getLeftCurlyBracketKeyword_2());
              		
            }
            // InternalStubbrLang.g:8744:3: (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )?
            int alt255=2;
            int LA255_0 = input.LA(1);

            if ( (LA255_0==17) ) {
                alt255=1;
            }
            switch (alt255) {
                case 1 :
                    // InternalStubbrLang.g:8745:4: otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) )
                    {
                    otherlv_3=(Token)match(input,17,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getRestWebserviceAccess().getLabelKeyword_3_0());
                      			
                    }
                    // InternalStubbrLang.g:8749:4: ( (lv_label_4_0= RULE_STRING ) )
                    // InternalStubbrLang.g:8750:5: (lv_label_4_0= RULE_STRING )
                    {
                    // InternalStubbrLang.g:8750:5: (lv_label_4_0= RULE_STRING )
                    // InternalStubbrLang.g:8751:6: lv_label_4_0= RULE_STRING
                    {
                    lv_label_4_0=(Token)match(input,RULE_STRING,FOLLOW_186); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_label_4_0, grammarAccess.getRestWebserviceAccess().getLabelSTRINGTerminalRuleCall_3_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getRestWebserviceRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"label",
                      							lv_label_4_0,
                      							"org.eclipse.xtext.xbase.Xtype.STRING");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:8768:3: (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )?
            int alt256=2;
            int LA256_0 = input.LA(1);

            if ( (LA256_0==18) ) {
                alt256=1;
            }
            switch (alt256) {
                case 1 :
                    // InternalStubbrLang.g:8769:4: otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) )
                    {
                    otherlv_5=(Token)match(input,18,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getRestWebserviceAccess().getDocumentationKeyword_4_0());
                      			
                    }
                    // InternalStubbrLang.g:8773:4: ( (lv_documentation_6_0= RULE_STRING ) )
                    // InternalStubbrLang.g:8774:5: (lv_documentation_6_0= RULE_STRING )
                    {
                    // InternalStubbrLang.g:8774:5: (lv_documentation_6_0= RULE_STRING )
                    // InternalStubbrLang.g:8775:6: lv_documentation_6_0= RULE_STRING
                    {
                    lv_documentation_6_0=(Token)match(input,RULE_STRING,FOLLOW_187); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_documentation_6_0, grammarAccess.getRestWebserviceAccess().getDocumentationSTRINGTerminalRuleCall_4_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getRestWebserviceRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"documentation",
                      							lv_documentation_6_0,
                      							"org.eclipse.xtext.xbase.Xtype.STRING");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_7=(Token)match(input,139,FOLLOW_8); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_7, grammarAccess.getRestWebserviceAccess().getSpecificationKeyword_5());
              		
            }
            // InternalStubbrLang.g:8796:3: ( (lv_specification_8_0= RULE_STRING ) )
            // InternalStubbrLang.g:8797:4: (lv_specification_8_0= RULE_STRING )
            {
            // InternalStubbrLang.g:8797:4: (lv_specification_8_0= RULE_STRING )
            // InternalStubbrLang.g:8798:5: lv_specification_8_0= RULE_STRING
            {
            lv_specification_8_0=(Token)match(input,RULE_STRING,FOLLOW_188); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_specification_8_0, grammarAccess.getRestWebserviceAccess().getSpecificationSTRINGTerminalRuleCall_6_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getRestWebserviceRule());
              					}
              					setWithLastConsumed(
              						current,
              						"specification",
              						lv_specification_8_0,
              						"org.eclipse.xtext.xbase.Xtype.STRING");
              				
            }

            }


            }

            otherlv_9=(Token)match(input,140,FOLLOW_189); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_9, grammarAccess.getRestWebserviceAccess().getLanguagesKeyword_7());
              		
            }
            // InternalStubbrLang.g:8818:3: ( (lv_languages_10_0= ruleRestLanguage ) )
            // InternalStubbrLang.g:8819:4: (lv_languages_10_0= ruleRestLanguage )
            {
            // InternalStubbrLang.g:8819:4: (lv_languages_10_0= ruleRestLanguage )
            // InternalStubbrLang.g:8820:5: lv_languages_10_0= ruleRestLanguage
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getRestWebserviceAccess().getLanguagesRestLanguageEnumRuleCall_8_0());
              				
            }
            pushFollow(FOLLOW_190);
            lv_languages_10_0=ruleRestLanguage();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getRestWebserviceRule());
              					}
              					add(
              						current,
              						"languages",
              						lv_languages_10_0,
              						"com.laegler.stubbr.lang.StubbrLang.RestLanguage");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalStubbrLang.g:8837:3: (otherlv_11= ',' ( (lv_languages_12_0= ruleRestLanguage ) ) )*
            loop257:
            do {
                int alt257=2;
                int LA257_0 = input.LA(1);

                if ( (LA257_0==25) ) {
                    alt257=1;
                }


                switch (alt257) {
            	case 1 :
            	    // InternalStubbrLang.g:8838:4: otherlv_11= ',' ( (lv_languages_12_0= ruleRestLanguage ) )
            	    {
            	    otherlv_11=(Token)match(input,25,FOLLOW_189); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_11, grammarAccess.getRestWebserviceAccess().getCommaKeyword_9_0());
            	      			
            	    }
            	    // InternalStubbrLang.g:8842:4: ( (lv_languages_12_0= ruleRestLanguage ) )
            	    // InternalStubbrLang.g:8843:5: (lv_languages_12_0= ruleRestLanguage )
            	    {
            	    // InternalStubbrLang.g:8843:5: (lv_languages_12_0= ruleRestLanguage )
            	    // InternalStubbrLang.g:8844:6: lv_languages_12_0= ruleRestLanguage
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getRestWebserviceAccess().getLanguagesRestLanguageEnumRuleCall_9_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_190);
            	    lv_languages_12_0=ruleRestLanguage();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getRestWebserviceRule());
            	      						}
            	      						add(
            	      							current,
            	      							"languages",
            	      							lv_languages_12_0,
            	      							"com.laegler.stubbr.lang.StubbrLang.RestLanguage");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop257;
                }
            } while (true);

            otherlv_13=(Token)match(input,141,FOLLOW_8); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_13, grammarAccess.getRestWebserviceAccess().getBasepathKeyword_10());
              		
            }
            // InternalStubbrLang.g:8866:3: ( (lv_basepath_14_0= RULE_STRING ) )
            // InternalStubbrLang.g:8867:4: (lv_basepath_14_0= RULE_STRING )
            {
            // InternalStubbrLang.g:8867:4: (lv_basepath_14_0= RULE_STRING )
            // InternalStubbrLang.g:8868:5: lv_basepath_14_0= RULE_STRING
            {
            lv_basepath_14_0=(Token)match(input,RULE_STRING,FOLLOW_191); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_basepath_14_0, grammarAccess.getRestWebserviceAccess().getBasepathSTRINGTerminalRuleCall_11_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getRestWebserviceRule());
              					}
              					setWithLastConsumed(
              						current,
              						"basepath",
              						lv_basepath_14_0,
              						"org.eclipse.xtext.xbase.Xtype.STRING");
              				
            }

            }


            }

            otherlv_15=(Token)match(input,142,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_15, grammarAccess.getRestWebserviceAccess().getExcludeKeyword_12());
              		
            }
            // InternalStubbrLang.g:8888:3: ( ( ruleQualifiedName ) )
            // InternalStubbrLang.g:8889:4: ( ruleQualifiedName )
            {
            // InternalStubbrLang.g:8889:4: ( ruleQualifiedName )
            // InternalStubbrLang.g:8890:5: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getRestWebserviceRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getRestWebserviceAccess().getExcludeEntitiesEntityCrossReference_13_0());
              				
            }
            pushFollow(FOLLOW_192);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalStubbrLang.g:8904:3: (otherlv_17= ',' ( ( ruleQualifiedName ) ) )*
            loop258:
            do {
                int alt258=2;
                int LA258_0 = input.LA(1);

                if ( (LA258_0==25) ) {
                    alt258=1;
                }


                switch (alt258) {
            	case 1 :
            	    // InternalStubbrLang.g:8905:4: otherlv_17= ',' ( ( ruleQualifiedName ) )
            	    {
            	    otherlv_17=(Token)match(input,25,FOLLOW_3); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_17, grammarAccess.getRestWebserviceAccess().getCommaKeyword_14_0());
            	      			
            	    }
            	    // InternalStubbrLang.g:8909:4: ( ( ruleQualifiedName ) )
            	    // InternalStubbrLang.g:8910:5: ( ruleQualifiedName )
            	    {
            	    // InternalStubbrLang.g:8910:5: ( ruleQualifiedName )
            	    // InternalStubbrLang.g:8911:6: ruleQualifiedName
            	    {
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElement(grammarAccess.getRestWebserviceRule());
            	      						}
            	      					
            	    }
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getRestWebserviceAccess().getExcludeEntitiesEntityCrossReference_14_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_192);
            	    ruleQualifiedName();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop258;
                }
            } while (true);

            otherlv_19=(Token)match(input,143,FOLLOW_193); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_19, grammarAccess.getRestWebserviceAccess().getTransferobjectsKeyword_15());
              		
            }
            // InternalStubbrLang.g:8930:3: ( (lv_dtos_20_0= ruleEntity ) )*
            loop259:
            do {
                int alt259=2;
                int LA259_0 = input.LA(1);

                if ( (LA259_0==68) ) {
                    alt259=1;
                }


                switch (alt259) {
            	case 1 :
            	    // InternalStubbrLang.g:8931:4: (lv_dtos_20_0= ruleEntity )
            	    {
            	    // InternalStubbrLang.g:8931:4: (lv_dtos_20_0= ruleEntity )
            	    // InternalStubbrLang.g:8932:5: lv_dtos_20_0= ruleEntity
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getRestWebserviceAccess().getDtosEntityParserRuleCall_16_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_193);
            	    lv_dtos_20_0=ruleEntity();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getRestWebserviceRule());
            	      					}
            	      					add(
            	      						current,
            	      						"dtos",
            	      						lv_dtos_20_0,
            	      						"com.laegler.stubbr.lang.StubbrLang.Entity");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop259;
                }
            } while (true);

            otherlv_21=(Token)match(input,26,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_21, grammarAccess.getRestWebserviceAccess().getRightCurlyBracketKeyword_17());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRestWebservice"


    // $ANTLR start "entryRuleSoapWebservice"
    // InternalStubbrLang.g:8957:1: entryRuleSoapWebservice returns [EObject current=null] : iv_ruleSoapWebservice= ruleSoapWebservice EOF ;
    public final EObject entryRuleSoapWebservice() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSoapWebservice = null;


        try {
            // InternalStubbrLang.g:8957:55: (iv_ruleSoapWebservice= ruleSoapWebservice EOF )
            // InternalStubbrLang.g:8958:2: iv_ruleSoapWebservice= ruleSoapWebservice EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSoapWebserviceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSoapWebservice=ruleSoapWebservice();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSoapWebservice; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSoapWebservice"


    // $ANTLR start "ruleSoapWebservice"
    // InternalStubbrLang.g:8964:1: ruleSoapWebservice returns [EObject current=null] : (otherlv_0= 'soap' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )? otherlv_7= 'specification' ( (lv_specification_8_0= RULE_STRING ) ) otherlv_9= 'namespace' ( (lv_namespace_10_0= RULE_STRING ) ) otherlv_11= 'exclude' ( ( ruleQualifiedName ) ) (otherlv_13= ',' ( ( ruleQualifiedName ) ) )* otherlv_15= 'transferobjects' ( (lv_dtos_16_0= ruleEntity ) )* otherlv_17= '}' ) ;
    public final EObject ruleSoapWebservice() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token lv_label_4_0=null;
        Token otherlv_5=null;
        Token lv_documentation_6_0=null;
        Token otherlv_7=null;
        Token lv_specification_8_0=null;
        Token otherlv_9=null;
        Token lv_namespace_10_0=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject lv_dtos_16_0 = null;



        	enterRule();

        try {
            // InternalStubbrLang.g:8970:2: ( (otherlv_0= 'soap' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )? otherlv_7= 'specification' ( (lv_specification_8_0= RULE_STRING ) ) otherlv_9= 'namespace' ( (lv_namespace_10_0= RULE_STRING ) ) otherlv_11= 'exclude' ( ( ruleQualifiedName ) ) (otherlv_13= ',' ( ( ruleQualifiedName ) ) )* otherlv_15= 'transferobjects' ( (lv_dtos_16_0= ruleEntity ) )* otherlv_17= '}' ) )
            // InternalStubbrLang.g:8971:2: (otherlv_0= 'soap' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )? otherlv_7= 'specification' ( (lv_specification_8_0= RULE_STRING ) ) otherlv_9= 'namespace' ( (lv_namespace_10_0= RULE_STRING ) ) otherlv_11= 'exclude' ( ( ruleQualifiedName ) ) (otherlv_13= ',' ( ( ruleQualifiedName ) ) )* otherlv_15= 'transferobjects' ( (lv_dtos_16_0= ruleEntity ) )* otherlv_17= '}' )
            {
            // InternalStubbrLang.g:8971:2: (otherlv_0= 'soap' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )? otherlv_7= 'specification' ( (lv_specification_8_0= RULE_STRING ) ) otherlv_9= 'namespace' ( (lv_namespace_10_0= RULE_STRING ) ) otherlv_11= 'exclude' ( ( ruleQualifiedName ) ) (otherlv_13= ',' ( ( ruleQualifiedName ) ) )* otherlv_15= 'transferobjects' ( (lv_dtos_16_0= ruleEntity ) )* otherlv_17= '}' )
            // InternalStubbrLang.g:8972:3: otherlv_0= 'soap' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )? otherlv_7= 'specification' ( (lv_specification_8_0= RULE_STRING ) ) otherlv_9= 'namespace' ( (lv_namespace_10_0= RULE_STRING ) ) otherlv_11= 'exclude' ( ( ruleQualifiedName ) ) (otherlv_13= ',' ( ( ruleQualifiedName ) ) )* otherlv_15= 'transferobjects' ( (lv_dtos_16_0= ruleEntity ) )* otherlv_17= '}'
            {
            otherlv_0=(Token)match(input,144,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getSoapWebserviceAccess().getSoapKeyword_0());
              		
            }
            // InternalStubbrLang.g:8976:3: ( (lv_name_1_0= ruleQualifiedName ) )
            // InternalStubbrLang.g:8977:4: (lv_name_1_0= ruleQualifiedName )
            {
            // InternalStubbrLang.g:8977:4: (lv_name_1_0= ruleQualifiedName )
            // InternalStubbrLang.g:8978:5: lv_name_1_0= ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSoapWebserviceAccess().getNameQualifiedNameParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_6);
            lv_name_1_0=ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSoapWebserviceRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"org.eclipse.xtext.xbase.Xbase.QualifiedName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,16,FOLLOW_185); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getSoapWebserviceAccess().getLeftCurlyBracketKeyword_2());
              		
            }
            // InternalStubbrLang.g:8999:3: (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )?
            int alt260=2;
            int LA260_0 = input.LA(1);

            if ( (LA260_0==17) ) {
                alt260=1;
            }
            switch (alt260) {
                case 1 :
                    // InternalStubbrLang.g:9000:4: otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) )
                    {
                    otherlv_3=(Token)match(input,17,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getSoapWebserviceAccess().getLabelKeyword_3_0());
                      			
                    }
                    // InternalStubbrLang.g:9004:4: ( (lv_label_4_0= RULE_STRING ) )
                    // InternalStubbrLang.g:9005:5: (lv_label_4_0= RULE_STRING )
                    {
                    // InternalStubbrLang.g:9005:5: (lv_label_4_0= RULE_STRING )
                    // InternalStubbrLang.g:9006:6: lv_label_4_0= RULE_STRING
                    {
                    lv_label_4_0=(Token)match(input,RULE_STRING,FOLLOW_186); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_label_4_0, grammarAccess.getSoapWebserviceAccess().getLabelSTRINGTerminalRuleCall_3_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getSoapWebserviceRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"label",
                      							lv_label_4_0,
                      							"org.eclipse.xtext.xbase.Xtype.STRING");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:9023:3: (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )?
            int alt261=2;
            int LA261_0 = input.LA(1);

            if ( (LA261_0==18) ) {
                alt261=1;
            }
            switch (alt261) {
                case 1 :
                    // InternalStubbrLang.g:9024:4: otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) )
                    {
                    otherlv_5=(Token)match(input,18,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getSoapWebserviceAccess().getDocumentationKeyword_4_0());
                      			
                    }
                    // InternalStubbrLang.g:9028:4: ( (lv_documentation_6_0= RULE_STRING ) )
                    // InternalStubbrLang.g:9029:5: (lv_documentation_6_0= RULE_STRING )
                    {
                    // InternalStubbrLang.g:9029:5: (lv_documentation_6_0= RULE_STRING )
                    // InternalStubbrLang.g:9030:6: lv_documentation_6_0= RULE_STRING
                    {
                    lv_documentation_6_0=(Token)match(input,RULE_STRING,FOLLOW_187); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_documentation_6_0, grammarAccess.getSoapWebserviceAccess().getDocumentationSTRINGTerminalRuleCall_4_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getSoapWebserviceRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"documentation",
                      							lv_documentation_6_0,
                      							"org.eclipse.xtext.xbase.Xtype.STRING");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_7=(Token)match(input,139,FOLLOW_8); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_7, grammarAccess.getSoapWebserviceAccess().getSpecificationKeyword_5());
              		
            }
            // InternalStubbrLang.g:9051:3: ( (lv_specification_8_0= RULE_STRING ) )
            // InternalStubbrLang.g:9052:4: (lv_specification_8_0= RULE_STRING )
            {
            // InternalStubbrLang.g:9052:4: (lv_specification_8_0= RULE_STRING )
            // InternalStubbrLang.g:9053:5: lv_specification_8_0= RULE_STRING
            {
            lv_specification_8_0=(Token)match(input,RULE_STRING,FOLLOW_194); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_specification_8_0, grammarAccess.getSoapWebserviceAccess().getSpecificationSTRINGTerminalRuleCall_6_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getSoapWebserviceRule());
              					}
              					setWithLastConsumed(
              						current,
              						"specification",
              						lv_specification_8_0,
              						"org.eclipse.xtext.xbase.Xtype.STRING");
              				
            }

            }


            }

            otherlv_9=(Token)match(input,145,FOLLOW_8); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_9, grammarAccess.getSoapWebserviceAccess().getNamespaceKeyword_7());
              		
            }
            // InternalStubbrLang.g:9073:3: ( (lv_namespace_10_0= RULE_STRING ) )
            // InternalStubbrLang.g:9074:4: (lv_namespace_10_0= RULE_STRING )
            {
            // InternalStubbrLang.g:9074:4: (lv_namespace_10_0= RULE_STRING )
            // InternalStubbrLang.g:9075:5: lv_namespace_10_0= RULE_STRING
            {
            lv_namespace_10_0=(Token)match(input,RULE_STRING,FOLLOW_191); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_namespace_10_0, grammarAccess.getSoapWebserviceAccess().getNamespaceSTRINGTerminalRuleCall_8_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getSoapWebserviceRule());
              					}
              					setWithLastConsumed(
              						current,
              						"namespace",
              						lv_namespace_10_0,
              						"org.eclipse.xtext.xbase.Xtype.STRING");
              				
            }

            }


            }

            otherlv_11=(Token)match(input,142,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_11, grammarAccess.getSoapWebserviceAccess().getExcludeKeyword_9());
              		
            }
            // InternalStubbrLang.g:9095:3: ( ( ruleQualifiedName ) )
            // InternalStubbrLang.g:9096:4: ( ruleQualifiedName )
            {
            // InternalStubbrLang.g:9096:4: ( ruleQualifiedName )
            // InternalStubbrLang.g:9097:5: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getSoapWebserviceRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSoapWebserviceAccess().getExcludeEntitiesEntityCrossReference_10_0());
              				
            }
            pushFollow(FOLLOW_192);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalStubbrLang.g:9111:3: (otherlv_13= ',' ( ( ruleQualifiedName ) ) )*
            loop262:
            do {
                int alt262=2;
                int LA262_0 = input.LA(1);

                if ( (LA262_0==25) ) {
                    alt262=1;
                }


                switch (alt262) {
            	case 1 :
            	    // InternalStubbrLang.g:9112:4: otherlv_13= ',' ( ( ruleQualifiedName ) )
            	    {
            	    otherlv_13=(Token)match(input,25,FOLLOW_3); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_13, grammarAccess.getSoapWebserviceAccess().getCommaKeyword_11_0());
            	      			
            	    }
            	    // InternalStubbrLang.g:9116:4: ( ( ruleQualifiedName ) )
            	    // InternalStubbrLang.g:9117:5: ( ruleQualifiedName )
            	    {
            	    // InternalStubbrLang.g:9117:5: ( ruleQualifiedName )
            	    // InternalStubbrLang.g:9118:6: ruleQualifiedName
            	    {
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElement(grammarAccess.getSoapWebserviceRule());
            	      						}
            	      					
            	    }
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getSoapWebserviceAccess().getExcludeEntitiesEntityCrossReference_11_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_192);
            	    ruleQualifiedName();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop262;
                }
            } while (true);

            otherlv_15=(Token)match(input,143,FOLLOW_193); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_15, grammarAccess.getSoapWebserviceAccess().getTransferobjectsKeyword_12());
              		
            }
            // InternalStubbrLang.g:9137:3: ( (lv_dtos_16_0= ruleEntity ) )*
            loop263:
            do {
                int alt263=2;
                int LA263_0 = input.LA(1);

                if ( (LA263_0==68) ) {
                    alt263=1;
                }


                switch (alt263) {
            	case 1 :
            	    // InternalStubbrLang.g:9138:4: (lv_dtos_16_0= ruleEntity )
            	    {
            	    // InternalStubbrLang.g:9138:4: (lv_dtos_16_0= ruleEntity )
            	    // InternalStubbrLang.g:9139:5: lv_dtos_16_0= ruleEntity
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getSoapWebserviceAccess().getDtosEntityParserRuleCall_13_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_193);
            	    lv_dtos_16_0=ruleEntity();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getSoapWebserviceRule());
            	      					}
            	      					add(
            	      						current,
            	      						"dtos",
            	      						lv_dtos_16_0,
            	      						"com.laegler.stubbr.lang.StubbrLang.Entity");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop263;
                }
            } while (true);

            otherlv_17=(Token)match(input,26,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_17, grammarAccess.getSoapWebserviceAccess().getRightCurlyBracketKeyword_14());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSoapWebservice"


    // $ANTLR start "entryRuleChapterBehavior"
    // InternalStubbrLang.g:9164:1: entryRuleChapterBehavior returns [EObject current=null] : iv_ruleChapterBehavior= ruleChapterBehavior EOF ;
    public final EObject entryRuleChapterBehavior() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleChapterBehavior = null;


        try {
            // InternalStubbrLang.g:9164:56: (iv_ruleChapterBehavior= ruleChapterBehavior EOF )
            // InternalStubbrLang.g:9165:2: iv_ruleChapterBehavior= ruleChapterBehavior EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getChapterBehaviorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleChapterBehavior=ruleChapterBehavior();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleChapterBehavior; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleChapterBehavior"


    // $ANTLR start "ruleChapterBehavior"
    // InternalStubbrLang.g:9171:1: ruleChapterBehavior returns [EObject current=null] : (otherlv_0= 'behavior' ( (lv_features_1_0= ruleFeature ) )* (otherlv_2= 'specifications' ( (lv_specifications_3_0= RULE_STRING ) ) (otherlv_4= ',' ( (lv_specifications_5_0= RULE_STRING ) ) )* )? ) ;
    public final EObject ruleChapterBehavior() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token lv_specifications_3_0=null;
        Token otherlv_4=null;
        Token lv_specifications_5_0=null;
        EObject lv_features_1_0 = null;



        	enterRule();

        try {
            // InternalStubbrLang.g:9177:2: ( (otherlv_0= 'behavior' ( (lv_features_1_0= ruleFeature ) )* (otherlv_2= 'specifications' ( (lv_specifications_3_0= RULE_STRING ) ) (otherlv_4= ',' ( (lv_specifications_5_0= RULE_STRING ) ) )* )? ) )
            // InternalStubbrLang.g:9178:2: (otherlv_0= 'behavior' ( (lv_features_1_0= ruleFeature ) )* (otherlv_2= 'specifications' ( (lv_specifications_3_0= RULE_STRING ) ) (otherlv_4= ',' ( (lv_specifications_5_0= RULE_STRING ) ) )* )? )
            {
            // InternalStubbrLang.g:9178:2: (otherlv_0= 'behavior' ( (lv_features_1_0= ruleFeature ) )* (otherlv_2= 'specifications' ( (lv_specifications_3_0= RULE_STRING ) ) (otherlv_4= ',' ( (lv_specifications_5_0= RULE_STRING ) ) )* )? )
            // InternalStubbrLang.g:9179:3: otherlv_0= 'behavior' ( (lv_features_1_0= ruleFeature ) )* (otherlv_2= 'specifications' ( (lv_specifications_3_0= RULE_STRING ) ) (otherlv_4= ',' ( (lv_specifications_5_0= RULE_STRING ) ) )* )?
            {
            otherlv_0=(Token)match(input,146,FOLLOW_195); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getChapterBehaviorAccess().getBehaviorKeyword_0());
              		
            }
            // InternalStubbrLang.g:9183:3: ( (lv_features_1_0= ruleFeature ) )*
            loop264:
            do {
                int alt264=2;
                int LA264_0 = input.LA(1);

                if ( (LA264_0==148) ) {
                    alt264=1;
                }


                switch (alt264) {
            	case 1 :
            	    // InternalStubbrLang.g:9184:4: (lv_features_1_0= ruleFeature )
            	    {
            	    // InternalStubbrLang.g:9184:4: (lv_features_1_0= ruleFeature )
            	    // InternalStubbrLang.g:9185:5: lv_features_1_0= ruleFeature
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getChapterBehaviorAccess().getFeaturesFeatureParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_195);
            	    lv_features_1_0=ruleFeature();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getChapterBehaviorRule());
            	      					}
            	      					add(
            	      						current,
            	      						"features",
            	      						lv_features_1_0,
            	      						"com.laegler.stubbr.lang.StubbrLang.Feature");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop264;
                }
            } while (true);

            // InternalStubbrLang.g:9202:3: (otherlv_2= 'specifications' ( (lv_specifications_3_0= RULE_STRING ) ) (otherlv_4= ',' ( (lv_specifications_5_0= RULE_STRING ) ) )* )?
            int alt266=2;
            int LA266_0 = input.LA(1);

            if ( (LA266_0==147) ) {
                alt266=1;
            }
            switch (alt266) {
                case 1 :
                    // InternalStubbrLang.g:9203:4: otherlv_2= 'specifications' ( (lv_specifications_3_0= RULE_STRING ) ) (otherlv_4= ',' ( (lv_specifications_5_0= RULE_STRING ) ) )*
                    {
                    otherlv_2=(Token)match(input,147,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getChapterBehaviorAccess().getSpecificationsKeyword_2_0());
                      			
                    }
                    // InternalStubbrLang.g:9207:4: ( (lv_specifications_3_0= RULE_STRING ) )
                    // InternalStubbrLang.g:9208:5: (lv_specifications_3_0= RULE_STRING )
                    {
                    // InternalStubbrLang.g:9208:5: (lv_specifications_3_0= RULE_STRING )
                    // InternalStubbrLang.g:9209:6: lv_specifications_3_0= RULE_STRING
                    {
                    lv_specifications_3_0=(Token)match(input,RULE_STRING,FOLLOW_196); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_specifications_3_0, grammarAccess.getChapterBehaviorAccess().getSpecificationsSTRINGTerminalRuleCall_2_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getChapterBehaviorRule());
                      						}
                      						addWithLastConsumed(
                      							current,
                      							"specifications",
                      							lv_specifications_3_0,
                      							"org.eclipse.xtext.xbase.Xtype.STRING");
                      					
                    }

                    }


                    }

                    // InternalStubbrLang.g:9225:4: (otherlv_4= ',' ( (lv_specifications_5_0= RULE_STRING ) ) )*
                    loop265:
                    do {
                        int alt265=2;
                        int LA265_0 = input.LA(1);

                        if ( (LA265_0==25) ) {
                            alt265=1;
                        }


                        switch (alt265) {
                    	case 1 :
                    	    // InternalStubbrLang.g:9226:5: otherlv_4= ',' ( (lv_specifications_5_0= RULE_STRING ) )
                    	    {
                    	    otherlv_4=(Token)match(input,25,FOLLOW_8); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getChapterBehaviorAccess().getCommaKeyword_2_2_0());
                    	      				
                    	    }
                    	    // InternalStubbrLang.g:9230:5: ( (lv_specifications_5_0= RULE_STRING ) )
                    	    // InternalStubbrLang.g:9231:6: (lv_specifications_5_0= RULE_STRING )
                    	    {
                    	    // InternalStubbrLang.g:9231:6: (lv_specifications_5_0= RULE_STRING )
                    	    // InternalStubbrLang.g:9232:7: lv_specifications_5_0= RULE_STRING
                    	    {
                    	    lv_specifications_5_0=(Token)match(input,RULE_STRING,FOLLOW_196); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							newLeafNode(lv_specifications_5_0, grammarAccess.getChapterBehaviorAccess().getSpecificationsSTRINGTerminalRuleCall_2_2_1_0());
                    	      						
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElement(grammarAccess.getChapterBehaviorRule());
                    	      							}
                    	      							addWithLastConsumed(
                    	      								current,
                    	      								"specifications",
                    	      								lv_specifications_5_0,
                    	      								"org.eclipse.xtext.xbase.Xtype.STRING");
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop265;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleChapterBehavior"


    // $ANTLR start "entryRuleFeature"
    // InternalStubbrLang.g:9254:1: entryRuleFeature returns [EObject current=null] : iv_ruleFeature= ruleFeature EOF ;
    public final EObject entryRuleFeature() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFeature = null;


        try {
            // InternalStubbrLang.g:9254:48: (iv_ruleFeature= ruleFeature EOF )
            // InternalStubbrLang.g:9255:2: iv_ruleFeature= ruleFeature EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFeatureRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFeature=ruleFeature();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFeature; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFeature"


    // $ANTLR start "ruleFeature"
    // InternalStubbrLang.g:9261:1: ruleFeature returns [EObject current=null] : (otherlv_0= 'feature' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )? (otherlv_7= 'specification' ( (lv_specification_8_0= RULE_STRING ) ) )? ( (lv_scenarios_9_0= ruleScenario ) )* otherlv_10= '}' ) ;
    public final EObject ruleFeature() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token lv_label_4_0=null;
        Token otherlv_5=null;
        Token lv_documentation_6_0=null;
        Token otherlv_7=null;
        Token lv_specification_8_0=null;
        Token otherlv_10=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject lv_scenarios_9_0 = null;



        	enterRule();

        try {
            // InternalStubbrLang.g:9267:2: ( (otherlv_0= 'feature' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )? (otherlv_7= 'specification' ( (lv_specification_8_0= RULE_STRING ) ) )? ( (lv_scenarios_9_0= ruleScenario ) )* otherlv_10= '}' ) )
            // InternalStubbrLang.g:9268:2: (otherlv_0= 'feature' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )? (otherlv_7= 'specification' ( (lv_specification_8_0= RULE_STRING ) ) )? ( (lv_scenarios_9_0= ruleScenario ) )* otherlv_10= '}' )
            {
            // InternalStubbrLang.g:9268:2: (otherlv_0= 'feature' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )? (otherlv_7= 'specification' ( (lv_specification_8_0= RULE_STRING ) ) )? ( (lv_scenarios_9_0= ruleScenario ) )* otherlv_10= '}' )
            // InternalStubbrLang.g:9269:3: otherlv_0= 'feature' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )? (otherlv_7= 'specification' ( (lv_specification_8_0= RULE_STRING ) ) )? ( (lv_scenarios_9_0= ruleScenario ) )* otherlv_10= '}'
            {
            otherlv_0=(Token)match(input,148,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getFeatureAccess().getFeatureKeyword_0());
              		
            }
            // InternalStubbrLang.g:9273:3: ( (lv_name_1_0= ruleQualifiedName ) )
            // InternalStubbrLang.g:9274:4: (lv_name_1_0= ruleQualifiedName )
            {
            // InternalStubbrLang.g:9274:4: (lv_name_1_0= ruleQualifiedName )
            // InternalStubbrLang.g:9275:5: lv_name_1_0= ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getFeatureAccess().getNameQualifiedNameParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_6);
            lv_name_1_0=ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getFeatureRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"org.eclipse.xtext.xbase.Xbase.QualifiedName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,16,FOLLOW_197); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getFeatureAccess().getLeftCurlyBracketKeyword_2());
              		
            }
            // InternalStubbrLang.g:9296:3: (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )?
            int alt267=2;
            int LA267_0 = input.LA(1);

            if ( (LA267_0==17) ) {
                alt267=1;
            }
            switch (alt267) {
                case 1 :
                    // InternalStubbrLang.g:9297:4: otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) )
                    {
                    otherlv_3=(Token)match(input,17,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getFeatureAccess().getLabelKeyword_3_0());
                      			
                    }
                    // InternalStubbrLang.g:9301:4: ( (lv_label_4_0= RULE_STRING ) )
                    // InternalStubbrLang.g:9302:5: (lv_label_4_0= RULE_STRING )
                    {
                    // InternalStubbrLang.g:9302:5: (lv_label_4_0= RULE_STRING )
                    // InternalStubbrLang.g:9303:6: lv_label_4_0= RULE_STRING
                    {
                    lv_label_4_0=(Token)match(input,RULE_STRING,FOLLOW_198); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_label_4_0, grammarAccess.getFeatureAccess().getLabelSTRINGTerminalRuleCall_3_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getFeatureRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"label",
                      							lv_label_4_0,
                      							"org.eclipse.xtext.xbase.Xtype.STRING");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:9320:3: (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )?
            int alt268=2;
            int LA268_0 = input.LA(1);

            if ( (LA268_0==18) ) {
                alt268=1;
            }
            switch (alt268) {
                case 1 :
                    // InternalStubbrLang.g:9321:4: otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) )
                    {
                    otherlv_5=(Token)match(input,18,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getFeatureAccess().getDocumentationKeyword_4_0());
                      			
                    }
                    // InternalStubbrLang.g:9325:4: ( (lv_documentation_6_0= RULE_STRING ) )
                    // InternalStubbrLang.g:9326:5: (lv_documentation_6_0= RULE_STRING )
                    {
                    // InternalStubbrLang.g:9326:5: (lv_documentation_6_0= RULE_STRING )
                    // InternalStubbrLang.g:9327:6: lv_documentation_6_0= RULE_STRING
                    {
                    lv_documentation_6_0=(Token)match(input,RULE_STRING,FOLLOW_199); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_documentation_6_0, grammarAccess.getFeatureAccess().getDocumentationSTRINGTerminalRuleCall_4_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getFeatureRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"documentation",
                      							lv_documentation_6_0,
                      							"org.eclipse.xtext.xbase.Xtype.STRING");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:9344:3: (otherlv_7= 'specification' ( (lv_specification_8_0= RULE_STRING ) ) )?
            int alt269=2;
            int LA269_0 = input.LA(1);

            if ( (LA269_0==139) ) {
                alt269=1;
            }
            switch (alt269) {
                case 1 :
                    // InternalStubbrLang.g:9345:4: otherlv_7= 'specification' ( (lv_specification_8_0= RULE_STRING ) )
                    {
                    otherlv_7=(Token)match(input,139,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getFeatureAccess().getSpecificationKeyword_5_0());
                      			
                    }
                    // InternalStubbrLang.g:9349:4: ( (lv_specification_8_0= RULE_STRING ) )
                    // InternalStubbrLang.g:9350:5: (lv_specification_8_0= RULE_STRING )
                    {
                    // InternalStubbrLang.g:9350:5: (lv_specification_8_0= RULE_STRING )
                    // InternalStubbrLang.g:9351:6: lv_specification_8_0= RULE_STRING
                    {
                    lv_specification_8_0=(Token)match(input,RULE_STRING,FOLLOW_200); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_specification_8_0, grammarAccess.getFeatureAccess().getSpecificationSTRINGTerminalRuleCall_5_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getFeatureRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"specification",
                      							lv_specification_8_0,
                      							"org.eclipse.xtext.xbase.Xtype.STRING");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:9368:3: ( (lv_scenarios_9_0= ruleScenario ) )*
            loop270:
            do {
                int alt270=2;
                int LA270_0 = input.LA(1);

                if ( (LA270_0==149) ) {
                    alt270=1;
                }


                switch (alt270) {
            	case 1 :
            	    // InternalStubbrLang.g:9369:4: (lv_scenarios_9_0= ruleScenario )
            	    {
            	    // InternalStubbrLang.g:9369:4: (lv_scenarios_9_0= ruleScenario )
            	    // InternalStubbrLang.g:9370:5: lv_scenarios_9_0= ruleScenario
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getFeatureAccess().getScenariosScenarioParserRuleCall_6_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_200);
            	    lv_scenarios_9_0=ruleScenario();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getFeatureRule());
            	      					}
            	      					add(
            	      						current,
            	      						"scenarios",
            	      						lv_scenarios_9_0,
            	      						"com.laegler.stubbr.lang.StubbrLang.Scenario");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop270;
                }
            } while (true);

            otherlv_10=(Token)match(input,26,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_10, grammarAccess.getFeatureAccess().getRightCurlyBracketKeyword_7());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFeature"


    // $ANTLR start "entryRuleScenario"
    // InternalStubbrLang.g:9395:1: entryRuleScenario returns [EObject current=null] : iv_ruleScenario= ruleScenario EOF ;
    public final EObject entryRuleScenario() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleScenario = null;


        try {
            // InternalStubbrLang.g:9395:49: (iv_ruleScenario= ruleScenario EOF )
            // InternalStubbrLang.g:9396:2: iv_ruleScenario= ruleScenario EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getScenarioRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleScenario=ruleScenario();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleScenario; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleScenario"


    // $ANTLR start "ruleScenario"
    // InternalStubbrLang.g:9402:1: ruleScenario returns [EObject current=null] : (otherlv_0= 'scenario' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )? ( (lv_givenSteps_7_0= ruleGivenStep ) )* ( (lv_whenSteps_8_0= ruleWhenStep ) )* ( (lv_thenSteps_9_0= ruleThenStep ) )* otherlv_10= '}' ) ;
    public final EObject ruleScenario() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token lv_label_4_0=null;
        Token otherlv_5=null;
        Token lv_documentation_6_0=null;
        Token otherlv_10=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject lv_givenSteps_7_0 = null;

        EObject lv_whenSteps_8_0 = null;

        EObject lv_thenSteps_9_0 = null;



        	enterRule();

        try {
            // InternalStubbrLang.g:9408:2: ( (otherlv_0= 'scenario' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )? ( (lv_givenSteps_7_0= ruleGivenStep ) )* ( (lv_whenSteps_8_0= ruleWhenStep ) )* ( (lv_thenSteps_9_0= ruleThenStep ) )* otherlv_10= '}' ) )
            // InternalStubbrLang.g:9409:2: (otherlv_0= 'scenario' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )? ( (lv_givenSteps_7_0= ruleGivenStep ) )* ( (lv_whenSteps_8_0= ruleWhenStep ) )* ( (lv_thenSteps_9_0= ruleThenStep ) )* otherlv_10= '}' )
            {
            // InternalStubbrLang.g:9409:2: (otherlv_0= 'scenario' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )? ( (lv_givenSteps_7_0= ruleGivenStep ) )* ( (lv_whenSteps_8_0= ruleWhenStep ) )* ( (lv_thenSteps_9_0= ruleThenStep ) )* otherlv_10= '}' )
            // InternalStubbrLang.g:9410:3: otherlv_0= 'scenario' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )? ( (lv_givenSteps_7_0= ruleGivenStep ) )* ( (lv_whenSteps_8_0= ruleWhenStep ) )* ( (lv_thenSteps_9_0= ruleThenStep ) )* otherlv_10= '}'
            {
            otherlv_0=(Token)match(input,149,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getScenarioAccess().getScenarioKeyword_0());
              		
            }
            // InternalStubbrLang.g:9414:3: ( (lv_name_1_0= ruleQualifiedName ) )
            // InternalStubbrLang.g:9415:4: (lv_name_1_0= ruleQualifiedName )
            {
            // InternalStubbrLang.g:9415:4: (lv_name_1_0= ruleQualifiedName )
            // InternalStubbrLang.g:9416:5: lv_name_1_0= ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getScenarioAccess().getNameQualifiedNameParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_6);
            lv_name_1_0=ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getScenarioRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"org.eclipse.xtext.xbase.Xbase.QualifiedName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,16,FOLLOW_201); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getScenarioAccess().getLeftCurlyBracketKeyword_2());
              		
            }
            // InternalStubbrLang.g:9437:3: (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )?
            int alt271=2;
            int LA271_0 = input.LA(1);

            if ( (LA271_0==17) ) {
                alt271=1;
            }
            switch (alt271) {
                case 1 :
                    // InternalStubbrLang.g:9438:4: otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) )
                    {
                    otherlv_3=(Token)match(input,17,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getScenarioAccess().getLabelKeyword_3_0());
                      			
                    }
                    // InternalStubbrLang.g:9442:4: ( (lv_label_4_0= RULE_STRING ) )
                    // InternalStubbrLang.g:9443:5: (lv_label_4_0= RULE_STRING )
                    {
                    // InternalStubbrLang.g:9443:5: (lv_label_4_0= RULE_STRING )
                    // InternalStubbrLang.g:9444:6: lv_label_4_0= RULE_STRING
                    {
                    lv_label_4_0=(Token)match(input,RULE_STRING,FOLLOW_202); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_label_4_0, grammarAccess.getScenarioAccess().getLabelSTRINGTerminalRuleCall_3_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getScenarioRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"label",
                      							lv_label_4_0,
                      							"org.eclipse.xtext.xbase.Xtype.STRING");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:9461:3: (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )?
            int alt272=2;
            int LA272_0 = input.LA(1);

            if ( (LA272_0==18) ) {
                alt272=1;
            }
            switch (alt272) {
                case 1 :
                    // InternalStubbrLang.g:9462:4: otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) )
                    {
                    otherlv_5=(Token)match(input,18,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getScenarioAccess().getDocumentationKeyword_4_0());
                      			
                    }
                    // InternalStubbrLang.g:9466:4: ( (lv_documentation_6_0= RULE_STRING ) )
                    // InternalStubbrLang.g:9467:5: (lv_documentation_6_0= RULE_STRING )
                    {
                    // InternalStubbrLang.g:9467:5: (lv_documentation_6_0= RULE_STRING )
                    // InternalStubbrLang.g:9468:6: lv_documentation_6_0= RULE_STRING
                    {
                    lv_documentation_6_0=(Token)match(input,RULE_STRING,FOLLOW_203); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_documentation_6_0, grammarAccess.getScenarioAccess().getDocumentationSTRINGTerminalRuleCall_4_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getScenarioRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"documentation",
                      							lv_documentation_6_0,
                      							"org.eclipse.xtext.xbase.Xtype.STRING");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:9485:3: ( (lv_givenSteps_7_0= ruleGivenStep ) )*
            loop273:
            do {
                int alt273=2;
                int LA273_0 = input.LA(1);

                if ( (LA273_0==150) ) {
                    alt273=1;
                }


                switch (alt273) {
            	case 1 :
            	    // InternalStubbrLang.g:9486:4: (lv_givenSteps_7_0= ruleGivenStep )
            	    {
            	    // InternalStubbrLang.g:9486:4: (lv_givenSteps_7_0= ruleGivenStep )
            	    // InternalStubbrLang.g:9487:5: lv_givenSteps_7_0= ruleGivenStep
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getScenarioAccess().getGivenStepsGivenStepParserRuleCall_5_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_203);
            	    lv_givenSteps_7_0=ruleGivenStep();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getScenarioRule());
            	      					}
            	      					add(
            	      						current,
            	      						"givenSteps",
            	      						lv_givenSteps_7_0,
            	      						"com.laegler.stubbr.lang.StubbrLang.GivenStep");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop273;
                }
            } while (true);

            // InternalStubbrLang.g:9504:3: ( (lv_whenSteps_8_0= ruleWhenStep ) )*
            loop274:
            do {
                int alt274=2;
                int LA274_0 = input.LA(1);

                if ( (LA274_0==152) ) {
                    alt274=1;
                }


                switch (alt274) {
            	case 1 :
            	    // InternalStubbrLang.g:9505:4: (lv_whenSteps_8_0= ruleWhenStep )
            	    {
            	    // InternalStubbrLang.g:9505:4: (lv_whenSteps_8_0= ruleWhenStep )
            	    // InternalStubbrLang.g:9506:5: lv_whenSteps_8_0= ruleWhenStep
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getScenarioAccess().getWhenStepsWhenStepParserRuleCall_6_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_204);
            	    lv_whenSteps_8_0=ruleWhenStep();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getScenarioRule());
            	      					}
            	      					add(
            	      						current,
            	      						"whenSteps",
            	      						lv_whenSteps_8_0,
            	      						"com.laegler.stubbr.lang.StubbrLang.WhenStep");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop274;
                }
            } while (true);

            // InternalStubbrLang.g:9523:3: ( (lv_thenSteps_9_0= ruleThenStep ) )*
            loop275:
            do {
                int alt275=2;
                int LA275_0 = input.LA(1);

                if ( (LA275_0==154) ) {
                    alt275=1;
                }


                switch (alt275) {
            	case 1 :
            	    // InternalStubbrLang.g:9524:4: (lv_thenSteps_9_0= ruleThenStep )
            	    {
            	    // InternalStubbrLang.g:9524:4: (lv_thenSteps_9_0= ruleThenStep )
            	    // InternalStubbrLang.g:9525:5: lv_thenSteps_9_0= ruleThenStep
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getScenarioAccess().getThenStepsThenStepParserRuleCall_7_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_205);
            	    lv_thenSteps_9_0=ruleThenStep();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getScenarioRule());
            	      					}
            	      					add(
            	      						current,
            	      						"thenSteps",
            	      						lv_thenSteps_9_0,
            	      						"com.laegler.stubbr.lang.StubbrLang.ThenStep");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop275;
                }
            } while (true);

            otherlv_10=(Token)match(input,26,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_10, grammarAccess.getScenarioAccess().getRightCurlyBracketKeyword_8());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleScenario"


    // $ANTLR start "entryRuleGivenStep"
    // InternalStubbrLang.g:9550:1: entryRuleGivenStep returns [EObject current=null] : iv_ruleGivenStep= ruleGivenStep EOF ;
    public final EObject entryRuleGivenStep() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleGivenStep = null;


        try {
            // InternalStubbrLang.g:9550:50: (iv_ruleGivenStep= ruleGivenStep EOF )
            // InternalStubbrLang.g:9551:2: iv_ruleGivenStep= ruleGivenStep EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getGivenStepRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleGivenStep=ruleGivenStep();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleGivenStep; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleGivenStep"


    // $ANTLR start "ruleGivenStep"
    // InternalStubbrLang.g:9557:1: ruleGivenStep returns [EObject current=null] : (otherlv_0= 'given' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )? ( (otherlv_7= 'actor' ( ( ruleQualifiedName ) ) ) | (otherlv_9= 'element' ( ( ruleQualifiedName ) ) ) | ( (lv_objectWildcard_11_0= RULE_STRING ) ) ) otherlv_12= '}' ) ;
    public final EObject ruleGivenStep() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token lv_label_4_0=null;
        Token otherlv_5=null;
        Token lv_documentation_6_0=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token lv_objectWildcard_11_0=null;
        Token otherlv_12=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;



        	enterRule();

        try {
            // InternalStubbrLang.g:9563:2: ( (otherlv_0= 'given' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )? ( (otherlv_7= 'actor' ( ( ruleQualifiedName ) ) ) | (otherlv_9= 'element' ( ( ruleQualifiedName ) ) ) | ( (lv_objectWildcard_11_0= RULE_STRING ) ) ) otherlv_12= '}' ) )
            // InternalStubbrLang.g:9564:2: (otherlv_0= 'given' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )? ( (otherlv_7= 'actor' ( ( ruleQualifiedName ) ) ) | (otherlv_9= 'element' ( ( ruleQualifiedName ) ) ) | ( (lv_objectWildcard_11_0= RULE_STRING ) ) ) otherlv_12= '}' )
            {
            // InternalStubbrLang.g:9564:2: (otherlv_0= 'given' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )? ( (otherlv_7= 'actor' ( ( ruleQualifiedName ) ) ) | (otherlv_9= 'element' ( ( ruleQualifiedName ) ) ) | ( (lv_objectWildcard_11_0= RULE_STRING ) ) ) otherlv_12= '}' )
            // InternalStubbrLang.g:9565:3: otherlv_0= 'given' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )? ( (otherlv_7= 'actor' ( ( ruleQualifiedName ) ) ) | (otherlv_9= 'element' ( ( ruleQualifiedName ) ) ) | ( (lv_objectWildcard_11_0= RULE_STRING ) ) ) otherlv_12= '}'
            {
            otherlv_0=(Token)match(input,150,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getGivenStepAccess().getGivenKeyword_0());
              		
            }
            // InternalStubbrLang.g:9569:3: ( (lv_name_1_0= ruleQualifiedName ) )
            // InternalStubbrLang.g:9570:4: (lv_name_1_0= ruleQualifiedName )
            {
            // InternalStubbrLang.g:9570:4: (lv_name_1_0= ruleQualifiedName )
            // InternalStubbrLang.g:9571:5: lv_name_1_0= ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getGivenStepAccess().getNameQualifiedNameParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_6);
            lv_name_1_0=ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getGivenStepRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"org.eclipse.xtext.xbase.Xbase.QualifiedName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,16,FOLLOW_206); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getGivenStepAccess().getLeftCurlyBracketKeyword_2());
              		
            }
            // InternalStubbrLang.g:9592:3: (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )?
            int alt276=2;
            int LA276_0 = input.LA(1);

            if ( (LA276_0==17) ) {
                alt276=1;
            }
            switch (alt276) {
                case 1 :
                    // InternalStubbrLang.g:9593:4: otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) )
                    {
                    otherlv_3=(Token)match(input,17,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getGivenStepAccess().getLabelKeyword_3_0());
                      			
                    }
                    // InternalStubbrLang.g:9597:4: ( (lv_label_4_0= RULE_STRING ) )
                    // InternalStubbrLang.g:9598:5: (lv_label_4_0= RULE_STRING )
                    {
                    // InternalStubbrLang.g:9598:5: (lv_label_4_0= RULE_STRING )
                    // InternalStubbrLang.g:9599:6: lv_label_4_0= RULE_STRING
                    {
                    lv_label_4_0=(Token)match(input,RULE_STRING,FOLLOW_207); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_label_4_0, grammarAccess.getGivenStepAccess().getLabelSTRINGTerminalRuleCall_3_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getGivenStepRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"label",
                      							lv_label_4_0,
                      							"org.eclipse.xtext.xbase.Xtype.STRING");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:9616:3: (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )?
            int alt277=2;
            int LA277_0 = input.LA(1);

            if ( (LA277_0==18) ) {
                alt277=1;
            }
            switch (alt277) {
                case 1 :
                    // InternalStubbrLang.g:9617:4: otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) )
                    {
                    otherlv_5=(Token)match(input,18,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getGivenStepAccess().getDocumentationKeyword_4_0());
                      			
                    }
                    // InternalStubbrLang.g:9621:4: ( (lv_documentation_6_0= RULE_STRING ) )
                    // InternalStubbrLang.g:9622:5: (lv_documentation_6_0= RULE_STRING )
                    {
                    // InternalStubbrLang.g:9622:5: (lv_documentation_6_0= RULE_STRING )
                    // InternalStubbrLang.g:9623:6: lv_documentation_6_0= RULE_STRING
                    {
                    lv_documentation_6_0=(Token)match(input,RULE_STRING,FOLLOW_208); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_documentation_6_0, grammarAccess.getGivenStepAccess().getDocumentationSTRINGTerminalRuleCall_4_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getGivenStepRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"documentation",
                      							lv_documentation_6_0,
                      							"org.eclipse.xtext.xbase.Xtype.STRING");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:9640:3: ( (otherlv_7= 'actor' ( ( ruleQualifiedName ) ) ) | (otherlv_9= 'element' ( ( ruleQualifiedName ) ) ) | ( (lv_objectWildcard_11_0= RULE_STRING ) ) )
            int alt278=3;
            switch ( input.LA(1) ) {
            case 82:
                {
                alt278=1;
                }
                break;
            case 151:
                {
                alt278=2;
                }
                break;
            case RULE_STRING:
                {
                alt278=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 278, 0, input);

                throw nvae;
            }

            switch (alt278) {
                case 1 :
                    // InternalStubbrLang.g:9641:4: (otherlv_7= 'actor' ( ( ruleQualifiedName ) ) )
                    {
                    // InternalStubbrLang.g:9641:4: (otherlv_7= 'actor' ( ( ruleQualifiedName ) ) )
                    // InternalStubbrLang.g:9642:5: otherlv_7= 'actor' ( ( ruleQualifiedName ) )
                    {
                    otherlv_7=(Token)match(input,82,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_7, grammarAccess.getGivenStepAccess().getActorKeyword_5_0_0());
                      				
                    }
                    // InternalStubbrLang.g:9646:5: ( ( ruleQualifiedName ) )
                    // InternalStubbrLang.g:9647:6: ( ruleQualifiedName )
                    {
                    // InternalStubbrLang.g:9647:6: ( ruleQualifiedName )
                    // InternalStubbrLang.g:9648:7: ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getGivenStepRule());
                      							}
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getGivenStepAccess().getActorStakeholderCrossReference_5_0_1_0());
                      						
                    }
                    pushFollow(FOLLOW_29);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalStubbrLang.g:9664:4: (otherlv_9= 'element' ( ( ruleQualifiedName ) ) )
                    {
                    // InternalStubbrLang.g:9664:4: (otherlv_9= 'element' ( ( ruleQualifiedName ) ) )
                    // InternalStubbrLang.g:9665:5: otherlv_9= 'element' ( ( ruleQualifiedName ) )
                    {
                    otherlv_9=(Token)match(input,151,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_9, grammarAccess.getGivenStepAccess().getElementKeyword_5_1_0());
                      				
                    }
                    // InternalStubbrLang.g:9669:5: ( ( ruleQualifiedName ) )
                    // InternalStubbrLang.g:9670:6: ( ruleQualifiedName )
                    {
                    // InternalStubbrLang.g:9670:6: ( ruleQualifiedName )
                    // InternalStubbrLang.g:9671:7: ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getGivenStepRule());
                      							}
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getGivenStepAccess().getActorElementUiElementCrossReference_5_1_1_0());
                      						
                    }
                    pushFollow(FOLLOW_29);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalStubbrLang.g:9687:4: ( (lv_objectWildcard_11_0= RULE_STRING ) )
                    {
                    // InternalStubbrLang.g:9687:4: ( (lv_objectWildcard_11_0= RULE_STRING ) )
                    // InternalStubbrLang.g:9688:5: (lv_objectWildcard_11_0= RULE_STRING )
                    {
                    // InternalStubbrLang.g:9688:5: (lv_objectWildcard_11_0= RULE_STRING )
                    // InternalStubbrLang.g:9689:6: lv_objectWildcard_11_0= RULE_STRING
                    {
                    lv_objectWildcard_11_0=(Token)match(input,RULE_STRING,FOLLOW_29); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_objectWildcard_11_0, grammarAccess.getGivenStepAccess().getObjectWildcardSTRINGTerminalRuleCall_5_2_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getGivenStepRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"objectWildcard",
                      							lv_objectWildcard_11_0,
                      							"org.eclipse.xtext.xbase.Xtype.STRING");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_12=(Token)match(input,26,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_12, grammarAccess.getGivenStepAccess().getRightCurlyBracketKeyword_6());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleGivenStep"


    // $ANTLR start "entryRuleWhenStep"
    // InternalStubbrLang.g:9714:1: entryRuleWhenStep returns [EObject current=null] : iv_ruleWhenStep= ruleWhenStep EOF ;
    public final EObject entryRuleWhenStep() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleWhenStep = null;


        try {
            // InternalStubbrLang.g:9714:49: (iv_ruleWhenStep= ruleWhenStep EOF )
            // InternalStubbrLang.g:9715:2: iv_ruleWhenStep= ruleWhenStep EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getWhenStepRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleWhenStep=ruleWhenStep();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleWhenStep; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleWhenStep"


    // $ANTLR start "ruleWhenStep"
    // InternalStubbrLang.g:9721:1: ruleWhenStep returns [EObject current=null] : (otherlv_0= 'when' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )? ( (otherlv_7= 'actor' ( ( ruleQualifiedName ) ) ) | (otherlv_9= 'element' ( ( ruleQualifiedName ) ) ) | ( (lv_objectWildcard_11_0= RULE_STRING ) ) ) (otherlv_12= 'action' ( (lv_action_13_0= ruleBehaviorAction ) ) ) (otherlv_14= 'value' ( (lv_value_15_0= RULE_STRING ) ) )? ( ( (otherlv_16= 'into' )? otherlv_17= 'element' ( ( ruleQualifiedName ) ) ) | ( (lv_subjectWildcard_19_0= RULE_STRING ) ) ) otherlv_20= '}' ) ;
    public final EObject ruleWhenStep() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token lv_label_4_0=null;
        Token otherlv_5=null;
        Token lv_documentation_6_0=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token lv_objectWildcard_11_0=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token lv_value_15_0=null;
        Token otherlv_16=null;
        Token otherlv_17=null;
        Token lv_subjectWildcard_19_0=null;
        Token otherlv_20=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        Enumerator lv_action_13_0 = null;



        	enterRule();

        try {
            // InternalStubbrLang.g:9727:2: ( (otherlv_0= 'when' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )? ( (otherlv_7= 'actor' ( ( ruleQualifiedName ) ) ) | (otherlv_9= 'element' ( ( ruleQualifiedName ) ) ) | ( (lv_objectWildcard_11_0= RULE_STRING ) ) ) (otherlv_12= 'action' ( (lv_action_13_0= ruleBehaviorAction ) ) ) (otherlv_14= 'value' ( (lv_value_15_0= RULE_STRING ) ) )? ( ( (otherlv_16= 'into' )? otherlv_17= 'element' ( ( ruleQualifiedName ) ) ) | ( (lv_subjectWildcard_19_0= RULE_STRING ) ) ) otherlv_20= '}' ) )
            // InternalStubbrLang.g:9728:2: (otherlv_0= 'when' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )? ( (otherlv_7= 'actor' ( ( ruleQualifiedName ) ) ) | (otherlv_9= 'element' ( ( ruleQualifiedName ) ) ) | ( (lv_objectWildcard_11_0= RULE_STRING ) ) ) (otherlv_12= 'action' ( (lv_action_13_0= ruleBehaviorAction ) ) ) (otherlv_14= 'value' ( (lv_value_15_0= RULE_STRING ) ) )? ( ( (otherlv_16= 'into' )? otherlv_17= 'element' ( ( ruleQualifiedName ) ) ) | ( (lv_subjectWildcard_19_0= RULE_STRING ) ) ) otherlv_20= '}' )
            {
            // InternalStubbrLang.g:9728:2: (otherlv_0= 'when' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )? ( (otherlv_7= 'actor' ( ( ruleQualifiedName ) ) ) | (otherlv_9= 'element' ( ( ruleQualifiedName ) ) ) | ( (lv_objectWildcard_11_0= RULE_STRING ) ) ) (otherlv_12= 'action' ( (lv_action_13_0= ruleBehaviorAction ) ) ) (otherlv_14= 'value' ( (lv_value_15_0= RULE_STRING ) ) )? ( ( (otherlv_16= 'into' )? otherlv_17= 'element' ( ( ruleQualifiedName ) ) ) | ( (lv_subjectWildcard_19_0= RULE_STRING ) ) ) otherlv_20= '}' )
            // InternalStubbrLang.g:9729:3: otherlv_0= 'when' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )? ( (otherlv_7= 'actor' ( ( ruleQualifiedName ) ) ) | (otherlv_9= 'element' ( ( ruleQualifiedName ) ) ) | ( (lv_objectWildcard_11_0= RULE_STRING ) ) ) (otherlv_12= 'action' ( (lv_action_13_0= ruleBehaviorAction ) ) ) (otherlv_14= 'value' ( (lv_value_15_0= RULE_STRING ) ) )? ( ( (otherlv_16= 'into' )? otherlv_17= 'element' ( ( ruleQualifiedName ) ) ) | ( (lv_subjectWildcard_19_0= RULE_STRING ) ) ) otherlv_20= '}'
            {
            otherlv_0=(Token)match(input,152,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getWhenStepAccess().getWhenKeyword_0());
              		
            }
            // InternalStubbrLang.g:9733:3: ( (lv_name_1_0= ruleQualifiedName ) )
            // InternalStubbrLang.g:9734:4: (lv_name_1_0= ruleQualifiedName )
            {
            // InternalStubbrLang.g:9734:4: (lv_name_1_0= ruleQualifiedName )
            // InternalStubbrLang.g:9735:5: lv_name_1_0= ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getWhenStepAccess().getNameQualifiedNameParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_6);
            lv_name_1_0=ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getWhenStepRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"org.eclipse.xtext.xbase.Xbase.QualifiedName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,16,FOLLOW_206); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getWhenStepAccess().getLeftCurlyBracketKeyword_2());
              		
            }
            // InternalStubbrLang.g:9756:3: (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )?
            int alt279=2;
            int LA279_0 = input.LA(1);

            if ( (LA279_0==17) ) {
                alt279=1;
            }
            switch (alt279) {
                case 1 :
                    // InternalStubbrLang.g:9757:4: otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) )
                    {
                    otherlv_3=(Token)match(input,17,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getWhenStepAccess().getLabelKeyword_3_0());
                      			
                    }
                    // InternalStubbrLang.g:9761:4: ( (lv_label_4_0= RULE_STRING ) )
                    // InternalStubbrLang.g:9762:5: (lv_label_4_0= RULE_STRING )
                    {
                    // InternalStubbrLang.g:9762:5: (lv_label_4_0= RULE_STRING )
                    // InternalStubbrLang.g:9763:6: lv_label_4_0= RULE_STRING
                    {
                    lv_label_4_0=(Token)match(input,RULE_STRING,FOLLOW_207); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_label_4_0, grammarAccess.getWhenStepAccess().getLabelSTRINGTerminalRuleCall_3_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getWhenStepRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"label",
                      							lv_label_4_0,
                      							"org.eclipse.xtext.xbase.Xtype.STRING");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:9780:3: (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )?
            int alt280=2;
            int LA280_0 = input.LA(1);

            if ( (LA280_0==18) ) {
                alt280=1;
            }
            switch (alt280) {
                case 1 :
                    // InternalStubbrLang.g:9781:4: otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) )
                    {
                    otherlv_5=(Token)match(input,18,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getWhenStepAccess().getDocumentationKeyword_4_0());
                      			
                    }
                    // InternalStubbrLang.g:9785:4: ( (lv_documentation_6_0= RULE_STRING ) )
                    // InternalStubbrLang.g:9786:5: (lv_documentation_6_0= RULE_STRING )
                    {
                    // InternalStubbrLang.g:9786:5: (lv_documentation_6_0= RULE_STRING )
                    // InternalStubbrLang.g:9787:6: lv_documentation_6_0= RULE_STRING
                    {
                    lv_documentation_6_0=(Token)match(input,RULE_STRING,FOLLOW_208); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_documentation_6_0, grammarAccess.getWhenStepAccess().getDocumentationSTRINGTerminalRuleCall_4_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getWhenStepRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"documentation",
                      							lv_documentation_6_0,
                      							"org.eclipse.xtext.xbase.Xtype.STRING");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:9804:3: ( (otherlv_7= 'actor' ( ( ruleQualifiedName ) ) ) | (otherlv_9= 'element' ( ( ruleQualifiedName ) ) ) | ( (lv_objectWildcard_11_0= RULE_STRING ) ) )
            int alt281=3;
            switch ( input.LA(1) ) {
            case 82:
                {
                alt281=1;
                }
                break;
            case 151:
                {
                alt281=2;
                }
                break;
            case RULE_STRING:
                {
                alt281=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 281, 0, input);

                throw nvae;
            }

            switch (alt281) {
                case 1 :
                    // InternalStubbrLang.g:9805:4: (otherlv_7= 'actor' ( ( ruleQualifiedName ) ) )
                    {
                    // InternalStubbrLang.g:9805:4: (otherlv_7= 'actor' ( ( ruleQualifiedName ) ) )
                    // InternalStubbrLang.g:9806:5: otherlv_7= 'actor' ( ( ruleQualifiedName ) )
                    {
                    otherlv_7=(Token)match(input,82,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_7, grammarAccess.getWhenStepAccess().getActorKeyword_5_0_0());
                      				
                    }
                    // InternalStubbrLang.g:9810:5: ( ( ruleQualifiedName ) )
                    // InternalStubbrLang.g:9811:6: ( ruleQualifiedName )
                    {
                    // InternalStubbrLang.g:9811:6: ( ruleQualifiedName )
                    // InternalStubbrLang.g:9812:7: ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getWhenStepRule());
                      							}
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getWhenStepAccess().getActorStakeholderCrossReference_5_0_1_0());
                      						
                    }
                    pushFollow(FOLLOW_209);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalStubbrLang.g:9828:4: (otherlv_9= 'element' ( ( ruleQualifiedName ) ) )
                    {
                    // InternalStubbrLang.g:9828:4: (otherlv_9= 'element' ( ( ruleQualifiedName ) ) )
                    // InternalStubbrLang.g:9829:5: otherlv_9= 'element' ( ( ruleQualifiedName ) )
                    {
                    otherlv_9=(Token)match(input,151,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_9, grammarAccess.getWhenStepAccess().getElementKeyword_5_1_0());
                      				
                    }
                    // InternalStubbrLang.g:9833:5: ( ( ruleQualifiedName ) )
                    // InternalStubbrLang.g:9834:6: ( ruleQualifiedName )
                    {
                    // InternalStubbrLang.g:9834:6: ( ruleQualifiedName )
                    // InternalStubbrLang.g:9835:7: ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getWhenStepRule());
                      							}
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getWhenStepAccess().getActorElementUiElementCrossReference_5_1_1_0());
                      						
                    }
                    pushFollow(FOLLOW_209);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalStubbrLang.g:9851:4: ( (lv_objectWildcard_11_0= RULE_STRING ) )
                    {
                    // InternalStubbrLang.g:9851:4: ( (lv_objectWildcard_11_0= RULE_STRING ) )
                    // InternalStubbrLang.g:9852:5: (lv_objectWildcard_11_0= RULE_STRING )
                    {
                    // InternalStubbrLang.g:9852:5: (lv_objectWildcard_11_0= RULE_STRING )
                    // InternalStubbrLang.g:9853:6: lv_objectWildcard_11_0= RULE_STRING
                    {
                    lv_objectWildcard_11_0=(Token)match(input,RULE_STRING,FOLLOW_209); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_objectWildcard_11_0, grammarAccess.getWhenStepAccess().getObjectWildcardSTRINGTerminalRuleCall_5_2_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getWhenStepRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"objectWildcard",
                      							lv_objectWildcard_11_0,
                      							"org.eclipse.xtext.xbase.Xtype.STRING");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:9870:3: (otherlv_12= 'action' ( (lv_action_13_0= ruleBehaviorAction ) ) )
            // InternalStubbrLang.g:9871:4: otherlv_12= 'action' ( (lv_action_13_0= ruleBehaviorAction ) )
            {
            otherlv_12=(Token)match(input,77,FOLLOW_210); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(otherlv_12, grammarAccess.getWhenStepAccess().getActionKeyword_6_0());
              			
            }
            // InternalStubbrLang.g:9875:4: ( (lv_action_13_0= ruleBehaviorAction ) )
            // InternalStubbrLang.g:9876:5: (lv_action_13_0= ruleBehaviorAction )
            {
            // InternalStubbrLang.g:9876:5: (lv_action_13_0= ruleBehaviorAction )
            // InternalStubbrLang.g:9877:6: lv_action_13_0= ruleBehaviorAction
            {
            if ( state.backtracking==0 ) {

              						newCompositeNode(grammarAccess.getWhenStepAccess().getActionBehaviorActionEnumRuleCall_6_1_0());
              					
            }
            pushFollow(FOLLOW_211);
            lv_action_13_0=ruleBehaviorAction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              						if (current==null) {
              							current = createModelElementForParent(grammarAccess.getWhenStepRule());
              						}
              						set(
              							current,
              							"action",
              							lv_action_13_0,
              							"com.laegler.stubbr.lang.StubbrLang.BehaviorAction");
              						afterParserOrEnumRuleCall();
              					
            }

            }


            }


            }

            // InternalStubbrLang.g:9895:3: (otherlv_14= 'value' ( (lv_value_15_0= RULE_STRING ) ) )?
            int alt282=2;
            int LA282_0 = input.LA(1);

            if ( (LA282_0==78) ) {
                alt282=1;
            }
            switch (alt282) {
                case 1 :
                    // InternalStubbrLang.g:9896:4: otherlv_14= 'value' ( (lv_value_15_0= RULE_STRING ) )
                    {
                    otherlv_14=(Token)match(input,78,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_14, grammarAccess.getWhenStepAccess().getValueKeyword_7_0());
                      			
                    }
                    // InternalStubbrLang.g:9900:4: ( (lv_value_15_0= RULE_STRING ) )
                    // InternalStubbrLang.g:9901:5: (lv_value_15_0= RULE_STRING )
                    {
                    // InternalStubbrLang.g:9901:5: (lv_value_15_0= RULE_STRING )
                    // InternalStubbrLang.g:9902:6: lv_value_15_0= RULE_STRING
                    {
                    lv_value_15_0=(Token)match(input,RULE_STRING,FOLLOW_212); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_value_15_0, grammarAccess.getWhenStepAccess().getValueSTRINGTerminalRuleCall_7_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getWhenStepRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"value",
                      							lv_value_15_0,
                      							"org.eclipse.xtext.xbase.Xtype.STRING");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:9919:3: ( ( (otherlv_16= 'into' )? otherlv_17= 'element' ( ( ruleQualifiedName ) ) ) | ( (lv_subjectWildcard_19_0= RULE_STRING ) ) )
            int alt284=2;
            int LA284_0 = input.LA(1);

            if ( (LA284_0==151||LA284_0==153) ) {
                alt284=1;
            }
            else if ( (LA284_0==RULE_STRING) ) {
                alt284=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 284, 0, input);

                throw nvae;
            }
            switch (alt284) {
                case 1 :
                    // InternalStubbrLang.g:9920:4: ( (otherlv_16= 'into' )? otherlv_17= 'element' ( ( ruleQualifiedName ) ) )
                    {
                    // InternalStubbrLang.g:9920:4: ( (otherlv_16= 'into' )? otherlv_17= 'element' ( ( ruleQualifiedName ) ) )
                    // InternalStubbrLang.g:9921:5: (otherlv_16= 'into' )? otherlv_17= 'element' ( ( ruleQualifiedName ) )
                    {
                    // InternalStubbrLang.g:9921:5: (otherlv_16= 'into' )?
                    int alt283=2;
                    int LA283_0 = input.LA(1);

                    if ( (LA283_0==153) ) {
                        alt283=1;
                    }
                    switch (alt283) {
                        case 1 :
                            // InternalStubbrLang.g:9922:6: otherlv_16= 'into'
                            {
                            otherlv_16=(Token)match(input,153,FOLLOW_213); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_16, grammarAccess.getWhenStepAccess().getIntoKeyword_8_0_0());
                              					
                            }

                            }
                            break;

                    }

                    otherlv_17=(Token)match(input,151,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_17, grammarAccess.getWhenStepAccess().getElementKeyword_8_0_1());
                      				
                    }
                    // InternalStubbrLang.g:9931:5: ( ( ruleQualifiedName ) )
                    // InternalStubbrLang.g:9932:6: ( ruleQualifiedName )
                    {
                    // InternalStubbrLang.g:9932:6: ( ruleQualifiedName )
                    // InternalStubbrLang.g:9933:7: ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getWhenStepRule());
                      							}
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getWhenStepAccess().getSubjectElementUiElementCrossReference_8_0_2_0());
                      						
                    }
                    pushFollow(FOLLOW_29);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalStubbrLang.g:9949:4: ( (lv_subjectWildcard_19_0= RULE_STRING ) )
                    {
                    // InternalStubbrLang.g:9949:4: ( (lv_subjectWildcard_19_0= RULE_STRING ) )
                    // InternalStubbrLang.g:9950:5: (lv_subjectWildcard_19_0= RULE_STRING )
                    {
                    // InternalStubbrLang.g:9950:5: (lv_subjectWildcard_19_0= RULE_STRING )
                    // InternalStubbrLang.g:9951:6: lv_subjectWildcard_19_0= RULE_STRING
                    {
                    lv_subjectWildcard_19_0=(Token)match(input,RULE_STRING,FOLLOW_29); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_subjectWildcard_19_0, grammarAccess.getWhenStepAccess().getSubjectWildcardSTRINGTerminalRuleCall_8_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getWhenStepRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"subjectWildcard",
                      							lv_subjectWildcard_19_0,
                      							"org.eclipse.xtext.xbase.Xtype.STRING");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_20=(Token)match(input,26,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_20, grammarAccess.getWhenStepAccess().getRightCurlyBracketKeyword_9());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleWhenStep"


    // $ANTLR start "entryRuleThenStep"
    // InternalStubbrLang.g:9976:1: entryRuleThenStep returns [EObject current=null] : iv_ruleThenStep= ruleThenStep EOF ;
    public final EObject entryRuleThenStep() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleThenStep = null;


        try {
            // InternalStubbrLang.g:9976:49: (iv_ruleThenStep= ruleThenStep EOF )
            // InternalStubbrLang.g:9977:2: iv_ruleThenStep= ruleThenStep EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getThenStepRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleThenStep=ruleThenStep();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleThenStep; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleThenStep"


    // $ANTLR start "ruleThenStep"
    // InternalStubbrLang.g:9983:1: ruleThenStep returns [EObject current=null] : (otherlv_0= 'then' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )? ( (otherlv_7= 'actor' ( ( ruleQualifiedName ) ) ) | (otherlv_9= 'element' ( ( ruleQualifiedName ) ) ) | ( (lv_objectWildcard_11_0= RULE_STRING ) ) ) otherlv_12= 'should' (otherlv_13= 'action' ( (lv_action_14_0= ruleBehaviorAction ) ) ) (otherlv_15= 'value' ( (lv_value_16_0= RULE_STRING ) ) )? ( ( (otherlv_17= 'into' )? otherlv_18= 'element' ( ( ruleQualifiedName ) ) ) | ( (lv_subjectWildcard_20_0= RULE_STRING ) ) )? otherlv_21= '}' ) ;
    public final EObject ruleThenStep() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token lv_label_4_0=null;
        Token otherlv_5=null;
        Token lv_documentation_6_0=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token lv_objectWildcard_11_0=null;
        Token otherlv_12=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token lv_value_16_0=null;
        Token otherlv_17=null;
        Token otherlv_18=null;
        Token lv_subjectWildcard_20_0=null;
        Token otherlv_21=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        Enumerator lv_action_14_0 = null;



        	enterRule();

        try {
            // InternalStubbrLang.g:9989:2: ( (otherlv_0= 'then' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )? ( (otherlv_7= 'actor' ( ( ruleQualifiedName ) ) ) | (otherlv_9= 'element' ( ( ruleQualifiedName ) ) ) | ( (lv_objectWildcard_11_0= RULE_STRING ) ) ) otherlv_12= 'should' (otherlv_13= 'action' ( (lv_action_14_0= ruleBehaviorAction ) ) ) (otherlv_15= 'value' ( (lv_value_16_0= RULE_STRING ) ) )? ( ( (otherlv_17= 'into' )? otherlv_18= 'element' ( ( ruleQualifiedName ) ) ) | ( (lv_subjectWildcard_20_0= RULE_STRING ) ) )? otherlv_21= '}' ) )
            // InternalStubbrLang.g:9990:2: (otherlv_0= 'then' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )? ( (otherlv_7= 'actor' ( ( ruleQualifiedName ) ) ) | (otherlv_9= 'element' ( ( ruleQualifiedName ) ) ) | ( (lv_objectWildcard_11_0= RULE_STRING ) ) ) otherlv_12= 'should' (otherlv_13= 'action' ( (lv_action_14_0= ruleBehaviorAction ) ) ) (otherlv_15= 'value' ( (lv_value_16_0= RULE_STRING ) ) )? ( ( (otherlv_17= 'into' )? otherlv_18= 'element' ( ( ruleQualifiedName ) ) ) | ( (lv_subjectWildcard_20_0= RULE_STRING ) ) )? otherlv_21= '}' )
            {
            // InternalStubbrLang.g:9990:2: (otherlv_0= 'then' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )? ( (otherlv_7= 'actor' ( ( ruleQualifiedName ) ) ) | (otherlv_9= 'element' ( ( ruleQualifiedName ) ) ) | ( (lv_objectWildcard_11_0= RULE_STRING ) ) ) otherlv_12= 'should' (otherlv_13= 'action' ( (lv_action_14_0= ruleBehaviorAction ) ) ) (otherlv_15= 'value' ( (lv_value_16_0= RULE_STRING ) ) )? ( ( (otherlv_17= 'into' )? otherlv_18= 'element' ( ( ruleQualifiedName ) ) ) | ( (lv_subjectWildcard_20_0= RULE_STRING ) ) )? otherlv_21= '}' )
            // InternalStubbrLang.g:9991:3: otherlv_0= 'then' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )? (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )? ( (otherlv_7= 'actor' ( ( ruleQualifiedName ) ) ) | (otherlv_9= 'element' ( ( ruleQualifiedName ) ) ) | ( (lv_objectWildcard_11_0= RULE_STRING ) ) ) otherlv_12= 'should' (otherlv_13= 'action' ( (lv_action_14_0= ruleBehaviorAction ) ) ) (otherlv_15= 'value' ( (lv_value_16_0= RULE_STRING ) ) )? ( ( (otherlv_17= 'into' )? otherlv_18= 'element' ( ( ruleQualifiedName ) ) ) | ( (lv_subjectWildcard_20_0= RULE_STRING ) ) )? otherlv_21= '}'
            {
            otherlv_0=(Token)match(input,154,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getThenStepAccess().getThenKeyword_0());
              		
            }
            // InternalStubbrLang.g:9995:3: ( (lv_name_1_0= ruleQualifiedName ) )
            // InternalStubbrLang.g:9996:4: (lv_name_1_0= ruleQualifiedName )
            {
            // InternalStubbrLang.g:9996:4: (lv_name_1_0= ruleQualifiedName )
            // InternalStubbrLang.g:9997:5: lv_name_1_0= ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getThenStepAccess().getNameQualifiedNameParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_6);
            lv_name_1_0=ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getThenStepRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"org.eclipse.xtext.xbase.Xbase.QualifiedName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,16,FOLLOW_206); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getThenStepAccess().getLeftCurlyBracketKeyword_2());
              		
            }
            // InternalStubbrLang.g:10018:3: (otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) ) )?
            int alt285=2;
            int LA285_0 = input.LA(1);

            if ( (LA285_0==17) ) {
                alt285=1;
            }
            switch (alt285) {
                case 1 :
                    // InternalStubbrLang.g:10019:4: otherlv_3= 'label' ( (lv_label_4_0= RULE_STRING ) )
                    {
                    otherlv_3=(Token)match(input,17,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getThenStepAccess().getLabelKeyword_3_0());
                      			
                    }
                    // InternalStubbrLang.g:10023:4: ( (lv_label_4_0= RULE_STRING ) )
                    // InternalStubbrLang.g:10024:5: (lv_label_4_0= RULE_STRING )
                    {
                    // InternalStubbrLang.g:10024:5: (lv_label_4_0= RULE_STRING )
                    // InternalStubbrLang.g:10025:6: lv_label_4_0= RULE_STRING
                    {
                    lv_label_4_0=(Token)match(input,RULE_STRING,FOLLOW_207); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_label_4_0, grammarAccess.getThenStepAccess().getLabelSTRINGTerminalRuleCall_3_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getThenStepRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"label",
                      							lv_label_4_0,
                      							"org.eclipse.xtext.xbase.Xtype.STRING");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:10042:3: (otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) ) )?
            int alt286=2;
            int LA286_0 = input.LA(1);

            if ( (LA286_0==18) ) {
                alt286=1;
            }
            switch (alt286) {
                case 1 :
                    // InternalStubbrLang.g:10043:4: otherlv_5= 'documentation' ( (lv_documentation_6_0= RULE_STRING ) )
                    {
                    otherlv_5=(Token)match(input,18,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getThenStepAccess().getDocumentationKeyword_4_0());
                      			
                    }
                    // InternalStubbrLang.g:10047:4: ( (lv_documentation_6_0= RULE_STRING ) )
                    // InternalStubbrLang.g:10048:5: (lv_documentation_6_0= RULE_STRING )
                    {
                    // InternalStubbrLang.g:10048:5: (lv_documentation_6_0= RULE_STRING )
                    // InternalStubbrLang.g:10049:6: lv_documentation_6_0= RULE_STRING
                    {
                    lv_documentation_6_0=(Token)match(input,RULE_STRING,FOLLOW_208); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_documentation_6_0, grammarAccess.getThenStepAccess().getDocumentationSTRINGTerminalRuleCall_4_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getThenStepRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"documentation",
                      							lv_documentation_6_0,
                      							"org.eclipse.xtext.xbase.Xtype.STRING");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:10066:3: ( (otherlv_7= 'actor' ( ( ruleQualifiedName ) ) ) | (otherlv_9= 'element' ( ( ruleQualifiedName ) ) ) | ( (lv_objectWildcard_11_0= RULE_STRING ) ) )
            int alt287=3;
            switch ( input.LA(1) ) {
            case 82:
                {
                alt287=1;
                }
                break;
            case 151:
                {
                alt287=2;
                }
                break;
            case RULE_STRING:
                {
                alt287=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 287, 0, input);

                throw nvae;
            }

            switch (alt287) {
                case 1 :
                    // InternalStubbrLang.g:10067:4: (otherlv_7= 'actor' ( ( ruleQualifiedName ) ) )
                    {
                    // InternalStubbrLang.g:10067:4: (otherlv_7= 'actor' ( ( ruleQualifiedName ) ) )
                    // InternalStubbrLang.g:10068:5: otherlv_7= 'actor' ( ( ruleQualifiedName ) )
                    {
                    otherlv_7=(Token)match(input,82,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_7, grammarAccess.getThenStepAccess().getActorKeyword_5_0_0());
                      				
                    }
                    // InternalStubbrLang.g:10072:5: ( ( ruleQualifiedName ) )
                    // InternalStubbrLang.g:10073:6: ( ruleQualifiedName )
                    {
                    // InternalStubbrLang.g:10073:6: ( ruleQualifiedName )
                    // InternalStubbrLang.g:10074:7: ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getThenStepRule());
                      							}
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getThenStepAccess().getActorStakeholderCrossReference_5_0_1_0());
                      						
                    }
                    pushFollow(FOLLOW_214);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalStubbrLang.g:10090:4: (otherlv_9= 'element' ( ( ruleQualifiedName ) ) )
                    {
                    // InternalStubbrLang.g:10090:4: (otherlv_9= 'element' ( ( ruleQualifiedName ) ) )
                    // InternalStubbrLang.g:10091:5: otherlv_9= 'element' ( ( ruleQualifiedName ) )
                    {
                    otherlv_9=(Token)match(input,151,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_9, grammarAccess.getThenStepAccess().getElementKeyword_5_1_0());
                      				
                    }
                    // InternalStubbrLang.g:10095:5: ( ( ruleQualifiedName ) )
                    // InternalStubbrLang.g:10096:6: ( ruleQualifiedName )
                    {
                    // InternalStubbrLang.g:10096:6: ( ruleQualifiedName )
                    // InternalStubbrLang.g:10097:7: ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getThenStepRule());
                      							}
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getThenStepAccess().getActorElementUiElementCrossReference_5_1_1_0());
                      						
                    }
                    pushFollow(FOLLOW_214);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalStubbrLang.g:10113:4: ( (lv_objectWildcard_11_0= RULE_STRING ) )
                    {
                    // InternalStubbrLang.g:10113:4: ( (lv_objectWildcard_11_0= RULE_STRING ) )
                    // InternalStubbrLang.g:10114:5: (lv_objectWildcard_11_0= RULE_STRING )
                    {
                    // InternalStubbrLang.g:10114:5: (lv_objectWildcard_11_0= RULE_STRING )
                    // InternalStubbrLang.g:10115:6: lv_objectWildcard_11_0= RULE_STRING
                    {
                    lv_objectWildcard_11_0=(Token)match(input,RULE_STRING,FOLLOW_214); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_objectWildcard_11_0, grammarAccess.getThenStepAccess().getObjectWildcardSTRINGTerminalRuleCall_5_2_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getThenStepRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"objectWildcard",
                      							lv_objectWildcard_11_0,
                      							"org.eclipse.xtext.xbase.Xtype.STRING");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_12=(Token)match(input,155,FOLLOW_209); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_12, grammarAccess.getThenStepAccess().getShouldKeyword_6());
              		
            }
            // InternalStubbrLang.g:10136:3: (otherlv_13= 'action' ( (lv_action_14_0= ruleBehaviorAction ) ) )
            // InternalStubbrLang.g:10137:4: otherlv_13= 'action' ( (lv_action_14_0= ruleBehaviorAction ) )
            {
            otherlv_13=(Token)match(input,77,FOLLOW_210); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(otherlv_13, grammarAccess.getThenStepAccess().getActionKeyword_7_0());
              			
            }
            // InternalStubbrLang.g:10141:4: ( (lv_action_14_0= ruleBehaviorAction ) )
            // InternalStubbrLang.g:10142:5: (lv_action_14_0= ruleBehaviorAction )
            {
            // InternalStubbrLang.g:10142:5: (lv_action_14_0= ruleBehaviorAction )
            // InternalStubbrLang.g:10143:6: lv_action_14_0= ruleBehaviorAction
            {
            if ( state.backtracking==0 ) {

              						newCompositeNode(grammarAccess.getThenStepAccess().getActionBehaviorActionEnumRuleCall_7_1_0());
              					
            }
            pushFollow(FOLLOW_215);
            lv_action_14_0=ruleBehaviorAction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              						if (current==null) {
              							current = createModelElementForParent(grammarAccess.getThenStepRule());
              						}
              						set(
              							current,
              							"action",
              							lv_action_14_0,
              							"com.laegler.stubbr.lang.StubbrLang.BehaviorAction");
              						afterParserOrEnumRuleCall();
              					
            }

            }


            }


            }

            // InternalStubbrLang.g:10161:3: (otherlv_15= 'value' ( (lv_value_16_0= RULE_STRING ) ) )?
            int alt288=2;
            int LA288_0 = input.LA(1);

            if ( (LA288_0==78) ) {
                alt288=1;
            }
            switch (alt288) {
                case 1 :
                    // InternalStubbrLang.g:10162:4: otherlv_15= 'value' ( (lv_value_16_0= RULE_STRING ) )
                    {
                    otherlv_15=(Token)match(input,78,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_15, grammarAccess.getThenStepAccess().getValueKeyword_8_0());
                      			
                    }
                    // InternalStubbrLang.g:10166:4: ( (lv_value_16_0= RULE_STRING ) )
                    // InternalStubbrLang.g:10167:5: (lv_value_16_0= RULE_STRING )
                    {
                    // InternalStubbrLang.g:10167:5: (lv_value_16_0= RULE_STRING )
                    // InternalStubbrLang.g:10168:6: lv_value_16_0= RULE_STRING
                    {
                    lv_value_16_0=(Token)match(input,RULE_STRING,FOLLOW_216); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_value_16_0, grammarAccess.getThenStepAccess().getValueSTRINGTerminalRuleCall_8_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getThenStepRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"value",
                      							lv_value_16_0,
                      							"org.eclipse.xtext.xbase.Xtype.STRING");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:10185:3: ( ( (otherlv_17= 'into' )? otherlv_18= 'element' ( ( ruleQualifiedName ) ) ) | ( (lv_subjectWildcard_20_0= RULE_STRING ) ) )?
            int alt290=3;
            int LA290_0 = input.LA(1);

            if ( (LA290_0==151||LA290_0==153) ) {
                alt290=1;
            }
            else if ( (LA290_0==RULE_STRING) ) {
                alt290=2;
            }
            switch (alt290) {
                case 1 :
                    // InternalStubbrLang.g:10186:4: ( (otherlv_17= 'into' )? otherlv_18= 'element' ( ( ruleQualifiedName ) ) )
                    {
                    // InternalStubbrLang.g:10186:4: ( (otherlv_17= 'into' )? otherlv_18= 'element' ( ( ruleQualifiedName ) ) )
                    // InternalStubbrLang.g:10187:5: (otherlv_17= 'into' )? otherlv_18= 'element' ( ( ruleQualifiedName ) )
                    {
                    // InternalStubbrLang.g:10187:5: (otherlv_17= 'into' )?
                    int alt289=2;
                    int LA289_0 = input.LA(1);

                    if ( (LA289_0==153) ) {
                        alt289=1;
                    }
                    switch (alt289) {
                        case 1 :
                            // InternalStubbrLang.g:10188:6: otherlv_17= 'into'
                            {
                            otherlv_17=(Token)match(input,153,FOLLOW_213); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_17, grammarAccess.getThenStepAccess().getIntoKeyword_9_0_0());
                              					
                            }

                            }
                            break;

                    }

                    otherlv_18=(Token)match(input,151,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_18, grammarAccess.getThenStepAccess().getElementKeyword_9_0_1());
                      				
                    }
                    // InternalStubbrLang.g:10197:5: ( ( ruleQualifiedName ) )
                    // InternalStubbrLang.g:10198:6: ( ruleQualifiedName )
                    {
                    // InternalStubbrLang.g:10198:6: ( ruleQualifiedName )
                    // InternalStubbrLang.g:10199:7: ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getThenStepRule());
                      							}
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getThenStepAccess().getSubjectElementUiElementCrossReference_9_0_2_0());
                      						
                    }
                    pushFollow(FOLLOW_29);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalStubbrLang.g:10215:4: ( (lv_subjectWildcard_20_0= RULE_STRING ) )
                    {
                    // InternalStubbrLang.g:10215:4: ( (lv_subjectWildcard_20_0= RULE_STRING ) )
                    // InternalStubbrLang.g:10216:5: (lv_subjectWildcard_20_0= RULE_STRING )
                    {
                    // InternalStubbrLang.g:10216:5: (lv_subjectWildcard_20_0= RULE_STRING )
                    // InternalStubbrLang.g:10217:6: lv_subjectWildcard_20_0= RULE_STRING
                    {
                    lv_subjectWildcard_20_0=(Token)match(input,RULE_STRING,FOLLOW_29); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_subjectWildcard_20_0, grammarAccess.getThenStepAccess().getSubjectWildcardSTRINGTerminalRuleCall_9_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getThenStepRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"subjectWildcard",
                      							lv_subjectWildcard_20_0,
                      							"org.eclipse.xtext.xbase.Xtype.STRING");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_21=(Token)match(input,26,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_21, grammarAccess.getThenStepAccess().getRightCurlyBracketKeyword_10());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleThenStep"


    // $ANTLR start "entryRuleXExpression"
    // InternalStubbrLang.g:10242:1: entryRuleXExpression returns [EObject current=null] : iv_ruleXExpression= ruleXExpression EOF ;
    public final EObject entryRuleXExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXExpression = null;


        try {
            // InternalStubbrLang.g:10242:52: (iv_ruleXExpression= ruleXExpression EOF )
            // InternalStubbrLang.g:10243:2: iv_ruleXExpression= ruleXExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXExpression=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXExpression"


    // $ANTLR start "ruleXExpression"
    // InternalStubbrLang.g:10249:1: ruleXExpression returns [EObject current=null] : this_XAssignment_0= ruleXAssignment ;
    public final EObject ruleXExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XAssignment_0 = null;



        	enterRule();

        try {
            // InternalStubbrLang.g:10255:2: (this_XAssignment_0= ruleXAssignment )
            // InternalStubbrLang.g:10256:2: this_XAssignment_0= ruleXAssignment
            {
            if ( state.backtracking==0 ) {

              		newCompositeNode(grammarAccess.getXExpressionAccess().getXAssignmentParserRuleCall());
              	
            }
            pushFollow(FOLLOW_2);
            this_XAssignment_0=ruleXAssignment();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current = this_XAssignment_0;
              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXExpression"


    // $ANTLR start "entryRuleXAssignment"
    // InternalStubbrLang.g:10267:1: entryRuleXAssignment returns [EObject current=null] : iv_ruleXAssignment= ruleXAssignment EOF ;
    public final EObject entryRuleXAssignment() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXAssignment = null;


        try {
            // InternalStubbrLang.g:10267:52: (iv_ruleXAssignment= ruleXAssignment EOF )
            // InternalStubbrLang.g:10268:2: iv_ruleXAssignment= ruleXAssignment EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXAssignmentRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXAssignment=ruleXAssignment();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXAssignment; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXAssignment"


    // $ANTLR start "ruleXAssignment"
    // InternalStubbrLang.g:10274:1: ruleXAssignment returns [EObject current=null] : ( ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ( (lv_value_3_0= ruleXAssignment ) ) ) | (this_XOrExpression_4= ruleXOrExpression ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) ) )? ) ) ;
    public final EObject ruleXAssignment() throws RecognitionException {
        EObject current = null;

        EObject lv_value_3_0 = null;

        EObject this_XOrExpression_4 = null;

        EObject lv_rightOperand_7_0 = null;



        	enterRule();

        try {
            // InternalStubbrLang.g:10280:2: ( ( ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ( (lv_value_3_0= ruleXAssignment ) ) ) | (this_XOrExpression_4= ruleXOrExpression ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) ) )? ) ) )
            // InternalStubbrLang.g:10281:2: ( ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ( (lv_value_3_0= ruleXAssignment ) ) ) | (this_XOrExpression_4= ruleXOrExpression ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) ) )? ) )
            {
            // InternalStubbrLang.g:10281:2: ( ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ( (lv_value_3_0= ruleXAssignment ) ) ) | (this_XOrExpression_4= ruleXOrExpression ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) ) )? ) )
            int alt292=2;
            switch ( input.LA(1) ) {
            case RULE_ID:
                {
                int LA292_1 = input.LA(2);

                if ( (LA292_1==EOF||(LA292_1>=RULE_STRING && LA292_1<=RULE_ID)||(LA292_1>=RULE_INT && LA292_1<=RULE_DECIMAL)||LA292_1==16||(LA292_1>=25 && LA292_1<=26)||LA292_1==69||LA292_1==92||LA292_1==100||(LA292_1>=157 && LA292_1<=195)||(LA292_1>=197 && LA292_1<=221)) ) {
                    alt292=2;
                }
                else if ( (LA292_1==156) ) {
                    alt292=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 292, 1, input);

                    throw nvae;
                }
                }
                break;
            case 69:
                {
                int LA292_2 = input.LA(2);

                if ( (LA292_2==EOF||(LA292_2>=RULE_STRING && LA292_2<=RULE_ID)||(LA292_2>=RULE_INT && LA292_2<=RULE_DECIMAL)||LA292_2==16||(LA292_2>=25 && LA292_2<=26)||LA292_2==69||LA292_2==92||LA292_2==100||(LA292_2>=157 && LA292_2<=195)||(LA292_2>=197 && LA292_2<=221)) ) {
                    alt292=2;
                }
                else if ( (LA292_2==156) ) {
                    alt292=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 292, 2, input);

                    throw nvae;
                }
                }
                break;
            case 207:
                {
                int LA292_3 = input.LA(2);

                if ( (LA292_3==156) ) {
                    alt292=1;
                }
                else if ( (LA292_3==EOF||(LA292_3>=RULE_STRING && LA292_3<=RULE_ID)||(LA292_3>=RULE_INT && LA292_3<=RULE_DECIMAL)||LA292_3==16||(LA292_3>=25 && LA292_3<=26)||LA292_3==69||LA292_3==92||LA292_3==100||(LA292_3>=157 && LA292_3<=195)||(LA292_3>=197 && LA292_3<=221)) ) {
                    alt292=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 292, 3, input);

                    throw nvae;
                }
                }
                break;
            case 208:
                {
                int LA292_4 = input.LA(2);

                if ( (LA292_4==156) ) {
                    alt292=1;
                }
                else if ( (LA292_4==EOF||(LA292_4>=RULE_STRING && LA292_4<=RULE_ID)||(LA292_4>=RULE_INT && LA292_4<=RULE_DECIMAL)||LA292_4==16||(LA292_4>=25 && LA292_4<=26)||LA292_4==69||LA292_4==92||LA292_4==100||(LA292_4>=157 && LA292_4<=195)||(LA292_4>=197 && LA292_4<=221)) ) {
                    alt292=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 292, 4, input);

                    throw nvae;
                }
                }
                break;
            case 209:
                {
                int LA292_5 = input.LA(2);

                if ( (LA292_5==156) ) {
                    alt292=1;
                }
                else if ( (LA292_5==EOF||(LA292_5>=RULE_STRING && LA292_5<=RULE_ID)||(LA292_5>=RULE_INT && LA292_5<=RULE_DECIMAL)||LA292_5==16||(LA292_5>=25 && LA292_5<=26)||LA292_5==69||LA292_5==92||LA292_5==100||(LA292_5>=157 && LA292_5<=195)||(LA292_5>=197 && LA292_5<=221)) ) {
                    alt292=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 292, 5, input);

                    throw nvae;
                }
                }
                break;
            case RULE_STRING:
            case RULE_INT:
            case RULE_HEX:
            case RULE_DECIMAL:
            case 16:
            case 100:
            case 162:
            case 178:
            case 179:
            case 184:
            case 191:
            case 193:
            case 194:
            case 198:
            case 200:
            case 203:
            case 204:
            case 210:
            case 211:
            case 212:
            case 213:
            case 214:
            case 215:
            case 216:
            case 217:
            case 218:
            case 220:
                {
                alt292=2;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 292, 0, input);

                throw nvae;
            }

            switch (alt292) {
                case 1 :
                    // InternalStubbrLang.g:10282:3: ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ( (lv_value_3_0= ruleXAssignment ) ) )
                    {
                    // InternalStubbrLang.g:10282:3: ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ( (lv_value_3_0= ruleXAssignment ) ) )
                    // InternalStubbrLang.g:10283:4: () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ( (lv_value_3_0= ruleXAssignment ) )
                    {
                    // InternalStubbrLang.g:10283:4: ()
                    // InternalStubbrLang.g:10284:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getXAssignmentAccess().getXAssignmentAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalStubbrLang.g:10290:4: ( ( ruleFeatureCallID ) )
                    // InternalStubbrLang.g:10291:5: ( ruleFeatureCallID )
                    {
                    // InternalStubbrLang.g:10291:5: ( ruleFeatureCallID )
                    // InternalStubbrLang.g:10292:6: ruleFeatureCallID
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getXAssignmentRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXAssignmentAccess().getFeatureJvmIdentifiableElementCrossReference_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_217);
                    ruleFeatureCallID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getXAssignmentAccess().getOpSingleAssignParserRuleCall_0_2());
                      			
                    }
                    pushFollow(FOLLOW_218);
                    ruleOpSingleAssign();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				afterParserOrEnumRuleCall();
                      			
                    }
                    // InternalStubbrLang.g:10313:4: ( (lv_value_3_0= ruleXAssignment ) )
                    // InternalStubbrLang.g:10314:5: (lv_value_3_0= ruleXAssignment )
                    {
                    // InternalStubbrLang.g:10314:5: (lv_value_3_0= ruleXAssignment )
                    // InternalStubbrLang.g:10315:6: lv_value_3_0= ruleXAssignment
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXAssignmentAccess().getValueXAssignmentParserRuleCall_0_3_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_value_3_0=ruleXAssignment();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXAssignmentRule());
                      						}
                      						set(
                      							current,
                      							"value",
                      							lv_value_3_0,
                      							"org.eclipse.xtext.xbase.Xbase.XAssignment");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalStubbrLang.g:10334:3: (this_XOrExpression_4= ruleXOrExpression ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) ) )? )
                    {
                    // InternalStubbrLang.g:10334:3: (this_XOrExpression_4= ruleXOrExpression ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) ) )? )
                    // InternalStubbrLang.g:10335:4: this_XOrExpression_4= ruleXOrExpression ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) ) )?
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getXAssignmentAccess().getXOrExpressionParserRuleCall_1_0());
                      			
                    }
                    pushFollow(FOLLOW_219);
                    this_XOrExpression_4=ruleXOrExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_XOrExpression_4;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    // InternalStubbrLang.g:10343:4: ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) ) )?
                    int alt291=2;
                    alt291 = dfa291.predict(input);
                    switch (alt291) {
                        case 1 :
                            // InternalStubbrLang.g:10344:5: ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) )
                            {
                            // InternalStubbrLang.g:10344:5: ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) )
                            // InternalStubbrLang.g:10345:6: ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) )
                            {
                            // InternalStubbrLang.g:10355:6: ( () ( ( ruleOpMultiAssign ) ) )
                            // InternalStubbrLang.g:10356:7: () ( ( ruleOpMultiAssign ) )
                            {
                            // InternalStubbrLang.g:10356:7: ()
                            // InternalStubbrLang.g:10357:8: 
                            {
                            if ( state.backtracking==0 ) {

                              								current = forceCreateModelElementAndSet(
                              									grammarAccess.getXAssignmentAccess().getXBinaryOperationLeftOperandAction_1_1_0_0_0(),
                              									current);
                              							
                            }

                            }

                            // InternalStubbrLang.g:10363:7: ( ( ruleOpMultiAssign ) )
                            // InternalStubbrLang.g:10364:8: ( ruleOpMultiAssign )
                            {
                            // InternalStubbrLang.g:10364:8: ( ruleOpMultiAssign )
                            // InternalStubbrLang.g:10365:9: ruleOpMultiAssign
                            {
                            if ( state.backtracking==0 ) {

                              									if (current==null) {
                              										current = createModelElement(grammarAccess.getXAssignmentRule());
                              									}
                              								
                            }
                            if ( state.backtracking==0 ) {

                              									newCompositeNode(grammarAccess.getXAssignmentAccess().getFeatureJvmIdentifiableElementCrossReference_1_1_0_0_1_0());
                              								
                            }
                            pushFollow(FOLLOW_218);
                            ruleOpMultiAssign();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              									afterParserOrEnumRuleCall();
                              								
                            }

                            }


                            }


                            }


                            }

                            // InternalStubbrLang.g:10381:5: ( (lv_rightOperand_7_0= ruleXAssignment ) )
                            // InternalStubbrLang.g:10382:6: (lv_rightOperand_7_0= ruleXAssignment )
                            {
                            // InternalStubbrLang.g:10382:6: (lv_rightOperand_7_0= ruleXAssignment )
                            // InternalStubbrLang.g:10383:7: lv_rightOperand_7_0= ruleXAssignment
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getXAssignmentAccess().getRightOperandXAssignmentParserRuleCall_1_1_1_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_rightOperand_7_0=ruleXAssignment();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getXAssignmentRule());
                              							}
                              							set(
                              								current,
                              								"rightOperand",
                              								lv_rightOperand_7_0,
                              								"org.eclipse.xtext.xbase.Xbase.XAssignment");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXAssignment"


    // $ANTLR start "entryRuleOpSingleAssign"
    // InternalStubbrLang.g:10406:1: entryRuleOpSingleAssign returns [String current=null] : iv_ruleOpSingleAssign= ruleOpSingleAssign EOF ;
    public final String entryRuleOpSingleAssign() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpSingleAssign = null;


        try {
            // InternalStubbrLang.g:10406:54: (iv_ruleOpSingleAssign= ruleOpSingleAssign EOF )
            // InternalStubbrLang.g:10407:2: iv_ruleOpSingleAssign= ruleOpSingleAssign EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpSingleAssignRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpSingleAssign=ruleOpSingleAssign();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpSingleAssign.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpSingleAssign"


    // $ANTLR start "ruleOpSingleAssign"
    // InternalStubbrLang.g:10413:1: ruleOpSingleAssign returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= '=' ;
    public final AntlrDatatypeRuleToken ruleOpSingleAssign() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalStubbrLang.g:10419:2: (kw= '=' )
            // InternalStubbrLang.g:10420:2: kw= '='
            {
            kw=(Token)match(input,156,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(kw);
              		newLeafNode(kw, grammarAccess.getOpSingleAssignAccess().getEqualsSignKeyword());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpSingleAssign"


    // $ANTLR start "entryRuleOpMultiAssign"
    // InternalStubbrLang.g:10428:1: entryRuleOpMultiAssign returns [String current=null] : iv_ruleOpMultiAssign= ruleOpMultiAssign EOF ;
    public final String entryRuleOpMultiAssign() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpMultiAssign = null;


        try {
            // InternalStubbrLang.g:10428:53: (iv_ruleOpMultiAssign= ruleOpMultiAssign EOF )
            // InternalStubbrLang.g:10429:2: iv_ruleOpMultiAssign= ruleOpMultiAssign EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpMultiAssignRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpMultiAssign=ruleOpMultiAssign();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpMultiAssign.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpMultiAssign"


    // $ANTLR start "ruleOpMultiAssign"
    // InternalStubbrLang.g:10435:1: ruleOpMultiAssign returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '+=' | kw= '-=' | kw= '*=' | kw= '/=' | kw= '%=' | (kw= '<' kw= '<' kw= '=' ) | (kw= '>' (kw= '>' )? kw= '>=' ) ) ;
    public final AntlrDatatypeRuleToken ruleOpMultiAssign() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalStubbrLang.g:10441:2: ( (kw= '+=' | kw= '-=' | kw= '*=' | kw= '/=' | kw= '%=' | (kw= '<' kw= '<' kw= '=' ) | (kw= '>' (kw= '>' )? kw= '>=' ) ) )
            // InternalStubbrLang.g:10442:2: (kw= '+=' | kw= '-=' | kw= '*=' | kw= '/=' | kw= '%=' | (kw= '<' kw= '<' kw= '=' ) | (kw= '>' (kw= '>' )? kw= '>=' ) )
            {
            // InternalStubbrLang.g:10442:2: (kw= '+=' | kw= '-=' | kw= '*=' | kw= '/=' | kw= '%=' | (kw= '<' kw= '<' kw= '=' ) | (kw= '>' (kw= '>' )? kw= '>=' ) )
            int alt294=7;
            switch ( input.LA(1) ) {
            case 157:
                {
                alt294=1;
                }
                break;
            case 158:
                {
                alt294=2;
                }
                break;
            case 159:
                {
                alt294=3;
                }
                break;
            case 160:
                {
                alt294=4;
                }
                break;
            case 161:
                {
                alt294=5;
                }
                break;
            case 162:
                {
                alt294=6;
                }
                break;
            case 163:
                {
                alt294=7;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 294, 0, input);

                throw nvae;
            }

            switch (alt294) {
                case 1 :
                    // InternalStubbrLang.g:10443:3: kw= '+='
                    {
                    kw=(Token)match(input,157,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getPlusSignEqualsSignKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalStubbrLang.g:10449:3: kw= '-='
                    {
                    kw=(Token)match(input,158,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getHyphenMinusEqualsSignKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalStubbrLang.g:10455:3: kw= '*='
                    {
                    kw=(Token)match(input,159,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getAsteriskEqualsSignKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalStubbrLang.g:10461:3: kw= '/='
                    {
                    kw=(Token)match(input,160,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getSolidusEqualsSignKeyword_3());
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalStubbrLang.g:10467:3: kw= '%='
                    {
                    kw=(Token)match(input,161,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getPercentSignEqualsSignKeyword_4());
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalStubbrLang.g:10473:3: (kw= '<' kw= '<' kw= '=' )
                    {
                    // InternalStubbrLang.g:10473:3: (kw= '<' kw= '<' kw= '=' )
                    // InternalStubbrLang.g:10474:4: kw= '<' kw= '<' kw= '='
                    {
                    kw=(Token)match(input,162,FOLLOW_220); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getLessThanSignKeyword_5_0());
                      			
                    }
                    kw=(Token)match(input,162,FOLLOW_217); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getLessThanSignKeyword_5_1());
                      			
                    }
                    kw=(Token)match(input,156,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getEqualsSignKeyword_5_2());
                      			
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalStubbrLang.g:10491:3: (kw= '>' (kw= '>' )? kw= '>=' )
                    {
                    // InternalStubbrLang.g:10491:3: (kw= '>' (kw= '>' )? kw= '>=' )
                    // InternalStubbrLang.g:10492:4: kw= '>' (kw= '>' )? kw= '>='
                    {
                    kw=(Token)match(input,163,FOLLOW_221); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getGreaterThanSignKeyword_6_0());
                      			
                    }
                    // InternalStubbrLang.g:10497:4: (kw= '>' )?
                    int alt293=2;
                    int LA293_0 = input.LA(1);

                    if ( (LA293_0==163) ) {
                        alt293=1;
                    }
                    switch (alt293) {
                        case 1 :
                            // InternalStubbrLang.g:10498:5: kw= '>'
                            {
                            kw=(Token)match(input,163,FOLLOW_222); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(kw);
                              					newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getGreaterThanSignKeyword_6_1());
                              				
                            }

                            }
                            break;

                    }

                    kw=(Token)match(input,164,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getGreaterThanSignEqualsSignKeyword_6_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpMultiAssign"


    // $ANTLR start "entryRuleXOrExpression"
    // InternalStubbrLang.g:10514:1: entryRuleXOrExpression returns [EObject current=null] : iv_ruleXOrExpression= ruleXOrExpression EOF ;
    public final EObject entryRuleXOrExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXOrExpression = null;


        try {
            // InternalStubbrLang.g:10514:54: (iv_ruleXOrExpression= ruleXOrExpression EOF )
            // InternalStubbrLang.g:10515:2: iv_ruleXOrExpression= ruleXOrExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXOrExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXOrExpression=ruleXOrExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXOrExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXOrExpression"


    // $ANTLR start "ruleXOrExpression"
    // InternalStubbrLang.g:10521:1: ruleXOrExpression returns [EObject current=null] : (this_XAndExpression_0= ruleXAndExpression ( ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXAndExpression ) ) )* ) ;
    public final EObject ruleXOrExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XAndExpression_0 = null;

        EObject lv_rightOperand_3_0 = null;



        	enterRule();

        try {
            // InternalStubbrLang.g:10527:2: ( (this_XAndExpression_0= ruleXAndExpression ( ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXAndExpression ) ) )* ) )
            // InternalStubbrLang.g:10528:2: (this_XAndExpression_0= ruleXAndExpression ( ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXAndExpression ) ) )* )
            {
            // InternalStubbrLang.g:10528:2: (this_XAndExpression_0= ruleXAndExpression ( ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXAndExpression ) ) )* )
            // InternalStubbrLang.g:10529:3: this_XAndExpression_0= ruleXAndExpression ( ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXAndExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getXOrExpressionAccess().getXAndExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_223);
            this_XAndExpression_0=ruleXAndExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_XAndExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalStubbrLang.g:10537:3: ( ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXAndExpression ) ) )*
            loop295:
            do {
                int alt295=2;
                int LA295_0 = input.LA(1);

                if ( (LA295_0==165) ) {
                    int LA295_2 = input.LA(2);

                    if ( (synpred2_InternalStubbrLang()) ) {
                        alt295=1;
                    }


                }


                switch (alt295) {
            	case 1 :
            	    // InternalStubbrLang.g:10538:4: ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXAndExpression ) )
            	    {
            	    // InternalStubbrLang.g:10538:4: ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) )
            	    // InternalStubbrLang.g:10539:5: ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) )
            	    {
            	    // InternalStubbrLang.g:10549:5: ( () ( ( ruleOpOr ) ) )
            	    // InternalStubbrLang.g:10550:6: () ( ( ruleOpOr ) )
            	    {
            	    // InternalStubbrLang.g:10550:6: ()
            	    // InternalStubbrLang.g:10551:7: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      							current = forceCreateModelElementAndSet(
            	      								grammarAccess.getXOrExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            	      								current);
            	      						
            	    }

            	    }

            	    // InternalStubbrLang.g:10557:6: ( ( ruleOpOr ) )
            	    // InternalStubbrLang.g:10558:7: ( ruleOpOr )
            	    {
            	    // InternalStubbrLang.g:10558:7: ( ruleOpOr )
            	    // InternalStubbrLang.g:10559:8: ruleOpOr
            	    {
            	    if ( state.backtracking==0 ) {

            	      								if (current==null) {
            	      									current = createModelElement(grammarAccess.getXOrExpressionRule());
            	      								}
            	      							
            	    }
            	    if ( state.backtracking==0 ) {

            	      								newCompositeNode(grammarAccess.getXOrExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0());
            	      							
            	    }
            	    pushFollow(FOLLOW_218);
            	    ruleOpOr();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      								afterParserOrEnumRuleCall();
            	      							
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // InternalStubbrLang.g:10575:4: ( (lv_rightOperand_3_0= ruleXAndExpression ) )
            	    // InternalStubbrLang.g:10576:5: (lv_rightOperand_3_0= ruleXAndExpression )
            	    {
            	    // InternalStubbrLang.g:10576:5: (lv_rightOperand_3_0= ruleXAndExpression )
            	    // InternalStubbrLang.g:10577:6: lv_rightOperand_3_0= ruleXAndExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getXOrExpressionAccess().getRightOperandXAndExpressionParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_223);
            	    lv_rightOperand_3_0=ruleXAndExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getXOrExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"rightOperand",
            	      							lv_rightOperand_3_0,
            	      							"org.eclipse.xtext.xbase.Xbase.XAndExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop295;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXOrExpression"


    // $ANTLR start "entryRuleOpOr"
    // InternalStubbrLang.g:10599:1: entryRuleOpOr returns [String current=null] : iv_ruleOpOr= ruleOpOr EOF ;
    public final String entryRuleOpOr() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpOr = null;


        try {
            // InternalStubbrLang.g:10599:44: (iv_ruleOpOr= ruleOpOr EOF )
            // InternalStubbrLang.g:10600:2: iv_ruleOpOr= ruleOpOr EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpOrRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpOr=ruleOpOr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpOr.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpOr"


    // $ANTLR start "ruleOpOr"
    // InternalStubbrLang.g:10606:1: ruleOpOr returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= '||' ;
    public final AntlrDatatypeRuleToken ruleOpOr() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalStubbrLang.g:10612:2: (kw= '||' )
            // InternalStubbrLang.g:10613:2: kw= '||'
            {
            kw=(Token)match(input,165,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(kw);
              		newLeafNode(kw, grammarAccess.getOpOrAccess().getVerticalLineVerticalLineKeyword());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpOr"


    // $ANTLR start "entryRuleXAndExpression"
    // InternalStubbrLang.g:10621:1: entryRuleXAndExpression returns [EObject current=null] : iv_ruleXAndExpression= ruleXAndExpression EOF ;
    public final EObject entryRuleXAndExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXAndExpression = null;


        try {
            // InternalStubbrLang.g:10621:55: (iv_ruleXAndExpression= ruleXAndExpression EOF )
            // InternalStubbrLang.g:10622:2: iv_ruleXAndExpression= ruleXAndExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXAndExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXAndExpression=ruleXAndExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXAndExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXAndExpression"


    // $ANTLR start "ruleXAndExpression"
    // InternalStubbrLang.g:10628:1: ruleXAndExpression returns [EObject current=null] : (this_XEqualityExpression_0= ruleXEqualityExpression ( ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXEqualityExpression ) ) )* ) ;
    public final EObject ruleXAndExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XEqualityExpression_0 = null;

        EObject lv_rightOperand_3_0 = null;



        	enterRule();

        try {
            // InternalStubbrLang.g:10634:2: ( (this_XEqualityExpression_0= ruleXEqualityExpression ( ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXEqualityExpression ) ) )* ) )
            // InternalStubbrLang.g:10635:2: (this_XEqualityExpression_0= ruleXEqualityExpression ( ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXEqualityExpression ) ) )* )
            {
            // InternalStubbrLang.g:10635:2: (this_XEqualityExpression_0= ruleXEqualityExpression ( ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXEqualityExpression ) ) )* )
            // InternalStubbrLang.g:10636:3: this_XEqualityExpression_0= ruleXEqualityExpression ( ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXEqualityExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getXAndExpressionAccess().getXEqualityExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_224);
            this_XEqualityExpression_0=ruleXEqualityExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_XEqualityExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalStubbrLang.g:10644:3: ( ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXEqualityExpression ) ) )*
            loop296:
            do {
                int alt296=2;
                int LA296_0 = input.LA(1);

                if ( (LA296_0==166) ) {
                    int LA296_2 = input.LA(2);

                    if ( (synpred3_InternalStubbrLang()) ) {
                        alt296=1;
                    }


                }


                switch (alt296) {
            	case 1 :
            	    // InternalStubbrLang.g:10645:4: ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXEqualityExpression ) )
            	    {
            	    // InternalStubbrLang.g:10645:4: ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) )
            	    // InternalStubbrLang.g:10646:5: ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) )
            	    {
            	    // InternalStubbrLang.g:10656:5: ( () ( ( ruleOpAnd ) ) )
            	    // InternalStubbrLang.g:10657:6: () ( ( ruleOpAnd ) )
            	    {
            	    // InternalStubbrLang.g:10657:6: ()
            	    // InternalStubbrLang.g:10658:7: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      							current = forceCreateModelElementAndSet(
            	      								grammarAccess.getXAndExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            	      								current);
            	      						
            	    }

            	    }

            	    // InternalStubbrLang.g:10664:6: ( ( ruleOpAnd ) )
            	    // InternalStubbrLang.g:10665:7: ( ruleOpAnd )
            	    {
            	    // InternalStubbrLang.g:10665:7: ( ruleOpAnd )
            	    // InternalStubbrLang.g:10666:8: ruleOpAnd
            	    {
            	    if ( state.backtracking==0 ) {

            	      								if (current==null) {
            	      									current = createModelElement(grammarAccess.getXAndExpressionRule());
            	      								}
            	      							
            	    }
            	    if ( state.backtracking==0 ) {

            	      								newCompositeNode(grammarAccess.getXAndExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0());
            	      							
            	    }
            	    pushFollow(FOLLOW_218);
            	    ruleOpAnd();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      								afterParserOrEnumRuleCall();
            	      							
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // InternalStubbrLang.g:10682:4: ( (lv_rightOperand_3_0= ruleXEqualityExpression ) )
            	    // InternalStubbrLang.g:10683:5: (lv_rightOperand_3_0= ruleXEqualityExpression )
            	    {
            	    // InternalStubbrLang.g:10683:5: (lv_rightOperand_3_0= ruleXEqualityExpression )
            	    // InternalStubbrLang.g:10684:6: lv_rightOperand_3_0= ruleXEqualityExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getXAndExpressionAccess().getRightOperandXEqualityExpressionParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_224);
            	    lv_rightOperand_3_0=ruleXEqualityExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getXAndExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"rightOperand",
            	      							lv_rightOperand_3_0,
            	      							"org.eclipse.xtext.xbase.Xbase.XEqualityExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop296;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXAndExpression"


    // $ANTLR start "entryRuleOpAnd"
    // InternalStubbrLang.g:10706:1: entryRuleOpAnd returns [String current=null] : iv_ruleOpAnd= ruleOpAnd EOF ;
    public final String entryRuleOpAnd() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpAnd = null;


        try {
            // InternalStubbrLang.g:10706:45: (iv_ruleOpAnd= ruleOpAnd EOF )
            // InternalStubbrLang.g:10707:2: iv_ruleOpAnd= ruleOpAnd EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpAndRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpAnd=ruleOpAnd();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpAnd.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpAnd"


    // $ANTLR start "ruleOpAnd"
    // InternalStubbrLang.g:10713:1: ruleOpAnd returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= '&&' ;
    public final AntlrDatatypeRuleToken ruleOpAnd() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalStubbrLang.g:10719:2: (kw= '&&' )
            // InternalStubbrLang.g:10720:2: kw= '&&'
            {
            kw=(Token)match(input,166,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(kw);
              		newLeafNode(kw, grammarAccess.getOpAndAccess().getAmpersandAmpersandKeyword());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpAnd"


    // $ANTLR start "entryRuleXEqualityExpression"
    // InternalStubbrLang.g:10728:1: entryRuleXEqualityExpression returns [EObject current=null] : iv_ruleXEqualityExpression= ruleXEqualityExpression EOF ;
    public final EObject entryRuleXEqualityExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXEqualityExpression = null;


        try {
            // InternalStubbrLang.g:10728:60: (iv_ruleXEqualityExpression= ruleXEqualityExpression EOF )
            // InternalStubbrLang.g:10729:2: iv_ruleXEqualityExpression= ruleXEqualityExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXEqualityExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXEqualityExpression=ruleXEqualityExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXEqualityExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXEqualityExpression"


    // $ANTLR start "ruleXEqualityExpression"
    // InternalStubbrLang.g:10735:1: ruleXEqualityExpression returns [EObject current=null] : (this_XRelationalExpression_0= ruleXRelationalExpression ( ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleXRelationalExpression ) ) )* ) ;
    public final EObject ruleXEqualityExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XRelationalExpression_0 = null;

        EObject lv_rightOperand_3_0 = null;



        	enterRule();

        try {
            // InternalStubbrLang.g:10741:2: ( (this_XRelationalExpression_0= ruleXRelationalExpression ( ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleXRelationalExpression ) ) )* ) )
            // InternalStubbrLang.g:10742:2: (this_XRelationalExpression_0= ruleXRelationalExpression ( ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleXRelationalExpression ) ) )* )
            {
            // InternalStubbrLang.g:10742:2: (this_XRelationalExpression_0= ruleXRelationalExpression ( ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleXRelationalExpression ) ) )* )
            // InternalStubbrLang.g:10743:3: this_XRelationalExpression_0= ruleXRelationalExpression ( ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleXRelationalExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getXEqualityExpressionAccess().getXRelationalExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_225);
            this_XRelationalExpression_0=ruleXRelationalExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_XRelationalExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalStubbrLang.g:10751:3: ( ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleXRelationalExpression ) ) )*
            loop297:
            do {
                int alt297=2;
                switch ( input.LA(1) ) {
                case 167:
                    {
                    int LA297_2 = input.LA(2);

                    if ( (synpred4_InternalStubbrLang()) ) {
                        alt297=1;
                    }


                    }
                    break;
                case 168:
                    {
                    int LA297_3 = input.LA(2);

                    if ( (synpred4_InternalStubbrLang()) ) {
                        alt297=1;
                    }


                    }
                    break;
                case 169:
                    {
                    int LA297_4 = input.LA(2);

                    if ( (synpred4_InternalStubbrLang()) ) {
                        alt297=1;
                    }


                    }
                    break;
                case 170:
                    {
                    int LA297_5 = input.LA(2);

                    if ( (synpred4_InternalStubbrLang()) ) {
                        alt297=1;
                    }


                    }
                    break;

                }

                switch (alt297) {
            	case 1 :
            	    // InternalStubbrLang.g:10752:4: ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleXRelationalExpression ) )
            	    {
            	    // InternalStubbrLang.g:10752:4: ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) )
            	    // InternalStubbrLang.g:10753:5: ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) )
            	    {
            	    // InternalStubbrLang.g:10763:5: ( () ( ( ruleOpEquality ) ) )
            	    // InternalStubbrLang.g:10764:6: () ( ( ruleOpEquality ) )
            	    {
            	    // InternalStubbrLang.g:10764:6: ()
            	    // InternalStubbrLang.g:10765:7: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      							current = forceCreateModelElementAndSet(
            	      								grammarAccess.getXEqualityExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            	      								current);
            	      						
            	    }

            	    }

            	    // InternalStubbrLang.g:10771:6: ( ( ruleOpEquality ) )
            	    // InternalStubbrLang.g:10772:7: ( ruleOpEquality )
            	    {
            	    // InternalStubbrLang.g:10772:7: ( ruleOpEquality )
            	    // InternalStubbrLang.g:10773:8: ruleOpEquality
            	    {
            	    if ( state.backtracking==0 ) {

            	      								if (current==null) {
            	      									current = createModelElement(grammarAccess.getXEqualityExpressionRule());
            	      								}
            	      							
            	    }
            	    if ( state.backtracking==0 ) {

            	      								newCompositeNode(grammarAccess.getXEqualityExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0());
            	      							
            	    }
            	    pushFollow(FOLLOW_218);
            	    ruleOpEquality();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      								afterParserOrEnumRuleCall();
            	      							
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // InternalStubbrLang.g:10789:4: ( (lv_rightOperand_3_0= ruleXRelationalExpression ) )
            	    // InternalStubbrLang.g:10790:5: (lv_rightOperand_3_0= ruleXRelationalExpression )
            	    {
            	    // InternalStubbrLang.g:10790:5: (lv_rightOperand_3_0= ruleXRelationalExpression )
            	    // InternalStubbrLang.g:10791:6: lv_rightOperand_3_0= ruleXRelationalExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getXEqualityExpressionAccess().getRightOperandXRelationalExpressionParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_225);
            	    lv_rightOperand_3_0=ruleXRelationalExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getXEqualityExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"rightOperand",
            	      							lv_rightOperand_3_0,
            	      							"org.eclipse.xtext.xbase.Xbase.XRelationalExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop297;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXEqualityExpression"


    // $ANTLR start "entryRuleOpEquality"
    // InternalStubbrLang.g:10813:1: entryRuleOpEquality returns [String current=null] : iv_ruleOpEquality= ruleOpEquality EOF ;
    public final String entryRuleOpEquality() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpEquality = null;


        try {
            // InternalStubbrLang.g:10813:50: (iv_ruleOpEquality= ruleOpEquality EOF )
            // InternalStubbrLang.g:10814:2: iv_ruleOpEquality= ruleOpEquality EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpEqualityRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpEquality=ruleOpEquality();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpEquality.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpEquality"


    // $ANTLR start "ruleOpEquality"
    // InternalStubbrLang.g:10820:1: ruleOpEquality returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '==' | kw= '!=' | kw= '===' | kw= '!==' ) ;
    public final AntlrDatatypeRuleToken ruleOpEquality() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalStubbrLang.g:10826:2: ( (kw= '==' | kw= '!=' | kw= '===' | kw= '!==' ) )
            // InternalStubbrLang.g:10827:2: (kw= '==' | kw= '!=' | kw= '===' | kw= '!==' )
            {
            // InternalStubbrLang.g:10827:2: (kw= '==' | kw= '!=' | kw= '===' | kw= '!==' )
            int alt298=4;
            switch ( input.LA(1) ) {
            case 167:
                {
                alt298=1;
                }
                break;
            case 168:
                {
                alt298=2;
                }
                break;
            case 169:
                {
                alt298=3;
                }
                break;
            case 170:
                {
                alt298=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 298, 0, input);

                throw nvae;
            }

            switch (alt298) {
                case 1 :
                    // InternalStubbrLang.g:10828:3: kw= '=='
                    {
                    kw=(Token)match(input,167,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpEqualityAccess().getEqualsSignEqualsSignKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalStubbrLang.g:10834:3: kw= '!='
                    {
                    kw=(Token)match(input,168,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpEqualityAccess().getExclamationMarkEqualsSignKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalStubbrLang.g:10840:3: kw= '==='
                    {
                    kw=(Token)match(input,169,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpEqualityAccess().getEqualsSignEqualsSignEqualsSignKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalStubbrLang.g:10846:3: kw= '!=='
                    {
                    kw=(Token)match(input,170,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpEqualityAccess().getExclamationMarkEqualsSignEqualsSignKeyword_3());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpEquality"


    // $ANTLR start "entryRuleXRelationalExpression"
    // InternalStubbrLang.g:10855:1: entryRuleXRelationalExpression returns [EObject current=null] : iv_ruleXRelationalExpression= ruleXRelationalExpression EOF ;
    public final EObject entryRuleXRelationalExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXRelationalExpression = null;


        try {
            // InternalStubbrLang.g:10855:62: (iv_ruleXRelationalExpression= ruleXRelationalExpression EOF )
            // InternalStubbrLang.g:10856:2: iv_ruleXRelationalExpression= ruleXRelationalExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXRelationalExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXRelationalExpression=ruleXRelationalExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXRelationalExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXRelationalExpression"


    // $ANTLR start "ruleXRelationalExpression"
    // InternalStubbrLang.g:10862:1: ruleXRelationalExpression returns [EObject current=null] : (this_XOtherOperatorExpression_0= ruleXOtherOperatorExpression ( ( ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) ) | ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) ) ) )* ) ;
    public final EObject ruleXRelationalExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject this_XOtherOperatorExpression_0 = null;

        EObject lv_type_3_0 = null;

        EObject lv_rightOperand_6_0 = null;



        	enterRule();

        try {
            // InternalStubbrLang.g:10868:2: ( (this_XOtherOperatorExpression_0= ruleXOtherOperatorExpression ( ( ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) ) | ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) ) ) )* ) )
            // InternalStubbrLang.g:10869:2: (this_XOtherOperatorExpression_0= ruleXOtherOperatorExpression ( ( ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) ) | ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) ) ) )* )
            {
            // InternalStubbrLang.g:10869:2: (this_XOtherOperatorExpression_0= ruleXOtherOperatorExpression ( ( ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) ) | ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) ) ) )* )
            // InternalStubbrLang.g:10870:3: this_XOtherOperatorExpression_0= ruleXOtherOperatorExpression ( ( ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) ) | ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getXRelationalExpressionAccess().getXOtherOperatorExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_226);
            this_XOtherOperatorExpression_0=ruleXOtherOperatorExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_XOtherOperatorExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalStubbrLang.g:10878:3: ( ( ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) ) | ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) ) ) )*
            loop299:
            do {
                int alt299=3;
                switch ( input.LA(1) ) {
                case 162:
                    {
                    int LA299_2 = input.LA(2);

                    if ( (synpred6_InternalStubbrLang()) ) {
                        alt299=2;
                    }


                    }
                    break;
                case 163:
                    {
                    int LA299_3 = input.LA(2);

                    if ( (synpred6_InternalStubbrLang()) ) {
                        alt299=2;
                    }


                    }
                    break;
                case 171:
                    {
                    int LA299_4 = input.LA(2);

                    if ( (synpred5_InternalStubbrLang()) ) {
                        alt299=1;
                    }


                    }
                    break;
                case 164:
                    {
                    int LA299_5 = input.LA(2);

                    if ( (synpred6_InternalStubbrLang()) ) {
                        alt299=2;
                    }


                    }
                    break;

                }

                switch (alt299) {
            	case 1 :
            	    // InternalStubbrLang.g:10879:4: ( ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) )
            	    {
            	    // InternalStubbrLang.g:10879:4: ( ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) )
            	    // InternalStubbrLang.g:10880:5: ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) )
            	    {
            	    // InternalStubbrLang.g:10880:5: ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) )
            	    // InternalStubbrLang.g:10881:6: ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' )
            	    {
            	    // InternalStubbrLang.g:10887:6: ( () otherlv_2= 'instanceof' )
            	    // InternalStubbrLang.g:10888:7: () otherlv_2= 'instanceof'
            	    {
            	    // InternalStubbrLang.g:10888:7: ()
            	    // InternalStubbrLang.g:10889:8: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      								current = forceCreateModelElementAndSet(
            	      									grammarAccess.getXRelationalExpressionAccess().getXInstanceOfExpressionExpressionAction_1_0_0_0_0(),
            	      									current);
            	      							
            	    }

            	    }

            	    otherlv_2=(Token)match(input,171,FOLLOW_52); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							newLeafNode(otherlv_2, grammarAccess.getXRelationalExpressionAccess().getInstanceofKeyword_1_0_0_0_1());
            	      						
            	    }

            	    }


            	    }

            	    // InternalStubbrLang.g:10901:5: ( (lv_type_3_0= ruleJvmTypeReference ) )
            	    // InternalStubbrLang.g:10902:6: (lv_type_3_0= ruleJvmTypeReference )
            	    {
            	    // InternalStubbrLang.g:10902:6: (lv_type_3_0= ruleJvmTypeReference )
            	    // InternalStubbrLang.g:10903:7: lv_type_3_0= ruleJvmTypeReference
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getXRelationalExpressionAccess().getTypeJvmTypeReferenceParserRuleCall_1_0_1_0());
            	      						
            	    }
            	    pushFollow(FOLLOW_226);
            	    lv_type_3_0=ruleJvmTypeReference();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getXRelationalExpressionRule());
            	      							}
            	      							set(
            	      								current,
            	      								"type",
            	      								lv_type_3_0,
            	      								"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalStubbrLang.g:10922:4: ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) ) )
            	    {
            	    // InternalStubbrLang.g:10922:4: ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) ) )
            	    // InternalStubbrLang.g:10923:5: ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) )
            	    {
            	    // InternalStubbrLang.g:10923:5: ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) )
            	    // InternalStubbrLang.g:10924:6: ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) )
            	    {
            	    // InternalStubbrLang.g:10934:6: ( () ( ( ruleOpCompare ) ) )
            	    // InternalStubbrLang.g:10935:7: () ( ( ruleOpCompare ) )
            	    {
            	    // InternalStubbrLang.g:10935:7: ()
            	    // InternalStubbrLang.g:10936:8: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      								current = forceCreateModelElementAndSet(
            	      									grammarAccess.getXRelationalExpressionAccess().getXBinaryOperationLeftOperandAction_1_1_0_0_0(),
            	      									current);
            	      							
            	    }

            	    }

            	    // InternalStubbrLang.g:10942:7: ( ( ruleOpCompare ) )
            	    // InternalStubbrLang.g:10943:8: ( ruleOpCompare )
            	    {
            	    // InternalStubbrLang.g:10943:8: ( ruleOpCompare )
            	    // InternalStubbrLang.g:10944:9: ruleOpCompare
            	    {
            	    if ( state.backtracking==0 ) {

            	      									if (current==null) {
            	      										current = createModelElement(grammarAccess.getXRelationalExpressionRule());
            	      									}
            	      								
            	    }
            	    if ( state.backtracking==0 ) {

            	      									newCompositeNode(grammarAccess.getXRelationalExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_1_0_0_1_0());
            	      								
            	    }
            	    pushFollow(FOLLOW_218);
            	    ruleOpCompare();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									afterParserOrEnumRuleCall();
            	      								
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // InternalStubbrLang.g:10960:5: ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) )
            	    // InternalStubbrLang.g:10961:6: (lv_rightOperand_6_0= ruleXOtherOperatorExpression )
            	    {
            	    // InternalStubbrLang.g:10961:6: (lv_rightOperand_6_0= ruleXOtherOperatorExpression )
            	    // InternalStubbrLang.g:10962:7: lv_rightOperand_6_0= ruleXOtherOperatorExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getXRelationalExpressionAccess().getRightOperandXOtherOperatorExpressionParserRuleCall_1_1_1_0());
            	      						
            	    }
            	    pushFollow(FOLLOW_226);
            	    lv_rightOperand_6_0=ruleXOtherOperatorExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getXRelationalExpressionRule());
            	      							}
            	      							set(
            	      								current,
            	      								"rightOperand",
            	      								lv_rightOperand_6_0,
            	      								"org.eclipse.xtext.xbase.Xbase.XOtherOperatorExpression");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop299;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXRelationalExpression"


    // $ANTLR start "entryRuleOpCompare"
    // InternalStubbrLang.g:10985:1: entryRuleOpCompare returns [String current=null] : iv_ruleOpCompare= ruleOpCompare EOF ;
    public final String entryRuleOpCompare() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpCompare = null;


        try {
            // InternalStubbrLang.g:10985:49: (iv_ruleOpCompare= ruleOpCompare EOF )
            // InternalStubbrLang.g:10986:2: iv_ruleOpCompare= ruleOpCompare EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpCompareRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpCompare=ruleOpCompare();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpCompare.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpCompare"


    // $ANTLR start "ruleOpCompare"
    // InternalStubbrLang.g:10992:1: ruleOpCompare returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '>=' | (kw= '<' kw= '=' ) | kw= '>' | kw= '<' ) ;
    public final AntlrDatatypeRuleToken ruleOpCompare() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalStubbrLang.g:10998:2: ( (kw= '>=' | (kw= '<' kw= '=' ) | kw= '>' | kw= '<' ) )
            // InternalStubbrLang.g:10999:2: (kw= '>=' | (kw= '<' kw= '=' ) | kw= '>' | kw= '<' )
            {
            // InternalStubbrLang.g:10999:2: (kw= '>=' | (kw= '<' kw= '=' ) | kw= '>' | kw= '<' )
            int alt300=4;
            switch ( input.LA(1) ) {
            case 164:
                {
                alt300=1;
                }
                break;
            case 162:
                {
                int LA300_2 = input.LA(2);

                if ( (LA300_2==EOF||(LA300_2>=RULE_STRING && LA300_2<=RULE_ID)||(LA300_2>=RULE_INT && LA300_2<=RULE_DECIMAL)||LA300_2==16||LA300_2==69||LA300_2==100||LA300_2==162||(LA300_2>=178 && LA300_2<=179)||LA300_2==184||LA300_2==191||(LA300_2>=193 && LA300_2<=194)||LA300_2==198||LA300_2==200||(LA300_2>=203 && LA300_2<=204)||(LA300_2>=207 && LA300_2<=218)||LA300_2==220) ) {
                    alt300=4;
                }
                else if ( (LA300_2==156) ) {
                    alt300=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 300, 2, input);

                    throw nvae;
                }
                }
                break;
            case 163:
                {
                alt300=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 300, 0, input);

                throw nvae;
            }

            switch (alt300) {
                case 1 :
                    // InternalStubbrLang.g:11000:3: kw= '>='
                    {
                    kw=(Token)match(input,164,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpCompareAccess().getGreaterThanSignEqualsSignKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalStubbrLang.g:11006:3: (kw= '<' kw= '=' )
                    {
                    // InternalStubbrLang.g:11006:3: (kw= '<' kw= '=' )
                    // InternalStubbrLang.g:11007:4: kw= '<' kw= '='
                    {
                    kw=(Token)match(input,162,FOLLOW_217); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getOpCompareAccess().getLessThanSignKeyword_1_0());
                      			
                    }
                    kw=(Token)match(input,156,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getOpCompareAccess().getEqualsSignKeyword_1_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalStubbrLang.g:11019:3: kw= '>'
                    {
                    kw=(Token)match(input,163,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpCompareAccess().getGreaterThanSignKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalStubbrLang.g:11025:3: kw= '<'
                    {
                    kw=(Token)match(input,162,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpCompareAccess().getLessThanSignKeyword_3());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpCompare"


    // $ANTLR start "entryRuleXOtherOperatorExpression"
    // InternalStubbrLang.g:11034:1: entryRuleXOtherOperatorExpression returns [EObject current=null] : iv_ruleXOtherOperatorExpression= ruleXOtherOperatorExpression EOF ;
    public final EObject entryRuleXOtherOperatorExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXOtherOperatorExpression = null;


        try {
            // InternalStubbrLang.g:11034:65: (iv_ruleXOtherOperatorExpression= ruleXOtherOperatorExpression EOF )
            // InternalStubbrLang.g:11035:2: iv_ruleXOtherOperatorExpression= ruleXOtherOperatorExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXOtherOperatorExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXOtherOperatorExpression=ruleXOtherOperatorExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXOtherOperatorExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXOtherOperatorExpression"


    // $ANTLR start "ruleXOtherOperatorExpression"
    // InternalStubbrLang.g:11041:1: ruleXOtherOperatorExpression returns [EObject current=null] : (this_XAdditiveExpression_0= ruleXAdditiveExpression ( ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) ) )* ) ;
    public final EObject ruleXOtherOperatorExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XAdditiveExpression_0 = null;

        EObject lv_rightOperand_3_0 = null;



        	enterRule();

        try {
            // InternalStubbrLang.g:11047:2: ( (this_XAdditiveExpression_0= ruleXAdditiveExpression ( ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) ) )* ) )
            // InternalStubbrLang.g:11048:2: (this_XAdditiveExpression_0= ruleXAdditiveExpression ( ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) ) )* )
            {
            // InternalStubbrLang.g:11048:2: (this_XAdditiveExpression_0= ruleXAdditiveExpression ( ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) ) )* )
            // InternalStubbrLang.g:11049:3: this_XAdditiveExpression_0= ruleXAdditiveExpression ( ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getXOtherOperatorExpressionAccess().getXAdditiveExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_227);
            this_XAdditiveExpression_0=ruleXAdditiveExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_XAdditiveExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalStubbrLang.g:11057:3: ( ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) ) )*
            loop301:
            do {
                int alt301=2;
                alt301 = dfa301.predict(input);
                switch (alt301) {
            	case 1 :
            	    // InternalStubbrLang.g:11058:4: ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) )
            	    {
            	    // InternalStubbrLang.g:11058:4: ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) )
            	    // InternalStubbrLang.g:11059:5: ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) )
            	    {
            	    // InternalStubbrLang.g:11069:5: ( () ( ( ruleOpOther ) ) )
            	    // InternalStubbrLang.g:11070:6: () ( ( ruleOpOther ) )
            	    {
            	    // InternalStubbrLang.g:11070:6: ()
            	    // InternalStubbrLang.g:11071:7: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      							current = forceCreateModelElementAndSet(
            	      								grammarAccess.getXOtherOperatorExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            	      								current);
            	      						
            	    }

            	    }

            	    // InternalStubbrLang.g:11077:6: ( ( ruleOpOther ) )
            	    // InternalStubbrLang.g:11078:7: ( ruleOpOther )
            	    {
            	    // InternalStubbrLang.g:11078:7: ( ruleOpOther )
            	    // InternalStubbrLang.g:11079:8: ruleOpOther
            	    {
            	    if ( state.backtracking==0 ) {

            	      								if (current==null) {
            	      									current = createModelElement(grammarAccess.getXOtherOperatorExpressionRule());
            	      								}
            	      							
            	    }
            	    if ( state.backtracking==0 ) {

            	      								newCompositeNode(grammarAccess.getXOtherOperatorExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0());
            	      							
            	    }
            	    pushFollow(FOLLOW_218);
            	    ruleOpOther();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      								afterParserOrEnumRuleCall();
            	      							
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // InternalStubbrLang.g:11095:4: ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) )
            	    // InternalStubbrLang.g:11096:5: (lv_rightOperand_3_0= ruleXAdditiveExpression )
            	    {
            	    // InternalStubbrLang.g:11096:5: (lv_rightOperand_3_0= ruleXAdditiveExpression )
            	    // InternalStubbrLang.g:11097:6: lv_rightOperand_3_0= ruleXAdditiveExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getXOtherOperatorExpressionAccess().getRightOperandXAdditiveExpressionParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_227);
            	    lv_rightOperand_3_0=ruleXAdditiveExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getXOtherOperatorExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"rightOperand",
            	      							lv_rightOperand_3_0,
            	      							"org.eclipse.xtext.xbase.Xbase.XAdditiveExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop301;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXOtherOperatorExpression"


    // $ANTLR start "entryRuleOpOther"
    // InternalStubbrLang.g:11119:1: entryRuleOpOther returns [String current=null] : iv_ruleOpOther= ruleOpOther EOF ;
    public final String entryRuleOpOther() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpOther = null;


        try {
            // InternalStubbrLang.g:11119:47: (iv_ruleOpOther= ruleOpOther EOF )
            // InternalStubbrLang.g:11120:2: iv_ruleOpOther= ruleOpOther EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpOtherRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpOther=ruleOpOther();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpOther.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpOther"


    // $ANTLR start "ruleOpOther"
    // InternalStubbrLang.g:11126:1: ruleOpOther returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '->' | kw= '..<' | (kw= '>' kw= '..' ) | kw= '..' | kw= '=>' | (kw= '>' ( ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) ) | kw= '>' ) ) | (kw= '<' ( ( ( ( '<' '<' ) )=> (kw= '<' kw= '<' ) ) | kw= '<' | kw= '=>' ) ) | kw= '<>' | kw= '?:' ) ;
    public final AntlrDatatypeRuleToken ruleOpOther() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalStubbrLang.g:11132:2: ( (kw= '->' | kw= '..<' | (kw= '>' kw= '..' ) | kw= '..' | kw= '=>' | (kw= '>' ( ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) ) | kw= '>' ) ) | (kw= '<' ( ( ( ( '<' '<' ) )=> (kw= '<' kw= '<' ) ) | kw= '<' | kw= '=>' ) ) | kw= '<>' | kw= '?:' ) )
            // InternalStubbrLang.g:11133:2: (kw= '->' | kw= '..<' | (kw= '>' kw= '..' ) | kw= '..' | kw= '=>' | (kw= '>' ( ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) ) | kw= '>' ) ) | (kw= '<' ( ( ( ( '<' '<' ) )=> (kw= '<' kw= '<' ) ) | kw= '<' | kw= '=>' ) ) | kw= '<>' | kw= '?:' )
            {
            // InternalStubbrLang.g:11133:2: (kw= '->' | kw= '..<' | (kw= '>' kw= '..' ) | kw= '..' | kw= '=>' | (kw= '>' ( ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) ) | kw= '>' ) ) | (kw= '<' ( ( ( ( '<' '<' ) )=> (kw= '<' kw= '<' ) ) | kw= '<' | kw= '=>' ) ) | kw= '<>' | kw= '?:' )
            int alt304=9;
            alt304 = dfa304.predict(input);
            switch (alt304) {
                case 1 :
                    // InternalStubbrLang.g:11134:3: kw= '->'
                    {
                    kw=(Token)match(input,172,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpOtherAccess().getHyphenMinusGreaterThanSignKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalStubbrLang.g:11140:3: kw= '..<'
                    {
                    kw=(Token)match(input,173,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpOtherAccess().getFullStopFullStopLessThanSignKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalStubbrLang.g:11146:3: (kw= '>' kw= '..' )
                    {
                    // InternalStubbrLang.g:11146:3: (kw= '>' kw= '..' )
                    // InternalStubbrLang.g:11147:4: kw= '>' kw= '..'
                    {
                    kw=(Token)match(input,163,FOLLOW_228); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_2_0());
                      			
                    }
                    kw=(Token)match(input,174,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getOpOtherAccess().getFullStopFullStopKeyword_2_1());
                      			
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalStubbrLang.g:11159:3: kw= '..'
                    {
                    kw=(Token)match(input,174,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpOtherAccess().getFullStopFullStopKeyword_3());
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalStubbrLang.g:11165:3: kw= '=>'
                    {
                    kw=(Token)match(input,175,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpOtherAccess().getEqualsSignGreaterThanSignKeyword_4());
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalStubbrLang.g:11171:3: (kw= '>' ( ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) ) | kw= '>' ) )
                    {
                    // InternalStubbrLang.g:11171:3: (kw= '>' ( ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) ) | kw= '>' ) )
                    // InternalStubbrLang.g:11172:4: kw= '>' ( ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) ) | kw= '>' )
                    {
                    kw=(Token)match(input,163,FOLLOW_229); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_5_0());
                      			
                    }
                    // InternalStubbrLang.g:11177:4: ( ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) ) | kw= '>' )
                    int alt302=2;
                    int LA302_0 = input.LA(1);

                    if ( (LA302_0==163) ) {
                        int LA302_1 = input.LA(2);

                        if ( (LA302_1==EOF||(LA302_1>=RULE_STRING && LA302_1<=RULE_ID)||(LA302_1>=RULE_INT && LA302_1<=RULE_DECIMAL)||LA302_1==16||LA302_1==69||LA302_1==100||LA302_1==162||(LA302_1>=178 && LA302_1<=179)||LA302_1==184||LA302_1==191||(LA302_1>=193 && LA302_1<=194)||LA302_1==198||LA302_1==200||(LA302_1>=203 && LA302_1<=204)||(LA302_1>=207 && LA302_1<=218)||LA302_1==220) ) {
                            alt302=2;
                        }
                        else if ( (LA302_1==163) && (synpred8_InternalStubbrLang())) {
                            alt302=1;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 302, 1, input);

                            throw nvae;
                        }
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 302, 0, input);

                        throw nvae;
                    }
                    switch (alt302) {
                        case 1 :
                            // InternalStubbrLang.g:11178:5: ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) )
                            {
                            // InternalStubbrLang.g:11178:5: ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) )
                            // InternalStubbrLang.g:11179:6: ( ( '>' '>' ) )=> (kw= '>' kw= '>' )
                            {
                            // InternalStubbrLang.g:11184:6: (kw= '>' kw= '>' )
                            // InternalStubbrLang.g:11185:7: kw= '>' kw= '>'
                            {
                            kw=(Token)match(input,163,FOLLOW_229); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							current.merge(kw);
                              							newLeafNode(kw, grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_5_1_0_0_0());
                              						
                            }
                            kw=(Token)match(input,163,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							current.merge(kw);
                              							newLeafNode(kw, grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_5_1_0_0_1());
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalStubbrLang.g:11198:5: kw= '>'
                            {
                            kw=(Token)match(input,163,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(kw);
                              					newLeafNode(kw, grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_5_1_1());
                              				
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 7 :
                    // InternalStubbrLang.g:11206:3: (kw= '<' ( ( ( ( '<' '<' ) )=> (kw= '<' kw= '<' ) ) | kw= '<' | kw= '=>' ) )
                    {
                    // InternalStubbrLang.g:11206:3: (kw= '<' ( ( ( ( '<' '<' ) )=> (kw= '<' kw= '<' ) ) | kw= '<' | kw= '=>' ) )
                    // InternalStubbrLang.g:11207:4: kw= '<' ( ( ( ( '<' '<' ) )=> (kw= '<' kw= '<' ) ) | kw= '<' | kw= '=>' )
                    {
                    kw=(Token)match(input,162,FOLLOW_230); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getOpOtherAccess().getLessThanSignKeyword_6_0());
                      			
                    }
                    // InternalStubbrLang.g:11212:4: ( ( ( ( '<' '<' ) )=> (kw= '<' kw= '<' ) ) | kw= '<' | kw= '=>' )
                    int alt303=3;
                    int LA303_0 = input.LA(1);

                    if ( (LA303_0==162) ) {
                        int LA303_1 = input.LA(2);

                        if ( (synpred9_InternalStubbrLang()) ) {
                            alt303=1;
                        }
                        else if ( (true) ) {
                            alt303=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 303, 1, input);

                            throw nvae;
                        }
                    }
                    else if ( (LA303_0==175) ) {
                        alt303=3;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 303, 0, input);

                        throw nvae;
                    }
                    switch (alt303) {
                        case 1 :
                            // InternalStubbrLang.g:11213:5: ( ( ( '<' '<' ) )=> (kw= '<' kw= '<' ) )
                            {
                            // InternalStubbrLang.g:11213:5: ( ( ( '<' '<' ) )=> (kw= '<' kw= '<' ) )
                            // InternalStubbrLang.g:11214:6: ( ( '<' '<' ) )=> (kw= '<' kw= '<' )
                            {
                            // InternalStubbrLang.g:11219:6: (kw= '<' kw= '<' )
                            // InternalStubbrLang.g:11220:7: kw= '<' kw= '<'
                            {
                            kw=(Token)match(input,162,FOLLOW_220); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							current.merge(kw);
                              							newLeafNode(kw, grammarAccess.getOpOtherAccess().getLessThanSignKeyword_6_1_0_0_0());
                              						
                            }
                            kw=(Token)match(input,162,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							current.merge(kw);
                              							newLeafNode(kw, grammarAccess.getOpOtherAccess().getLessThanSignKeyword_6_1_0_0_1());
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalStubbrLang.g:11233:5: kw= '<'
                            {
                            kw=(Token)match(input,162,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(kw);
                              					newLeafNode(kw, grammarAccess.getOpOtherAccess().getLessThanSignKeyword_6_1_1());
                              				
                            }

                            }
                            break;
                        case 3 :
                            // InternalStubbrLang.g:11239:5: kw= '=>'
                            {
                            kw=(Token)match(input,175,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(kw);
                              					newLeafNode(kw, grammarAccess.getOpOtherAccess().getEqualsSignGreaterThanSignKeyword_6_1_2());
                              				
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 8 :
                    // InternalStubbrLang.g:11247:3: kw= '<>'
                    {
                    kw=(Token)match(input,176,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpOtherAccess().getLessThanSignGreaterThanSignKeyword_7());
                      		
                    }

                    }
                    break;
                case 9 :
                    // InternalStubbrLang.g:11253:3: kw= '?:'
                    {
                    kw=(Token)match(input,177,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpOtherAccess().getQuestionMarkColonKeyword_8());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpOther"


    // $ANTLR start "entryRuleXAdditiveExpression"
    // InternalStubbrLang.g:11262:1: entryRuleXAdditiveExpression returns [EObject current=null] : iv_ruleXAdditiveExpression= ruleXAdditiveExpression EOF ;
    public final EObject entryRuleXAdditiveExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXAdditiveExpression = null;


        try {
            // InternalStubbrLang.g:11262:60: (iv_ruleXAdditiveExpression= ruleXAdditiveExpression EOF )
            // InternalStubbrLang.g:11263:2: iv_ruleXAdditiveExpression= ruleXAdditiveExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXAdditiveExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXAdditiveExpression=ruleXAdditiveExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXAdditiveExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXAdditiveExpression"


    // $ANTLR start "ruleXAdditiveExpression"
    // InternalStubbrLang.g:11269:1: ruleXAdditiveExpression returns [EObject current=null] : (this_XMultiplicativeExpression_0= ruleXMultiplicativeExpression ( ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) ) )* ) ;
    public final EObject ruleXAdditiveExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XMultiplicativeExpression_0 = null;

        EObject lv_rightOperand_3_0 = null;



        	enterRule();

        try {
            // InternalStubbrLang.g:11275:2: ( (this_XMultiplicativeExpression_0= ruleXMultiplicativeExpression ( ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) ) )* ) )
            // InternalStubbrLang.g:11276:2: (this_XMultiplicativeExpression_0= ruleXMultiplicativeExpression ( ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) ) )* )
            {
            // InternalStubbrLang.g:11276:2: (this_XMultiplicativeExpression_0= ruleXMultiplicativeExpression ( ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) ) )* )
            // InternalStubbrLang.g:11277:3: this_XMultiplicativeExpression_0= ruleXMultiplicativeExpression ( ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getXAdditiveExpressionAccess().getXMultiplicativeExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_231);
            this_XMultiplicativeExpression_0=ruleXMultiplicativeExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_XMultiplicativeExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalStubbrLang.g:11285:3: ( ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) ) )*
            loop305:
            do {
                int alt305=2;
                int LA305_0 = input.LA(1);

                if ( (LA305_0==178) ) {
                    int LA305_2 = input.LA(2);

                    if ( (synpred10_InternalStubbrLang()) ) {
                        alt305=1;
                    }


                }
                else if ( (LA305_0==179) ) {
                    int LA305_3 = input.LA(2);

                    if ( (synpred10_InternalStubbrLang()) ) {
                        alt305=1;
                    }


                }


                switch (alt305) {
            	case 1 :
            	    // InternalStubbrLang.g:11286:4: ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) )
            	    {
            	    // InternalStubbrLang.g:11286:4: ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) )
            	    // InternalStubbrLang.g:11287:5: ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) )
            	    {
            	    // InternalStubbrLang.g:11297:5: ( () ( ( ruleOpAdd ) ) )
            	    // InternalStubbrLang.g:11298:6: () ( ( ruleOpAdd ) )
            	    {
            	    // InternalStubbrLang.g:11298:6: ()
            	    // InternalStubbrLang.g:11299:7: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      							current = forceCreateModelElementAndSet(
            	      								grammarAccess.getXAdditiveExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            	      								current);
            	      						
            	    }

            	    }

            	    // InternalStubbrLang.g:11305:6: ( ( ruleOpAdd ) )
            	    // InternalStubbrLang.g:11306:7: ( ruleOpAdd )
            	    {
            	    // InternalStubbrLang.g:11306:7: ( ruleOpAdd )
            	    // InternalStubbrLang.g:11307:8: ruleOpAdd
            	    {
            	    if ( state.backtracking==0 ) {

            	      								if (current==null) {
            	      									current = createModelElement(grammarAccess.getXAdditiveExpressionRule());
            	      								}
            	      							
            	    }
            	    if ( state.backtracking==0 ) {

            	      								newCompositeNode(grammarAccess.getXAdditiveExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0());
            	      							
            	    }
            	    pushFollow(FOLLOW_218);
            	    ruleOpAdd();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      								afterParserOrEnumRuleCall();
            	      							
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // InternalStubbrLang.g:11323:4: ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) )
            	    // InternalStubbrLang.g:11324:5: (lv_rightOperand_3_0= ruleXMultiplicativeExpression )
            	    {
            	    // InternalStubbrLang.g:11324:5: (lv_rightOperand_3_0= ruleXMultiplicativeExpression )
            	    // InternalStubbrLang.g:11325:6: lv_rightOperand_3_0= ruleXMultiplicativeExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getXAdditiveExpressionAccess().getRightOperandXMultiplicativeExpressionParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_231);
            	    lv_rightOperand_3_0=ruleXMultiplicativeExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getXAdditiveExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"rightOperand",
            	      							lv_rightOperand_3_0,
            	      							"org.eclipse.xtext.xbase.Xbase.XMultiplicativeExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop305;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXAdditiveExpression"


    // $ANTLR start "entryRuleOpAdd"
    // InternalStubbrLang.g:11347:1: entryRuleOpAdd returns [String current=null] : iv_ruleOpAdd= ruleOpAdd EOF ;
    public final String entryRuleOpAdd() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpAdd = null;


        try {
            // InternalStubbrLang.g:11347:45: (iv_ruleOpAdd= ruleOpAdd EOF )
            // InternalStubbrLang.g:11348:2: iv_ruleOpAdd= ruleOpAdd EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpAddRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpAdd=ruleOpAdd();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpAdd.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpAdd"


    // $ANTLR start "ruleOpAdd"
    // InternalStubbrLang.g:11354:1: ruleOpAdd returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '+' | kw= '-' ) ;
    public final AntlrDatatypeRuleToken ruleOpAdd() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalStubbrLang.g:11360:2: ( (kw= '+' | kw= '-' ) )
            // InternalStubbrLang.g:11361:2: (kw= '+' | kw= '-' )
            {
            // InternalStubbrLang.g:11361:2: (kw= '+' | kw= '-' )
            int alt306=2;
            int LA306_0 = input.LA(1);

            if ( (LA306_0==178) ) {
                alt306=1;
            }
            else if ( (LA306_0==179) ) {
                alt306=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 306, 0, input);

                throw nvae;
            }
            switch (alt306) {
                case 1 :
                    // InternalStubbrLang.g:11362:3: kw= '+'
                    {
                    kw=(Token)match(input,178,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpAddAccess().getPlusSignKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalStubbrLang.g:11368:3: kw= '-'
                    {
                    kw=(Token)match(input,179,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpAddAccess().getHyphenMinusKeyword_1());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpAdd"


    // $ANTLR start "entryRuleXMultiplicativeExpression"
    // InternalStubbrLang.g:11377:1: entryRuleXMultiplicativeExpression returns [EObject current=null] : iv_ruleXMultiplicativeExpression= ruleXMultiplicativeExpression EOF ;
    public final EObject entryRuleXMultiplicativeExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXMultiplicativeExpression = null;


        try {
            // InternalStubbrLang.g:11377:66: (iv_ruleXMultiplicativeExpression= ruleXMultiplicativeExpression EOF )
            // InternalStubbrLang.g:11378:2: iv_ruleXMultiplicativeExpression= ruleXMultiplicativeExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXMultiplicativeExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXMultiplicativeExpression=ruleXMultiplicativeExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXMultiplicativeExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXMultiplicativeExpression"


    // $ANTLR start "ruleXMultiplicativeExpression"
    // InternalStubbrLang.g:11384:1: ruleXMultiplicativeExpression returns [EObject current=null] : (this_XUnaryOperation_0= ruleXUnaryOperation ( ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleXUnaryOperation ) ) )* ) ;
    public final EObject ruleXMultiplicativeExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XUnaryOperation_0 = null;

        EObject lv_rightOperand_3_0 = null;



        	enterRule();

        try {
            // InternalStubbrLang.g:11390:2: ( (this_XUnaryOperation_0= ruleXUnaryOperation ( ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleXUnaryOperation ) ) )* ) )
            // InternalStubbrLang.g:11391:2: (this_XUnaryOperation_0= ruleXUnaryOperation ( ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleXUnaryOperation ) ) )* )
            {
            // InternalStubbrLang.g:11391:2: (this_XUnaryOperation_0= ruleXUnaryOperation ( ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleXUnaryOperation ) ) )* )
            // InternalStubbrLang.g:11392:3: this_XUnaryOperation_0= ruleXUnaryOperation ( ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleXUnaryOperation ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getXMultiplicativeExpressionAccess().getXUnaryOperationParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_232);
            this_XUnaryOperation_0=ruleXUnaryOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_XUnaryOperation_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalStubbrLang.g:11400:3: ( ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleXUnaryOperation ) ) )*
            loop307:
            do {
                int alt307=2;
                switch ( input.LA(1) ) {
                case 180:
                    {
                    int LA307_2 = input.LA(2);

                    if ( (synpred11_InternalStubbrLang()) ) {
                        alt307=1;
                    }


                    }
                    break;
                case 181:
                    {
                    int LA307_3 = input.LA(2);

                    if ( (synpred11_InternalStubbrLang()) ) {
                        alt307=1;
                    }


                    }
                    break;
                case 182:
                    {
                    int LA307_4 = input.LA(2);

                    if ( (synpred11_InternalStubbrLang()) ) {
                        alt307=1;
                    }


                    }
                    break;
                case 183:
                    {
                    int LA307_5 = input.LA(2);

                    if ( (synpred11_InternalStubbrLang()) ) {
                        alt307=1;
                    }


                    }
                    break;

                }

                switch (alt307) {
            	case 1 :
            	    // InternalStubbrLang.g:11401:4: ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleXUnaryOperation ) )
            	    {
            	    // InternalStubbrLang.g:11401:4: ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) )
            	    // InternalStubbrLang.g:11402:5: ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) )
            	    {
            	    // InternalStubbrLang.g:11412:5: ( () ( ( ruleOpMulti ) ) )
            	    // InternalStubbrLang.g:11413:6: () ( ( ruleOpMulti ) )
            	    {
            	    // InternalStubbrLang.g:11413:6: ()
            	    // InternalStubbrLang.g:11414:7: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      							current = forceCreateModelElementAndSet(
            	      								grammarAccess.getXMultiplicativeExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            	      								current);
            	      						
            	    }

            	    }

            	    // InternalStubbrLang.g:11420:6: ( ( ruleOpMulti ) )
            	    // InternalStubbrLang.g:11421:7: ( ruleOpMulti )
            	    {
            	    // InternalStubbrLang.g:11421:7: ( ruleOpMulti )
            	    // InternalStubbrLang.g:11422:8: ruleOpMulti
            	    {
            	    if ( state.backtracking==0 ) {

            	      								if (current==null) {
            	      									current = createModelElement(grammarAccess.getXMultiplicativeExpressionRule());
            	      								}
            	      							
            	    }
            	    if ( state.backtracking==0 ) {

            	      								newCompositeNode(grammarAccess.getXMultiplicativeExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0());
            	      							
            	    }
            	    pushFollow(FOLLOW_218);
            	    ruleOpMulti();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      								afterParserOrEnumRuleCall();
            	      							
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // InternalStubbrLang.g:11438:4: ( (lv_rightOperand_3_0= ruleXUnaryOperation ) )
            	    // InternalStubbrLang.g:11439:5: (lv_rightOperand_3_0= ruleXUnaryOperation )
            	    {
            	    // InternalStubbrLang.g:11439:5: (lv_rightOperand_3_0= ruleXUnaryOperation )
            	    // InternalStubbrLang.g:11440:6: lv_rightOperand_3_0= ruleXUnaryOperation
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getXMultiplicativeExpressionAccess().getRightOperandXUnaryOperationParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_232);
            	    lv_rightOperand_3_0=ruleXUnaryOperation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getXMultiplicativeExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"rightOperand",
            	      							lv_rightOperand_3_0,
            	      							"org.eclipse.xtext.xbase.Xbase.XUnaryOperation");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop307;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXMultiplicativeExpression"


    // $ANTLR start "entryRuleOpMulti"
    // InternalStubbrLang.g:11462:1: entryRuleOpMulti returns [String current=null] : iv_ruleOpMulti= ruleOpMulti EOF ;
    public final String entryRuleOpMulti() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpMulti = null;


        try {
            // InternalStubbrLang.g:11462:47: (iv_ruleOpMulti= ruleOpMulti EOF )
            // InternalStubbrLang.g:11463:2: iv_ruleOpMulti= ruleOpMulti EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpMultiRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpMulti=ruleOpMulti();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpMulti.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpMulti"


    // $ANTLR start "ruleOpMulti"
    // InternalStubbrLang.g:11469:1: ruleOpMulti returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '*' | kw= '**' | kw= '/' | kw= '%' ) ;
    public final AntlrDatatypeRuleToken ruleOpMulti() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalStubbrLang.g:11475:2: ( (kw= '*' | kw= '**' | kw= '/' | kw= '%' ) )
            // InternalStubbrLang.g:11476:2: (kw= '*' | kw= '**' | kw= '/' | kw= '%' )
            {
            // InternalStubbrLang.g:11476:2: (kw= '*' | kw= '**' | kw= '/' | kw= '%' )
            int alt308=4;
            switch ( input.LA(1) ) {
            case 180:
                {
                alt308=1;
                }
                break;
            case 181:
                {
                alt308=2;
                }
                break;
            case 182:
                {
                alt308=3;
                }
                break;
            case 183:
                {
                alt308=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 308, 0, input);

                throw nvae;
            }

            switch (alt308) {
                case 1 :
                    // InternalStubbrLang.g:11477:3: kw= '*'
                    {
                    kw=(Token)match(input,180,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpMultiAccess().getAsteriskKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalStubbrLang.g:11483:3: kw= '**'
                    {
                    kw=(Token)match(input,181,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpMultiAccess().getAsteriskAsteriskKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalStubbrLang.g:11489:3: kw= '/'
                    {
                    kw=(Token)match(input,182,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpMultiAccess().getSolidusKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalStubbrLang.g:11495:3: kw= '%'
                    {
                    kw=(Token)match(input,183,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpMultiAccess().getPercentSignKeyword_3());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpMulti"


    // $ANTLR start "entryRuleXUnaryOperation"
    // InternalStubbrLang.g:11504:1: entryRuleXUnaryOperation returns [EObject current=null] : iv_ruleXUnaryOperation= ruleXUnaryOperation EOF ;
    public final EObject entryRuleXUnaryOperation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXUnaryOperation = null;


        try {
            // InternalStubbrLang.g:11504:56: (iv_ruleXUnaryOperation= ruleXUnaryOperation EOF )
            // InternalStubbrLang.g:11505:2: iv_ruleXUnaryOperation= ruleXUnaryOperation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXUnaryOperationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXUnaryOperation=ruleXUnaryOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXUnaryOperation; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXUnaryOperation"


    // $ANTLR start "ruleXUnaryOperation"
    // InternalStubbrLang.g:11511:1: ruleXUnaryOperation returns [EObject current=null] : ( ( () ( ( ruleOpUnary ) ) ( (lv_operand_2_0= ruleXUnaryOperation ) ) ) | this_XCastedExpression_3= ruleXCastedExpression ) ;
    public final EObject ruleXUnaryOperation() throws RecognitionException {
        EObject current = null;

        EObject lv_operand_2_0 = null;

        EObject this_XCastedExpression_3 = null;



        	enterRule();

        try {
            // InternalStubbrLang.g:11517:2: ( ( ( () ( ( ruleOpUnary ) ) ( (lv_operand_2_0= ruleXUnaryOperation ) ) ) | this_XCastedExpression_3= ruleXCastedExpression ) )
            // InternalStubbrLang.g:11518:2: ( ( () ( ( ruleOpUnary ) ) ( (lv_operand_2_0= ruleXUnaryOperation ) ) ) | this_XCastedExpression_3= ruleXCastedExpression )
            {
            // InternalStubbrLang.g:11518:2: ( ( () ( ( ruleOpUnary ) ) ( (lv_operand_2_0= ruleXUnaryOperation ) ) ) | this_XCastedExpression_3= ruleXCastedExpression )
            int alt309=2;
            int LA309_0 = input.LA(1);

            if ( ((LA309_0>=178 && LA309_0<=179)||LA309_0==184) ) {
                alt309=1;
            }
            else if ( ((LA309_0>=RULE_STRING && LA309_0<=RULE_ID)||(LA309_0>=RULE_INT && LA309_0<=RULE_DECIMAL)||LA309_0==16||LA309_0==69||LA309_0==100||LA309_0==162||LA309_0==191||(LA309_0>=193 && LA309_0<=194)||LA309_0==198||LA309_0==200||(LA309_0>=203 && LA309_0<=204)||(LA309_0>=207 && LA309_0<=218)||LA309_0==220) ) {
                alt309=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 309, 0, input);

                throw nvae;
            }
            switch (alt309) {
                case 1 :
                    // InternalStubbrLang.g:11519:3: ( () ( ( ruleOpUnary ) ) ( (lv_operand_2_0= ruleXUnaryOperation ) ) )
                    {
                    // InternalStubbrLang.g:11519:3: ( () ( ( ruleOpUnary ) ) ( (lv_operand_2_0= ruleXUnaryOperation ) ) )
                    // InternalStubbrLang.g:11520:4: () ( ( ruleOpUnary ) ) ( (lv_operand_2_0= ruleXUnaryOperation ) )
                    {
                    // InternalStubbrLang.g:11520:4: ()
                    // InternalStubbrLang.g:11521:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getXUnaryOperationAccess().getXUnaryOperationAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalStubbrLang.g:11527:4: ( ( ruleOpUnary ) )
                    // InternalStubbrLang.g:11528:5: ( ruleOpUnary )
                    {
                    // InternalStubbrLang.g:11528:5: ( ruleOpUnary )
                    // InternalStubbrLang.g:11529:6: ruleOpUnary
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getXUnaryOperationRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXUnaryOperationAccess().getFeatureJvmIdentifiableElementCrossReference_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_218);
                    ruleOpUnary();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalStubbrLang.g:11543:4: ( (lv_operand_2_0= ruleXUnaryOperation ) )
                    // InternalStubbrLang.g:11544:5: (lv_operand_2_0= ruleXUnaryOperation )
                    {
                    // InternalStubbrLang.g:11544:5: (lv_operand_2_0= ruleXUnaryOperation )
                    // InternalStubbrLang.g:11545:6: lv_operand_2_0= ruleXUnaryOperation
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXUnaryOperationAccess().getOperandXUnaryOperationParserRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_operand_2_0=ruleXUnaryOperation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXUnaryOperationRule());
                      						}
                      						set(
                      							current,
                      							"operand",
                      							lv_operand_2_0,
                      							"org.eclipse.xtext.xbase.Xbase.XUnaryOperation");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalStubbrLang.g:11564:3: this_XCastedExpression_3= ruleXCastedExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXUnaryOperationAccess().getXCastedExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XCastedExpression_3=ruleXCastedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XCastedExpression_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXUnaryOperation"


    // $ANTLR start "entryRuleOpUnary"
    // InternalStubbrLang.g:11576:1: entryRuleOpUnary returns [String current=null] : iv_ruleOpUnary= ruleOpUnary EOF ;
    public final String entryRuleOpUnary() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpUnary = null;


        try {
            // InternalStubbrLang.g:11576:47: (iv_ruleOpUnary= ruleOpUnary EOF )
            // InternalStubbrLang.g:11577:2: iv_ruleOpUnary= ruleOpUnary EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpUnaryRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpUnary=ruleOpUnary();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpUnary.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpUnary"


    // $ANTLR start "ruleOpUnary"
    // InternalStubbrLang.g:11583:1: ruleOpUnary returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '!' | kw= '-' | kw= '+' ) ;
    public final AntlrDatatypeRuleToken ruleOpUnary() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalStubbrLang.g:11589:2: ( (kw= '!' | kw= '-' | kw= '+' ) )
            // InternalStubbrLang.g:11590:2: (kw= '!' | kw= '-' | kw= '+' )
            {
            // InternalStubbrLang.g:11590:2: (kw= '!' | kw= '-' | kw= '+' )
            int alt310=3;
            switch ( input.LA(1) ) {
            case 184:
                {
                alt310=1;
                }
                break;
            case 179:
                {
                alt310=2;
                }
                break;
            case 178:
                {
                alt310=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 310, 0, input);

                throw nvae;
            }

            switch (alt310) {
                case 1 :
                    // InternalStubbrLang.g:11591:3: kw= '!'
                    {
                    kw=(Token)match(input,184,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpUnaryAccess().getExclamationMarkKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalStubbrLang.g:11597:3: kw= '-'
                    {
                    kw=(Token)match(input,179,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpUnaryAccess().getHyphenMinusKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalStubbrLang.g:11603:3: kw= '+'
                    {
                    kw=(Token)match(input,178,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpUnaryAccess().getPlusSignKeyword_2());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpUnary"


    // $ANTLR start "entryRuleXCastedExpression"
    // InternalStubbrLang.g:11612:1: entryRuleXCastedExpression returns [EObject current=null] : iv_ruleXCastedExpression= ruleXCastedExpression EOF ;
    public final EObject entryRuleXCastedExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXCastedExpression = null;


        try {
            // InternalStubbrLang.g:11612:58: (iv_ruleXCastedExpression= ruleXCastedExpression EOF )
            // InternalStubbrLang.g:11613:2: iv_ruleXCastedExpression= ruleXCastedExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXCastedExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXCastedExpression=ruleXCastedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXCastedExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXCastedExpression"


    // $ANTLR start "ruleXCastedExpression"
    // InternalStubbrLang.g:11619:1: ruleXCastedExpression returns [EObject current=null] : (this_XPostfixOperation_0= ruleXPostfixOperation ( ( ( ( () 'as' ) )=> ( () otherlv_2= 'as' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) )* ) ;
    public final EObject ruleXCastedExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject this_XPostfixOperation_0 = null;

        EObject lv_type_3_0 = null;



        	enterRule();

        try {
            // InternalStubbrLang.g:11625:2: ( (this_XPostfixOperation_0= ruleXPostfixOperation ( ( ( ( () 'as' ) )=> ( () otherlv_2= 'as' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) )* ) )
            // InternalStubbrLang.g:11626:2: (this_XPostfixOperation_0= ruleXPostfixOperation ( ( ( ( () 'as' ) )=> ( () otherlv_2= 'as' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) )* )
            {
            // InternalStubbrLang.g:11626:2: (this_XPostfixOperation_0= ruleXPostfixOperation ( ( ( ( () 'as' ) )=> ( () otherlv_2= 'as' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) )* )
            // InternalStubbrLang.g:11627:3: this_XPostfixOperation_0= ruleXPostfixOperation ( ( ( ( () 'as' ) )=> ( () otherlv_2= 'as' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getXCastedExpressionAccess().getXPostfixOperationParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_233);
            this_XPostfixOperation_0=ruleXPostfixOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_XPostfixOperation_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalStubbrLang.g:11635:3: ( ( ( ( () 'as' ) )=> ( () otherlv_2= 'as' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) )*
            loop311:
            do {
                int alt311=2;
                int LA311_0 = input.LA(1);

                if ( (LA311_0==185) ) {
                    int LA311_2 = input.LA(2);

                    if ( (synpred12_InternalStubbrLang()) ) {
                        alt311=1;
                    }


                }


                switch (alt311) {
            	case 1 :
            	    // InternalStubbrLang.g:11636:4: ( ( ( () 'as' ) )=> ( () otherlv_2= 'as' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) )
            	    {
            	    // InternalStubbrLang.g:11636:4: ( ( ( () 'as' ) )=> ( () otherlv_2= 'as' ) )
            	    // InternalStubbrLang.g:11637:5: ( ( () 'as' ) )=> ( () otherlv_2= 'as' )
            	    {
            	    // InternalStubbrLang.g:11643:5: ( () otherlv_2= 'as' )
            	    // InternalStubbrLang.g:11644:6: () otherlv_2= 'as'
            	    {
            	    // InternalStubbrLang.g:11644:6: ()
            	    // InternalStubbrLang.g:11645:7: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      							current = forceCreateModelElementAndSet(
            	      								grammarAccess.getXCastedExpressionAccess().getXCastedExpressionTargetAction_1_0_0_0(),
            	      								current);
            	      						
            	    }

            	    }

            	    otherlv_2=(Token)match(input,185,FOLLOW_52); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						newLeafNode(otherlv_2, grammarAccess.getXCastedExpressionAccess().getAsKeyword_1_0_0_1());
            	      					
            	    }

            	    }


            	    }

            	    // InternalStubbrLang.g:11657:4: ( (lv_type_3_0= ruleJvmTypeReference ) )
            	    // InternalStubbrLang.g:11658:5: (lv_type_3_0= ruleJvmTypeReference )
            	    {
            	    // InternalStubbrLang.g:11658:5: (lv_type_3_0= ruleJvmTypeReference )
            	    // InternalStubbrLang.g:11659:6: lv_type_3_0= ruleJvmTypeReference
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getXCastedExpressionAccess().getTypeJvmTypeReferenceParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_233);
            	    lv_type_3_0=ruleJvmTypeReference();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getXCastedExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"type",
            	      							lv_type_3_0,
            	      							"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop311;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXCastedExpression"


    // $ANTLR start "entryRuleXPostfixOperation"
    // InternalStubbrLang.g:11681:1: entryRuleXPostfixOperation returns [EObject current=null] : iv_ruleXPostfixOperation= ruleXPostfixOperation EOF ;
    public final EObject entryRuleXPostfixOperation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXPostfixOperation = null;


        try {
            // InternalStubbrLang.g:11681:58: (iv_ruleXPostfixOperation= ruleXPostfixOperation EOF )
            // InternalStubbrLang.g:11682:2: iv_ruleXPostfixOperation= ruleXPostfixOperation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXPostfixOperationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXPostfixOperation=ruleXPostfixOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXPostfixOperation; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXPostfixOperation"


    // $ANTLR start "ruleXPostfixOperation"
    // InternalStubbrLang.g:11688:1: ruleXPostfixOperation returns [EObject current=null] : (this_XMemberFeatureCall_0= ruleXMemberFeatureCall ( ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) ) )? ) ;
    public final EObject ruleXPostfixOperation() throws RecognitionException {
        EObject current = null;

        EObject this_XMemberFeatureCall_0 = null;



        	enterRule();

        try {
            // InternalStubbrLang.g:11694:2: ( (this_XMemberFeatureCall_0= ruleXMemberFeatureCall ( ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) ) )? ) )
            // InternalStubbrLang.g:11695:2: (this_XMemberFeatureCall_0= ruleXMemberFeatureCall ( ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) ) )? )
            {
            // InternalStubbrLang.g:11695:2: (this_XMemberFeatureCall_0= ruleXMemberFeatureCall ( ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) ) )? )
            // InternalStubbrLang.g:11696:3: this_XMemberFeatureCall_0= ruleXMemberFeatureCall ( ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) ) )?
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getXPostfixOperationAccess().getXMemberFeatureCallParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_234);
            this_XMemberFeatureCall_0=ruleXMemberFeatureCall();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_XMemberFeatureCall_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalStubbrLang.g:11704:3: ( ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) ) )?
            int alt312=2;
            int LA312_0 = input.LA(1);

            if ( (LA312_0==186) ) {
                int LA312_1 = input.LA(2);

                if ( (synpred13_InternalStubbrLang()) ) {
                    alt312=1;
                }
            }
            else if ( (LA312_0==187) ) {
                int LA312_2 = input.LA(2);

                if ( (synpred13_InternalStubbrLang()) ) {
                    alt312=1;
                }
            }
            switch (alt312) {
                case 1 :
                    // InternalStubbrLang.g:11705:4: ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) )
                    {
                    // InternalStubbrLang.g:11715:4: ( () ( ( ruleOpPostfix ) ) )
                    // InternalStubbrLang.g:11716:5: () ( ( ruleOpPostfix ) )
                    {
                    // InternalStubbrLang.g:11716:5: ()
                    // InternalStubbrLang.g:11717:6: 
                    {
                    if ( state.backtracking==0 ) {

                      						current = forceCreateModelElementAndSet(
                      							grammarAccess.getXPostfixOperationAccess().getXPostfixOperationOperandAction_1_0_0(),
                      							current);
                      					
                    }

                    }

                    // InternalStubbrLang.g:11723:5: ( ( ruleOpPostfix ) )
                    // InternalStubbrLang.g:11724:6: ( ruleOpPostfix )
                    {
                    // InternalStubbrLang.g:11724:6: ( ruleOpPostfix )
                    // InternalStubbrLang.g:11725:7: ruleOpPostfix
                    {
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getXPostfixOperationRule());
                      							}
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getXPostfixOperationAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_1_0());
                      						
                    }
                    pushFollow(FOLLOW_2);
                    ruleOpPostfix();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXPostfixOperation"


    // $ANTLR start "entryRuleOpPostfix"
    // InternalStubbrLang.g:11745:1: entryRuleOpPostfix returns [String current=null] : iv_ruleOpPostfix= ruleOpPostfix EOF ;
    public final String entryRuleOpPostfix() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpPostfix = null;


        try {
            // InternalStubbrLang.g:11745:49: (iv_ruleOpPostfix= ruleOpPostfix EOF )
            // InternalStubbrLang.g:11746:2: iv_ruleOpPostfix= ruleOpPostfix EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpPostfixRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpPostfix=ruleOpPostfix();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpPostfix.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpPostfix"


    // $ANTLR start "ruleOpPostfix"
    // InternalStubbrLang.g:11752:1: ruleOpPostfix returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '++' | kw= '--' ) ;
    public final AntlrDatatypeRuleToken ruleOpPostfix() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalStubbrLang.g:11758:2: ( (kw= '++' | kw= '--' ) )
            // InternalStubbrLang.g:11759:2: (kw= '++' | kw= '--' )
            {
            // InternalStubbrLang.g:11759:2: (kw= '++' | kw= '--' )
            int alt313=2;
            int LA313_0 = input.LA(1);

            if ( (LA313_0==186) ) {
                alt313=1;
            }
            else if ( (LA313_0==187) ) {
                alt313=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 313, 0, input);

                throw nvae;
            }
            switch (alt313) {
                case 1 :
                    // InternalStubbrLang.g:11760:3: kw= '++'
                    {
                    kw=(Token)match(input,186,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpPostfixAccess().getPlusSignPlusSignKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalStubbrLang.g:11766:3: kw= '--'
                    {
                    kw=(Token)match(input,187,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpPostfixAccess().getHyphenMinusHyphenMinusKeyword_1());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpPostfix"


    // $ANTLR start "entryRuleXMemberFeatureCall"
    // InternalStubbrLang.g:11775:1: entryRuleXMemberFeatureCall returns [EObject current=null] : iv_ruleXMemberFeatureCall= ruleXMemberFeatureCall EOF ;
    public final EObject entryRuleXMemberFeatureCall() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXMemberFeatureCall = null;


        try {
            // InternalStubbrLang.g:11775:59: (iv_ruleXMemberFeatureCall= ruleXMemberFeatureCall EOF )
            // InternalStubbrLang.g:11776:2: iv_ruleXMemberFeatureCall= ruleXMemberFeatureCall EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXMemberFeatureCallRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXMemberFeatureCall=ruleXMemberFeatureCall();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXMemberFeatureCall; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXMemberFeatureCall"


    // $ANTLR start "ruleXMemberFeatureCall"
    // InternalStubbrLang.g:11782:1: ruleXMemberFeatureCall returns [EObject current=null] : (this_XPrimaryExpression_0= ruleXPrimaryExpression ( ( ( ( ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_6_0= ruleXAssignment ) ) ) | ( ( ( ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) ) )=> ( () (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) ) ) ) (otherlv_11= '<' ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= ',' ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= '>' )? ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= ')' )? ( ( ( () '[' ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )? ) )* ) ;
    public final EObject ruleXMemberFeatureCall() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token lv_explicitStatic_3_0=null;
        Token otherlv_8=null;
        Token lv_nullSafe_9_0=null;
        Token lv_explicitStatic_10_0=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token lv_explicitOperationCall_17_0=null;
        Token otherlv_20=null;
        Token otherlv_22=null;
        EObject this_XPrimaryExpression_0 = null;

        EObject lv_value_6_0 = null;

        EObject lv_typeArguments_12_0 = null;

        EObject lv_typeArguments_14_0 = null;

        EObject lv_memberCallArguments_18_0 = null;

        EObject lv_memberCallArguments_19_0 = null;

        EObject lv_memberCallArguments_21_0 = null;

        EObject lv_memberCallArguments_23_0 = null;



        	enterRule();

        try {
            // InternalStubbrLang.g:11788:2: ( (this_XPrimaryExpression_0= ruleXPrimaryExpression ( ( ( ( ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_6_0= ruleXAssignment ) ) ) | ( ( ( ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) ) )=> ( () (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) ) ) ) (otherlv_11= '<' ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= ',' ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= '>' )? ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= ')' )? ( ( ( () '[' ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )? ) )* ) )
            // InternalStubbrLang.g:11789:2: (this_XPrimaryExpression_0= ruleXPrimaryExpression ( ( ( ( ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_6_0= ruleXAssignment ) ) ) | ( ( ( ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) ) )=> ( () (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) ) ) ) (otherlv_11= '<' ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= ',' ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= '>' )? ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= ')' )? ( ( ( () '[' ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )? ) )* )
            {
            // InternalStubbrLang.g:11789:2: (this_XPrimaryExpression_0= ruleXPrimaryExpression ( ( ( ( ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_6_0= ruleXAssignment ) ) ) | ( ( ( ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) ) )=> ( () (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) ) ) ) (otherlv_11= '<' ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= ',' ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= '>' )? ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= ')' )? ( ( ( () '[' ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )? ) )* )
            // InternalStubbrLang.g:11790:3: this_XPrimaryExpression_0= ruleXPrimaryExpression ( ( ( ( ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_6_0= ruleXAssignment ) ) ) | ( ( ( ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) ) )=> ( () (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) ) ) ) (otherlv_11= '<' ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= ',' ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= '>' )? ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= ')' )? ( ( ( () '[' ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )? ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getXPrimaryExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_235);
            this_XPrimaryExpression_0=ruleXPrimaryExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_XPrimaryExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalStubbrLang.g:11798:3: ( ( ( ( ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_6_0= ruleXAssignment ) ) ) | ( ( ( ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) ) )=> ( () (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) ) ) ) (otherlv_11= '<' ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= ',' ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= '>' )? ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= ')' )? ( ( ( () '[' ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )? ) )*
            loop322:
            do {
                int alt322=3;
                switch ( input.LA(1) ) {
                case 188:
                    {
                    int LA322_2 = input.LA(2);

                    if ( (synpred14_InternalStubbrLang()) ) {
                        alt322=1;
                    }
                    else if ( (synpred15_InternalStubbrLang()) ) {
                        alt322=2;
                    }


                    }
                    break;
                case 189:
                    {
                    int LA322_3 = input.LA(2);

                    if ( (synpred14_InternalStubbrLang()) ) {
                        alt322=1;
                    }
                    else if ( (synpred15_InternalStubbrLang()) ) {
                        alt322=2;
                    }


                    }
                    break;
                case 190:
                    {
                    int LA322_4 = input.LA(2);

                    if ( (synpred15_InternalStubbrLang()) ) {
                        alt322=2;
                    }


                    }
                    break;

                }

                switch (alt322) {
            	case 1 :
            	    // InternalStubbrLang.g:11799:4: ( ( ( ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_6_0= ruleXAssignment ) ) )
            	    {
            	    // InternalStubbrLang.g:11799:4: ( ( ( ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_6_0= ruleXAssignment ) ) )
            	    // InternalStubbrLang.g:11800:5: ( ( ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_6_0= ruleXAssignment ) )
            	    {
            	    // InternalStubbrLang.g:11800:5: ( ( ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )
            	    // InternalStubbrLang.g:11801:6: ( ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign )
            	    {
            	    // InternalStubbrLang.g:11821:6: ( () (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign )
            	    // InternalStubbrLang.g:11822:7: () (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign
            	    {
            	    // InternalStubbrLang.g:11822:7: ()
            	    // InternalStubbrLang.g:11823:8: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      								current = forceCreateModelElementAndSet(
            	      									grammarAccess.getXMemberFeatureCallAccess().getXAssignmentAssignableAction_1_0_0_0_0(),
            	      									current);
            	      							
            	    }

            	    }

            	    // InternalStubbrLang.g:11829:7: (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) )
            	    int alt314=2;
            	    int LA314_0 = input.LA(1);

            	    if ( (LA314_0==188) ) {
            	        alt314=1;
            	    }
            	    else if ( (LA314_0==189) ) {
            	        alt314=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 314, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt314) {
            	        case 1 :
            	            // InternalStubbrLang.g:11830:8: otherlv_2= '.'
            	            {
            	            otherlv_2=(Token)match(input,188,FOLLOW_236); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              								newLeafNode(otherlv_2, grammarAccess.getXMemberFeatureCallAccess().getFullStopKeyword_1_0_0_0_1_0());
            	              							
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalStubbrLang.g:11835:8: ( (lv_explicitStatic_3_0= '::' ) )
            	            {
            	            // InternalStubbrLang.g:11835:8: ( (lv_explicitStatic_3_0= '::' ) )
            	            // InternalStubbrLang.g:11836:9: (lv_explicitStatic_3_0= '::' )
            	            {
            	            // InternalStubbrLang.g:11836:9: (lv_explicitStatic_3_0= '::' )
            	            // InternalStubbrLang.g:11837:10: lv_explicitStatic_3_0= '::'
            	            {
            	            lv_explicitStatic_3_0=(Token)match(input,189,FOLLOW_236); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(lv_explicitStatic_3_0, grammarAccess.getXMemberFeatureCallAccess().getExplicitStaticColonColonKeyword_1_0_0_0_1_1_0());
            	              									
            	            }
            	            if ( state.backtracking==0 ) {

            	              										if (current==null) {
            	              											current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
            	              										}
            	              										setWithLastConsumed(current, "explicitStatic", true, "::");
            	              									
            	            }

            	            }


            	            }


            	            }
            	            break;

            	    }

            	    // InternalStubbrLang.g:11850:7: ( ( ruleFeatureCallID ) )
            	    // InternalStubbrLang.g:11851:8: ( ruleFeatureCallID )
            	    {
            	    // InternalStubbrLang.g:11851:8: ( ruleFeatureCallID )
            	    // InternalStubbrLang.g:11852:9: ruleFeatureCallID
            	    {
            	    if ( state.backtracking==0 ) {

            	      									if (current==null) {
            	      										current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
            	      									}
            	      								
            	    }
            	    if ( state.backtracking==0 ) {

            	      									newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_0_2_0());
            	      								
            	    }
            	    pushFollow(FOLLOW_217);
            	    ruleFeatureCallID();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									afterParserOrEnumRuleCall();
            	      								
            	    }

            	    }


            	    }

            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getOpSingleAssignParserRuleCall_1_0_0_0_3());
            	      						
            	    }
            	    pushFollow(FOLLOW_218);
            	    ruleOpSingleAssign();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }

            	    // InternalStubbrLang.g:11875:5: ( (lv_value_6_0= ruleXAssignment ) )
            	    // InternalStubbrLang.g:11876:6: (lv_value_6_0= ruleXAssignment )
            	    {
            	    // InternalStubbrLang.g:11876:6: (lv_value_6_0= ruleXAssignment )
            	    // InternalStubbrLang.g:11877:7: lv_value_6_0= ruleXAssignment
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getValueXAssignmentParserRuleCall_1_0_1_0());
            	      						
            	    }
            	    pushFollow(FOLLOW_235);
            	    lv_value_6_0=ruleXAssignment();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
            	      							}
            	      							set(
            	      								current,
            	      								"value",
            	      								lv_value_6_0,
            	      								"org.eclipse.xtext.xbase.Xbase.XAssignment");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalStubbrLang.g:11896:4: ( ( ( ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) ) )=> ( () (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) ) ) ) (otherlv_11= '<' ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= ',' ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= '>' )? ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= ')' )? ( ( ( () '[' ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )? )
            	    {
            	    // InternalStubbrLang.g:11896:4: ( ( ( ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) ) )=> ( () (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) ) ) ) (otherlv_11= '<' ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= ',' ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= '>' )? ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= ')' )? ( ( ( () '[' ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )? )
            	    // InternalStubbrLang.g:11897:5: ( ( ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) ) )=> ( () (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) ) ) ) (otherlv_11= '<' ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= ',' ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= '>' )? ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= ')' )? ( ( ( () '[' ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )?
            	    {
            	    // InternalStubbrLang.g:11897:5: ( ( ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) ) )=> ( () (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) ) ) )
            	    // InternalStubbrLang.g:11898:6: ( ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) ) )=> ( () (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) ) )
            	    {
            	    // InternalStubbrLang.g:11918:6: ( () (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) ) )
            	    // InternalStubbrLang.g:11919:7: () (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) )
            	    {
            	    // InternalStubbrLang.g:11919:7: ()
            	    // InternalStubbrLang.g:11920:8: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      								current = forceCreateModelElementAndSet(
            	      									grammarAccess.getXMemberFeatureCallAccess().getXMemberFeatureCallMemberCallTargetAction_1_1_0_0_0(),
            	      									current);
            	      							
            	    }

            	    }

            	    // InternalStubbrLang.g:11926:7: (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) )
            	    int alt315=3;
            	    switch ( input.LA(1) ) {
            	    case 188:
            	        {
            	        alt315=1;
            	        }
            	        break;
            	    case 190:
            	        {
            	        alt315=2;
            	        }
            	        break;
            	    case 189:
            	        {
            	        alt315=3;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 315, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt315) {
            	        case 1 :
            	            // InternalStubbrLang.g:11927:8: otherlv_8= '.'
            	            {
            	            otherlv_8=(Token)match(input,188,FOLLOW_237); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              								newLeafNode(otherlv_8, grammarAccess.getXMemberFeatureCallAccess().getFullStopKeyword_1_1_0_0_1_0());
            	              							
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalStubbrLang.g:11932:8: ( (lv_nullSafe_9_0= '?.' ) )
            	            {
            	            // InternalStubbrLang.g:11932:8: ( (lv_nullSafe_9_0= '?.' ) )
            	            // InternalStubbrLang.g:11933:9: (lv_nullSafe_9_0= '?.' )
            	            {
            	            // InternalStubbrLang.g:11933:9: (lv_nullSafe_9_0= '?.' )
            	            // InternalStubbrLang.g:11934:10: lv_nullSafe_9_0= '?.'
            	            {
            	            lv_nullSafe_9_0=(Token)match(input,190,FOLLOW_237); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(lv_nullSafe_9_0, grammarAccess.getXMemberFeatureCallAccess().getNullSafeQuestionMarkFullStopKeyword_1_1_0_0_1_1_0());
            	              									
            	            }
            	            if ( state.backtracking==0 ) {

            	              										if (current==null) {
            	              											current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
            	              										}
            	              										setWithLastConsumed(current, "nullSafe", true, "?.");
            	              									
            	            }

            	            }


            	            }


            	            }
            	            break;
            	        case 3 :
            	            // InternalStubbrLang.g:11947:8: ( (lv_explicitStatic_10_0= '::' ) )
            	            {
            	            // InternalStubbrLang.g:11947:8: ( (lv_explicitStatic_10_0= '::' ) )
            	            // InternalStubbrLang.g:11948:9: (lv_explicitStatic_10_0= '::' )
            	            {
            	            // InternalStubbrLang.g:11948:9: (lv_explicitStatic_10_0= '::' )
            	            // InternalStubbrLang.g:11949:10: lv_explicitStatic_10_0= '::'
            	            {
            	            lv_explicitStatic_10_0=(Token)match(input,189,FOLLOW_237); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(lv_explicitStatic_10_0, grammarAccess.getXMemberFeatureCallAccess().getExplicitStaticColonColonKeyword_1_1_0_0_1_2_0());
            	              									
            	            }
            	            if ( state.backtracking==0 ) {

            	              										if (current==null) {
            	              											current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
            	              										}
            	              										setWithLastConsumed(current, "explicitStatic", true, "::");
            	              									
            	            }

            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    // InternalStubbrLang.g:11964:5: (otherlv_11= '<' ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= ',' ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= '>' )?
            	    int alt317=2;
            	    int LA317_0 = input.LA(1);

            	    if ( (LA317_0==162) ) {
            	        alt317=1;
            	    }
            	    switch (alt317) {
            	        case 1 :
            	            // InternalStubbrLang.g:11965:6: otherlv_11= '<' ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= ',' ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= '>'
            	            {
            	            otherlv_11=(Token)match(input,162,FOLLOW_238); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              						newLeafNode(otherlv_11, grammarAccess.getXMemberFeatureCallAccess().getLessThanSignKeyword_1_1_1_0());
            	              					
            	            }
            	            // InternalStubbrLang.g:11969:6: ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) )
            	            // InternalStubbrLang.g:11970:7: (lv_typeArguments_12_0= ruleJvmArgumentTypeReference )
            	            {
            	            // InternalStubbrLang.g:11970:7: (lv_typeArguments_12_0= ruleJvmArgumentTypeReference )
            	            // InternalStubbrLang.g:11971:8: lv_typeArguments_12_0= ruleJvmArgumentTypeReference
            	            {
            	            if ( state.backtracking==0 ) {

            	              								newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_1_1_1_1_0());
            	              							
            	            }
            	            pushFollow(FOLLOW_239);
            	            lv_typeArguments_12_0=ruleJvmArgumentTypeReference();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              								if (current==null) {
            	              									current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
            	              								}
            	              								add(
            	              									current,
            	              									"typeArguments",
            	              									lv_typeArguments_12_0,
            	              									"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
            	              								afterParserOrEnumRuleCall();
            	              							
            	            }

            	            }


            	            }

            	            // InternalStubbrLang.g:11988:6: (otherlv_13= ',' ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )*
            	            loop316:
            	            do {
            	                int alt316=2;
            	                int LA316_0 = input.LA(1);

            	                if ( (LA316_0==25) ) {
            	                    alt316=1;
            	                }


            	                switch (alt316) {
            	            	case 1 :
            	            	    // InternalStubbrLang.g:11989:7: otherlv_13= ',' ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) )
            	            	    {
            	            	    otherlv_13=(Token)match(input,25,FOLLOW_238); if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	      							newLeafNode(otherlv_13, grammarAccess.getXMemberFeatureCallAccess().getCommaKeyword_1_1_1_2_0());
            	            	      						
            	            	    }
            	            	    // InternalStubbrLang.g:11993:7: ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) )
            	            	    // InternalStubbrLang.g:11994:8: (lv_typeArguments_14_0= ruleJvmArgumentTypeReference )
            	            	    {
            	            	    // InternalStubbrLang.g:11994:8: (lv_typeArguments_14_0= ruleJvmArgumentTypeReference )
            	            	    // InternalStubbrLang.g:11995:9: lv_typeArguments_14_0= ruleJvmArgumentTypeReference
            	            	    {
            	            	    if ( state.backtracking==0 ) {

            	            	      									newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_1_1_1_2_1_0());
            	            	      								
            	            	    }
            	            	    pushFollow(FOLLOW_239);
            	            	    lv_typeArguments_14_0=ruleJvmArgumentTypeReference();

            	            	    state._fsp--;
            	            	    if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	      									if (current==null) {
            	            	      										current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
            	            	      									}
            	            	      									add(
            	            	      										current,
            	            	      										"typeArguments",
            	            	      										lv_typeArguments_14_0,
            	            	      										"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
            	            	      									afterParserOrEnumRuleCall();
            	            	      								
            	            	    }

            	            	    }


            	            	    }


            	            	    }
            	            	    break;

            	            	default :
            	            	    break loop316;
            	                }
            	            } while (true);

            	            otherlv_15=(Token)match(input,163,FOLLOW_237); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              						newLeafNode(otherlv_15, grammarAccess.getXMemberFeatureCallAccess().getGreaterThanSignKeyword_1_1_1_3());
            	              					
            	            }

            	            }
            	            break;

            	    }

            	    // InternalStubbrLang.g:12018:5: ( ( ruleIdOrSuper ) )
            	    // InternalStubbrLang.g:12019:6: ( ruleIdOrSuper )
            	    {
            	    // InternalStubbrLang.g:12019:6: ( ruleIdOrSuper )
            	    // InternalStubbrLang.g:12020:7: ruleIdOrSuper
            	    {
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
            	      							}
            	      						
            	    }
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getFeatureJvmIdentifiableElementCrossReference_1_1_2_0());
            	      						
            	    }
            	    pushFollow(FOLLOW_240);
            	    ruleIdOrSuper();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }

            	    // InternalStubbrLang.g:12034:5: ( ( ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= ')' )?
            	    int alt320=2;
            	    alt320 = dfa320.predict(input);
            	    switch (alt320) {
            	        case 1 :
            	            // InternalStubbrLang.g:12035:6: ( ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= ')'
            	            {
            	            // InternalStubbrLang.g:12035:6: ( ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' ) )
            	            // InternalStubbrLang.g:12036:7: ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' )
            	            {
            	            // InternalStubbrLang.g:12040:7: (lv_explicitOperationCall_17_0= '(' )
            	            // InternalStubbrLang.g:12041:8: lv_explicitOperationCall_17_0= '('
            	            {
            	            lv_explicitOperationCall_17_0=(Token)match(input,191,FOLLOW_241); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              								newLeafNode(lv_explicitOperationCall_17_0, grammarAccess.getXMemberFeatureCallAccess().getExplicitOperationCallLeftParenthesisKeyword_1_1_3_0_0());
            	              							
            	            }
            	            if ( state.backtracking==0 ) {

            	              								if (current==null) {
            	              									current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
            	              								}
            	              								setWithLastConsumed(current, "explicitOperationCall", true, "(");
            	              							
            	            }

            	            }


            	            }

            	            // InternalStubbrLang.g:12053:6: ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )?
            	            int alt319=3;
            	            alt319 = dfa319.predict(input);
            	            switch (alt319) {
            	                case 1 :
            	                    // InternalStubbrLang.g:12054:7: ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) )
            	                    {
            	                    // InternalStubbrLang.g:12054:7: ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) )
            	                    // InternalStubbrLang.g:12055:8: ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure )
            	                    {
            	                    // InternalStubbrLang.g:12080:8: (lv_memberCallArguments_18_0= ruleXShortClosure )
            	                    // InternalStubbrLang.g:12081:9: lv_memberCallArguments_18_0= ruleXShortClosure
            	                    {
            	                    if ( state.backtracking==0 ) {

            	                      									newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsXShortClosureParserRuleCall_1_1_3_1_0_0());
            	                      								
            	                    }
            	                    pushFollow(FOLLOW_242);
            	                    lv_memberCallArguments_18_0=ruleXShortClosure();

            	                    state._fsp--;
            	                    if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      									if (current==null) {
            	                      										current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
            	                      									}
            	                      									add(
            	                      										current,
            	                      										"memberCallArguments",
            	                      										lv_memberCallArguments_18_0,
            	                      										"org.eclipse.xtext.xbase.Xbase.XShortClosure");
            	                      									afterParserOrEnumRuleCall();
            	                      								
            	                    }

            	                    }


            	                    }


            	                    }
            	                    break;
            	                case 2 :
            	                    // InternalStubbrLang.g:12099:7: ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* )
            	                    {
            	                    // InternalStubbrLang.g:12099:7: ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* )
            	                    // InternalStubbrLang.g:12100:8: ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )*
            	                    {
            	                    // InternalStubbrLang.g:12100:8: ( (lv_memberCallArguments_19_0= ruleXExpression ) )
            	                    // InternalStubbrLang.g:12101:9: (lv_memberCallArguments_19_0= ruleXExpression )
            	                    {
            	                    // InternalStubbrLang.g:12101:9: (lv_memberCallArguments_19_0= ruleXExpression )
            	                    // InternalStubbrLang.g:12102:10: lv_memberCallArguments_19_0= ruleXExpression
            	                    {
            	                    if ( state.backtracking==0 ) {

            	                      										newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsXExpressionParserRuleCall_1_1_3_1_1_0_0());
            	                      									
            	                    }
            	                    pushFollow(FOLLOW_243);
            	                    lv_memberCallArguments_19_0=ruleXExpression();

            	                    state._fsp--;
            	                    if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      										if (current==null) {
            	                      											current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
            	                      										}
            	                      										add(
            	                      											current,
            	                      											"memberCallArguments",
            	                      											lv_memberCallArguments_19_0,
            	                      											"org.eclipse.xtext.xbase.Xbase.XExpression");
            	                      										afterParserOrEnumRuleCall();
            	                      									
            	                    }

            	                    }


            	                    }

            	                    // InternalStubbrLang.g:12119:8: (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )*
            	                    loop318:
            	                    do {
            	                        int alt318=2;
            	                        int LA318_0 = input.LA(1);

            	                        if ( (LA318_0==25) ) {
            	                            alt318=1;
            	                        }


            	                        switch (alt318) {
            	                    	case 1 :
            	                    	    // InternalStubbrLang.g:12120:9: otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) )
            	                    	    {
            	                    	    otherlv_20=(Token)match(input,25,FOLLOW_218); if (state.failed) return current;
            	                    	    if ( state.backtracking==0 ) {

            	                    	      									newLeafNode(otherlv_20, grammarAccess.getXMemberFeatureCallAccess().getCommaKeyword_1_1_3_1_1_1_0());
            	                    	      								
            	                    	    }
            	                    	    // InternalStubbrLang.g:12124:9: ( (lv_memberCallArguments_21_0= ruleXExpression ) )
            	                    	    // InternalStubbrLang.g:12125:10: (lv_memberCallArguments_21_0= ruleXExpression )
            	                    	    {
            	                    	    // InternalStubbrLang.g:12125:10: (lv_memberCallArguments_21_0= ruleXExpression )
            	                    	    // InternalStubbrLang.g:12126:11: lv_memberCallArguments_21_0= ruleXExpression
            	                    	    {
            	                    	    if ( state.backtracking==0 ) {

            	                    	      											newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsXExpressionParserRuleCall_1_1_3_1_1_1_1_0());
            	                    	      										
            	                    	    }
            	                    	    pushFollow(FOLLOW_243);
            	                    	    lv_memberCallArguments_21_0=ruleXExpression();

            	                    	    state._fsp--;
            	                    	    if (state.failed) return current;
            	                    	    if ( state.backtracking==0 ) {

            	                    	      											if (current==null) {
            	                    	      												current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
            	                    	      											}
            	                    	      											add(
            	                    	      												current,
            	                    	      												"memberCallArguments",
            	                    	      												lv_memberCallArguments_21_0,
            	                    	      												"org.eclipse.xtext.xbase.Xbase.XExpression");
            	                    	      											afterParserOrEnumRuleCall();
            	                    	      										
            	                    	    }

            	                    	    }


            	                    	    }


            	                    	    }
            	                    	    break;

            	                    	default :
            	                    	    break loop318;
            	                        }
            	                    } while (true);


            	                    }


            	                    }
            	                    break;

            	            }

            	            otherlv_22=(Token)match(input,192,FOLLOW_244); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              						newLeafNode(otherlv_22, grammarAccess.getXMemberFeatureCallAccess().getRightParenthesisKeyword_1_1_3_2());
            	              					
            	            }

            	            }
            	            break;

            	    }

            	    // InternalStubbrLang.g:12151:5: ( ( ( () '[' ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )?
            	    int alt321=2;
            	    alt321 = dfa321.predict(input);
            	    switch (alt321) {
            	        case 1 :
            	            // InternalStubbrLang.g:12152:6: ( ( () '[' ) )=> (lv_memberCallArguments_23_0= ruleXClosure )
            	            {
            	            // InternalStubbrLang.g:12158:6: (lv_memberCallArguments_23_0= ruleXClosure )
            	            // InternalStubbrLang.g:12159:7: lv_memberCallArguments_23_0= ruleXClosure
            	            {
            	            if ( state.backtracking==0 ) {

            	              							newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsXClosureParserRuleCall_1_1_4_0());
            	              						
            	            }
            	            pushFollow(FOLLOW_235);
            	            lv_memberCallArguments_23_0=ruleXClosure();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              							if (current==null) {
            	              								current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
            	              							}
            	              							add(
            	              								current,
            	              								"memberCallArguments",
            	              								lv_memberCallArguments_23_0,
            	              								"org.eclipse.xtext.xbase.Xbase.XClosure");
            	              							afterParserOrEnumRuleCall();
            	              						
            	            }

            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop322;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXMemberFeatureCall"


    // $ANTLR start "entryRuleXPrimaryExpression"
    // InternalStubbrLang.g:12182:1: entryRuleXPrimaryExpression returns [EObject current=null] : iv_ruleXPrimaryExpression= ruleXPrimaryExpression EOF ;
    public final EObject entryRuleXPrimaryExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXPrimaryExpression = null;


        try {
            // InternalStubbrLang.g:12182:59: (iv_ruleXPrimaryExpression= ruleXPrimaryExpression EOF )
            // InternalStubbrLang.g:12183:2: iv_ruleXPrimaryExpression= ruleXPrimaryExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXPrimaryExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXPrimaryExpression=ruleXPrimaryExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXPrimaryExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXPrimaryExpression"


    // $ANTLR start "ruleXPrimaryExpression"
    // InternalStubbrLang.g:12189:1: ruleXPrimaryExpression returns [EObject current=null] : (this_XConstructorCall_0= ruleXConstructorCall | this_XBlockExpression_1= ruleXBlockExpression | this_XSwitchExpression_2= ruleXSwitchExpression | ( ( ( () 'synchronized' '(' ) )=>this_XSynchronizedExpression_3= ruleXSynchronizedExpression ) | this_XFeatureCall_4= ruleXFeatureCall | this_XLiteral_5= ruleXLiteral | this_XIfExpression_6= ruleXIfExpression | ( ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=>this_XForLoopExpression_7= ruleXForLoopExpression ) | this_XBasicForLoopExpression_8= ruleXBasicForLoopExpression | this_XWhileExpression_9= ruleXWhileExpression | this_XDoWhileExpression_10= ruleXDoWhileExpression | this_XThrowExpression_11= ruleXThrowExpression | this_XReturnExpression_12= ruleXReturnExpression | this_XTryCatchFinallyExpression_13= ruleXTryCatchFinallyExpression | this_XParenthesizedExpression_14= ruleXParenthesizedExpression ) ;
    public final EObject ruleXPrimaryExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XConstructorCall_0 = null;

        EObject this_XBlockExpression_1 = null;

        EObject this_XSwitchExpression_2 = null;

        EObject this_XSynchronizedExpression_3 = null;

        EObject this_XFeatureCall_4 = null;

        EObject this_XLiteral_5 = null;

        EObject this_XIfExpression_6 = null;

        EObject this_XForLoopExpression_7 = null;

        EObject this_XBasicForLoopExpression_8 = null;

        EObject this_XWhileExpression_9 = null;

        EObject this_XDoWhileExpression_10 = null;

        EObject this_XThrowExpression_11 = null;

        EObject this_XReturnExpression_12 = null;

        EObject this_XTryCatchFinallyExpression_13 = null;

        EObject this_XParenthesizedExpression_14 = null;



        	enterRule();

        try {
            // InternalStubbrLang.g:12195:2: ( (this_XConstructorCall_0= ruleXConstructorCall | this_XBlockExpression_1= ruleXBlockExpression | this_XSwitchExpression_2= ruleXSwitchExpression | ( ( ( () 'synchronized' '(' ) )=>this_XSynchronizedExpression_3= ruleXSynchronizedExpression ) | this_XFeatureCall_4= ruleXFeatureCall | this_XLiteral_5= ruleXLiteral | this_XIfExpression_6= ruleXIfExpression | ( ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=>this_XForLoopExpression_7= ruleXForLoopExpression ) | this_XBasicForLoopExpression_8= ruleXBasicForLoopExpression | this_XWhileExpression_9= ruleXWhileExpression | this_XDoWhileExpression_10= ruleXDoWhileExpression | this_XThrowExpression_11= ruleXThrowExpression | this_XReturnExpression_12= ruleXReturnExpression | this_XTryCatchFinallyExpression_13= ruleXTryCatchFinallyExpression | this_XParenthesizedExpression_14= ruleXParenthesizedExpression ) )
            // InternalStubbrLang.g:12196:2: (this_XConstructorCall_0= ruleXConstructorCall | this_XBlockExpression_1= ruleXBlockExpression | this_XSwitchExpression_2= ruleXSwitchExpression | ( ( ( () 'synchronized' '(' ) )=>this_XSynchronizedExpression_3= ruleXSynchronizedExpression ) | this_XFeatureCall_4= ruleXFeatureCall | this_XLiteral_5= ruleXLiteral | this_XIfExpression_6= ruleXIfExpression | ( ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=>this_XForLoopExpression_7= ruleXForLoopExpression ) | this_XBasicForLoopExpression_8= ruleXBasicForLoopExpression | this_XWhileExpression_9= ruleXWhileExpression | this_XDoWhileExpression_10= ruleXDoWhileExpression | this_XThrowExpression_11= ruleXThrowExpression | this_XReturnExpression_12= ruleXReturnExpression | this_XTryCatchFinallyExpression_13= ruleXTryCatchFinallyExpression | this_XParenthesizedExpression_14= ruleXParenthesizedExpression )
            {
            // InternalStubbrLang.g:12196:2: (this_XConstructorCall_0= ruleXConstructorCall | this_XBlockExpression_1= ruleXBlockExpression | this_XSwitchExpression_2= ruleXSwitchExpression | ( ( ( () 'synchronized' '(' ) )=>this_XSynchronizedExpression_3= ruleXSynchronizedExpression ) | this_XFeatureCall_4= ruleXFeatureCall | this_XLiteral_5= ruleXLiteral | this_XIfExpression_6= ruleXIfExpression | ( ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=>this_XForLoopExpression_7= ruleXForLoopExpression ) | this_XBasicForLoopExpression_8= ruleXBasicForLoopExpression | this_XWhileExpression_9= ruleXWhileExpression | this_XDoWhileExpression_10= ruleXDoWhileExpression | this_XThrowExpression_11= ruleXThrowExpression | this_XReturnExpression_12= ruleXReturnExpression | this_XTryCatchFinallyExpression_13= ruleXTryCatchFinallyExpression | this_XParenthesizedExpression_14= ruleXParenthesizedExpression )
            int alt323=15;
            alt323 = dfa323.predict(input);
            switch (alt323) {
                case 1 :
                    // InternalStubbrLang.g:12197:3: this_XConstructorCall_0= ruleXConstructorCall
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXConstructorCallParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XConstructorCall_0=ruleXConstructorCall();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XConstructorCall_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalStubbrLang.g:12206:3: this_XBlockExpression_1= ruleXBlockExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXBlockExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XBlockExpression_1=ruleXBlockExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XBlockExpression_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalStubbrLang.g:12215:3: this_XSwitchExpression_2= ruleXSwitchExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXSwitchExpressionParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XSwitchExpression_2=ruleXSwitchExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XSwitchExpression_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalStubbrLang.g:12224:3: ( ( ( () 'synchronized' '(' ) )=>this_XSynchronizedExpression_3= ruleXSynchronizedExpression )
                    {
                    // InternalStubbrLang.g:12224:3: ( ( ( () 'synchronized' '(' ) )=>this_XSynchronizedExpression_3= ruleXSynchronizedExpression )
                    // InternalStubbrLang.g:12225:4: ( ( () 'synchronized' '(' ) )=>this_XSynchronizedExpression_3= ruleXSynchronizedExpression
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXSynchronizedExpressionParserRuleCall_3());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    this_XSynchronizedExpression_3=ruleXSynchronizedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_XSynchronizedExpression_3;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalStubbrLang.g:12242:3: this_XFeatureCall_4= ruleXFeatureCall
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXFeatureCallParserRuleCall_4());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XFeatureCall_4=ruleXFeatureCall();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XFeatureCall_4;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalStubbrLang.g:12251:3: this_XLiteral_5= ruleXLiteral
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXLiteralParserRuleCall_5());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XLiteral_5=ruleXLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XLiteral_5;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalStubbrLang.g:12260:3: this_XIfExpression_6= ruleXIfExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXIfExpressionParserRuleCall_6());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XIfExpression_6=ruleXIfExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XIfExpression_6;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 8 :
                    // InternalStubbrLang.g:12269:3: ( ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=>this_XForLoopExpression_7= ruleXForLoopExpression )
                    {
                    // InternalStubbrLang.g:12269:3: ( ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=>this_XForLoopExpression_7= ruleXForLoopExpression )
                    // InternalStubbrLang.g:12270:4: ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=>this_XForLoopExpression_7= ruleXForLoopExpression
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXForLoopExpressionParserRuleCall_7());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    this_XForLoopExpression_7=ruleXForLoopExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_XForLoopExpression_7;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 9 :
                    // InternalStubbrLang.g:12293:3: this_XBasicForLoopExpression_8= ruleXBasicForLoopExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXBasicForLoopExpressionParserRuleCall_8());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XBasicForLoopExpression_8=ruleXBasicForLoopExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XBasicForLoopExpression_8;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 10 :
                    // InternalStubbrLang.g:12302:3: this_XWhileExpression_9= ruleXWhileExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXWhileExpressionParserRuleCall_9());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XWhileExpression_9=ruleXWhileExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XWhileExpression_9;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 11 :
                    // InternalStubbrLang.g:12311:3: this_XDoWhileExpression_10= ruleXDoWhileExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXDoWhileExpressionParserRuleCall_10());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XDoWhileExpression_10=ruleXDoWhileExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XDoWhileExpression_10;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 12 :
                    // InternalStubbrLang.g:12320:3: this_XThrowExpression_11= ruleXThrowExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXThrowExpressionParserRuleCall_11());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XThrowExpression_11=ruleXThrowExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XThrowExpression_11;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 13 :
                    // InternalStubbrLang.g:12329:3: this_XReturnExpression_12= ruleXReturnExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXReturnExpressionParserRuleCall_12());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XReturnExpression_12=ruleXReturnExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XReturnExpression_12;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 14 :
                    // InternalStubbrLang.g:12338:3: this_XTryCatchFinallyExpression_13= ruleXTryCatchFinallyExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXTryCatchFinallyExpressionParserRuleCall_13());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XTryCatchFinallyExpression_13=ruleXTryCatchFinallyExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XTryCatchFinallyExpression_13;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 15 :
                    // InternalStubbrLang.g:12347:3: this_XParenthesizedExpression_14= ruleXParenthesizedExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXParenthesizedExpressionParserRuleCall_14());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XParenthesizedExpression_14=ruleXParenthesizedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XParenthesizedExpression_14;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXPrimaryExpression"


    // $ANTLR start "entryRuleXLiteral"
    // InternalStubbrLang.g:12359:1: entryRuleXLiteral returns [EObject current=null] : iv_ruleXLiteral= ruleXLiteral EOF ;
    public final EObject entryRuleXLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXLiteral = null;


        try {
            // InternalStubbrLang.g:12359:49: (iv_ruleXLiteral= ruleXLiteral EOF )
            // InternalStubbrLang.g:12360:2: iv_ruleXLiteral= ruleXLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXLiteral=ruleXLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXLiteral"


    // $ANTLR start "ruleXLiteral"
    // InternalStubbrLang.g:12366:1: ruleXLiteral returns [EObject current=null] : (this_XCollectionLiteral_0= ruleXCollectionLiteral | ( ( ( () '[' ) )=>this_XClosure_1= ruleXClosure ) | this_XBooleanLiteral_2= ruleXBooleanLiteral | this_XNumberLiteral_3= ruleXNumberLiteral | this_XNullLiteral_4= ruleXNullLiteral | this_XStringLiteral_5= ruleXStringLiteral | this_XTypeLiteral_6= ruleXTypeLiteral ) ;
    public final EObject ruleXLiteral() throws RecognitionException {
        EObject current = null;

        EObject this_XCollectionLiteral_0 = null;

        EObject this_XClosure_1 = null;

        EObject this_XBooleanLiteral_2 = null;

        EObject this_XNumberLiteral_3 = null;

        EObject this_XNullLiteral_4 = null;

        EObject this_XStringLiteral_5 = null;

        EObject this_XTypeLiteral_6 = null;



        	enterRule();

        try {
            // InternalStubbrLang.g:12372:2: ( (this_XCollectionLiteral_0= ruleXCollectionLiteral | ( ( ( () '[' ) )=>this_XClosure_1= ruleXClosure ) | this_XBooleanLiteral_2= ruleXBooleanLiteral | this_XNumberLiteral_3= ruleXNumberLiteral | this_XNullLiteral_4= ruleXNullLiteral | this_XStringLiteral_5= ruleXStringLiteral | this_XTypeLiteral_6= ruleXTypeLiteral ) )
            // InternalStubbrLang.g:12373:2: (this_XCollectionLiteral_0= ruleXCollectionLiteral | ( ( ( () '[' ) )=>this_XClosure_1= ruleXClosure ) | this_XBooleanLiteral_2= ruleXBooleanLiteral | this_XNumberLiteral_3= ruleXNumberLiteral | this_XNullLiteral_4= ruleXNullLiteral | this_XStringLiteral_5= ruleXStringLiteral | this_XTypeLiteral_6= ruleXTypeLiteral )
            {
            // InternalStubbrLang.g:12373:2: (this_XCollectionLiteral_0= ruleXCollectionLiteral | ( ( ( () '[' ) )=>this_XClosure_1= ruleXClosure ) | this_XBooleanLiteral_2= ruleXBooleanLiteral | this_XNumberLiteral_3= ruleXNumberLiteral | this_XNullLiteral_4= ruleXNullLiteral | this_XStringLiteral_5= ruleXStringLiteral | this_XTypeLiteral_6= ruleXTypeLiteral )
            int alt324=7;
            int LA324_0 = input.LA(1);

            if ( (LA324_0==193) ) {
                alt324=1;
            }
            else if ( (LA324_0==194) && (synpred21_InternalStubbrLang())) {
                alt324=2;
            }
            else if ( ((LA324_0>=212 && LA324_0<=213)) ) {
                alt324=3;
            }
            else if ( ((LA324_0>=RULE_INT && LA324_0<=RULE_DECIMAL)) ) {
                alt324=4;
            }
            else if ( (LA324_0==214) ) {
                alt324=5;
            }
            else if ( (LA324_0==RULE_STRING) ) {
                alt324=6;
            }
            else if ( (LA324_0==215) ) {
                alt324=7;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 324, 0, input);

                throw nvae;
            }
            switch (alt324) {
                case 1 :
                    // InternalStubbrLang.g:12374:3: this_XCollectionLiteral_0= ruleXCollectionLiteral
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXLiteralAccess().getXCollectionLiteralParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XCollectionLiteral_0=ruleXCollectionLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XCollectionLiteral_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalStubbrLang.g:12383:3: ( ( ( () '[' ) )=>this_XClosure_1= ruleXClosure )
                    {
                    // InternalStubbrLang.g:12383:3: ( ( ( () '[' ) )=>this_XClosure_1= ruleXClosure )
                    // InternalStubbrLang.g:12384:4: ( ( () '[' ) )=>this_XClosure_1= ruleXClosure
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getXLiteralAccess().getXClosureParserRuleCall_1());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    this_XClosure_1=ruleXClosure();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_XClosure_1;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalStubbrLang.g:12400:3: this_XBooleanLiteral_2= ruleXBooleanLiteral
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXLiteralAccess().getXBooleanLiteralParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XBooleanLiteral_2=ruleXBooleanLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XBooleanLiteral_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalStubbrLang.g:12409:3: this_XNumberLiteral_3= ruleXNumberLiteral
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXLiteralAccess().getXNumberLiteralParserRuleCall_3());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XNumberLiteral_3=ruleXNumberLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XNumberLiteral_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalStubbrLang.g:12418:3: this_XNullLiteral_4= ruleXNullLiteral
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXLiteralAccess().getXNullLiteralParserRuleCall_4());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XNullLiteral_4=ruleXNullLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XNullLiteral_4;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalStubbrLang.g:12427:3: this_XStringLiteral_5= ruleXStringLiteral
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXLiteralAccess().getXStringLiteralParserRuleCall_5());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XStringLiteral_5=ruleXStringLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XStringLiteral_5;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalStubbrLang.g:12436:3: this_XTypeLiteral_6= ruleXTypeLiteral
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXLiteralAccess().getXTypeLiteralParserRuleCall_6());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XTypeLiteral_6=ruleXTypeLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XTypeLiteral_6;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXLiteral"


    // $ANTLR start "entryRuleXCollectionLiteral"
    // InternalStubbrLang.g:12448:1: entryRuleXCollectionLiteral returns [EObject current=null] : iv_ruleXCollectionLiteral= ruleXCollectionLiteral EOF ;
    public final EObject entryRuleXCollectionLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXCollectionLiteral = null;


        try {
            // InternalStubbrLang.g:12448:59: (iv_ruleXCollectionLiteral= ruleXCollectionLiteral EOF )
            // InternalStubbrLang.g:12449:2: iv_ruleXCollectionLiteral= ruleXCollectionLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXCollectionLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXCollectionLiteral=ruleXCollectionLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXCollectionLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXCollectionLiteral"


    // $ANTLR start "ruleXCollectionLiteral"
    // InternalStubbrLang.g:12455:1: ruleXCollectionLiteral returns [EObject current=null] : (this_XSetLiteral_0= ruleXSetLiteral | this_XListLiteral_1= ruleXListLiteral ) ;
    public final EObject ruleXCollectionLiteral() throws RecognitionException {
        EObject current = null;

        EObject this_XSetLiteral_0 = null;

        EObject this_XListLiteral_1 = null;



        	enterRule();

        try {
            // InternalStubbrLang.g:12461:2: ( (this_XSetLiteral_0= ruleXSetLiteral | this_XListLiteral_1= ruleXListLiteral ) )
            // InternalStubbrLang.g:12462:2: (this_XSetLiteral_0= ruleXSetLiteral | this_XListLiteral_1= ruleXListLiteral )
            {
            // InternalStubbrLang.g:12462:2: (this_XSetLiteral_0= ruleXSetLiteral | this_XListLiteral_1= ruleXListLiteral )
            int alt325=2;
            int LA325_0 = input.LA(1);

            if ( (LA325_0==193) ) {
                int LA325_1 = input.LA(2);

                if ( (LA325_1==194) ) {
                    alt325=2;
                }
                else if ( (LA325_1==16) ) {
                    alt325=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 325, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 325, 0, input);

                throw nvae;
            }
            switch (alt325) {
                case 1 :
                    // InternalStubbrLang.g:12463:3: this_XSetLiteral_0= ruleXSetLiteral
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXCollectionLiteralAccess().getXSetLiteralParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XSetLiteral_0=ruleXSetLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XSetLiteral_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalStubbrLang.g:12472:3: this_XListLiteral_1= ruleXListLiteral
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXCollectionLiteralAccess().getXListLiteralParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XListLiteral_1=ruleXListLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XListLiteral_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXCollectionLiteral"


    // $ANTLR start "entryRuleXSetLiteral"
    // InternalStubbrLang.g:12484:1: entryRuleXSetLiteral returns [EObject current=null] : iv_ruleXSetLiteral= ruleXSetLiteral EOF ;
    public final EObject entryRuleXSetLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXSetLiteral = null;


        try {
            // InternalStubbrLang.g:12484:52: (iv_ruleXSetLiteral= ruleXSetLiteral EOF )
            // InternalStubbrLang.g:12485:2: iv_ruleXSetLiteral= ruleXSetLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXSetLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXSetLiteral=ruleXSetLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXSetLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXSetLiteral"


    // $ANTLR start "ruleXSetLiteral"
    // InternalStubbrLang.g:12491:1: ruleXSetLiteral returns [EObject current=null] : ( () otherlv_1= '#' otherlv_2= '{' ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= '}' ) ;
    public final EObject ruleXSetLiteral() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_elements_3_0 = null;

        EObject lv_elements_5_0 = null;



        	enterRule();

        try {
            // InternalStubbrLang.g:12497:2: ( ( () otherlv_1= '#' otherlv_2= '{' ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= '}' ) )
            // InternalStubbrLang.g:12498:2: ( () otherlv_1= '#' otherlv_2= '{' ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= '}' )
            {
            // InternalStubbrLang.g:12498:2: ( () otherlv_1= '#' otherlv_2= '{' ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= '}' )
            // InternalStubbrLang.g:12499:3: () otherlv_1= '#' otherlv_2= '{' ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= '}'
            {
            // InternalStubbrLang.g:12499:3: ()
            // InternalStubbrLang.g:12500:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXSetLiteralAccess().getXSetLiteralAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,193,FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXSetLiteralAccess().getNumberSignKeyword_1());
              		
            }
            otherlv_2=(Token)match(input,16,FOLLOW_245); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getXSetLiteralAccess().getLeftCurlyBracketKeyword_2());
              		
            }
            // InternalStubbrLang.g:12514:3: ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )?
            int alt327=2;
            int LA327_0 = input.LA(1);

            if ( ((LA327_0>=RULE_STRING && LA327_0<=RULE_ID)||(LA327_0>=RULE_INT && LA327_0<=RULE_DECIMAL)||LA327_0==16||LA327_0==69||LA327_0==100||LA327_0==162||(LA327_0>=178 && LA327_0<=179)||LA327_0==184||LA327_0==191||(LA327_0>=193 && LA327_0<=194)||LA327_0==198||LA327_0==200||(LA327_0>=203 && LA327_0<=204)||(LA327_0>=207 && LA327_0<=218)||LA327_0==220) ) {
                alt327=1;
            }
            switch (alt327) {
                case 1 :
                    // InternalStubbrLang.g:12515:4: ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )*
                    {
                    // InternalStubbrLang.g:12515:4: ( (lv_elements_3_0= ruleXExpression ) )
                    // InternalStubbrLang.g:12516:5: (lv_elements_3_0= ruleXExpression )
                    {
                    // InternalStubbrLang.g:12516:5: (lv_elements_3_0= ruleXExpression )
                    // InternalStubbrLang.g:12517:6: lv_elements_3_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXSetLiteralAccess().getElementsXExpressionParserRuleCall_3_0_0());
                      					
                    }
                    pushFollow(FOLLOW_81);
                    lv_elements_3_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXSetLiteralRule());
                      						}
                      						add(
                      							current,
                      							"elements",
                      							lv_elements_3_0,
                      							"org.eclipse.xtext.xbase.Xbase.XExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalStubbrLang.g:12534:4: (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )*
                    loop326:
                    do {
                        int alt326=2;
                        int LA326_0 = input.LA(1);

                        if ( (LA326_0==25) ) {
                            alt326=1;
                        }


                        switch (alt326) {
                    	case 1 :
                    	    // InternalStubbrLang.g:12535:5: otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) )
                    	    {
                    	    otherlv_4=(Token)match(input,25,FOLLOW_218); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getXSetLiteralAccess().getCommaKeyword_3_1_0());
                    	      				
                    	    }
                    	    // InternalStubbrLang.g:12539:5: ( (lv_elements_5_0= ruleXExpression ) )
                    	    // InternalStubbrLang.g:12540:6: (lv_elements_5_0= ruleXExpression )
                    	    {
                    	    // InternalStubbrLang.g:12540:6: (lv_elements_5_0= ruleXExpression )
                    	    // InternalStubbrLang.g:12541:7: lv_elements_5_0= ruleXExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getXSetLiteralAccess().getElementsXExpressionParserRuleCall_3_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_81);
                    	    lv_elements_5_0=ruleXExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getXSetLiteralRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"elements",
                    	      								lv_elements_5_0,
                    	      								"org.eclipse.xtext.xbase.Xbase.XExpression");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop326;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_6=(Token)match(input,26,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getXSetLiteralAccess().getRightCurlyBracketKeyword_4());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXSetLiteral"


    // $ANTLR start "entryRuleXListLiteral"
    // InternalStubbrLang.g:12568:1: entryRuleXListLiteral returns [EObject current=null] : iv_ruleXListLiteral= ruleXListLiteral EOF ;
    public final EObject entryRuleXListLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXListLiteral = null;


        try {
            // InternalStubbrLang.g:12568:53: (iv_ruleXListLiteral= ruleXListLiteral EOF )
            // InternalStubbrLang.g:12569:2: iv_ruleXListLiteral= ruleXListLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXListLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXListLiteral=ruleXListLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXListLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXListLiteral"


    // $ANTLR start "ruleXListLiteral"
    // InternalStubbrLang.g:12575:1: ruleXListLiteral returns [EObject current=null] : ( () otherlv_1= '#' otherlv_2= '[' ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= ']' ) ;
    public final EObject ruleXListLiteral() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_elements_3_0 = null;

        EObject lv_elements_5_0 = null;



        	enterRule();

        try {
            // InternalStubbrLang.g:12581:2: ( ( () otherlv_1= '#' otherlv_2= '[' ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= ']' ) )
            // InternalStubbrLang.g:12582:2: ( () otherlv_1= '#' otherlv_2= '[' ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= ']' )
            {
            // InternalStubbrLang.g:12582:2: ( () otherlv_1= '#' otherlv_2= '[' ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= ']' )
            // InternalStubbrLang.g:12583:3: () otherlv_1= '#' otherlv_2= '[' ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= ']'
            {
            // InternalStubbrLang.g:12583:3: ()
            // InternalStubbrLang.g:12584:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXListLiteralAccess().getXListLiteralAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,193,FOLLOW_246); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXListLiteralAccess().getNumberSignKeyword_1());
              		
            }
            otherlv_2=(Token)match(input,194,FOLLOW_247); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getXListLiteralAccess().getLeftSquareBracketKeyword_2());
              		
            }
            // InternalStubbrLang.g:12598:3: ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )?
            int alt329=2;
            int LA329_0 = input.LA(1);

            if ( ((LA329_0>=RULE_STRING && LA329_0<=RULE_ID)||(LA329_0>=RULE_INT && LA329_0<=RULE_DECIMAL)||LA329_0==16||LA329_0==69||LA329_0==100||LA329_0==162||(LA329_0>=178 && LA329_0<=179)||LA329_0==184||LA329_0==191||(LA329_0>=193 && LA329_0<=194)||LA329_0==198||LA329_0==200||(LA329_0>=203 && LA329_0<=204)||(LA329_0>=207 && LA329_0<=218)||LA329_0==220) ) {
                alt329=1;
            }
            switch (alt329) {
                case 1 :
                    // InternalStubbrLang.g:12599:4: ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )*
                    {
                    // InternalStubbrLang.g:12599:4: ( (lv_elements_3_0= ruleXExpression ) )
                    // InternalStubbrLang.g:12600:5: (lv_elements_3_0= ruleXExpression )
                    {
                    // InternalStubbrLang.g:12600:5: (lv_elements_3_0= ruleXExpression )
                    // InternalStubbrLang.g:12601:6: lv_elements_3_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXListLiteralAccess().getElementsXExpressionParserRuleCall_3_0_0());
                      					
                    }
                    pushFollow(FOLLOW_248);
                    lv_elements_3_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXListLiteralRule());
                      						}
                      						add(
                      							current,
                      							"elements",
                      							lv_elements_3_0,
                      							"org.eclipse.xtext.xbase.Xbase.XExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalStubbrLang.g:12618:4: (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )*
                    loop328:
                    do {
                        int alt328=2;
                        int LA328_0 = input.LA(1);

                        if ( (LA328_0==25) ) {
                            alt328=1;
                        }


                        switch (alt328) {
                    	case 1 :
                    	    // InternalStubbrLang.g:12619:5: otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) )
                    	    {
                    	    otherlv_4=(Token)match(input,25,FOLLOW_218); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getXListLiteralAccess().getCommaKeyword_3_1_0());
                    	      				
                    	    }
                    	    // InternalStubbrLang.g:12623:5: ( (lv_elements_5_0= ruleXExpression ) )
                    	    // InternalStubbrLang.g:12624:6: (lv_elements_5_0= ruleXExpression )
                    	    {
                    	    // InternalStubbrLang.g:12624:6: (lv_elements_5_0= ruleXExpression )
                    	    // InternalStubbrLang.g:12625:7: lv_elements_5_0= ruleXExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getXListLiteralAccess().getElementsXExpressionParserRuleCall_3_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_248);
                    	    lv_elements_5_0=ruleXExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getXListLiteralRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"elements",
                    	      								lv_elements_5_0,
                    	      								"org.eclipse.xtext.xbase.Xbase.XExpression");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop328;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_6=(Token)match(input,195,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getXListLiteralAccess().getRightSquareBracketKeyword_4());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXListLiteral"


    // $ANTLR start "entryRuleXClosure"
    // InternalStubbrLang.g:12652:1: entryRuleXClosure returns [EObject current=null] : iv_ruleXClosure= ruleXClosure EOF ;
    public final EObject entryRuleXClosure() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXClosure = null;


        try {
            // InternalStubbrLang.g:12652:49: (iv_ruleXClosure= ruleXClosure EOF )
            // InternalStubbrLang.g:12653:2: iv_ruleXClosure= ruleXClosure EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXClosureRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXClosure=ruleXClosure();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXClosure; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXClosure"


    // $ANTLR start "ruleXClosure"
    // InternalStubbrLang.g:12659:1: ruleXClosure returns [EObject current=null] : ( ( ( ( () '[' ) )=> ( () otherlv_1= '[' ) ) ( ( ( ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= '|' ) ) ) )? ( (lv_expression_6_0= ruleXExpressionInClosure ) ) otherlv_7= ']' ) ;
    public final EObject ruleXClosure() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token lv_explicitSyntax_5_0=null;
        Token otherlv_7=null;
        EObject lv_declaredFormalParameters_2_0 = null;

        EObject lv_declaredFormalParameters_4_0 = null;

        EObject lv_expression_6_0 = null;



        	enterRule();

        try {
            // InternalStubbrLang.g:12665:2: ( ( ( ( ( () '[' ) )=> ( () otherlv_1= '[' ) ) ( ( ( ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= '|' ) ) ) )? ( (lv_expression_6_0= ruleXExpressionInClosure ) ) otherlv_7= ']' ) )
            // InternalStubbrLang.g:12666:2: ( ( ( ( () '[' ) )=> ( () otherlv_1= '[' ) ) ( ( ( ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= '|' ) ) ) )? ( (lv_expression_6_0= ruleXExpressionInClosure ) ) otherlv_7= ']' )
            {
            // InternalStubbrLang.g:12666:2: ( ( ( ( () '[' ) )=> ( () otherlv_1= '[' ) ) ( ( ( ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= '|' ) ) ) )? ( (lv_expression_6_0= ruleXExpressionInClosure ) ) otherlv_7= ']' )
            // InternalStubbrLang.g:12667:3: ( ( ( () '[' ) )=> ( () otherlv_1= '[' ) ) ( ( ( ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= '|' ) ) ) )? ( (lv_expression_6_0= ruleXExpressionInClosure ) ) otherlv_7= ']'
            {
            // InternalStubbrLang.g:12667:3: ( ( ( () '[' ) )=> ( () otherlv_1= '[' ) )
            // InternalStubbrLang.g:12668:4: ( ( () '[' ) )=> ( () otherlv_1= '[' )
            {
            // InternalStubbrLang.g:12674:4: ( () otherlv_1= '[' )
            // InternalStubbrLang.g:12675:5: () otherlv_1= '['
            {
            // InternalStubbrLang.g:12675:5: ()
            // InternalStubbrLang.g:12676:6: 
            {
            if ( state.backtracking==0 ) {

              						current = forceCreateModelElement(
              							grammarAccess.getXClosureAccess().getXClosureAction_0_0_0(),
              							current);
              					
            }

            }

            otherlv_1=(Token)match(input,194,FOLLOW_249); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_1, grammarAccess.getXClosureAccess().getLeftSquareBracketKeyword_0_0_1());
              				
            }

            }


            }

            // InternalStubbrLang.g:12688:3: ( ( ( ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= '|' ) ) ) )?
            int alt332=2;
            alt332 = dfa332.predict(input);
            switch (alt332) {
                case 1 :
                    // InternalStubbrLang.g:12689:4: ( ( ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= '|' ) ) )
                    {
                    // InternalStubbrLang.g:12712:4: ( ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= '|' ) ) )
                    // InternalStubbrLang.g:12713:5: ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= '|' ) )
                    {
                    // InternalStubbrLang.g:12713:5: ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )?
                    int alt331=2;
                    int LA331_0 = input.LA(1);

                    if ( (LA331_0==RULE_ID||LA331_0==175||LA331_0==191) ) {
                        alt331=1;
                    }
                    switch (alt331) {
                        case 1 :
                            // InternalStubbrLang.g:12714:6: ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )*
                            {
                            // InternalStubbrLang.g:12714:6: ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) )
                            // InternalStubbrLang.g:12715:7: (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter )
                            {
                            // InternalStubbrLang.g:12715:7: (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter )
                            // InternalStubbrLang.g:12716:8: lv_declaredFormalParameters_2_0= ruleJvmFormalParameter
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getXClosureAccess().getDeclaredFormalParametersJvmFormalParameterParserRuleCall_1_0_0_0_0());
                              							
                            }
                            pushFollow(FOLLOW_250);
                            lv_declaredFormalParameters_2_0=ruleJvmFormalParameter();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getXClosureRule());
                              								}
                              								add(
                              									current,
                              									"declaredFormalParameters",
                              									lv_declaredFormalParameters_2_0,
                              									"org.eclipse.xtext.xbase.Xbase.JvmFormalParameter");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            // InternalStubbrLang.g:12733:6: (otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )*
                            loop330:
                            do {
                                int alt330=2;
                                int LA330_0 = input.LA(1);

                                if ( (LA330_0==25) ) {
                                    alt330=1;
                                }


                                switch (alt330) {
                            	case 1 :
                            	    // InternalStubbrLang.g:12734:7: otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) )
                            	    {
                            	    otherlv_3=(Token)match(input,25,FOLLOW_52); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      							newLeafNode(otherlv_3, grammarAccess.getXClosureAccess().getCommaKeyword_1_0_0_1_0());
                            	      						
                            	    }
                            	    // InternalStubbrLang.g:12738:7: ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) )
                            	    // InternalStubbrLang.g:12739:8: (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter )
                            	    {
                            	    // InternalStubbrLang.g:12739:8: (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter )
                            	    // InternalStubbrLang.g:12740:9: lv_declaredFormalParameters_4_0= ruleJvmFormalParameter
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									newCompositeNode(grammarAccess.getXClosureAccess().getDeclaredFormalParametersJvmFormalParameterParserRuleCall_1_0_0_1_1_0());
                            	      								
                            	    }
                            	    pushFollow(FOLLOW_250);
                            	    lv_declaredFormalParameters_4_0=ruleJvmFormalParameter();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									if (current==null) {
                            	      										current = createModelElementForParent(grammarAccess.getXClosureRule());
                            	      									}
                            	      									add(
                            	      										current,
                            	      										"declaredFormalParameters",
                            	      										lv_declaredFormalParameters_4_0,
                            	      										"org.eclipse.xtext.xbase.Xbase.JvmFormalParameter");
                            	      									afterParserOrEnumRuleCall();
                            	      								
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop330;
                                }
                            } while (true);


                            }
                            break;

                    }

                    // InternalStubbrLang.g:12759:5: ( (lv_explicitSyntax_5_0= '|' ) )
                    // InternalStubbrLang.g:12760:6: (lv_explicitSyntax_5_0= '|' )
                    {
                    // InternalStubbrLang.g:12760:6: (lv_explicitSyntax_5_0= '|' )
                    // InternalStubbrLang.g:12761:7: lv_explicitSyntax_5_0= '|'
                    {
                    lv_explicitSyntax_5_0=(Token)match(input,196,FOLLOW_251); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_explicitSyntax_5_0, grammarAccess.getXClosureAccess().getExplicitSyntaxVerticalLineKeyword_1_0_1_0());
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getXClosureRule());
                      							}
                      							setWithLastConsumed(current, "explicitSyntax", true, "|");
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:12775:3: ( (lv_expression_6_0= ruleXExpressionInClosure ) )
            // InternalStubbrLang.g:12776:4: (lv_expression_6_0= ruleXExpressionInClosure )
            {
            // InternalStubbrLang.g:12776:4: (lv_expression_6_0= ruleXExpressionInClosure )
            // InternalStubbrLang.g:12777:5: lv_expression_6_0= ruleXExpressionInClosure
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXClosureAccess().getExpressionXExpressionInClosureParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_252);
            lv_expression_6_0=ruleXExpressionInClosure();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXClosureRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_6_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpressionInClosure");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_7=(Token)match(input,195,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_7, grammarAccess.getXClosureAccess().getRightSquareBracketKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXClosure"


    // $ANTLR start "entryRuleXExpressionInClosure"
    // InternalStubbrLang.g:12802:1: entryRuleXExpressionInClosure returns [EObject current=null] : iv_ruleXExpressionInClosure= ruleXExpressionInClosure EOF ;
    public final EObject entryRuleXExpressionInClosure() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXExpressionInClosure = null;


        try {
            // InternalStubbrLang.g:12802:61: (iv_ruleXExpressionInClosure= ruleXExpressionInClosure EOF )
            // InternalStubbrLang.g:12803:2: iv_ruleXExpressionInClosure= ruleXExpressionInClosure EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXExpressionInClosureRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXExpressionInClosure=ruleXExpressionInClosure();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXExpressionInClosure; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXExpressionInClosure"


    // $ANTLR start "ruleXExpressionInClosure"
    // InternalStubbrLang.g:12809:1: ruleXExpressionInClosure returns [EObject current=null] : ( () ( ( (lv_expressions_1_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_2= ';' )? )* ) ;
    public final EObject ruleXExpressionInClosure() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject lv_expressions_1_0 = null;



        	enterRule();

        try {
            // InternalStubbrLang.g:12815:2: ( ( () ( ( (lv_expressions_1_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_2= ';' )? )* ) )
            // InternalStubbrLang.g:12816:2: ( () ( ( (lv_expressions_1_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_2= ';' )? )* )
            {
            // InternalStubbrLang.g:12816:2: ( () ( ( (lv_expressions_1_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_2= ';' )? )* )
            // InternalStubbrLang.g:12817:3: () ( ( (lv_expressions_1_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_2= ';' )? )*
            {
            // InternalStubbrLang.g:12817:3: ()
            // InternalStubbrLang.g:12818:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXExpressionInClosureAccess().getXBlockExpressionAction_0(),
              					current);
              			
            }

            }

            // InternalStubbrLang.g:12824:3: ( ( (lv_expressions_1_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_2= ';' )? )*
            loop334:
            do {
                int alt334=2;
                int LA334_0 = input.LA(1);

                if ( ((LA334_0>=RULE_STRING && LA334_0<=RULE_ID)||(LA334_0>=RULE_INT && LA334_0<=RULE_DECIMAL)||LA334_0==16||LA334_0==69||LA334_0==100||LA334_0==162||(LA334_0>=178 && LA334_0<=179)||LA334_0==184||LA334_0==191||(LA334_0>=193 && LA334_0<=194)||LA334_0==198||LA334_0==200||(LA334_0>=203 && LA334_0<=218)||LA334_0==220) ) {
                    alt334=1;
                }


                switch (alt334) {
            	case 1 :
            	    // InternalStubbrLang.g:12825:4: ( (lv_expressions_1_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_2= ';' )?
            	    {
            	    // InternalStubbrLang.g:12825:4: ( (lv_expressions_1_0= ruleXExpressionOrVarDeclaration ) )
            	    // InternalStubbrLang.g:12826:5: (lv_expressions_1_0= ruleXExpressionOrVarDeclaration )
            	    {
            	    // InternalStubbrLang.g:12826:5: (lv_expressions_1_0= ruleXExpressionOrVarDeclaration )
            	    // InternalStubbrLang.g:12827:6: lv_expressions_1_0= ruleXExpressionOrVarDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getXExpressionInClosureAccess().getExpressionsXExpressionOrVarDeclarationParserRuleCall_1_0_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_253);
            	    lv_expressions_1_0=ruleXExpressionOrVarDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getXExpressionInClosureRule());
            	      						}
            	      						add(
            	      							current,
            	      							"expressions",
            	      							lv_expressions_1_0,
            	      							"org.eclipse.xtext.xbase.Xbase.XExpressionOrVarDeclaration");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalStubbrLang.g:12844:4: (otherlv_2= ';' )?
            	    int alt333=2;
            	    int LA333_0 = input.LA(1);

            	    if ( (LA333_0==197) ) {
            	        alt333=1;
            	    }
            	    switch (alt333) {
            	        case 1 :
            	            // InternalStubbrLang.g:12845:5: otherlv_2= ';'
            	            {
            	            otherlv_2=(Token)match(input,197,FOLLOW_254); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					newLeafNode(otherlv_2, grammarAccess.getXExpressionInClosureAccess().getSemicolonKeyword_1_1());
            	              				
            	            }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop334;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXExpressionInClosure"


    // $ANTLR start "entryRuleXShortClosure"
    // InternalStubbrLang.g:12855:1: entryRuleXShortClosure returns [EObject current=null] : iv_ruleXShortClosure= ruleXShortClosure EOF ;
    public final EObject entryRuleXShortClosure() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXShortClosure = null;


        try {
            // InternalStubbrLang.g:12855:54: (iv_ruleXShortClosure= ruleXShortClosure EOF )
            // InternalStubbrLang.g:12856:2: iv_ruleXShortClosure= ruleXShortClosure EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXShortClosureRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXShortClosure=ruleXShortClosure();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXShortClosure; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXShortClosure"


    // $ANTLR start "ruleXShortClosure"
    // InternalStubbrLang.g:12862:1: ruleXShortClosure returns [EObject current=null] : ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( () ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= ',' ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_4_0= '|' ) ) ) ) ( (lv_expression_5_0= ruleXExpression ) ) ) ;
    public final EObject ruleXShortClosure() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token lv_explicitSyntax_4_0=null;
        EObject lv_declaredFormalParameters_1_0 = null;

        EObject lv_declaredFormalParameters_3_0 = null;

        EObject lv_expression_5_0 = null;



        	enterRule();

        try {
            // InternalStubbrLang.g:12868:2: ( ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( () ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= ',' ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_4_0= '|' ) ) ) ) ( (lv_expression_5_0= ruleXExpression ) ) ) )
            // InternalStubbrLang.g:12869:2: ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( () ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= ',' ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_4_0= '|' ) ) ) ) ( (lv_expression_5_0= ruleXExpression ) ) )
            {
            // InternalStubbrLang.g:12869:2: ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( () ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= ',' ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_4_0= '|' ) ) ) ) ( (lv_expression_5_0= ruleXExpression ) ) )
            // InternalStubbrLang.g:12870:3: ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( () ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= ',' ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_4_0= '|' ) ) ) ) ( (lv_expression_5_0= ruleXExpression ) )
            {
            // InternalStubbrLang.g:12870:3: ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( () ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= ',' ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_4_0= '|' ) ) ) )
            // InternalStubbrLang.g:12871:4: ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( () ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= ',' ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_4_0= '|' ) ) )
            {
            // InternalStubbrLang.g:12896:4: ( () ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= ',' ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_4_0= '|' ) ) )
            // InternalStubbrLang.g:12897:5: () ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= ',' ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_4_0= '|' ) )
            {
            // InternalStubbrLang.g:12897:5: ()
            // InternalStubbrLang.g:12898:6: 
            {
            if ( state.backtracking==0 ) {

              						current = forceCreateModelElement(
              							grammarAccess.getXShortClosureAccess().getXClosureAction_0_0_0(),
              							current);
              					
            }

            }

            // InternalStubbrLang.g:12904:5: ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= ',' ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )?
            int alt336=2;
            int LA336_0 = input.LA(1);

            if ( (LA336_0==RULE_ID||LA336_0==175||LA336_0==191) ) {
                alt336=1;
            }
            switch (alt336) {
                case 1 :
                    // InternalStubbrLang.g:12905:6: ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= ',' ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )*
                    {
                    // InternalStubbrLang.g:12905:6: ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) )
                    // InternalStubbrLang.g:12906:7: (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter )
                    {
                    // InternalStubbrLang.g:12906:7: (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter )
                    // InternalStubbrLang.g:12907:8: lv_declaredFormalParameters_1_0= ruleJvmFormalParameter
                    {
                    if ( state.backtracking==0 ) {

                      								newCompositeNode(grammarAccess.getXShortClosureAccess().getDeclaredFormalParametersJvmFormalParameterParserRuleCall_0_0_1_0_0());
                      							
                    }
                    pushFollow(FOLLOW_250);
                    lv_declaredFormalParameters_1_0=ruleJvmFormalParameter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      								if (current==null) {
                      									current = createModelElementForParent(grammarAccess.getXShortClosureRule());
                      								}
                      								add(
                      									current,
                      									"declaredFormalParameters",
                      									lv_declaredFormalParameters_1_0,
                      									"org.eclipse.xtext.xbase.Xbase.JvmFormalParameter");
                      								afterParserOrEnumRuleCall();
                      							
                    }

                    }


                    }

                    // InternalStubbrLang.g:12924:6: (otherlv_2= ',' ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )*
                    loop335:
                    do {
                        int alt335=2;
                        int LA335_0 = input.LA(1);

                        if ( (LA335_0==25) ) {
                            alt335=1;
                        }


                        switch (alt335) {
                    	case 1 :
                    	    // InternalStubbrLang.g:12925:7: otherlv_2= ',' ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) )
                    	    {
                    	    otherlv_2=(Token)match(input,25,FOLLOW_52); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							newLeafNode(otherlv_2, grammarAccess.getXShortClosureAccess().getCommaKeyword_0_0_1_1_0());
                    	      						
                    	    }
                    	    // InternalStubbrLang.g:12929:7: ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) )
                    	    // InternalStubbrLang.g:12930:8: (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter )
                    	    {
                    	    // InternalStubbrLang.g:12930:8: (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter )
                    	    // InternalStubbrLang.g:12931:9: lv_declaredFormalParameters_3_0= ruleJvmFormalParameter
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      									newCompositeNode(grammarAccess.getXShortClosureAccess().getDeclaredFormalParametersJvmFormalParameterParserRuleCall_0_0_1_1_1_0());
                    	      								
                    	    }
                    	    pushFollow(FOLLOW_250);
                    	    lv_declaredFormalParameters_3_0=ruleJvmFormalParameter();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      									if (current==null) {
                    	      										current = createModelElementForParent(grammarAccess.getXShortClosureRule());
                    	      									}
                    	      									add(
                    	      										current,
                    	      										"declaredFormalParameters",
                    	      										lv_declaredFormalParameters_3_0,
                    	      										"org.eclipse.xtext.xbase.Xbase.JvmFormalParameter");
                    	      									afterParserOrEnumRuleCall();
                    	      								
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop335;
                        }
                    } while (true);


                    }
                    break;

            }

            // InternalStubbrLang.g:12950:5: ( (lv_explicitSyntax_4_0= '|' ) )
            // InternalStubbrLang.g:12951:6: (lv_explicitSyntax_4_0= '|' )
            {
            // InternalStubbrLang.g:12951:6: (lv_explicitSyntax_4_0= '|' )
            // InternalStubbrLang.g:12952:7: lv_explicitSyntax_4_0= '|'
            {
            lv_explicitSyntax_4_0=(Token)match(input,196,FOLLOW_218); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              							newLeafNode(lv_explicitSyntax_4_0, grammarAccess.getXShortClosureAccess().getExplicitSyntaxVerticalLineKeyword_0_0_2_0());
              						
            }
            if ( state.backtracking==0 ) {

              							if (current==null) {
              								current = createModelElement(grammarAccess.getXShortClosureRule());
              							}
              							setWithLastConsumed(current, "explicitSyntax", true, "|");
              						
            }

            }


            }


            }


            }

            // InternalStubbrLang.g:12966:3: ( (lv_expression_5_0= ruleXExpression ) )
            // InternalStubbrLang.g:12967:4: (lv_expression_5_0= ruleXExpression )
            {
            // InternalStubbrLang.g:12967:4: (lv_expression_5_0= ruleXExpression )
            // InternalStubbrLang.g:12968:5: lv_expression_5_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXShortClosureAccess().getExpressionXExpressionParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_expression_5_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXShortClosureRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_5_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXShortClosure"


    // $ANTLR start "entryRuleXParenthesizedExpression"
    // InternalStubbrLang.g:12989:1: entryRuleXParenthesizedExpression returns [EObject current=null] : iv_ruleXParenthesizedExpression= ruleXParenthesizedExpression EOF ;
    public final EObject entryRuleXParenthesizedExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXParenthesizedExpression = null;


        try {
            // InternalStubbrLang.g:12989:65: (iv_ruleXParenthesizedExpression= ruleXParenthesizedExpression EOF )
            // InternalStubbrLang.g:12990:2: iv_ruleXParenthesizedExpression= ruleXParenthesizedExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXParenthesizedExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXParenthesizedExpression=ruleXParenthesizedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXParenthesizedExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXParenthesizedExpression"


    // $ANTLR start "ruleXParenthesizedExpression"
    // InternalStubbrLang.g:12996:1: ruleXParenthesizedExpression returns [EObject current=null] : (otherlv_0= '(' this_XExpression_1= ruleXExpression otherlv_2= ')' ) ;
    public final EObject ruleXParenthesizedExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject this_XExpression_1 = null;



        	enterRule();

        try {
            // InternalStubbrLang.g:13002:2: ( (otherlv_0= '(' this_XExpression_1= ruleXExpression otherlv_2= ')' ) )
            // InternalStubbrLang.g:13003:2: (otherlv_0= '(' this_XExpression_1= ruleXExpression otherlv_2= ')' )
            {
            // InternalStubbrLang.g:13003:2: (otherlv_0= '(' this_XExpression_1= ruleXExpression otherlv_2= ')' )
            // InternalStubbrLang.g:13004:3: otherlv_0= '(' this_XExpression_1= ruleXExpression otherlv_2= ')'
            {
            otherlv_0=(Token)match(input,191,FOLLOW_218); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getXParenthesizedExpressionAccess().getLeftParenthesisKeyword_0());
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getXParenthesizedExpressionAccess().getXExpressionParserRuleCall_1());
              		
            }
            pushFollow(FOLLOW_242);
            this_XExpression_1=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_XExpression_1;
              			afterParserOrEnumRuleCall();
              		
            }
            otherlv_2=(Token)match(input,192,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getXParenthesizedExpressionAccess().getRightParenthesisKeyword_2());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXParenthesizedExpression"


    // $ANTLR start "entryRuleXIfExpression"
    // InternalStubbrLang.g:13024:1: entryRuleXIfExpression returns [EObject current=null] : iv_ruleXIfExpression= ruleXIfExpression EOF ;
    public final EObject entryRuleXIfExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXIfExpression = null;


        try {
            // InternalStubbrLang.g:13024:54: (iv_ruleXIfExpression= ruleXIfExpression EOF )
            // InternalStubbrLang.g:13025:2: iv_ruleXIfExpression= ruleXIfExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXIfExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXIfExpression=ruleXIfExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXIfExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXIfExpression"


    // $ANTLR start "ruleXIfExpression"
    // InternalStubbrLang.g:13031:1: ruleXIfExpression returns [EObject current=null] : ( () otherlv_1= 'if' otherlv_2= '(' ( (lv_if_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_then_5_0= ruleXExpression ) ) ( ( ( 'else' )=>otherlv_6= 'else' ) ( (lv_else_7_0= ruleXExpression ) ) )? ) ;
    public final EObject ruleXIfExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_if_3_0 = null;

        EObject lv_then_5_0 = null;

        EObject lv_else_7_0 = null;



        	enterRule();

        try {
            // InternalStubbrLang.g:13037:2: ( ( () otherlv_1= 'if' otherlv_2= '(' ( (lv_if_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_then_5_0= ruleXExpression ) ) ( ( ( 'else' )=>otherlv_6= 'else' ) ( (lv_else_7_0= ruleXExpression ) ) )? ) )
            // InternalStubbrLang.g:13038:2: ( () otherlv_1= 'if' otherlv_2= '(' ( (lv_if_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_then_5_0= ruleXExpression ) ) ( ( ( 'else' )=>otherlv_6= 'else' ) ( (lv_else_7_0= ruleXExpression ) ) )? )
            {
            // InternalStubbrLang.g:13038:2: ( () otherlv_1= 'if' otherlv_2= '(' ( (lv_if_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_then_5_0= ruleXExpression ) ) ( ( ( 'else' )=>otherlv_6= 'else' ) ( (lv_else_7_0= ruleXExpression ) ) )? )
            // InternalStubbrLang.g:13039:3: () otherlv_1= 'if' otherlv_2= '(' ( (lv_if_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_then_5_0= ruleXExpression ) ) ( ( ( 'else' )=>otherlv_6= 'else' ) ( (lv_else_7_0= ruleXExpression ) ) )?
            {
            // InternalStubbrLang.g:13039:3: ()
            // InternalStubbrLang.g:13040:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXIfExpressionAccess().getXIfExpressionAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,198,FOLLOW_255); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXIfExpressionAccess().getIfKeyword_1());
              		
            }
            otherlv_2=(Token)match(input,191,FOLLOW_218); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getXIfExpressionAccess().getLeftParenthesisKeyword_2());
              		
            }
            // InternalStubbrLang.g:13054:3: ( (lv_if_3_0= ruleXExpression ) )
            // InternalStubbrLang.g:13055:4: (lv_if_3_0= ruleXExpression )
            {
            // InternalStubbrLang.g:13055:4: (lv_if_3_0= ruleXExpression )
            // InternalStubbrLang.g:13056:5: lv_if_3_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXIfExpressionAccess().getIfXExpressionParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_242);
            lv_if_3_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXIfExpressionRule());
              					}
              					set(
              						current,
              						"if",
              						lv_if_3_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_4=(Token)match(input,192,FOLLOW_218); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getXIfExpressionAccess().getRightParenthesisKeyword_4());
              		
            }
            // InternalStubbrLang.g:13077:3: ( (lv_then_5_0= ruleXExpression ) )
            // InternalStubbrLang.g:13078:4: (lv_then_5_0= ruleXExpression )
            {
            // InternalStubbrLang.g:13078:4: (lv_then_5_0= ruleXExpression )
            // InternalStubbrLang.g:13079:5: lv_then_5_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXIfExpressionAccess().getThenXExpressionParserRuleCall_5_0());
              				
            }
            pushFollow(FOLLOW_256);
            lv_then_5_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXIfExpressionRule());
              					}
              					set(
              						current,
              						"then",
              						lv_then_5_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalStubbrLang.g:13096:3: ( ( ( 'else' )=>otherlv_6= 'else' ) ( (lv_else_7_0= ruleXExpression ) ) )?
            int alt337=2;
            int LA337_0 = input.LA(1);

            if ( (LA337_0==199) ) {
                int LA337_1 = input.LA(2);

                if ( (synpred25_InternalStubbrLang()) ) {
                    alt337=1;
                }
            }
            switch (alt337) {
                case 1 :
                    // InternalStubbrLang.g:13097:4: ( ( 'else' )=>otherlv_6= 'else' ) ( (lv_else_7_0= ruleXExpression ) )
                    {
                    // InternalStubbrLang.g:13097:4: ( ( 'else' )=>otherlv_6= 'else' )
                    // InternalStubbrLang.g:13098:5: ( 'else' )=>otherlv_6= 'else'
                    {
                    otherlv_6=(Token)match(input,199,FOLLOW_218); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_6, grammarAccess.getXIfExpressionAccess().getElseKeyword_6_0());
                      				
                    }

                    }

                    // InternalStubbrLang.g:13104:4: ( (lv_else_7_0= ruleXExpression ) )
                    // InternalStubbrLang.g:13105:5: (lv_else_7_0= ruleXExpression )
                    {
                    // InternalStubbrLang.g:13105:5: (lv_else_7_0= ruleXExpression )
                    // InternalStubbrLang.g:13106:6: lv_else_7_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXIfExpressionAccess().getElseXExpressionParserRuleCall_6_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_else_7_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXIfExpressionRule());
                      						}
                      						set(
                      							current,
                      							"else",
                      							lv_else_7_0,
                      							"org.eclipse.xtext.xbase.Xbase.XExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXIfExpression"


    // $ANTLR start "entryRuleXSwitchExpression"
    // InternalStubbrLang.g:13128:1: entryRuleXSwitchExpression returns [EObject current=null] : iv_ruleXSwitchExpression= ruleXSwitchExpression EOF ;
    public final EObject entryRuleXSwitchExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXSwitchExpression = null;


        try {
            // InternalStubbrLang.g:13128:58: (iv_ruleXSwitchExpression= ruleXSwitchExpression EOF )
            // InternalStubbrLang.g:13129:2: iv_ruleXSwitchExpression= ruleXSwitchExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXSwitchExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXSwitchExpression=ruleXSwitchExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXSwitchExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXSwitchExpression"


    // $ANTLR start "ruleXSwitchExpression"
    // InternalStubbrLang.g:13135:1: ruleXSwitchExpression returns [EObject current=null] : ( () otherlv_1= 'switch' ( ( ( ( ( '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> (otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_switch_5_0= ruleXExpression ) ) otherlv_6= ')' ) | ( ( ( ( ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':' ) )? ( (lv_switch_9_0= ruleXExpression ) ) ) ) otherlv_10= '{' ( (lv_cases_11_0= ruleXCasePart ) )* (otherlv_12= 'default' otherlv_13= ':' ( (lv_default_14_0= ruleXExpression ) ) )? otherlv_15= '}' ) ;
    public final EObject ruleXSwitchExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        EObject lv_declaredParam_3_0 = null;

        EObject lv_switch_5_0 = null;

        EObject lv_declaredParam_7_0 = null;

        EObject lv_switch_9_0 = null;

        EObject lv_cases_11_0 = null;

        EObject lv_default_14_0 = null;



        	enterRule();

        try {
            // InternalStubbrLang.g:13141:2: ( ( () otherlv_1= 'switch' ( ( ( ( ( '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> (otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_switch_5_0= ruleXExpression ) ) otherlv_6= ')' ) | ( ( ( ( ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':' ) )? ( (lv_switch_9_0= ruleXExpression ) ) ) ) otherlv_10= '{' ( (lv_cases_11_0= ruleXCasePart ) )* (otherlv_12= 'default' otherlv_13= ':' ( (lv_default_14_0= ruleXExpression ) ) )? otherlv_15= '}' ) )
            // InternalStubbrLang.g:13142:2: ( () otherlv_1= 'switch' ( ( ( ( ( '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> (otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_switch_5_0= ruleXExpression ) ) otherlv_6= ')' ) | ( ( ( ( ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':' ) )? ( (lv_switch_9_0= ruleXExpression ) ) ) ) otherlv_10= '{' ( (lv_cases_11_0= ruleXCasePart ) )* (otherlv_12= 'default' otherlv_13= ':' ( (lv_default_14_0= ruleXExpression ) ) )? otherlv_15= '}' )
            {
            // InternalStubbrLang.g:13142:2: ( () otherlv_1= 'switch' ( ( ( ( ( '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> (otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_switch_5_0= ruleXExpression ) ) otherlv_6= ')' ) | ( ( ( ( ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':' ) )? ( (lv_switch_9_0= ruleXExpression ) ) ) ) otherlv_10= '{' ( (lv_cases_11_0= ruleXCasePart ) )* (otherlv_12= 'default' otherlv_13= ':' ( (lv_default_14_0= ruleXExpression ) ) )? otherlv_15= '}' )
            // InternalStubbrLang.g:13143:3: () otherlv_1= 'switch' ( ( ( ( ( '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> (otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_switch_5_0= ruleXExpression ) ) otherlv_6= ')' ) | ( ( ( ( ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':' ) )? ( (lv_switch_9_0= ruleXExpression ) ) ) ) otherlv_10= '{' ( (lv_cases_11_0= ruleXCasePart ) )* (otherlv_12= 'default' otherlv_13= ':' ( (lv_default_14_0= ruleXExpression ) ) )? otherlv_15= '}'
            {
            // InternalStubbrLang.g:13143:3: ()
            // InternalStubbrLang.g:13144:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXSwitchExpressionAccess().getXSwitchExpressionAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,200,FOLLOW_257); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXSwitchExpressionAccess().getSwitchKeyword_1());
              		
            }
            // InternalStubbrLang.g:13154:3: ( ( ( ( ( '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> (otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_switch_5_0= ruleXExpression ) ) otherlv_6= ')' ) | ( ( ( ( ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':' ) )? ( (lv_switch_9_0= ruleXExpression ) ) ) )
            int alt339=2;
            alt339 = dfa339.predict(input);
            switch (alt339) {
                case 1 :
                    // InternalStubbrLang.g:13155:4: ( ( ( ( '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> (otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_switch_5_0= ruleXExpression ) ) otherlv_6= ')' )
                    {
                    // InternalStubbrLang.g:13155:4: ( ( ( ( '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> (otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_switch_5_0= ruleXExpression ) ) otherlv_6= ')' )
                    // InternalStubbrLang.g:13156:5: ( ( ( '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> (otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_switch_5_0= ruleXExpression ) ) otherlv_6= ')'
                    {
                    // InternalStubbrLang.g:13156:5: ( ( ( '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> (otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) )
                    // InternalStubbrLang.g:13157:6: ( ( '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> (otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' )
                    {
                    // InternalStubbrLang.g:13167:6: (otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' )
                    // InternalStubbrLang.g:13168:7: otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':'
                    {
                    otherlv_2=(Token)match(input,191,FOLLOW_52); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(otherlv_2, grammarAccess.getXSwitchExpressionAccess().getLeftParenthesisKeyword_2_0_0_0_0());
                      						
                    }
                    // InternalStubbrLang.g:13172:7: ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) )
                    // InternalStubbrLang.g:13173:8: (lv_declaredParam_3_0= ruleJvmFormalParameter )
                    {
                    // InternalStubbrLang.g:13173:8: (lv_declaredParam_3_0= ruleJvmFormalParameter )
                    // InternalStubbrLang.g:13174:9: lv_declaredParam_3_0= ruleJvmFormalParameter
                    {
                    if ( state.backtracking==0 ) {

                      									newCompositeNode(grammarAccess.getXSwitchExpressionAccess().getDeclaredParamJvmFormalParameterParserRuleCall_2_0_0_0_1_0());
                      								
                    }
                    pushFollow(FOLLOW_258);
                    lv_declaredParam_3_0=ruleJvmFormalParameter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      									if (current==null) {
                      										current = createModelElementForParent(grammarAccess.getXSwitchExpressionRule());
                      									}
                      									set(
                      										current,
                      										"declaredParam",
                      										lv_declaredParam_3_0,
                      										"org.eclipse.xtext.xbase.Xbase.JvmFormalParameter");
                      									afterParserOrEnumRuleCall();
                      								
                    }

                    }


                    }

                    otherlv_4=(Token)match(input,201,FOLLOW_218); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(otherlv_4, grammarAccess.getXSwitchExpressionAccess().getColonKeyword_2_0_0_0_2());
                      						
                    }

                    }


                    }

                    // InternalStubbrLang.g:13197:5: ( (lv_switch_5_0= ruleXExpression ) )
                    // InternalStubbrLang.g:13198:6: (lv_switch_5_0= ruleXExpression )
                    {
                    // InternalStubbrLang.g:13198:6: (lv_switch_5_0= ruleXExpression )
                    // InternalStubbrLang.g:13199:7: lv_switch_5_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getXSwitchExpressionAccess().getSwitchXExpressionParserRuleCall_2_0_1_0());
                      						
                    }
                    pushFollow(FOLLOW_242);
                    lv_switch_5_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getXSwitchExpressionRule());
                      							}
                      							set(
                      								current,
                      								"switch",
                      								lv_switch_5_0,
                      								"org.eclipse.xtext.xbase.Xbase.XExpression");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    otherlv_6=(Token)match(input,192,FOLLOW_6); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_6, grammarAccess.getXSwitchExpressionAccess().getRightParenthesisKeyword_2_0_2());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalStubbrLang.g:13222:4: ( ( ( ( ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':' ) )? ( (lv_switch_9_0= ruleXExpression ) ) )
                    {
                    // InternalStubbrLang.g:13222:4: ( ( ( ( ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':' ) )? ( (lv_switch_9_0= ruleXExpression ) ) )
                    // InternalStubbrLang.g:13223:5: ( ( ( ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':' ) )? ( (lv_switch_9_0= ruleXExpression ) )
                    {
                    // InternalStubbrLang.g:13223:5: ( ( ( ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':' ) )?
                    int alt338=2;
                    alt338 = dfa338.predict(input);
                    switch (alt338) {
                        case 1 :
                            // InternalStubbrLang.g:13224:6: ( ( ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':' )
                            {
                            // InternalStubbrLang.g:13233:6: ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':' )
                            // InternalStubbrLang.g:13234:7: ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':'
                            {
                            // InternalStubbrLang.g:13234:7: ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) )
                            // InternalStubbrLang.g:13235:8: (lv_declaredParam_7_0= ruleJvmFormalParameter )
                            {
                            // InternalStubbrLang.g:13235:8: (lv_declaredParam_7_0= ruleJvmFormalParameter )
                            // InternalStubbrLang.g:13236:9: lv_declaredParam_7_0= ruleJvmFormalParameter
                            {
                            if ( state.backtracking==0 ) {

                              									newCompositeNode(grammarAccess.getXSwitchExpressionAccess().getDeclaredParamJvmFormalParameterParserRuleCall_2_1_0_0_0_0());
                              								
                            }
                            pushFollow(FOLLOW_258);
                            lv_declaredParam_7_0=ruleJvmFormalParameter();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              									if (current==null) {
                              										current = createModelElementForParent(grammarAccess.getXSwitchExpressionRule());
                              									}
                              									set(
                              										current,
                              										"declaredParam",
                              										lv_declaredParam_7_0,
                              										"org.eclipse.xtext.xbase.Xbase.JvmFormalParameter");
                              									afterParserOrEnumRuleCall();
                              								
                            }

                            }


                            }

                            otherlv_8=(Token)match(input,201,FOLLOW_218); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(otherlv_8, grammarAccess.getXSwitchExpressionAccess().getColonKeyword_2_1_0_0_1());
                              						
                            }

                            }


                            }
                            break;

                    }

                    // InternalStubbrLang.g:13259:5: ( (lv_switch_9_0= ruleXExpression ) )
                    // InternalStubbrLang.g:13260:6: (lv_switch_9_0= ruleXExpression )
                    {
                    // InternalStubbrLang.g:13260:6: (lv_switch_9_0= ruleXExpression )
                    // InternalStubbrLang.g:13261:7: lv_switch_9_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getXSwitchExpressionAccess().getSwitchXExpressionParserRuleCall_2_1_1_0());
                      						
                    }
                    pushFollow(FOLLOW_6);
                    lv_switch_9_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getXSwitchExpressionRule());
                      							}
                      							set(
                      								current,
                      								"switch",
                      								lv_switch_9_0,
                      								"org.eclipse.xtext.xbase.Xbase.XExpression");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }

            otherlv_10=(Token)match(input,16,FOLLOW_259); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_10, grammarAccess.getXSwitchExpressionAccess().getLeftCurlyBracketKeyword_3());
              		
            }
            // InternalStubbrLang.g:13284:3: ( (lv_cases_11_0= ruleXCasePart ) )*
            loop340:
            do {
                int alt340=2;
                int LA340_0 = input.LA(1);

                if ( (LA340_0==RULE_ID||LA340_0==25||LA340_0==175||LA340_0==191||(LA340_0>=201 && LA340_0<=202)) ) {
                    alt340=1;
                }


                switch (alt340) {
            	case 1 :
            	    // InternalStubbrLang.g:13285:4: (lv_cases_11_0= ruleXCasePart )
            	    {
            	    // InternalStubbrLang.g:13285:4: (lv_cases_11_0= ruleXCasePart )
            	    // InternalStubbrLang.g:13286:5: lv_cases_11_0= ruleXCasePart
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getXSwitchExpressionAccess().getCasesXCasePartParserRuleCall_4_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_259);
            	    lv_cases_11_0=ruleXCasePart();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getXSwitchExpressionRule());
            	      					}
            	      					add(
            	      						current,
            	      						"cases",
            	      						lv_cases_11_0,
            	      						"org.eclipse.xtext.xbase.Xbase.XCasePart");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop340;
                }
            } while (true);

            // InternalStubbrLang.g:13303:3: (otherlv_12= 'default' otherlv_13= ':' ( (lv_default_14_0= ruleXExpression ) ) )?
            int alt341=2;
            int LA341_0 = input.LA(1);

            if ( (LA341_0==92) ) {
                alt341=1;
            }
            switch (alt341) {
                case 1 :
                    // InternalStubbrLang.g:13304:4: otherlv_12= 'default' otherlv_13= ':' ( (lv_default_14_0= ruleXExpression ) )
                    {
                    otherlv_12=(Token)match(input,92,FOLLOW_258); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_12, grammarAccess.getXSwitchExpressionAccess().getDefaultKeyword_5_0());
                      			
                    }
                    otherlv_13=(Token)match(input,201,FOLLOW_218); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_13, grammarAccess.getXSwitchExpressionAccess().getColonKeyword_5_1());
                      			
                    }
                    // InternalStubbrLang.g:13312:4: ( (lv_default_14_0= ruleXExpression ) )
                    // InternalStubbrLang.g:13313:5: (lv_default_14_0= ruleXExpression )
                    {
                    // InternalStubbrLang.g:13313:5: (lv_default_14_0= ruleXExpression )
                    // InternalStubbrLang.g:13314:6: lv_default_14_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXSwitchExpressionAccess().getDefaultXExpressionParserRuleCall_5_2_0());
                      					
                    }
                    pushFollow(FOLLOW_29);
                    lv_default_14_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXSwitchExpressionRule());
                      						}
                      						set(
                      							current,
                      							"default",
                      							lv_default_14_0,
                      							"org.eclipse.xtext.xbase.Xbase.XExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_15=(Token)match(input,26,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_15, grammarAccess.getXSwitchExpressionAccess().getRightCurlyBracketKeyword_6());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXSwitchExpression"


    // $ANTLR start "entryRuleXCasePart"
    // InternalStubbrLang.g:13340:1: entryRuleXCasePart returns [EObject current=null] : iv_ruleXCasePart= ruleXCasePart EOF ;
    public final EObject entryRuleXCasePart() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXCasePart = null;


        try {
            // InternalStubbrLang.g:13340:50: (iv_ruleXCasePart= ruleXCasePart EOF )
            // InternalStubbrLang.g:13341:2: iv_ruleXCasePart= ruleXCasePart EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXCasePartRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXCasePart=ruleXCasePart();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXCasePart; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXCasePart"


    // $ANTLR start "ruleXCasePart"
    // InternalStubbrLang.g:13347:1: ruleXCasePart returns [EObject current=null] : ( () ( (lv_typeGuard_1_0= ruleJvmTypeReference ) )? (otherlv_2= 'case' ( (lv_case_3_0= ruleXExpression ) ) )? ( (otherlv_4= ':' ( (lv_then_5_0= ruleXExpression ) ) ) | ( (lv_fallThrough_6_0= ',' ) ) ) ) ;
    public final EObject ruleXCasePart() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        Token lv_fallThrough_6_0=null;
        EObject lv_typeGuard_1_0 = null;

        EObject lv_case_3_0 = null;

        EObject lv_then_5_0 = null;



        	enterRule();

        try {
            // InternalStubbrLang.g:13353:2: ( ( () ( (lv_typeGuard_1_0= ruleJvmTypeReference ) )? (otherlv_2= 'case' ( (lv_case_3_0= ruleXExpression ) ) )? ( (otherlv_4= ':' ( (lv_then_5_0= ruleXExpression ) ) ) | ( (lv_fallThrough_6_0= ',' ) ) ) ) )
            // InternalStubbrLang.g:13354:2: ( () ( (lv_typeGuard_1_0= ruleJvmTypeReference ) )? (otherlv_2= 'case' ( (lv_case_3_0= ruleXExpression ) ) )? ( (otherlv_4= ':' ( (lv_then_5_0= ruleXExpression ) ) ) | ( (lv_fallThrough_6_0= ',' ) ) ) )
            {
            // InternalStubbrLang.g:13354:2: ( () ( (lv_typeGuard_1_0= ruleJvmTypeReference ) )? (otherlv_2= 'case' ( (lv_case_3_0= ruleXExpression ) ) )? ( (otherlv_4= ':' ( (lv_then_5_0= ruleXExpression ) ) ) | ( (lv_fallThrough_6_0= ',' ) ) ) )
            // InternalStubbrLang.g:13355:3: () ( (lv_typeGuard_1_0= ruleJvmTypeReference ) )? (otherlv_2= 'case' ( (lv_case_3_0= ruleXExpression ) ) )? ( (otherlv_4= ':' ( (lv_then_5_0= ruleXExpression ) ) ) | ( (lv_fallThrough_6_0= ',' ) ) )
            {
            // InternalStubbrLang.g:13355:3: ()
            // InternalStubbrLang.g:13356:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXCasePartAccess().getXCasePartAction_0(),
              					current);
              			
            }

            }

            // InternalStubbrLang.g:13362:3: ( (lv_typeGuard_1_0= ruleJvmTypeReference ) )?
            int alt342=2;
            int LA342_0 = input.LA(1);

            if ( (LA342_0==RULE_ID||LA342_0==175||LA342_0==191) ) {
                alt342=1;
            }
            switch (alt342) {
                case 1 :
                    // InternalStubbrLang.g:13363:4: (lv_typeGuard_1_0= ruleJvmTypeReference )
                    {
                    // InternalStubbrLang.g:13363:4: (lv_typeGuard_1_0= ruleJvmTypeReference )
                    // InternalStubbrLang.g:13364:5: lv_typeGuard_1_0= ruleJvmTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getXCasePartAccess().getTypeGuardJvmTypeReferenceParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_260);
                    lv_typeGuard_1_0=ruleJvmTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getXCasePartRule());
                      					}
                      					set(
                      						current,
                      						"typeGuard",
                      						lv_typeGuard_1_0,
                      						"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:13381:3: (otherlv_2= 'case' ( (lv_case_3_0= ruleXExpression ) ) )?
            int alt343=2;
            int LA343_0 = input.LA(1);

            if ( (LA343_0==202) ) {
                alt343=1;
            }
            switch (alt343) {
                case 1 :
                    // InternalStubbrLang.g:13382:4: otherlv_2= 'case' ( (lv_case_3_0= ruleXExpression ) )
                    {
                    otherlv_2=(Token)match(input,202,FOLLOW_218); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getXCasePartAccess().getCaseKeyword_2_0());
                      			
                    }
                    // InternalStubbrLang.g:13386:4: ( (lv_case_3_0= ruleXExpression ) )
                    // InternalStubbrLang.g:13387:5: (lv_case_3_0= ruleXExpression )
                    {
                    // InternalStubbrLang.g:13387:5: (lv_case_3_0= ruleXExpression )
                    // InternalStubbrLang.g:13388:6: lv_case_3_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXCasePartAccess().getCaseXExpressionParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_261);
                    lv_case_3_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXCasePartRule());
                      						}
                      						set(
                      							current,
                      							"case",
                      							lv_case_3_0,
                      							"org.eclipse.xtext.xbase.Xbase.XExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:13406:3: ( (otherlv_4= ':' ( (lv_then_5_0= ruleXExpression ) ) ) | ( (lv_fallThrough_6_0= ',' ) ) )
            int alt344=2;
            int LA344_0 = input.LA(1);

            if ( (LA344_0==201) ) {
                alt344=1;
            }
            else if ( (LA344_0==25) ) {
                alt344=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 344, 0, input);

                throw nvae;
            }
            switch (alt344) {
                case 1 :
                    // InternalStubbrLang.g:13407:4: (otherlv_4= ':' ( (lv_then_5_0= ruleXExpression ) ) )
                    {
                    // InternalStubbrLang.g:13407:4: (otherlv_4= ':' ( (lv_then_5_0= ruleXExpression ) ) )
                    // InternalStubbrLang.g:13408:5: otherlv_4= ':' ( (lv_then_5_0= ruleXExpression ) )
                    {
                    otherlv_4=(Token)match(input,201,FOLLOW_218); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_4, grammarAccess.getXCasePartAccess().getColonKeyword_3_0_0());
                      				
                    }
                    // InternalStubbrLang.g:13412:5: ( (lv_then_5_0= ruleXExpression ) )
                    // InternalStubbrLang.g:13413:6: (lv_then_5_0= ruleXExpression )
                    {
                    // InternalStubbrLang.g:13413:6: (lv_then_5_0= ruleXExpression )
                    // InternalStubbrLang.g:13414:7: lv_then_5_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getXCasePartAccess().getThenXExpressionParserRuleCall_3_0_1_0());
                      						
                    }
                    pushFollow(FOLLOW_2);
                    lv_then_5_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getXCasePartRule());
                      							}
                      							set(
                      								current,
                      								"then",
                      								lv_then_5_0,
                      								"org.eclipse.xtext.xbase.Xbase.XExpression");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalStubbrLang.g:13433:4: ( (lv_fallThrough_6_0= ',' ) )
                    {
                    // InternalStubbrLang.g:13433:4: ( (lv_fallThrough_6_0= ',' ) )
                    // InternalStubbrLang.g:13434:5: (lv_fallThrough_6_0= ',' )
                    {
                    // InternalStubbrLang.g:13434:5: (lv_fallThrough_6_0= ',' )
                    // InternalStubbrLang.g:13435:6: lv_fallThrough_6_0= ','
                    {
                    lv_fallThrough_6_0=(Token)match(input,25,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_fallThrough_6_0, grammarAccess.getXCasePartAccess().getFallThroughCommaKeyword_3_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getXCasePartRule());
                      						}
                      						setWithLastConsumed(current, "fallThrough", true, ",");
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXCasePart"


    // $ANTLR start "entryRuleXForLoopExpression"
    // InternalStubbrLang.g:13452:1: entryRuleXForLoopExpression returns [EObject current=null] : iv_ruleXForLoopExpression= ruleXForLoopExpression EOF ;
    public final EObject entryRuleXForLoopExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXForLoopExpression = null;


        try {
            // InternalStubbrLang.g:13452:59: (iv_ruleXForLoopExpression= ruleXForLoopExpression EOF )
            // InternalStubbrLang.g:13453:2: iv_ruleXForLoopExpression= ruleXForLoopExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXForLoopExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXForLoopExpression=ruleXForLoopExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXForLoopExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXForLoopExpression"


    // $ANTLR start "ruleXForLoopExpression"
    // InternalStubbrLang.g:13459:1: ruleXForLoopExpression returns [EObject current=null] : ( ( ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( () otherlv_1= 'for' otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_forExpression_5_0= ruleXExpression ) ) otherlv_6= ')' ( (lv_eachExpression_7_0= ruleXExpression ) ) ) ;
    public final EObject ruleXForLoopExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_declaredParam_3_0 = null;

        EObject lv_forExpression_5_0 = null;

        EObject lv_eachExpression_7_0 = null;



        	enterRule();

        try {
            // InternalStubbrLang.g:13465:2: ( ( ( ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( () otherlv_1= 'for' otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_forExpression_5_0= ruleXExpression ) ) otherlv_6= ')' ( (lv_eachExpression_7_0= ruleXExpression ) ) ) )
            // InternalStubbrLang.g:13466:2: ( ( ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( () otherlv_1= 'for' otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_forExpression_5_0= ruleXExpression ) ) otherlv_6= ')' ( (lv_eachExpression_7_0= ruleXExpression ) ) )
            {
            // InternalStubbrLang.g:13466:2: ( ( ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( () otherlv_1= 'for' otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_forExpression_5_0= ruleXExpression ) ) otherlv_6= ')' ( (lv_eachExpression_7_0= ruleXExpression ) ) )
            // InternalStubbrLang.g:13467:3: ( ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( () otherlv_1= 'for' otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_forExpression_5_0= ruleXExpression ) ) otherlv_6= ')' ( (lv_eachExpression_7_0= ruleXExpression ) )
            {
            // InternalStubbrLang.g:13467:3: ( ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( () otherlv_1= 'for' otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) )
            // InternalStubbrLang.g:13468:4: ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( () otherlv_1= 'for' otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' )
            {
            // InternalStubbrLang.g:13481:4: ( () otherlv_1= 'for' otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' )
            // InternalStubbrLang.g:13482:5: () otherlv_1= 'for' otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':'
            {
            // InternalStubbrLang.g:13482:5: ()
            // InternalStubbrLang.g:13483:6: 
            {
            if ( state.backtracking==0 ) {

              						current = forceCreateModelElement(
              							grammarAccess.getXForLoopExpressionAccess().getXForLoopExpressionAction_0_0_0(),
              							current);
              					
            }

            }

            otherlv_1=(Token)match(input,100,FOLLOW_255); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_1, grammarAccess.getXForLoopExpressionAccess().getForKeyword_0_0_1());
              				
            }
            otherlv_2=(Token)match(input,191,FOLLOW_52); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_2, grammarAccess.getXForLoopExpressionAccess().getLeftParenthesisKeyword_0_0_2());
              				
            }
            // InternalStubbrLang.g:13497:5: ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) )
            // InternalStubbrLang.g:13498:6: (lv_declaredParam_3_0= ruleJvmFormalParameter )
            {
            // InternalStubbrLang.g:13498:6: (lv_declaredParam_3_0= ruleJvmFormalParameter )
            // InternalStubbrLang.g:13499:7: lv_declaredParam_3_0= ruleJvmFormalParameter
            {
            if ( state.backtracking==0 ) {

              							newCompositeNode(grammarAccess.getXForLoopExpressionAccess().getDeclaredParamJvmFormalParameterParserRuleCall_0_0_3_0());
              						
            }
            pushFollow(FOLLOW_258);
            lv_declaredParam_3_0=ruleJvmFormalParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              							if (current==null) {
              								current = createModelElementForParent(grammarAccess.getXForLoopExpressionRule());
              							}
              							set(
              								current,
              								"declaredParam",
              								lv_declaredParam_3_0,
              								"org.eclipse.xtext.xbase.Xbase.JvmFormalParameter");
              							afterParserOrEnumRuleCall();
              						
            }

            }


            }

            otherlv_4=(Token)match(input,201,FOLLOW_218); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_4, grammarAccess.getXForLoopExpressionAccess().getColonKeyword_0_0_4());
              				
            }

            }


            }

            // InternalStubbrLang.g:13522:3: ( (lv_forExpression_5_0= ruleXExpression ) )
            // InternalStubbrLang.g:13523:4: (lv_forExpression_5_0= ruleXExpression )
            {
            // InternalStubbrLang.g:13523:4: (lv_forExpression_5_0= ruleXExpression )
            // InternalStubbrLang.g:13524:5: lv_forExpression_5_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXForLoopExpressionAccess().getForExpressionXExpressionParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_242);
            lv_forExpression_5_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXForLoopExpressionRule());
              					}
              					set(
              						current,
              						"forExpression",
              						lv_forExpression_5_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_6=(Token)match(input,192,FOLLOW_218); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getXForLoopExpressionAccess().getRightParenthesisKeyword_2());
              		
            }
            // InternalStubbrLang.g:13545:3: ( (lv_eachExpression_7_0= ruleXExpression ) )
            // InternalStubbrLang.g:13546:4: (lv_eachExpression_7_0= ruleXExpression )
            {
            // InternalStubbrLang.g:13546:4: (lv_eachExpression_7_0= ruleXExpression )
            // InternalStubbrLang.g:13547:5: lv_eachExpression_7_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXForLoopExpressionAccess().getEachExpressionXExpressionParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_eachExpression_7_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXForLoopExpressionRule());
              					}
              					set(
              						current,
              						"eachExpression",
              						lv_eachExpression_7_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXForLoopExpression"


    // $ANTLR start "entryRuleXBasicForLoopExpression"
    // InternalStubbrLang.g:13568:1: entryRuleXBasicForLoopExpression returns [EObject current=null] : iv_ruleXBasicForLoopExpression= ruleXBasicForLoopExpression EOF ;
    public final EObject entryRuleXBasicForLoopExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXBasicForLoopExpression = null;


        try {
            // InternalStubbrLang.g:13568:64: (iv_ruleXBasicForLoopExpression= ruleXBasicForLoopExpression EOF )
            // InternalStubbrLang.g:13569:2: iv_ruleXBasicForLoopExpression= ruleXBasicForLoopExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXBasicForLoopExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXBasicForLoopExpression=ruleXBasicForLoopExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXBasicForLoopExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXBasicForLoopExpression"


    // $ANTLR start "ruleXBasicForLoopExpression"
    // InternalStubbrLang.g:13575:1: ruleXBasicForLoopExpression returns [EObject current=null] : ( () otherlv_1= 'for' otherlv_2= '(' ( ( (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_4= ',' ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) ) )* )? otherlv_6= ';' ( (lv_expression_7_0= ruleXExpression ) )? otherlv_8= ';' ( ( (lv_updateExpressions_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_updateExpressions_11_0= ruleXExpression ) ) )* )? otherlv_12= ')' ( (lv_eachExpression_13_0= ruleXExpression ) ) ) ;
    public final EObject ruleXBasicForLoopExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        EObject lv_initExpressions_3_0 = null;

        EObject lv_initExpressions_5_0 = null;

        EObject lv_expression_7_0 = null;

        EObject lv_updateExpressions_9_0 = null;

        EObject lv_updateExpressions_11_0 = null;

        EObject lv_eachExpression_13_0 = null;



        	enterRule();

        try {
            // InternalStubbrLang.g:13581:2: ( ( () otherlv_1= 'for' otherlv_2= '(' ( ( (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_4= ',' ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) ) )* )? otherlv_6= ';' ( (lv_expression_7_0= ruleXExpression ) )? otherlv_8= ';' ( ( (lv_updateExpressions_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_updateExpressions_11_0= ruleXExpression ) ) )* )? otherlv_12= ')' ( (lv_eachExpression_13_0= ruleXExpression ) ) ) )
            // InternalStubbrLang.g:13582:2: ( () otherlv_1= 'for' otherlv_2= '(' ( ( (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_4= ',' ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) ) )* )? otherlv_6= ';' ( (lv_expression_7_0= ruleXExpression ) )? otherlv_8= ';' ( ( (lv_updateExpressions_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_updateExpressions_11_0= ruleXExpression ) ) )* )? otherlv_12= ')' ( (lv_eachExpression_13_0= ruleXExpression ) ) )
            {
            // InternalStubbrLang.g:13582:2: ( () otherlv_1= 'for' otherlv_2= '(' ( ( (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_4= ',' ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) ) )* )? otherlv_6= ';' ( (lv_expression_7_0= ruleXExpression ) )? otherlv_8= ';' ( ( (lv_updateExpressions_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_updateExpressions_11_0= ruleXExpression ) ) )* )? otherlv_12= ')' ( (lv_eachExpression_13_0= ruleXExpression ) ) )
            // InternalStubbrLang.g:13583:3: () otherlv_1= 'for' otherlv_2= '(' ( ( (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_4= ',' ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) ) )* )? otherlv_6= ';' ( (lv_expression_7_0= ruleXExpression ) )? otherlv_8= ';' ( ( (lv_updateExpressions_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_updateExpressions_11_0= ruleXExpression ) ) )* )? otherlv_12= ')' ( (lv_eachExpression_13_0= ruleXExpression ) )
            {
            // InternalStubbrLang.g:13583:3: ()
            // InternalStubbrLang.g:13584:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXBasicForLoopExpressionAccess().getXBasicForLoopExpressionAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,100,FOLLOW_255); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXBasicForLoopExpressionAccess().getForKeyword_1());
              		
            }
            otherlv_2=(Token)match(input,191,FOLLOW_262); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getXBasicForLoopExpressionAccess().getLeftParenthesisKeyword_2());
              		
            }
            // InternalStubbrLang.g:13598:3: ( ( (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_4= ',' ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) ) )* )?
            int alt346=2;
            int LA346_0 = input.LA(1);

            if ( ((LA346_0>=RULE_STRING && LA346_0<=RULE_ID)||(LA346_0>=RULE_INT && LA346_0<=RULE_DECIMAL)||LA346_0==16||LA346_0==69||LA346_0==100||LA346_0==162||(LA346_0>=178 && LA346_0<=179)||LA346_0==184||LA346_0==191||(LA346_0>=193 && LA346_0<=194)||LA346_0==198||LA346_0==200||(LA346_0>=203 && LA346_0<=218)||LA346_0==220) ) {
                alt346=1;
            }
            switch (alt346) {
                case 1 :
                    // InternalStubbrLang.g:13599:4: ( (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_4= ',' ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) ) )*
                    {
                    // InternalStubbrLang.g:13599:4: ( (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration ) )
                    // InternalStubbrLang.g:13600:5: (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration )
                    {
                    // InternalStubbrLang.g:13600:5: (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration )
                    // InternalStubbrLang.g:13601:6: lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXBasicForLoopExpressionAccess().getInitExpressionsXExpressionOrVarDeclarationParserRuleCall_3_0_0());
                      					
                    }
                    pushFollow(FOLLOW_263);
                    lv_initExpressions_3_0=ruleXExpressionOrVarDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXBasicForLoopExpressionRule());
                      						}
                      						add(
                      							current,
                      							"initExpressions",
                      							lv_initExpressions_3_0,
                      							"org.eclipse.xtext.xbase.Xbase.XExpressionOrVarDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalStubbrLang.g:13618:4: (otherlv_4= ',' ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) ) )*
                    loop345:
                    do {
                        int alt345=2;
                        int LA345_0 = input.LA(1);

                        if ( (LA345_0==25) ) {
                            alt345=1;
                        }


                        switch (alt345) {
                    	case 1 :
                    	    // InternalStubbrLang.g:13619:5: otherlv_4= ',' ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) )
                    	    {
                    	    otherlv_4=(Token)match(input,25,FOLLOW_264); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getXBasicForLoopExpressionAccess().getCommaKeyword_3_1_0());
                    	      				
                    	    }
                    	    // InternalStubbrLang.g:13623:5: ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) )
                    	    // InternalStubbrLang.g:13624:6: (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration )
                    	    {
                    	    // InternalStubbrLang.g:13624:6: (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration )
                    	    // InternalStubbrLang.g:13625:7: lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getXBasicForLoopExpressionAccess().getInitExpressionsXExpressionOrVarDeclarationParserRuleCall_3_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_263);
                    	    lv_initExpressions_5_0=ruleXExpressionOrVarDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getXBasicForLoopExpressionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"initExpressions",
                    	      								lv_initExpressions_5_0,
                    	      								"org.eclipse.xtext.xbase.Xbase.XExpressionOrVarDeclaration");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop345;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_6=(Token)match(input,197,FOLLOW_265); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getXBasicForLoopExpressionAccess().getSemicolonKeyword_4());
              		
            }
            // InternalStubbrLang.g:13648:3: ( (lv_expression_7_0= ruleXExpression ) )?
            int alt347=2;
            int LA347_0 = input.LA(1);

            if ( ((LA347_0>=RULE_STRING && LA347_0<=RULE_ID)||(LA347_0>=RULE_INT && LA347_0<=RULE_DECIMAL)||LA347_0==16||LA347_0==69||LA347_0==100||LA347_0==162||(LA347_0>=178 && LA347_0<=179)||LA347_0==184||LA347_0==191||(LA347_0>=193 && LA347_0<=194)||LA347_0==198||LA347_0==200||(LA347_0>=203 && LA347_0<=204)||(LA347_0>=207 && LA347_0<=218)||LA347_0==220) ) {
                alt347=1;
            }
            switch (alt347) {
                case 1 :
                    // InternalStubbrLang.g:13649:4: (lv_expression_7_0= ruleXExpression )
                    {
                    // InternalStubbrLang.g:13649:4: (lv_expression_7_0= ruleXExpression )
                    // InternalStubbrLang.g:13650:5: lv_expression_7_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getXBasicForLoopExpressionAccess().getExpressionXExpressionParserRuleCall_5_0());
                      				
                    }
                    pushFollow(FOLLOW_266);
                    lv_expression_7_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getXBasicForLoopExpressionRule());
                      					}
                      					set(
                      						current,
                      						"expression",
                      						lv_expression_7_0,
                      						"org.eclipse.xtext.xbase.Xbase.XExpression");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_8=(Token)match(input,197,FOLLOW_267); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_8, grammarAccess.getXBasicForLoopExpressionAccess().getSemicolonKeyword_6());
              		
            }
            // InternalStubbrLang.g:13671:3: ( ( (lv_updateExpressions_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_updateExpressions_11_0= ruleXExpression ) ) )* )?
            int alt349=2;
            int LA349_0 = input.LA(1);

            if ( ((LA349_0>=RULE_STRING && LA349_0<=RULE_ID)||(LA349_0>=RULE_INT && LA349_0<=RULE_DECIMAL)||LA349_0==16||LA349_0==69||LA349_0==100||LA349_0==162||(LA349_0>=178 && LA349_0<=179)||LA349_0==184||LA349_0==191||(LA349_0>=193 && LA349_0<=194)||LA349_0==198||LA349_0==200||(LA349_0>=203 && LA349_0<=204)||(LA349_0>=207 && LA349_0<=218)||LA349_0==220) ) {
                alt349=1;
            }
            switch (alt349) {
                case 1 :
                    // InternalStubbrLang.g:13672:4: ( (lv_updateExpressions_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_updateExpressions_11_0= ruleXExpression ) ) )*
                    {
                    // InternalStubbrLang.g:13672:4: ( (lv_updateExpressions_9_0= ruleXExpression ) )
                    // InternalStubbrLang.g:13673:5: (lv_updateExpressions_9_0= ruleXExpression )
                    {
                    // InternalStubbrLang.g:13673:5: (lv_updateExpressions_9_0= ruleXExpression )
                    // InternalStubbrLang.g:13674:6: lv_updateExpressions_9_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXBasicForLoopExpressionAccess().getUpdateExpressionsXExpressionParserRuleCall_7_0_0());
                      					
                    }
                    pushFollow(FOLLOW_243);
                    lv_updateExpressions_9_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXBasicForLoopExpressionRule());
                      						}
                      						add(
                      							current,
                      							"updateExpressions",
                      							lv_updateExpressions_9_0,
                      							"org.eclipse.xtext.xbase.Xbase.XExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalStubbrLang.g:13691:4: (otherlv_10= ',' ( (lv_updateExpressions_11_0= ruleXExpression ) ) )*
                    loop348:
                    do {
                        int alt348=2;
                        int LA348_0 = input.LA(1);

                        if ( (LA348_0==25) ) {
                            alt348=1;
                        }


                        switch (alt348) {
                    	case 1 :
                    	    // InternalStubbrLang.g:13692:5: otherlv_10= ',' ( (lv_updateExpressions_11_0= ruleXExpression ) )
                    	    {
                    	    otherlv_10=(Token)match(input,25,FOLLOW_218); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_10, grammarAccess.getXBasicForLoopExpressionAccess().getCommaKeyword_7_1_0());
                    	      				
                    	    }
                    	    // InternalStubbrLang.g:13696:5: ( (lv_updateExpressions_11_0= ruleXExpression ) )
                    	    // InternalStubbrLang.g:13697:6: (lv_updateExpressions_11_0= ruleXExpression )
                    	    {
                    	    // InternalStubbrLang.g:13697:6: (lv_updateExpressions_11_0= ruleXExpression )
                    	    // InternalStubbrLang.g:13698:7: lv_updateExpressions_11_0= ruleXExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getXBasicForLoopExpressionAccess().getUpdateExpressionsXExpressionParserRuleCall_7_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_243);
                    	    lv_updateExpressions_11_0=ruleXExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getXBasicForLoopExpressionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"updateExpressions",
                    	      								lv_updateExpressions_11_0,
                    	      								"org.eclipse.xtext.xbase.Xbase.XExpression");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop348;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_12=(Token)match(input,192,FOLLOW_218); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_12, grammarAccess.getXBasicForLoopExpressionAccess().getRightParenthesisKeyword_8());
              		
            }
            // InternalStubbrLang.g:13721:3: ( (lv_eachExpression_13_0= ruleXExpression ) )
            // InternalStubbrLang.g:13722:4: (lv_eachExpression_13_0= ruleXExpression )
            {
            // InternalStubbrLang.g:13722:4: (lv_eachExpression_13_0= ruleXExpression )
            // InternalStubbrLang.g:13723:5: lv_eachExpression_13_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXBasicForLoopExpressionAccess().getEachExpressionXExpressionParserRuleCall_9_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_eachExpression_13_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXBasicForLoopExpressionRule());
              					}
              					set(
              						current,
              						"eachExpression",
              						lv_eachExpression_13_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXBasicForLoopExpression"


    // $ANTLR start "entryRuleXWhileExpression"
    // InternalStubbrLang.g:13744:1: entryRuleXWhileExpression returns [EObject current=null] : iv_ruleXWhileExpression= ruleXWhileExpression EOF ;
    public final EObject entryRuleXWhileExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXWhileExpression = null;


        try {
            // InternalStubbrLang.g:13744:57: (iv_ruleXWhileExpression= ruleXWhileExpression EOF )
            // InternalStubbrLang.g:13745:2: iv_ruleXWhileExpression= ruleXWhileExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXWhileExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXWhileExpression=ruleXWhileExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXWhileExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXWhileExpression"


    // $ANTLR start "ruleXWhileExpression"
    // InternalStubbrLang.g:13751:1: ruleXWhileExpression returns [EObject current=null] : ( () otherlv_1= 'while' otherlv_2= '(' ( (lv_predicate_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_body_5_0= ruleXExpression ) ) ) ;
    public final EObject ruleXWhileExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_predicate_3_0 = null;

        EObject lv_body_5_0 = null;



        	enterRule();

        try {
            // InternalStubbrLang.g:13757:2: ( ( () otherlv_1= 'while' otherlv_2= '(' ( (lv_predicate_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_body_5_0= ruleXExpression ) ) ) )
            // InternalStubbrLang.g:13758:2: ( () otherlv_1= 'while' otherlv_2= '(' ( (lv_predicate_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_body_5_0= ruleXExpression ) ) )
            {
            // InternalStubbrLang.g:13758:2: ( () otherlv_1= 'while' otherlv_2= '(' ( (lv_predicate_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_body_5_0= ruleXExpression ) ) )
            // InternalStubbrLang.g:13759:3: () otherlv_1= 'while' otherlv_2= '(' ( (lv_predicate_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_body_5_0= ruleXExpression ) )
            {
            // InternalStubbrLang.g:13759:3: ()
            // InternalStubbrLang.g:13760:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXWhileExpressionAccess().getXWhileExpressionAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,203,FOLLOW_255); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXWhileExpressionAccess().getWhileKeyword_1());
              		
            }
            otherlv_2=(Token)match(input,191,FOLLOW_218); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getXWhileExpressionAccess().getLeftParenthesisKeyword_2());
              		
            }
            // InternalStubbrLang.g:13774:3: ( (lv_predicate_3_0= ruleXExpression ) )
            // InternalStubbrLang.g:13775:4: (lv_predicate_3_0= ruleXExpression )
            {
            // InternalStubbrLang.g:13775:4: (lv_predicate_3_0= ruleXExpression )
            // InternalStubbrLang.g:13776:5: lv_predicate_3_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXWhileExpressionAccess().getPredicateXExpressionParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_242);
            lv_predicate_3_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXWhileExpressionRule());
              					}
              					set(
              						current,
              						"predicate",
              						lv_predicate_3_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_4=(Token)match(input,192,FOLLOW_218); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getXWhileExpressionAccess().getRightParenthesisKeyword_4());
              		
            }
            // InternalStubbrLang.g:13797:3: ( (lv_body_5_0= ruleXExpression ) )
            // InternalStubbrLang.g:13798:4: (lv_body_5_0= ruleXExpression )
            {
            // InternalStubbrLang.g:13798:4: (lv_body_5_0= ruleXExpression )
            // InternalStubbrLang.g:13799:5: lv_body_5_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXWhileExpressionAccess().getBodyXExpressionParserRuleCall_5_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_body_5_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXWhileExpressionRule());
              					}
              					set(
              						current,
              						"body",
              						lv_body_5_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXWhileExpression"


    // $ANTLR start "entryRuleXDoWhileExpression"
    // InternalStubbrLang.g:13820:1: entryRuleXDoWhileExpression returns [EObject current=null] : iv_ruleXDoWhileExpression= ruleXDoWhileExpression EOF ;
    public final EObject entryRuleXDoWhileExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXDoWhileExpression = null;


        try {
            // InternalStubbrLang.g:13820:59: (iv_ruleXDoWhileExpression= ruleXDoWhileExpression EOF )
            // InternalStubbrLang.g:13821:2: iv_ruleXDoWhileExpression= ruleXDoWhileExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXDoWhileExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXDoWhileExpression=ruleXDoWhileExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXDoWhileExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXDoWhileExpression"


    // $ANTLR start "ruleXDoWhileExpression"
    // InternalStubbrLang.g:13827:1: ruleXDoWhileExpression returns [EObject current=null] : ( () otherlv_1= 'do' ( (lv_body_2_0= ruleXExpression ) ) otherlv_3= 'while' otherlv_4= '(' ( (lv_predicate_5_0= ruleXExpression ) ) otherlv_6= ')' ) ;
    public final EObject ruleXDoWhileExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_body_2_0 = null;

        EObject lv_predicate_5_0 = null;



        	enterRule();

        try {
            // InternalStubbrLang.g:13833:2: ( ( () otherlv_1= 'do' ( (lv_body_2_0= ruleXExpression ) ) otherlv_3= 'while' otherlv_4= '(' ( (lv_predicate_5_0= ruleXExpression ) ) otherlv_6= ')' ) )
            // InternalStubbrLang.g:13834:2: ( () otherlv_1= 'do' ( (lv_body_2_0= ruleXExpression ) ) otherlv_3= 'while' otherlv_4= '(' ( (lv_predicate_5_0= ruleXExpression ) ) otherlv_6= ')' )
            {
            // InternalStubbrLang.g:13834:2: ( () otherlv_1= 'do' ( (lv_body_2_0= ruleXExpression ) ) otherlv_3= 'while' otherlv_4= '(' ( (lv_predicate_5_0= ruleXExpression ) ) otherlv_6= ')' )
            // InternalStubbrLang.g:13835:3: () otherlv_1= 'do' ( (lv_body_2_0= ruleXExpression ) ) otherlv_3= 'while' otherlv_4= '(' ( (lv_predicate_5_0= ruleXExpression ) ) otherlv_6= ')'
            {
            // InternalStubbrLang.g:13835:3: ()
            // InternalStubbrLang.g:13836:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXDoWhileExpressionAccess().getXDoWhileExpressionAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,204,FOLLOW_218); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXDoWhileExpressionAccess().getDoKeyword_1());
              		
            }
            // InternalStubbrLang.g:13846:3: ( (lv_body_2_0= ruleXExpression ) )
            // InternalStubbrLang.g:13847:4: (lv_body_2_0= ruleXExpression )
            {
            // InternalStubbrLang.g:13847:4: (lv_body_2_0= ruleXExpression )
            // InternalStubbrLang.g:13848:5: lv_body_2_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXDoWhileExpressionAccess().getBodyXExpressionParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_268);
            lv_body_2_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXDoWhileExpressionRule());
              					}
              					set(
              						current,
              						"body",
              						lv_body_2_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,203,FOLLOW_255); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getXDoWhileExpressionAccess().getWhileKeyword_3());
              		
            }
            otherlv_4=(Token)match(input,191,FOLLOW_218); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getXDoWhileExpressionAccess().getLeftParenthesisKeyword_4());
              		
            }
            // InternalStubbrLang.g:13873:3: ( (lv_predicate_5_0= ruleXExpression ) )
            // InternalStubbrLang.g:13874:4: (lv_predicate_5_0= ruleXExpression )
            {
            // InternalStubbrLang.g:13874:4: (lv_predicate_5_0= ruleXExpression )
            // InternalStubbrLang.g:13875:5: lv_predicate_5_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXDoWhileExpressionAccess().getPredicateXExpressionParserRuleCall_5_0());
              				
            }
            pushFollow(FOLLOW_242);
            lv_predicate_5_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXDoWhileExpressionRule());
              					}
              					set(
              						current,
              						"predicate",
              						lv_predicate_5_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_6=(Token)match(input,192,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getXDoWhileExpressionAccess().getRightParenthesisKeyword_6());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXDoWhileExpression"


    // $ANTLR start "entryRuleXBlockExpression"
    // InternalStubbrLang.g:13900:1: entryRuleXBlockExpression returns [EObject current=null] : iv_ruleXBlockExpression= ruleXBlockExpression EOF ;
    public final EObject entryRuleXBlockExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXBlockExpression = null;


        try {
            // InternalStubbrLang.g:13900:57: (iv_ruleXBlockExpression= ruleXBlockExpression EOF )
            // InternalStubbrLang.g:13901:2: iv_ruleXBlockExpression= ruleXBlockExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXBlockExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXBlockExpression=ruleXBlockExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXBlockExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXBlockExpression"


    // $ANTLR start "ruleXBlockExpression"
    // InternalStubbrLang.g:13907:1: ruleXBlockExpression returns [EObject current=null] : ( () otherlv_1= '{' ( ( (lv_expressions_2_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_3= ';' )? )* otherlv_4= '}' ) ;
    public final EObject ruleXBlockExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        EObject lv_expressions_2_0 = null;



        	enterRule();

        try {
            // InternalStubbrLang.g:13913:2: ( ( () otherlv_1= '{' ( ( (lv_expressions_2_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_3= ';' )? )* otherlv_4= '}' ) )
            // InternalStubbrLang.g:13914:2: ( () otherlv_1= '{' ( ( (lv_expressions_2_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_3= ';' )? )* otherlv_4= '}' )
            {
            // InternalStubbrLang.g:13914:2: ( () otherlv_1= '{' ( ( (lv_expressions_2_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_3= ';' )? )* otherlv_4= '}' )
            // InternalStubbrLang.g:13915:3: () otherlv_1= '{' ( ( (lv_expressions_2_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_3= ';' )? )* otherlv_4= '}'
            {
            // InternalStubbrLang.g:13915:3: ()
            // InternalStubbrLang.g:13916:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXBlockExpressionAccess().getXBlockExpressionAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,16,FOLLOW_269); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXBlockExpressionAccess().getLeftCurlyBracketKeyword_1());
              		
            }
            // InternalStubbrLang.g:13926:3: ( ( (lv_expressions_2_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_3= ';' )? )*
            loop351:
            do {
                int alt351=2;
                int LA351_0 = input.LA(1);

                if ( ((LA351_0>=RULE_STRING && LA351_0<=RULE_ID)||(LA351_0>=RULE_INT && LA351_0<=RULE_DECIMAL)||LA351_0==16||LA351_0==69||LA351_0==100||LA351_0==162||(LA351_0>=178 && LA351_0<=179)||LA351_0==184||LA351_0==191||(LA351_0>=193 && LA351_0<=194)||LA351_0==198||LA351_0==200||(LA351_0>=203 && LA351_0<=218)||LA351_0==220) ) {
                    alt351=1;
                }


                switch (alt351) {
            	case 1 :
            	    // InternalStubbrLang.g:13927:4: ( (lv_expressions_2_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_3= ';' )?
            	    {
            	    // InternalStubbrLang.g:13927:4: ( (lv_expressions_2_0= ruleXExpressionOrVarDeclaration ) )
            	    // InternalStubbrLang.g:13928:5: (lv_expressions_2_0= ruleXExpressionOrVarDeclaration )
            	    {
            	    // InternalStubbrLang.g:13928:5: (lv_expressions_2_0= ruleXExpressionOrVarDeclaration )
            	    // InternalStubbrLang.g:13929:6: lv_expressions_2_0= ruleXExpressionOrVarDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getXBlockExpressionAccess().getExpressionsXExpressionOrVarDeclarationParserRuleCall_2_0_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_270);
            	    lv_expressions_2_0=ruleXExpressionOrVarDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getXBlockExpressionRule());
            	      						}
            	      						add(
            	      							current,
            	      							"expressions",
            	      							lv_expressions_2_0,
            	      							"org.eclipse.xtext.xbase.Xbase.XExpressionOrVarDeclaration");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalStubbrLang.g:13946:4: (otherlv_3= ';' )?
            	    int alt350=2;
            	    int LA350_0 = input.LA(1);

            	    if ( (LA350_0==197) ) {
            	        alt350=1;
            	    }
            	    switch (alt350) {
            	        case 1 :
            	            // InternalStubbrLang.g:13947:5: otherlv_3= ';'
            	            {
            	            otherlv_3=(Token)match(input,197,FOLLOW_269); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					newLeafNode(otherlv_3, grammarAccess.getXBlockExpressionAccess().getSemicolonKeyword_2_1());
            	              				
            	            }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop351;
                }
            } while (true);

            otherlv_4=(Token)match(input,26,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getXBlockExpressionAccess().getRightCurlyBracketKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXBlockExpression"


    // $ANTLR start "entryRuleXExpressionOrVarDeclaration"
    // InternalStubbrLang.g:13961:1: entryRuleXExpressionOrVarDeclaration returns [EObject current=null] : iv_ruleXExpressionOrVarDeclaration= ruleXExpressionOrVarDeclaration EOF ;
    public final EObject entryRuleXExpressionOrVarDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXExpressionOrVarDeclaration = null;


        try {
            // InternalStubbrLang.g:13961:68: (iv_ruleXExpressionOrVarDeclaration= ruleXExpressionOrVarDeclaration EOF )
            // InternalStubbrLang.g:13962:2: iv_ruleXExpressionOrVarDeclaration= ruleXExpressionOrVarDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXExpressionOrVarDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXExpressionOrVarDeclaration=ruleXExpressionOrVarDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXExpressionOrVarDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXExpressionOrVarDeclaration"


    // $ANTLR start "ruleXExpressionOrVarDeclaration"
    // InternalStubbrLang.g:13968:1: ruleXExpressionOrVarDeclaration returns [EObject current=null] : (this_XVariableDeclaration_0= ruleXVariableDeclaration | this_XExpression_1= ruleXExpression ) ;
    public final EObject ruleXExpressionOrVarDeclaration() throws RecognitionException {
        EObject current = null;

        EObject this_XVariableDeclaration_0 = null;

        EObject this_XExpression_1 = null;



        	enterRule();

        try {
            // InternalStubbrLang.g:13974:2: ( (this_XVariableDeclaration_0= ruleXVariableDeclaration | this_XExpression_1= ruleXExpression ) )
            // InternalStubbrLang.g:13975:2: (this_XVariableDeclaration_0= ruleXVariableDeclaration | this_XExpression_1= ruleXExpression )
            {
            // InternalStubbrLang.g:13975:2: (this_XVariableDeclaration_0= ruleXVariableDeclaration | this_XExpression_1= ruleXExpression )
            int alt352=2;
            int LA352_0 = input.LA(1);

            if ( ((LA352_0>=205 && LA352_0<=206)) ) {
                alt352=1;
            }
            else if ( ((LA352_0>=RULE_STRING && LA352_0<=RULE_ID)||(LA352_0>=RULE_INT && LA352_0<=RULE_DECIMAL)||LA352_0==16||LA352_0==69||LA352_0==100||LA352_0==162||(LA352_0>=178 && LA352_0<=179)||LA352_0==184||LA352_0==191||(LA352_0>=193 && LA352_0<=194)||LA352_0==198||LA352_0==200||(LA352_0>=203 && LA352_0<=204)||(LA352_0>=207 && LA352_0<=218)||LA352_0==220) ) {
                alt352=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 352, 0, input);

                throw nvae;
            }
            switch (alt352) {
                case 1 :
                    // InternalStubbrLang.g:13976:3: this_XVariableDeclaration_0= ruleXVariableDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXExpressionOrVarDeclarationAccess().getXVariableDeclarationParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XVariableDeclaration_0=ruleXVariableDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XVariableDeclaration_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalStubbrLang.g:13985:3: this_XExpression_1= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXExpressionOrVarDeclarationAccess().getXExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XExpression_1=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XExpression_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXExpressionOrVarDeclaration"


    // $ANTLR start "entryRuleXVariableDeclaration"
    // InternalStubbrLang.g:13997:1: entryRuleXVariableDeclaration returns [EObject current=null] : iv_ruleXVariableDeclaration= ruleXVariableDeclaration EOF ;
    public final EObject entryRuleXVariableDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXVariableDeclaration = null;


        try {
            // InternalStubbrLang.g:13997:61: (iv_ruleXVariableDeclaration= ruleXVariableDeclaration EOF )
            // InternalStubbrLang.g:13998:2: iv_ruleXVariableDeclaration= ruleXVariableDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXVariableDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXVariableDeclaration=ruleXVariableDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXVariableDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXVariableDeclaration"


    // $ANTLR start "ruleXVariableDeclaration"
    // InternalStubbrLang.g:14004:1: ruleXVariableDeclaration returns [EObject current=null] : ( () ( ( (lv_writeable_1_0= 'var' ) ) | otherlv_2= 'val' ) ( ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) ) ) ) | ( (lv_name_5_0= ruleValidID ) ) ) (otherlv_6= '=' ( (lv_right_7_0= ruleXExpression ) ) )? ) ;
    public final EObject ruleXVariableDeclaration() throws RecognitionException {
        EObject current = null;

        Token lv_writeable_1_0=null;
        Token otherlv_2=null;
        Token otherlv_6=null;
        EObject lv_type_3_0 = null;

        AntlrDatatypeRuleToken lv_name_4_0 = null;

        AntlrDatatypeRuleToken lv_name_5_0 = null;

        EObject lv_right_7_0 = null;



        	enterRule();

        try {
            // InternalStubbrLang.g:14010:2: ( ( () ( ( (lv_writeable_1_0= 'var' ) ) | otherlv_2= 'val' ) ( ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) ) ) ) | ( (lv_name_5_0= ruleValidID ) ) ) (otherlv_6= '=' ( (lv_right_7_0= ruleXExpression ) ) )? ) )
            // InternalStubbrLang.g:14011:2: ( () ( ( (lv_writeable_1_0= 'var' ) ) | otherlv_2= 'val' ) ( ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) ) ) ) | ( (lv_name_5_0= ruleValidID ) ) ) (otherlv_6= '=' ( (lv_right_7_0= ruleXExpression ) ) )? )
            {
            // InternalStubbrLang.g:14011:2: ( () ( ( (lv_writeable_1_0= 'var' ) ) | otherlv_2= 'val' ) ( ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) ) ) ) | ( (lv_name_5_0= ruleValidID ) ) ) (otherlv_6= '=' ( (lv_right_7_0= ruleXExpression ) ) )? )
            // InternalStubbrLang.g:14012:3: () ( ( (lv_writeable_1_0= 'var' ) ) | otherlv_2= 'val' ) ( ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) ) ) ) | ( (lv_name_5_0= ruleValidID ) ) ) (otherlv_6= '=' ( (lv_right_7_0= ruleXExpression ) ) )?
            {
            // InternalStubbrLang.g:14012:3: ()
            // InternalStubbrLang.g:14013:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXVariableDeclarationAccess().getXVariableDeclarationAction_0(),
              					current);
              			
            }

            }

            // InternalStubbrLang.g:14019:3: ( ( (lv_writeable_1_0= 'var' ) ) | otherlv_2= 'val' )
            int alt353=2;
            int LA353_0 = input.LA(1);

            if ( (LA353_0==205) ) {
                alt353=1;
            }
            else if ( (LA353_0==206) ) {
                alt353=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 353, 0, input);

                throw nvae;
            }
            switch (alt353) {
                case 1 :
                    // InternalStubbrLang.g:14020:4: ( (lv_writeable_1_0= 'var' ) )
                    {
                    // InternalStubbrLang.g:14020:4: ( (lv_writeable_1_0= 'var' ) )
                    // InternalStubbrLang.g:14021:5: (lv_writeable_1_0= 'var' )
                    {
                    // InternalStubbrLang.g:14021:5: (lv_writeable_1_0= 'var' )
                    // InternalStubbrLang.g:14022:6: lv_writeable_1_0= 'var'
                    {
                    lv_writeable_1_0=(Token)match(input,205,FOLLOW_52); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_writeable_1_0, grammarAccess.getXVariableDeclarationAccess().getWriteableVarKeyword_1_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getXVariableDeclarationRule());
                      						}
                      						setWithLastConsumed(current, "writeable", true, "var");
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalStubbrLang.g:14035:4: otherlv_2= 'val'
                    {
                    otherlv_2=(Token)match(input,206,FOLLOW_52); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getXVariableDeclarationAccess().getValKeyword_1_1());
                      			
                    }

                    }
                    break;

            }

            // InternalStubbrLang.g:14040:3: ( ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) ) ) ) | ( (lv_name_5_0= ruleValidID ) ) )
            int alt354=2;
            int LA354_0 = input.LA(1);

            if ( (LA354_0==RULE_ID) ) {
                int LA354_1 = input.LA(2);

                if ( (synpred29_InternalStubbrLang()) ) {
                    alt354=1;
                }
                else if ( (true) ) {
                    alt354=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 354, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA354_0==191) && (synpred29_InternalStubbrLang())) {
                alt354=1;
            }
            else if ( (LA354_0==175) && (synpred29_InternalStubbrLang())) {
                alt354=1;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 354, 0, input);

                throw nvae;
            }
            switch (alt354) {
                case 1 :
                    // InternalStubbrLang.g:14041:4: ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) ) ) )
                    {
                    // InternalStubbrLang.g:14041:4: ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) ) ) )
                    // InternalStubbrLang.g:14042:5: ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) ) )
                    {
                    // InternalStubbrLang.g:14055:5: ( ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) ) )
                    // InternalStubbrLang.g:14056:6: ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) )
                    {
                    // InternalStubbrLang.g:14056:6: ( (lv_type_3_0= ruleJvmTypeReference ) )
                    // InternalStubbrLang.g:14057:7: (lv_type_3_0= ruleJvmTypeReference )
                    {
                    // InternalStubbrLang.g:14057:7: (lv_type_3_0= ruleJvmTypeReference )
                    // InternalStubbrLang.g:14058:8: lv_type_3_0= ruleJvmTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      								newCompositeNode(grammarAccess.getXVariableDeclarationAccess().getTypeJvmTypeReferenceParserRuleCall_2_0_0_0_0());
                      							
                    }
                    pushFollow(FOLLOW_3);
                    lv_type_3_0=ruleJvmTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      								if (current==null) {
                      									current = createModelElementForParent(grammarAccess.getXVariableDeclarationRule());
                      								}
                      								set(
                      									current,
                      									"type",
                      									lv_type_3_0,
                      									"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
                      								afterParserOrEnumRuleCall();
                      							
                    }

                    }


                    }

                    // InternalStubbrLang.g:14075:6: ( (lv_name_4_0= ruleValidID ) )
                    // InternalStubbrLang.g:14076:7: (lv_name_4_0= ruleValidID )
                    {
                    // InternalStubbrLang.g:14076:7: (lv_name_4_0= ruleValidID )
                    // InternalStubbrLang.g:14077:8: lv_name_4_0= ruleValidID
                    {
                    if ( state.backtracking==0 ) {

                      								newCompositeNode(grammarAccess.getXVariableDeclarationAccess().getNameValidIDParserRuleCall_2_0_0_1_0());
                      							
                    }
                    pushFollow(FOLLOW_271);
                    lv_name_4_0=ruleValidID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      								if (current==null) {
                      									current = createModelElementForParent(grammarAccess.getXVariableDeclarationRule());
                      								}
                      								set(
                      									current,
                      									"name",
                      									lv_name_4_0,
                      									"org.eclipse.xtext.xbase.Xtype.ValidID");
                      								afterParserOrEnumRuleCall();
                      							
                    }

                    }


                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalStubbrLang.g:14097:4: ( (lv_name_5_0= ruleValidID ) )
                    {
                    // InternalStubbrLang.g:14097:4: ( (lv_name_5_0= ruleValidID ) )
                    // InternalStubbrLang.g:14098:5: (lv_name_5_0= ruleValidID )
                    {
                    // InternalStubbrLang.g:14098:5: (lv_name_5_0= ruleValidID )
                    // InternalStubbrLang.g:14099:6: lv_name_5_0= ruleValidID
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXVariableDeclarationAccess().getNameValidIDParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_271);
                    lv_name_5_0=ruleValidID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXVariableDeclarationRule());
                      						}
                      						set(
                      							current,
                      							"name",
                      							lv_name_5_0,
                      							"org.eclipse.xtext.xbase.Xtype.ValidID");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:14117:3: (otherlv_6= '=' ( (lv_right_7_0= ruleXExpression ) ) )?
            int alt355=2;
            int LA355_0 = input.LA(1);

            if ( (LA355_0==156) ) {
                alt355=1;
            }
            switch (alt355) {
                case 1 :
                    // InternalStubbrLang.g:14118:4: otherlv_6= '=' ( (lv_right_7_0= ruleXExpression ) )
                    {
                    otherlv_6=(Token)match(input,156,FOLLOW_218); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getXVariableDeclarationAccess().getEqualsSignKeyword_3_0());
                      			
                    }
                    // InternalStubbrLang.g:14122:4: ( (lv_right_7_0= ruleXExpression ) )
                    // InternalStubbrLang.g:14123:5: (lv_right_7_0= ruleXExpression )
                    {
                    // InternalStubbrLang.g:14123:5: (lv_right_7_0= ruleXExpression )
                    // InternalStubbrLang.g:14124:6: lv_right_7_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXVariableDeclarationAccess().getRightXExpressionParserRuleCall_3_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_right_7_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXVariableDeclarationRule());
                      						}
                      						set(
                      							current,
                      							"right",
                      							lv_right_7_0,
                      							"org.eclipse.xtext.xbase.Xbase.XExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXVariableDeclaration"


    // $ANTLR start "entryRuleJvmFormalParameter"
    // InternalStubbrLang.g:14146:1: entryRuleJvmFormalParameter returns [EObject current=null] : iv_ruleJvmFormalParameter= ruleJvmFormalParameter EOF ;
    public final EObject entryRuleJvmFormalParameter() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmFormalParameter = null;


        try {
            // InternalStubbrLang.g:14146:59: (iv_ruleJvmFormalParameter= ruleJvmFormalParameter EOF )
            // InternalStubbrLang.g:14147:2: iv_ruleJvmFormalParameter= ruleJvmFormalParameter EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmFormalParameterRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJvmFormalParameter=ruleJvmFormalParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmFormalParameter; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmFormalParameter"


    // $ANTLR start "ruleJvmFormalParameter"
    // InternalStubbrLang.g:14153:1: ruleJvmFormalParameter returns [EObject current=null] : ( ( (lv_parameterType_0_0= ruleJvmTypeReference ) )? ( (lv_name_1_0= ruleValidID ) ) ) ;
    public final EObject ruleJvmFormalParameter() throws RecognitionException {
        EObject current = null;

        EObject lv_parameterType_0_0 = null;

        AntlrDatatypeRuleToken lv_name_1_0 = null;



        	enterRule();

        try {
            // InternalStubbrLang.g:14159:2: ( ( ( (lv_parameterType_0_0= ruleJvmTypeReference ) )? ( (lv_name_1_0= ruleValidID ) ) ) )
            // InternalStubbrLang.g:14160:2: ( ( (lv_parameterType_0_0= ruleJvmTypeReference ) )? ( (lv_name_1_0= ruleValidID ) ) )
            {
            // InternalStubbrLang.g:14160:2: ( ( (lv_parameterType_0_0= ruleJvmTypeReference ) )? ( (lv_name_1_0= ruleValidID ) ) )
            // InternalStubbrLang.g:14161:3: ( (lv_parameterType_0_0= ruleJvmTypeReference ) )? ( (lv_name_1_0= ruleValidID ) )
            {
            // InternalStubbrLang.g:14161:3: ( (lv_parameterType_0_0= ruleJvmTypeReference ) )?
            int alt356=2;
            int LA356_0 = input.LA(1);

            if ( (LA356_0==RULE_ID) ) {
                int LA356_1 = input.LA(2);

                if ( (LA356_1==RULE_ID||LA356_1==162||LA356_1==188||LA356_1==194) ) {
                    alt356=1;
                }
            }
            else if ( (LA356_0==175||LA356_0==191) ) {
                alt356=1;
            }
            switch (alt356) {
                case 1 :
                    // InternalStubbrLang.g:14162:4: (lv_parameterType_0_0= ruleJvmTypeReference )
                    {
                    // InternalStubbrLang.g:14162:4: (lv_parameterType_0_0= ruleJvmTypeReference )
                    // InternalStubbrLang.g:14163:5: lv_parameterType_0_0= ruleJvmTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getJvmFormalParameterAccess().getParameterTypeJvmTypeReferenceParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_3);
                    lv_parameterType_0_0=ruleJvmTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getJvmFormalParameterRule());
                      					}
                      					set(
                      						current,
                      						"parameterType",
                      						lv_parameterType_0_0,
                      						"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:14180:3: ( (lv_name_1_0= ruleValidID ) )
            // InternalStubbrLang.g:14181:4: (lv_name_1_0= ruleValidID )
            {
            // InternalStubbrLang.g:14181:4: (lv_name_1_0= ruleValidID )
            // InternalStubbrLang.g:14182:5: lv_name_1_0= ruleValidID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getJvmFormalParameterAccess().getNameValidIDParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_name_1_0=ruleValidID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getJvmFormalParameterRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"org.eclipse.xtext.xbase.Xtype.ValidID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmFormalParameter"


    // $ANTLR start "entryRuleFullJvmFormalParameter"
    // InternalStubbrLang.g:14203:1: entryRuleFullJvmFormalParameter returns [EObject current=null] : iv_ruleFullJvmFormalParameter= ruleFullJvmFormalParameter EOF ;
    public final EObject entryRuleFullJvmFormalParameter() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFullJvmFormalParameter = null;


        try {
            // InternalStubbrLang.g:14203:63: (iv_ruleFullJvmFormalParameter= ruleFullJvmFormalParameter EOF )
            // InternalStubbrLang.g:14204:2: iv_ruleFullJvmFormalParameter= ruleFullJvmFormalParameter EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFullJvmFormalParameterRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFullJvmFormalParameter=ruleFullJvmFormalParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFullJvmFormalParameter; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFullJvmFormalParameter"


    // $ANTLR start "ruleFullJvmFormalParameter"
    // InternalStubbrLang.g:14210:1: ruleFullJvmFormalParameter returns [EObject current=null] : ( ( (lv_parameterType_0_0= ruleJvmTypeReference ) ) ( (lv_name_1_0= ruleValidID ) ) ) ;
    public final EObject ruleFullJvmFormalParameter() throws RecognitionException {
        EObject current = null;

        EObject lv_parameterType_0_0 = null;

        AntlrDatatypeRuleToken lv_name_1_0 = null;



        	enterRule();

        try {
            // InternalStubbrLang.g:14216:2: ( ( ( (lv_parameterType_0_0= ruleJvmTypeReference ) ) ( (lv_name_1_0= ruleValidID ) ) ) )
            // InternalStubbrLang.g:14217:2: ( ( (lv_parameterType_0_0= ruleJvmTypeReference ) ) ( (lv_name_1_0= ruleValidID ) ) )
            {
            // InternalStubbrLang.g:14217:2: ( ( (lv_parameterType_0_0= ruleJvmTypeReference ) ) ( (lv_name_1_0= ruleValidID ) ) )
            // InternalStubbrLang.g:14218:3: ( (lv_parameterType_0_0= ruleJvmTypeReference ) ) ( (lv_name_1_0= ruleValidID ) )
            {
            // InternalStubbrLang.g:14218:3: ( (lv_parameterType_0_0= ruleJvmTypeReference ) )
            // InternalStubbrLang.g:14219:4: (lv_parameterType_0_0= ruleJvmTypeReference )
            {
            // InternalStubbrLang.g:14219:4: (lv_parameterType_0_0= ruleJvmTypeReference )
            // InternalStubbrLang.g:14220:5: lv_parameterType_0_0= ruleJvmTypeReference
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getFullJvmFormalParameterAccess().getParameterTypeJvmTypeReferenceParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_3);
            lv_parameterType_0_0=ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getFullJvmFormalParameterRule());
              					}
              					set(
              						current,
              						"parameterType",
              						lv_parameterType_0_0,
              						"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalStubbrLang.g:14237:3: ( (lv_name_1_0= ruleValidID ) )
            // InternalStubbrLang.g:14238:4: (lv_name_1_0= ruleValidID )
            {
            // InternalStubbrLang.g:14238:4: (lv_name_1_0= ruleValidID )
            // InternalStubbrLang.g:14239:5: lv_name_1_0= ruleValidID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getFullJvmFormalParameterAccess().getNameValidIDParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_name_1_0=ruleValidID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getFullJvmFormalParameterRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"org.eclipse.xtext.xbase.Xtype.ValidID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFullJvmFormalParameter"


    // $ANTLR start "entryRuleXFeatureCall"
    // InternalStubbrLang.g:14260:1: entryRuleXFeatureCall returns [EObject current=null] : iv_ruleXFeatureCall= ruleXFeatureCall EOF ;
    public final EObject entryRuleXFeatureCall() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXFeatureCall = null;


        try {
            // InternalStubbrLang.g:14260:53: (iv_ruleXFeatureCall= ruleXFeatureCall EOF )
            // InternalStubbrLang.g:14261:2: iv_ruleXFeatureCall= ruleXFeatureCall EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXFeatureCallRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXFeatureCall=ruleXFeatureCall();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXFeatureCall; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXFeatureCall"


    // $ANTLR start "ruleXFeatureCall"
    // InternalStubbrLang.g:14267:1: ruleXFeatureCall returns [EObject current=null] : ( () (otherlv_1= '<' ( (lv_typeArguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' )? ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_7_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )? otherlv_12= ')' )? ( ( ( () '[' ) )=> (lv_featureCallArguments_13_0= ruleXClosure ) )? ) ;
    public final EObject ruleXFeatureCall() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token lv_explicitOperationCall_7_0=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        EObject lv_typeArguments_2_0 = null;

        EObject lv_typeArguments_4_0 = null;

        EObject lv_featureCallArguments_8_0 = null;

        EObject lv_featureCallArguments_9_0 = null;

        EObject lv_featureCallArguments_11_0 = null;

        EObject lv_featureCallArguments_13_0 = null;



        	enterRule();

        try {
            // InternalStubbrLang.g:14273:2: ( ( () (otherlv_1= '<' ( (lv_typeArguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' )? ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_7_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )? otherlv_12= ')' )? ( ( ( () '[' ) )=> (lv_featureCallArguments_13_0= ruleXClosure ) )? ) )
            // InternalStubbrLang.g:14274:2: ( () (otherlv_1= '<' ( (lv_typeArguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' )? ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_7_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )? otherlv_12= ')' )? ( ( ( () '[' ) )=> (lv_featureCallArguments_13_0= ruleXClosure ) )? )
            {
            // InternalStubbrLang.g:14274:2: ( () (otherlv_1= '<' ( (lv_typeArguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' )? ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_7_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )? otherlv_12= ')' )? ( ( ( () '[' ) )=> (lv_featureCallArguments_13_0= ruleXClosure ) )? )
            // InternalStubbrLang.g:14275:3: () (otherlv_1= '<' ( (lv_typeArguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' )? ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_7_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )? otherlv_12= ')' )? ( ( ( () '[' ) )=> (lv_featureCallArguments_13_0= ruleXClosure ) )?
            {
            // InternalStubbrLang.g:14275:3: ()
            // InternalStubbrLang.g:14276:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXFeatureCallAccess().getXFeatureCallAction_0(),
              					current);
              			
            }

            }

            // InternalStubbrLang.g:14282:3: (otherlv_1= '<' ( (lv_typeArguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' )?
            int alt358=2;
            int LA358_0 = input.LA(1);

            if ( (LA358_0==162) ) {
                alt358=1;
            }
            switch (alt358) {
                case 1 :
                    // InternalStubbrLang.g:14283:4: otherlv_1= '<' ( (lv_typeArguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>'
                    {
                    otherlv_1=(Token)match(input,162,FOLLOW_238); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getXFeatureCallAccess().getLessThanSignKeyword_1_0());
                      			
                    }
                    // InternalStubbrLang.g:14287:4: ( (lv_typeArguments_2_0= ruleJvmArgumentTypeReference ) )
                    // InternalStubbrLang.g:14288:5: (lv_typeArguments_2_0= ruleJvmArgumentTypeReference )
                    {
                    // InternalStubbrLang.g:14288:5: (lv_typeArguments_2_0= ruleJvmArgumentTypeReference )
                    // InternalStubbrLang.g:14289:6: lv_typeArguments_2_0= ruleJvmArgumentTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXFeatureCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_239);
                    lv_typeArguments_2_0=ruleJvmArgumentTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXFeatureCallRule());
                      						}
                      						add(
                      							current,
                      							"typeArguments",
                      							lv_typeArguments_2_0,
                      							"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalStubbrLang.g:14306:4: (otherlv_3= ',' ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) )*
                    loop357:
                    do {
                        int alt357=2;
                        int LA357_0 = input.LA(1);

                        if ( (LA357_0==25) ) {
                            alt357=1;
                        }


                        switch (alt357) {
                    	case 1 :
                    	    // InternalStubbrLang.g:14307:5: otherlv_3= ',' ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) )
                    	    {
                    	    otherlv_3=(Token)match(input,25,FOLLOW_238); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_3, grammarAccess.getXFeatureCallAccess().getCommaKeyword_1_2_0());
                    	      				
                    	    }
                    	    // InternalStubbrLang.g:14311:5: ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) )
                    	    // InternalStubbrLang.g:14312:6: (lv_typeArguments_4_0= ruleJvmArgumentTypeReference )
                    	    {
                    	    // InternalStubbrLang.g:14312:6: (lv_typeArguments_4_0= ruleJvmArgumentTypeReference )
                    	    // InternalStubbrLang.g:14313:7: lv_typeArguments_4_0= ruleJvmArgumentTypeReference
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getXFeatureCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_1_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_239);
                    	    lv_typeArguments_4_0=ruleJvmArgumentTypeReference();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getXFeatureCallRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"typeArguments",
                    	      								lv_typeArguments_4_0,
                    	      								"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop357;
                        }
                    } while (true);

                    otherlv_5=(Token)match(input,163,FOLLOW_237); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getXFeatureCallAccess().getGreaterThanSignKeyword_1_3());
                      			
                    }

                    }
                    break;

            }

            // InternalStubbrLang.g:14336:3: ( ( ruleIdOrSuper ) )
            // InternalStubbrLang.g:14337:4: ( ruleIdOrSuper )
            {
            // InternalStubbrLang.g:14337:4: ( ruleIdOrSuper )
            // InternalStubbrLang.g:14338:5: ruleIdOrSuper
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getXFeatureCallRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXFeatureCallAccess().getFeatureJvmIdentifiableElementCrossReference_2_0());
              				
            }
            pushFollow(FOLLOW_272);
            ruleIdOrSuper();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalStubbrLang.g:14352:3: ( ( ( ( '(' ) )=> (lv_explicitOperationCall_7_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )? otherlv_12= ')' )?
            int alt361=2;
            alt361 = dfa361.predict(input);
            switch (alt361) {
                case 1 :
                    // InternalStubbrLang.g:14353:4: ( ( ( '(' ) )=> (lv_explicitOperationCall_7_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )? otherlv_12= ')'
                    {
                    // InternalStubbrLang.g:14353:4: ( ( ( '(' ) )=> (lv_explicitOperationCall_7_0= '(' ) )
                    // InternalStubbrLang.g:14354:5: ( ( '(' ) )=> (lv_explicitOperationCall_7_0= '(' )
                    {
                    // InternalStubbrLang.g:14358:5: (lv_explicitOperationCall_7_0= '(' )
                    // InternalStubbrLang.g:14359:6: lv_explicitOperationCall_7_0= '('
                    {
                    lv_explicitOperationCall_7_0=(Token)match(input,191,FOLLOW_241); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_explicitOperationCall_7_0, grammarAccess.getXFeatureCallAccess().getExplicitOperationCallLeftParenthesisKeyword_3_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getXFeatureCallRule());
                      						}
                      						setWithLastConsumed(current, "explicitOperationCall", true, "(");
                      					
                    }

                    }


                    }

                    // InternalStubbrLang.g:14371:4: ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )?
                    int alt360=3;
                    alt360 = dfa360.predict(input);
                    switch (alt360) {
                        case 1 :
                            // InternalStubbrLang.g:14372:5: ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) )
                            {
                            // InternalStubbrLang.g:14372:5: ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) )
                            // InternalStubbrLang.g:14373:6: ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure )
                            {
                            // InternalStubbrLang.g:14398:6: (lv_featureCallArguments_8_0= ruleXShortClosure )
                            // InternalStubbrLang.g:14399:7: lv_featureCallArguments_8_0= ruleXShortClosure
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsXShortClosureParserRuleCall_3_1_0_0());
                              						
                            }
                            pushFollow(FOLLOW_242);
                            lv_featureCallArguments_8_0=ruleXShortClosure();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getXFeatureCallRule());
                              							}
                              							add(
                              								current,
                              								"featureCallArguments",
                              								lv_featureCallArguments_8_0,
                              								"org.eclipse.xtext.xbase.Xbase.XShortClosure");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalStubbrLang.g:14417:5: ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* )
                            {
                            // InternalStubbrLang.g:14417:5: ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* )
                            // InternalStubbrLang.g:14418:6: ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )*
                            {
                            // InternalStubbrLang.g:14418:6: ( (lv_featureCallArguments_9_0= ruleXExpression ) )
                            // InternalStubbrLang.g:14419:7: (lv_featureCallArguments_9_0= ruleXExpression )
                            {
                            // InternalStubbrLang.g:14419:7: (lv_featureCallArguments_9_0= ruleXExpression )
                            // InternalStubbrLang.g:14420:8: lv_featureCallArguments_9_0= ruleXExpression
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsXExpressionParserRuleCall_3_1_1_0_0());
                              							
                            }
                            pushFollow(FOLLOW_243);
                            lv_featureCallArguments_9_0=ruleXExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getXFeatureCallRule());
                              								}
                              								add(
                              									current,
                              									"featureCallArguments",
                              									lv_featureCallArguments_9_0,
                              									"org.eclipse.xtext.xbase.Xbase.XExpression");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            // InternalStubbrLang.g:14437:6: (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )*
                            loop359:
                            do {
                                int alt359=2;
                                int LA359_0 = input.LA(1);

                                if ( (LA359_0==25) ) {
                                    alt359=1;
                                }


                                switch (alt359) {
                            	case 1 :
                            	    // InternalStubbrLang.g:14438:7: otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) )
                            	    {
                            	    otherlv_10=(Token)match(input,25,FOLLOW_218); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      							newLeafNode(otherlv_10, grammarAccess.getXFeatureCallAccess().getCommaKeyword_3_1_1_1_0());
                            	      						
                            	    }
                            	    // InternalStubbrLang.g:14442:7: ( (lv_featureCallArguments_11_0= ruleXExpression ) )
                            	    // InternalStubbrLang.g:14443:8: (lv_featureCallArguments_11_0= ruleXExpression )
                            	    {
                            	    // InternalStubbrLang.g:14443:8: (lv_featureCallArguments_11_0= ruleXExpression )
                            	    // InternalStubbrLang.g:14444:9: lv_featureCallArguments_11_0= ruleXExpression
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									newCompositeNode(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsXExpressionParserRuleCall_3_1_1_1_1_0());
                            	      								
                            	    }
                            	    pushFollow(FOLLOW_243);
                            	    lv_featureCallArguments_11_0=ruleXExpression();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									if (current==null) {
                            	      										current = createModelElementForParent(grammarAccess.getXFeatureCallRule());
                            	      									}
                            	      									add(
                            	      										current,
                            	      										"featureCallArguments",
                            	      										lv_featureCallArguments_11_0,
                            	      										"org.eclipse.xtext.xbase.Xbase.XExpression");
                            	      									afterParserOrEnumRuleCall();
                            	      								
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop359;
                                }
                            } while (true);


                            }


                            }
                            break;

                    }

                    otherlv_12=(Token)match(input,192,FOLLOW_273); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_12, grammarAccess.getXFeatureCallAccess().getRightParenthesisKeyword_3_2());
                      			
                    }

                    }
                    break;

            }

            // InternalStubbrLang.g:14469:3: ( ( ( () '[' ) )=> (lv_featureCallArguments_13_0= ruleXClosure ) )?
            int alt362=2;
            alt362 = dfa362.predict(input);
            switch (alt362) {
                case 1 :
                    // InternalStubbrLang.g:14470:4: ( ( () '[' ) )=> (lv_featureCallArguments_13_0= ruleXClosure )
                    {
                    // InternalStubbrLang.g:14476:4: (lv_featureCallArguments_13_0= ruleXClosure )
                    // InternalStubbrLang.g:14477:5: lv_featureCallArguments_13_0= ruleXClosure
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsXClosureParserRuleCall_4_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_featureCallArguments_13_0=ruleXClosure();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getXFeatureCallRule());
                      					}
                      					add(
                      						current,
                      						"featureCallArguments",
                      						lv_featureCallArguments_13_0,
                      						"org.eclipse.xtext.xbase.Xbase.XClosure");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXFeatureCall"


    // $ANTLR start "entryRuleFeatureCallID"
    // InternalStubbrLang.g:14498:1: entryRuleFeatureCallID returns [String current=null] : iv_ruleFeatureCallID= ruleFeatureCallID EOF ;
    public final String entryRuleFeatureCallID() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleFeatureCallID = null;


        try {
            // InternalStubbrLang.g:14498:53: (iv_ruleFeatureCallID= ruleFeatureCallID EOF )
            // InternalStubbrLang.g:14499:2: iv_ruleFeatureCallID= ruleFeatureCallID EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFeatureCallIDRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFeatureCallID=ruleFeatureCallID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFeatureCallID.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFeatureCallID"


    // $ANTLR start "ruleFeatureCallID"
    // InternalStubbrLang.g:14505:1: ruleFeatureCallID returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_ValidID_0= ruleValidID | kw= 'extends' | kw= 'static' | kw= 'import' | kw= 'extension' ) ;
    public final AntlrDatatypeRuleToken ruleFeatureCallID() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_ValidID_0 = null;



        	enterRule();

        try {
            // InternalStubbrLang.g:14511:2: ( (this_ValidID_0= ruleValidID | kw= 'extends' | kw= 'static' | kw= 'import' | kw= 'extension' ) )
            // InternalStubbrLang.g:14512:2: (this_ValidID_0= ruleValidID | kw= 'extends' | kw= 'static' | kw= 'import' | kw= 'extension' )
            {
            // InternalStubbrLang.g:14512:2: (this_ValidID_0= ruleValidID | kw= 'extends' | kw= 'static' | kw= 'import' | kw= 'extension' )
            int alt363=5;
            switch ( input.LA(1) ) {
            case RULE_ID:
                {
                alt363=1;
                }
                break;
            case 69:
                {
                alt363=2;
                }
                break;
            case 207:
                {
                alt363=3;
                }
                break;
            case 208:
                {
                alt363=4;
                }
                break;
            case 209:
                {
                alt363=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 363, 0, input);

                throw nvae;
            }

            switch (alt363) {
                case 1 :
                    // InternalStubbrLang.g:14513:3: this_ValidID_0= ruleValidID
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getFeatureCallIDAccess().getValidIDParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ValidID_0=ruleValidID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_ValidID_0);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalStubbrLang.g:14524:3: kw= 'extends'
                    {
                    kw=(Token)match(input,69,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getFeatureCallIDAccess().getExtendsKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalStubbrLang.g:14530:3: kw= 'static'
                    {
                    kw=(Token)match(input,207,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getFeatureCallIDAccess().getStaticKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalStubbrLang.g:14536:3: kw= 'import'
                    {
                    kw=(Token)match(input,208,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getFeatureCallIDAccess().getImportKeyword_3());
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalStubbrLang.g:14542:3: kw= 'extension'
                    {
                    kw=(Token)match(input,209,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getFeatureCallIDAccess().getExtensionKeyword_4());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFeatureCallID"


    // $ANTLR start "entryRuleIdOrSuper"
    // InternalStubbrLang.g:14551:1: entryRuleIdOrSuper returns [String current=null] : iv_ruleIdOrSuper= ruleIdOrSuper EOF ;
    public final String entryRuleIdOrSuper() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleIdOrSuper = null;


        try {
            // InternalStubbrLang.g:14551:49: (iv_ruleIdOrSuper= ruleIdOrSuper EOF )
            // InternalStubbrLang.g:14552:2: iv_ruleIdOrSuper= ruleIdOrSuper EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIdOrSuperRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleIdOrSuper=ruleIdOrSuper();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIdOrSuper.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIdOrSuper"


    // $ANTLR start "ruleIdOrSuper"
    // InternalStubbrLang.g:14558:1: ruleIdOrSuper returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_FeatureCallID_0= ruleFeatureCallID | kw= 'super' ) ;
    public final AntlrDatatypeRuleToken ruleIdOrSuper() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_FeatureCallID_0 = null;



        	enterRule();

        try {
            // InternalStubbrLang.g:14564:2: ( (this_FeatureCallID_0= ruleFeatureCallID | kw= 'super' ) )
            // InternalStubbrLang.g:14565:2: (this_FeatureCallID_0= ruleFeatureCallID | kw= 'super' )
            {
            // InternalStubbrLang.g:14565:2: (this_FeatureCallID_0= ruleFeatureCallID | kw= 'super' )
            int alt364=2;
            int LA364_0 = input.LA(1);

            if ( (LA364_0==RULE_ID||LA364_0==69||(LA364_0>=207 && LA364_0<=209)) ) {
                alt364=1;
            }
            else if ( (LA364_0==210) ) {
                alt364=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 364, 0, input);

                throw nvae;
            }
            switch (alt364) {
                case 1 :
                    // InternalStubbrLang.g:14566:3: this_FeatureCallID_0= ruleFeatureCallID
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getIdOrSuperAccess().getFeatureCallIDParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_FeatureCallID_0=ruleFeatureCallID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_FeatureCallID_0);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalStubbrLang.g:14577:3: kw= 'super'
                    {
                    kw=(Token)match(input,210,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getIdOrSuperAccess().getSuperKeyword_1());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIdOrSuper"


    // $ANTLR start "entryRuleXConstructorCall"
    // InternalStubbrLang.g:14586:1: entryRuleXConstructorCall returns [EObject current=null] : iv_ruleXConstructorCall= ruleXConstructorCall EOF ;
    public final EObject entryRuleXConstructorCall() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXConstructorCall = null;


        try {
            // InternalStubbrLang.g:14586:57: (iv_ruleXConstructorCall= ruleXConstructorCall EOF )
            // InternalStubbrLang.g:14587:2: iv_ruleXConstructorCall= ruleXConstructorCall EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXConstructorCallRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXConstructorCall=ruleXConstructorCall();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXConstructorCall; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXConstructorCall"


    // $ANTLR start "ruleXConstructorCall"
    // InternalStubbrLang.g:14593:1: ruleXConstructorCall returns [EObject current=null] : ( () otherlv_1= 'new' ( ( ruleQualifiedName ) ) ( ( ( '<' )=>otherlv_3= '<' ) ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= ',' ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* otherlv_7= '>' )? ( ( ( ( '(' ) )=> (lv_explicitConstructorCall_8_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )? otherlv_13= ')' )? ( ( ( () '[' ) )=> (lv_arguments_14_0= ruleXClosure ) )? ) ;
    public final EObject ruleXConstructorCall() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token lv_explicitConstructorCall_8_0=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        EObject lv_typeArguments_4_0 = null;

        EObject lv_typeArguments_6_0 = null;

        EObject lv_arguments_9_0 = null;

        EObject lv_arguments_10_0 = null;

        EObject lv_arguments_12_0 = null;

        EObject lv_arguments_14_0 = null;



        	enterRule();

        try {
            // InternalStubbrLang.g:14599:2: ( ( () otherlv_1= 'new' ( ( ruleQualifiedName ) ) ( ( ( '<' )=>otherlv_3= '<' ) ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= ',' ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* otherlv_7= '>' )? ( ( ( ( '(' ) )=> (lv_explicitConstructorCall_8_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )? otherlv_13= ')' )? ( ( ( () '[' ) )=> (lv_arguments_14_0= ruleXClosure ) )? ) )
            // InternalStubbrLang.g:14600:2: ( () otherlv_1= 'new' ( ( ruleQualifiedName ) ) ( ( ( '<' )=>otherlv_3= '<' ) ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= ',' ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* otherlv_7= '>' )? ( ( ( ( '(' ) )=> (lv_explicitConstructorCall_8_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )? otherlv_13= ')' )? ( ( ( () '[' ) )=> (lv_arguments_14_0= ruleXClosure ) )? )
            {
            // InternalStubbrLang.g:14600:2: ( () otherlv_1= 'new' ( ( ruleQualifiedName ) ) ( ( ( '<' )=>otherlv_3= '<' ) ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= ',' ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* otherlv_7= '>' )? ( ( ( ( '(' ) )=> (lv_explicitConstructorCall_8_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )? otherlv_13= ')' )? ( ( ( () '[' ) )=> (lv_arguments_14_0= ruleXClosure ) )? )
            // InternalStubbrLang.g:14601:3: () otherlv_1= 'new' ( ( ruleQualifiedName ) ) ( ( ( '<' )=>otherlv_3= '<' ) ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= ',' ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* otherlv_7= '>' )? ( ( ( ( '(' ) )=> (lv_explicitConstructorCall_8_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )? otherlv_13= ')' )? ( ( ( () '[' ) )=> (lv_arguments_14_0= ruleXClosure ) )?
            {
            // InternalStubbrLang.g:14601:3: ()
            // InternalStubbrLang.g:14602:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXConstructorCallAccess().getXConstructorCallAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,211,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXConstructorCallAccess().getNewKeyword_1());
              		
            }
            // InternalStubbrLang.g:14612:3: ( ( ruleQualifiedName ) )
            // InternalStubbrLang.g:14613:4: ( ruleQualifiedName )
            {
            // InternalStubbrLang.g:14613:4: ( ruleQualifiedName )
            // InternalStubbrLang.g:14614:5: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getXConstructorCallRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXConstructorCallAccess().getConstructorJvmConstructorCrossReference_2_0());
              				
            }
            pushFollow(FOLLOW_274);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalStubbrLang.g:14628:3: ( ( ( '<' )=>otherlv_3= '<' ) ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= ',' ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* otherlv_7= '>' )?
            int alt366=2;
            alt366 = dfa366.predict(input);
            switch (alt366) {
                case 1 :
                    // InternalStubbrLang.g:14629:4: ( ( '<' )=>otherlv_3= '<' ) ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= ',' ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* otherlv_7= '>'
                    {
                    // InternalStubbrLang.g:14629:4: ( ( '<' )=>otherlv_3= '<' )
                    // InternalStubbrLang.g:14630:5: ( '<' )=>otherlv_3= '<'
                    {
                    otherlv_3=(Token)match(input,162,FOLLOW_238); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_3, grammarAccess.getXConstructorCallAccess().getLessThanSignKeyword_3_0());
                      				
                    }

                    }

                    // InternalStubbrLang.g:14636:4: ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) )
                    // InternalStubbrLang.g:14637:5: (lv_typeArguments_4_0= ruleJvmArgumentTypeReference )
                    {
                    // InternalStubbrLang.g:14637:5: (lv_typeArguments_4_0= ruleJvmArgumentTypeReference )
                    // InternalStubbrLang.g:14638:6: lv_typeArguments_4_0= ruleJvmArgumentTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXConstructorCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_3_1_0());
                      					
                    }
                    pushFollow(FOLLOW_239);
                    lv_typeArguments_4_0=ruleJvmArgumentTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXConstructorCallRule());
                      						}
                      						add(
                      							current,
                      							"typeArguments",
                      							lv_typeArguments_4_0,
                      							"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalStubbrLang.g:14655:4: (otherlv_5= ',' ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )*
                    loop365:
                    do {
                        int alt365=2;
                        int LA365_0 = input.LA(1);

                        if ( (LA365_0==25) ) {
                            alt365=1;
                        }


                        switch (alt365) {
                    	case 1 :
                    	    // InternalStubbrLang.g:14656:5: otherlv_5= ',' ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) )
                    	    {
                    	    otherlv_5=(Token)match(input,25,FOLLOW_238); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_5, grammarAccess.getXConstructorCallAccess().getCommaKeyword_3_2_0());
                    	      				
                    	    }
                    	    // InternalStubbrLang.g:14660:5: ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) )
                    	    // InternalStubbrLang.g:14661:6: (lv_typeArguments_6_0= ruleJvmArgumentTypeReference )
                    	    {
                    	    // InternalStubbrLang.g:14661:6: (lv_typeArguments_6_0= ruleJvmArgumentTypeReference )
                    	    // InternalStubbrLang.g:14662:7: lv_typeArguments_6_0= ruleJvmArgumentTypeReference
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getXConstructorCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_3_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_239);
                    	    lv_typeArguments_6_0=ruleJvmArgumentTypeReference();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getXConstructorCallRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"typeArguments",
                    	      								lv_typeArguments_6_0,
                    	      								"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop365;
                        }
                    } while (true);

                    otherlv_7=(Token)match(input,163,FOLLOW_272); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getXConstructorCallAccess().getGreaterThanSignKeyword_3_3());
                      			
                    }

                    }
                    break;

            }

            // InternalStubbrLang.g:14685:3: ( ( ( ( '(' ) )=> (lv_explicitConstructorCall_8_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )? otherlv_13= ')' )?
            int alt369=2;
            alt369 = dfa369.predict(input);
            switch (alt369) {
                case 1 :
                    // InternalStubbrLang.g:14686:4: ( ( ( '(' ) )=> (lv_explicitConstructorCall_8_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )? otherlv_13= ')'
                    {
                    // InternalStubbrLang.g:14686:4: ( ( ( '(' ) )=> (lv_explicitConstructorCall_8_0= '(' ) )
                    // InternalStubbrLang.g:14687:5: ( ( '(' ) )=> (lv_explicitConstructorCall_8_0= '(' )
                    {
                    // InternalStubbrLang.g:14691:5: (lv_explicitConstructorCall_8_0= '(' )
                    // InternalStubbrLang.g:14692:6: lv_explicitConstructorCall_8_0= '('
                    {
                    lv_explicitConstructorCall_8_0=(Token)match(input,191,FOLLOW_241); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_explicitConstructorCall_8_0, grammarAccess.getXConstructorCallAccess().getExplicitConstructorCallLeftParenthesisKeyword_4_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getXConstructorCallRule());
                      						}
                      						setWithLastConsumed(current, "explicitConstructorCall", true, "(");
                      					
                    }

                    }


                    }

                    // InternalStubbrLang.g:14704:4: ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )?
                    int alt368=3;
                    alt368 = dfa368.predict(input);
                    switch (alt368) {
                        case 1 :
                            // InternalStubbrLang.g:14705:5: ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) )
                            {
                            // InternalStubbrLang.g:14705:5: ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) )
                            // InternalStubbrLang.g:14706:6: ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure )
                            {
                            // InternalStubbrLang.g:14731:6: (lv_arguments_9_0= ruleXShortClosure )
                            // InternalStubbrLang.g:14732:7: lv_arguments_9_0= ruleXShortClosure
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getXConstructorCallAccess().getArgumentsXShortClosureParserRuleCall_4_1_0_0());
                              						
                            }
                            pushFollow(FOLLOW_242);
                            lv_arguments_9_0=ruleXShortClosure();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getXConstructorCallRule());
                              							}
                              							add(
                              								current,
                              								"arguments",
                              								lv_arguments_9_0,
                              								"org.eclipse.xtext.xbase.Xbase.XShortClosure");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalStubbrLang.g:14750:5: ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )* )
                            {
                            // InternalStubbrLang.g:14750:5: ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )* )
                            // InternalStubbrLang.g:14751:6: ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )*
                            {
                            // InternalStubbrLang.g:14751:6: ( (lv_arguments_10_0= ruleXExpression ) )
                            // InternalStubbrLang.g:14752:7: (lv_arguments_10_0= ruleXExpression )
                            {
                            // InternalStubbrLang.g:14752:7: (lv_arguments_10_0= ruleXExpression )
                            // InternalStubbrLang.g:14753:8: lv_arguments_10_0= ruleXExpression
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getXConstructorCallAccess().getArgumentsXExpressionParserRuleCall_4_1_1_0_0());
                              							
                            }
                            pushFollow(FOLLOW_243);
                            lv_arguments_10_0=ruleXExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getXConstructorCallRule());
                              								}
                              								add(
                              									current,
                              									"arguments",
                              									lv_arguments_10_0,
                              									"org.eclipse.xtext.xbase.Xbase.XExpression");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            // InternalStubbrLang.g:14770:6: (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )*
                            loop367:
                            do {
                                int alt367=2;
                                int LA367_0 = input.LA(1);

                                if ( (LA367_0==25) ) {
                                    alt367=1;
                                }


                                switch (alt367) {
                            	case 1 :
                            	    // InternalStubbrLang.g:14771:7: otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) )
                            	    {
                            	    otherlv_11=(Token)match(input,25,FOLLOW_218); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      							newLeafNode(otherlv_11, grammarAccess.getXConstructorCallAccess().getCommaKeyword_4_1_1_1_0());
                            	      						
                            	    }
                            	    // InternalStubbrLang.g:14775:7: ( (lv_arguments_12_0= ruleXExpression ) )
                            	    // InternalStubbrLang.g:14776:8: (lv_arguments_12_0= ruleXExpression )
                            	    {
                            	    // InternalStubbrLang.g:14776:8: (lv_arguments_12_0= ruleXExpression )
                            	    // InternalStubbrLang.g:14777:9: lv_arguments_12_0= ruleXExpression
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									newCompositeNode(grammarAccess.getXConstructorCallAccess().getArgumentsXExpressionParserRuleCall_4_1_1_1_1_0());
                            	      								
                            	    }
                            	    pushFollow(FOLLOW_243);
                            	    lv_arguments_12_0=ruleXExpression();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									if (current==null) {
                            	      										current = createModelElementForParent(grammarAccess.getXConstructorCallRule());
                            	      									}
                            	      									add(
                            	      										current,
                            	      										"arguments",
                            	      										lv_arguments_12_0,
                            	      										"org.eclipse.xtext.xbase.Xbase.XExpression");
                            	      									afterParserOrEnumRuleCall();
                            	      								
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop367;
                                }
                            } while (true);


                            }


                            }
                            break;

                    }

                    otherlv_13=(Token)match(input,192,FOLLOW_273); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_13, grammarAccess.getXConstructorCallAccess().getRightParenthesisKeyword_4_2());
                      			
                    }

                    }
                    break;

            }

            // InternalStubbrLang.g:14802:3: ( ( ( () '[' ) )=> (lv_arguments_14_0= ruleXClosure ) )?
            int alt370=2;
            alt370 = dfa370.predict(input);
            switch (alt370) {
                case 1 :
                    // InternalStubbrLang.g:14803:4: ( ( () '[' ) )=> (lv_arguments_14_0= ruleXClosure )
                    {
                    // InternalStubbrLang.g:14809:4: (lv_arguments_14_0= ruleXClosure )
                    // InternalStubbrLang.g:14810:5: lv_arguments_14_0= ruleXClosure
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getXConstructorCallAccess().getArgumentsXClosureParserRuleCall_5_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_arguments_14_0=ruleXClosure();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getXConstructorCallRule());
                      					}
                      					add(
                      						current,
                      						"arguments",
                      						lv_arguments_14_0,
                      						"org.eclipse.xtext.xbase.Xbase.XClosure");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXConstructorCall"


    // $ANTLR start "entryRuleXBooleanLiteral"
    // InternalStubbrLang.g:14831:1: entryRuleXBooleanLiteral returns [EObject current=null] : iv_ruleXBooleanLiteral= ruleXBooleanLiteral EOF ;
    public final EObject entryRuleXBooleanLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXBooleanLiteral = null;


        try {
            // InternalStubbrLang.g:14831:56: (iv_ruleXBooleanLiteral= ruleXBooleanLiteral EOF )
            // InternalStubbrLang.g:14832:2: iv_ruleXBooleanLiteral= ruleXBooleanLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXBooleanLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXBooleanLiteral=ruleXBooleanLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXBooleanLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXBooleanLiteral"


    // $ANTLR start "ruleXBooleanLiteral"
    // InternalStubbrLang.g:14838:1: ruleXBooleanLiteral returns [EObject current=null] : ( () (otherlv_1= 'false' | ( (lv_isTrue_2_0= 'true' ) ) ) ) ;
    public final EObject ruleXBooleanLiteral() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_isTrue_2_0=null;


        	enterRule();

        try {
            // InternalStubbrLang.g:14844:2: ( ( () (otherlv_1= 'false' | ( (lv_isTrue_2_0= 'true' ) ) ) ) )
            // InternalStubbrLang.g:14845:2: ( () (otherlv_1= 'false' | ( (lv_isTrue_2_0= 'true' ) ) ) )
            {
            // InternalStubbrLang.g:14845:2: ( () (otherlv_1= 'false' | ( (lv_isTrue_2_0= 'true' ) ) ) )
            // InternalStubbrLang.g:14846:3: () (otherlv_1= 'false' | ( (lv_isTrue_2_0= 'true' ) ) )
            {
            // InternalStubbrLang.g:14846:3: ()
            // InternalStubbrLang.g:14847:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXBooleanLiteralAccess().getXBooleanLiteralAction_0(),
              					current);
              			
            }

            }

            // InternalStubbrLang.g:14853:3: (otherlv_1= 'false' | ( (lv_isTrue_2_0= 'true' ) ) )
            int alt371=2;
            int LA371_0 = input.LA(1);

            if ( (LA371_0==212) ) {
                alt371=1;
            }
            else if ( (LA371_0==213) ) {
                alt371=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 371, 0, input);

                throw nvae;
            }
            switch (alt371) {
                case 1 :
                    // InternalStubbrLang.g:14854:4: otherlv_1= 'false'
                    {
                    otherlv_1=(Token)match(input,212,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getXBooleanLiteralAccess().getFalseKeyword_1_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalStubbrLang.g:14859:4: ( (lv_isTrue_2_0= 'true' ) )
                    {
                    // InternalStubbrLang.g:14859:4: ( (lv_isTrue_2_0= 'true' ) )
                    // InternalStubbrLang.g:14860:5: (lv_isTrue_2_0= 'true' )
                    {
                    // InternalStubbrLang.g:14860:5: (lv_isTrue_2_0= 'true' )
                    // InternalStubbrLang.g:14861:6: lv_isTrue_2_0= 'true'
                    {
                    lv_isTrue_2_0=(Token)match(input,213,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_isTrue_2_0, grammarAccess.getXBooleanLiteralAccess().getIsTrueTrueKeyword_1_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getXBooleanLiteralRule());
                      						}
                      						setWithLastConsumed(current, "isTrue", true, "true");
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXBooleanLiteral"


    // $ANTLR start "entryRuleXNullLiteral"
    // InternalStubbrLang.g:14878:1: entryRuleXNullLiteral returns [EObject current=null] : iv_ruleXNullLiteral= ruleXNullLiteral EOF ;
    public final EObject entryRuleXNullLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXNullLiteral = null;


        try {
            // InternalStubbrLang.g:14878:53: (iv_ruleXNullLiteral= ruleXNullLiteral EOF )
            // InternalStubbrLang.g:14879:2: iv_ruleXNullLiteral= ruleXNullLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXNullLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXNullLiteral=ruleXNullLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXNullLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXNullLiteral"


    // $ANTLR start "ruleXNullLiteral"
    // InternalStubbrLang.g:14885:1: ruleXNullLiteral returns [EObject current=null] : ( () otherlv_1= 'null' ) ;
    public final EObject ruleXNullLiteral() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;


        	enterRule();

        try {
            // InternalStubbrLang.g:14891:2: ( ( () otherlv_1= 'null' ) )
            // InternalStubbrLang.g:14892:2: ( () otherlv_1= 'null' )
            {
            // InternalStubbrLang.g:14892:2: ( () otherlv_1= 'null' )
            // InternalStubbrLang.g:14893:3: () otherlv_1= 'null'
            {
            // InternalStubbrLang.g:14893:3: ()
            // InternalStubbrLang.g:14894:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXNullLiteralAccess().getXNullLiteralAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,214,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXNullLiteralAccess().getNullKeyword_1());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXNullLiteral"


    // $ANTLR start "entryRuleXNumberLiteral"
    // InternalStubbrLang.g:14908:1: entryRuleXNumberLiteral returns [EObject current=null] : iv_ruleXNumberLiteral= ruleXNumberLiteral EOF ;
    public final EObject entryRuleXNumberLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXNumberLiteral = null;


        try {
            // InternalStubbrLang.g:14908:55: (iv_ruleXNumberLiteral= ruleXNumberLiteral EOF )
            // InternalStubbrLang.g:14909:2: iv_ruleXNumberLiteral= ruleXNumberLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXNumberLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXNumberLiteral=ruleXNumberLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXNumberLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXNumberLiteral"


    // $ANTLR start "ruleXNumberLiteral"
    // InternalStubbrLang.g:14915:1: ruleXNumberLiteral returns [EObject current=null] : ( () ( (lv_value_1_0= ruleNumber ) ) ) ;
    public final EObject ruleXNumberLiteral() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_value_1_0 = null;



        	enterRule();

        try {
            // InternalStubbrLang.g:14921:2: ( ( () ( (lv_value_1_0= ruleNumber ) ) ) )
            // InternalStubbrLang.g:14922:2: ( () ( (lv_value_1_0= ruleNumber ) ) )
            {
            // InternalStubbrLang.g:14922:2: ( () ( (lv_value_1_0= ruleNumber ) ) )
            // InternalStubbrLang.g:14923:3: () ( (lv_value_1_0= ruleNumber ) )
            {
            // InternalStubbrLang.g:14923:3: ()
            // InternalStubbrLang.g:14924:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXNumberLiteralAccess().getXNumberLiteralAction_0(),
              					current);
              			
            }

            }

            // InternalStubbrLang.g:14930:3: ( (lv_value_1_0= ruleNumber ) )
            // InternalStubbrLang.g:14931:4: (lv_value_1_0= ruleNumber )
            {
            // InternalStubbrLang.g:14931:4: (lv_value_1_0= ruleNumber )
            // InternalStubbrLang.g:14932:5: lv_value_1_0= ruleNumber
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXNumberLiteralAccess().getValueNumberParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_value_1_0=ruleNumber();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXNumberLiteralRule());
              					}
              					set(
              						current,
              						"value",
              						lv_value_1_0,
              						"org.eclipse.xtext.xbase.Xbase.Number");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXNumberLiteral"


    // $ANTLR start "entryRuleXStringLiteral"
    // InternalStubbrLang.g:14953:1: entryRuleXStringLiteral returns [EObject current=null] : iv_ruleXStringLiteral= ruleXStringLiteral EOF ;
    public final EObject entryRuleXStringLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXStringLiteral = null;


        try {
            // InternalStubbrLang.g:14953:55: (iv_ruleXStringLiteral= ruleXStringLiteral EOF )
            // InternalStubbrLang.g:14954:2: iv_ruleXStringLiteral= ruleXStringLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXStringLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXStringLiteral=ruleXStringLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXStringLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXStringLiteral"


    // $ANTLR start "ruleXStringLiteral"
    // InternalStubbrLang.g:14960:1: ruleXStringLiteral returns [EObject current=null] : ( () ( (lv_value_1_0= RULE_STRING ) ) ) ;
    public final EObject ruleXStringLiteral() throws RecognitionException {
        EObject current = null;

        Token lv_value_1_0=null;


        	enterRule();

        try {
            // InternalStubbrLang.g:14966:2: ( ( () ( (lv_value_1_0= RULE_STRING ) ) ) )
            // InternalStubbrLang.g:14967:2: ( () ( (lv_value_1_0= RULE_STRING ) ) )
            {
            // InternalStubbrLang.g:14967:2: ( () ( (lv_value_1_0= RULE_STRING ) ) )
            // InternalStubbrLang.g:14968:3: () ( (lv_value_1_0= RULE_STRING ) )
            {
            // InternalStubbrLang.g:14968:3: ()
            // InternalStubbrLang.g:14969:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXStringLiteralAccess().getXStringLiteralAction_0(),
              					current);
              			
            }

            }

            // InternalStubbrLang.g:14975:3: ( (lv_value_1_0= RULE_STRING ) )
            // InternalStubbrLang.g:14976:4: (lv_value_1_0= RULE_STRING )
            {
            // InternalStubbrLang.g:14976:4: (lv_value_1_0= RULE_STRING )
            // InternalStubbrLang.g:14977:5: lv_value_1_0= RULE_STRING
            {
            lv_value_1_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_value_1_0, grammarAccess.getXStringLiteralAccess().getValueSTRINGTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getXStringLiteralRule());
              					}
              					setWithLastConsumed(
              						current,
              						"value",
              						lv_value_1_0,
              						"org.eclipse.xtext.xbase.Xtype.STRING");
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXStringLiteral"


    // $ANTLR start "entryRuleXTypeLiteral"
    // InternalStubbrLang.g:14997:1: entryRuleXTypeLiteral returns [EObject current=null] : iv_ruleXTypeLiteral= ruleXTypeLiteral EOF ;
    public final EObject entryRuleXTypeLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXTypeLiteral = null;


        try {
            // InternalStubbrLang.g:14997:53: (iv_ruleXTypeLiteral= ruleXTypeLiteral EOF )
            // InternalStubbrLang.g:14998:2: iv_ruleXTypeLiteral= ruleXTypeLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXTypeLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXTypeLiteral=ruleXTypeLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXTypeLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXTypeLiteral"


    // $ANTLR start "ruleXTypeLiteral"
    // InternalStubbrLang.g:15004:1: ruleXTypeLiteral returns [EObject current=null] : ( () otherlv_1= 'typeof' otherlv_2= '(' ( ( ruleQualifiedName ) ) ( (lv_arrayDimensions_4_0= ruleArrayBrackets ) )* otherlv_5= ')' ) ;
    public final EObject ruleXTypeLiteral() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_5=null;
        AntlrDatatypeRuleToken lv_arrayDimensions_4_0 = null;



        	enterRule();

        try {
            // InternalStubbrLang.g:15010:2: ( ( () otherlv_1= 'typeof' otherlv_2= '(' ( ( ruleQualifiedName ) ) ( (lv_arrayDimensions_4_0= ruleArrayBrackets ) )* otherlv_5= ')' ) )
            // InternalStubbrLang.g:15011:2: ( () otherlv_1= 'typeof' otherlv_2= '(' ( ( ruleQualifiedName ) ) ( (lv_arrayDimensions_4_0= ruleArrayBrackets ) )* otherlv_5= ')' )
            {
            // InternalStubbrLang.g:15011:2: ( () otherlv_1= 'typeof' otherlv_2= '(' ( ( ruleQualifiedName ) ) ( (lv_arrayDimensions_4_0= ruleArrayBrackets ) )* otherlv_5= ')' )
            // InternalStubbrLang.g:15012:3: () otherlv_1= 'typeof' otherlv_2= '(' ( ( ruleQualifiedName ) ) ( (lv_arrayDimensions_4_0= ruleArrayBrackets ) )* otherlv_5= ')'
            {
            // InternalStubbrLang.g:15012:3: ()
            // InternalStubbrLang.g:15013:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXTypeLiteralAccess().getXTypeLiteralAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,215,FOLLOW_255); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXTypeLiteralAccess().getTypeofKeyword_1());
              		
            }
            otherlv_2=(Token)match(input,191,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getXTypeLiteralAccess().getLeftParenthesisKeyword_2());
              		
            }
            // InternalStubbrLang.g:15027:3: ( ( ruleQualifiedName ) )
            // InternalStubbrLang.g:15028:4: ( ruleQualifiedName )
            {
            // InternalStubbrLang.g:15028:4: ( ruleQualifiedName )
            // InternalStubbrLang.g:15029:5: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getXTypeLiteralRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXTypeLiteralAccess().getTypeJvmTypeCrossReference_3_0());
              				
            }
            pushFollow(FOLLOW_275);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalStubbrLang.g:15043:3: ( (lv_arrayDimensions_4_0= ruleArrayBrackets ) )*
            loop372:
            do {
                int alt372=2;
                int LA372_0 = input.LA(1);

                if ( (LA372_0==194) ) {
                    alt372=1;
                }


                switch (alt372) {
            	case 1 :
            	    // InternalStubbrLang.g:15044:4: (lv_arrayDimensions_4_0= ruleArrayBrackets )
            	    {
            	    // InternalStubbrLang.g:15044:4: (lv_arrayDimensions_4_0= ruleArrayBrackets )
            	    // InternalStubbrLang.g:15045:5: lv_arrayDimensions_4_0= ruleArrayBrackets
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getXTypeLiteralAccess().getArrayDimensionsArrayBracketsParserRuleCall_4_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_275);
            	    lv_arrayDimensions_4_0=ruleArrayBrackets();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getXTypeLiteralRule());
            	      					}
            	      					add(
            	      						current,
            	      						"arrayDimensions",
            	      						lv_arrayDimensions_4_0,
            	      						"org.eclipse.xtext.xbase.Xtype.ArrayBrackets");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop372;
                }
            } while (true);

            otherlv_5=(Token)match(input,192,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getXTypeLiteralAccess().getRightParenthesisKeyword_5());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXTypeLiteral"


    // $ANTLR start "entryRuleXThrowExpression"
    // InternalStubbrLang.g:15070:1: entryRuleXThrowExpression returns [EObject current=null] : iv_ruleXThrowExpression= ruleXThrowExpression EOF ;
    public final EObject entryRuleXThrowExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXThrowExpression = null;


        try {
            // InternalStubbrLang.g:15070:57: (iv_ruleXThrowExpression= ruleXThrowExpression EOF )
            // InternalStubbrLang.g:15071:2: iv_ruleXThrowExpression= ruleXThrowExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXThrowExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXThrowExpression=ruleXThrowExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXThrowExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXThrowExpression"


    // $ANTLR start "ruleXThrowExpression"
    // InternalStubbrLang.g:15077:1: ruleXThrowExpression returns [EObject current=null] : ( () otherlv_1= 'throw' ( (lv_expression_2_0= ruleXExpression ) ) ) ;
    public final EObject ruleXThrowExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_expression_2_0 = null;



        	enterRule();

        try {
            // InternalStubbrLang.g:15083:2: ( ( () otherlv_1= 'throw' ( (lv_expression_2_0= ruleXExpression ) ) ) )
            // InternalStubbrLang.g:15084:2: ( () otherlv_1= 'throw' ( (lv_expression_2_0= ruleXExpression ) ) )
            {
            // InternalStubbrLang.g:15084:2: ( () otherlv_1= 'throw' ( (lv_expression_2_0= ruleXExpression ) ) )
            // InternalStubbrLang.g:15085:3: () otherlv_1= 'throw' ( (lv_expression_2_0= ruleXExpression ) )
            {
            // InternalStubbrLang.g:15085:3: ()
            // InternalStubbrLang.g:15086:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXThrowExpressionAccess().getXThrowExpressionAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,216,FOLLOW_218); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXThrowExpressionAccess().getThrowKeyword_1());
              		
            }
            // InternalStubbrLang.g:15096:3: ( (lv_expression_2_0= ruleXExpression ) )
            // InternalStubbrLang.g:15097:4: (lv_expression_2_0= ruleXExpression )
            {
            // InternalStubbrLang.g:15097:4: (lv_expression_2_0= ruleXExpression )
            // InternalStubbrLang.g:15098:5: lv_expression_2_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXThrowExpressionAccess().getExpressionXExpressionParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_expression_2_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXThrowExpressionRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_2_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXThrowExpression"


    // $ANTLR start "entryRuleXReturnExpression"
    // InternalStubbrLang.g:15119:1: entryRuleXReturnExpression returns [EObject current=null] : iv_ruleXReturnExpression= ruleXReturnExpression EOF ;
    public final EObject entryRuleXReturnExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXReturnExpression = null;


        try {
            // InternalStubbrLang.g:15119:58: (iv_ruleXReturnExpression= ruleXReturnExpression EOF )
            // InternalStubbrLang.g:15120:2: iv_ruleXReturnExpression= ruleXReturnExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXReturnExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXReturnExpression=ruleXReturnExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXReturnExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXReturnExpression"


    // $ANTLR start "ruleXReturnExpression"
    // InternalStubbrLang.g:15126:1: ruleXReturnExpression returns [EObject current=null] : ( () otherlv_1= 'return' ( ( 'extends' | 'static' | 'import' | 'extension' | '!' | '-' | '+' | 'new' | '{' | 'switch' | 'synchronized' | '<' | 'super' | '#' | '[' | 'false' | 'true' | 'null' | 'typeof' | 'if' | 'for' | 'while' | 'do' | 'throw' | 'return' | 'try' | '(' | RULE_ID | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_STRING )=> (lv_expression_2_0= ruleXExpression ) )? ) ;
    public final EObject ruleXReturnExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_expression_2_0 = null;



        	enterRule();

        try {
            // InternalStubbrLang.g:15132:2: ( ( () otherlv_1= 'return' ( ( 'extends' | 'static' | 'import' | 'extension' | '!' | '-' | '+' | 'new' | '{' | 'switch' | 'synchronized' | '<' | 'super' | '#' | '[' | 'false' | 'true' | 'null' | 'typeof' | 'if' | 'for' | 'while' | 'do' | 'throw' | 'return' | 'try' | '(' | RULE_ID | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_STRING )=> (lv_expression_2_0= ruleXExpression ) )? ) )
            // InternalStubbrLang.g:15133:2: ( () otherlv_1= 'return' ( ( 'extends' | 'static' | 'import' | 'extension' | '!' | '-' | '+' | 'new' | '{' | 'switch' | 'synchronized' | '<' | 'super' | '#' | '[' | 'false' | 'true' | 'null' | 'typeof' | 'if' | 'for' | 'while' | 'do' | 'throw' | 'return' | 'try' | '(' | RULE_ID | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_STRING )=> (lv_expression_2_0= ruleXExpression ) )? )
            {
            // InternalStubbrLang.g:15133:2: ( () otherlv_1= 'return' ( ( 'extends' | 'static' | 'import' | 'extension' | '!' | '-' | '+' | 'new' | '{' | 'switch' | 'synchronized' | '<' | 'super' | '#' | '[' | 'false' | 'true' | 'null' | 'typeof' | 'if' | 'for' | 'while' | 'do' | 'throw' | 'return' | 'try' | '(' | RULE_ID | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_STRING )=> (lv_expression_2_0= ruleXExpression ) )? )
            // InternalStubbrLang.g:15134:3: () otherlv_1= 'return' ( ( 'extends' | 'static' | 'import' | 'extension' | '!' | '-' | '+' | 'new' | '{' | 'switch' | 'synchronized' | '<' | 'super' | '#' | '[' | 'false' | 'true' | 'null' | 'typeof' | 'if' | 'for' | 'while' | 'do' | 'throw' | 'return' | 'try' | '(' | RULE_ID | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_STRING )=> (lv_expression_2_0= ruleXExpression ) )?
            {
            // InternalStubbrLang.g:15134:3: ()
            // InternalStubbrLang.g:15135:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXReturnExpressionAccess().getXReturnExpressionAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,217,FOLLOW_276); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXReturnExpressionAccess().getReturnKeyword_1());
              		
            }
            // InternalStubbrLang.g:15145:3: ( ( 'extends' | 'static' | 'import' | 'extension' | '!' | '-' | '+' | 'new' | '{' | 'switch' | 'synchronized' | '<' | 'super' | '#' | '[' | 'false' | 'true' | 'null' | 'typeof' | 'if' | 'for' | 'while' | 'do' | 'throw' | 'return' | 'try' | '(' | RULE_ID | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_STRING )=> (lv_expression_2_0= ruleXExpression ) )?
            int alt373=2;
            alt373 = dfa373.predict(input);
            switch (alt373) {
                case 1 :
                    // InternalStubbrLang.g:15146:4: ( 'extends' | 'static' | 'import' | 'extension' | '!' | '-' | '+' | 'new' | '{' | 'switch' | 'synchronized' | '<' | 'super' | '#' | '[' | 'false' | 'true' | 'null' | 'typeof' | 'if' | 'for' | 'while' | 'do' | 'throw' | 'return' | 'try' | '(' | RULE_ID | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_STRING )=> (lv_expression_2_0= ruleXExpression )
                    {
                    // InternalStubbrLang.g:15147:4: (lv_expression_2_0= ruleXExpression )
                    // InternalStubbrLang.g:15148:5: lv_expression_2_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getXReturnExpressionAccess().getExpressionXExpressionParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_expression_2_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getXReturnExpressionRule());
                      					}
                      					set(
                      						current,
                      						"expression",
                      						lv_expression_2_0,
                      						"org.eclipse.xtext.xbase.Xbase.XExpression");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXReturnExpression"


    // $ANTLR start "entryRuleXTryCatchFinallyExpression"
    // InternalStubbrLang.g:15169:1: entryRuleXTryCatchFinallyExpression returns [EObject current=null] : iv_ruleXTryCatchFinallyExpression= ruleXTryCatchFinallyExpression EOF ;
    public final EObject entryRuleXTryCatchFinallyExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXTryCatchFinallyExpression = null;


        try {
            // InternalStubbrLang.g:15169:67: (iv_ruleXTryCatchFinallyExpression= ruleXTryCatchFinallyExpression EOF )
            // InternalStubbrLang.g:15170:2: iv_ruleXTryCatchFinallyExpression= ruleXTryCatchFinallyExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXTryCatchFinallyExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXTryCatchFinallyExpression=ruleXTryCatchFinallyExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXTryCatchFinallyExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXTryCatchFinallyExpression"


    // $ANTLR start "ruleXTryCatchFinallyExpression"
    // InternalStubbrLang.g:15176:1: ruleXTryCatchFinallyExpression returns [EObject current=null] : ( () otherlv_1= 'try' ( (lv_expression_2_0= ruleXExpression ) ) ( ( ( ( 'catch' )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )? ) | (otherlv_6= 'finally' ( (lv_finallyExpression_7_0= ruleXExpression ) ) ) ) ) ;
    public final EObject ruleXTryCatchFinallyExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_expression_2_0 = null;

        EObject lv_catchClauses_3_0 = null;

        EObject lv_finallyExpression_5_0 = null;

        EObject lv_finallyExpression_7_0 = null;



        	enterRule();

        try {
            // InternalStubbrLang.g:15182:2: ( ( () otherlv_1= 'try' ( (lv_expression_2_0= ruleXExpression ) ) ( ( ( ( 'catch' )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )? ) | (otherlv_6= 'finally' ( (lv_finallyExpression_7_0= ruleXExpression ) ) ) ) ) )
            // InternalStubbrLang.g:15183:2: ( () otherlv_1= 'try' ( (lv_expression_2_0= ruleXExpression ) ) ( ( ( ( 'catch' )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )? ) | (otherlv_6= 'finally' ( (lv_finallyExpression_7_0= ruleXExpression ) ) ) ) )
            {
            // InternalStubbrLang.g:15183:2: ( () otherlv_1= 'try' ( (lv_expression_2_0= ruleXExpression ) ) ( ( ( ( 'catch' )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )? ) | (otherlv_6= 'finally' ( (lv_finallyExpression_7_0= ruleXExpression ) ) ) ) )
            // InternalStubbrLang.g:15184:3: () otherlv_1= 'try' ( (lv_expression_2_0= ruleXExpression ) ) ( ( ( ( 'catch' )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )? ) | (otherlv_6= 'finally' ( (lv_finallyExpression_7_0= ruleXExpression ) ) ) )
            {
            // InternalStubbrLang.g:15184:3: ()
            // InternalStubbrLang.g:15185:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXTryCatchFinallyExpressionAccess().getXTryCatchFinallyExpressionAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,218,FOLLOW_218); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXTryCatchFinallyExpressionAccess().getTryKeyword_1());
              		
            }
            // InternalStubbrLang.g:15195:3: ( (lv_expression_2_0= ruleXExpression ) )
            // InternalStubbrLang.g:15196:4: (lv_expression_2_0= ruleXExpression )
            {
            // InternalStubbrLang.g:15196:4: (lv_expression_2_0= ruleXExpression )
            // InternalStubbrLang.g:15197:5: lv_expression_2_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXTryCatchFinallyExpressionAccess().getExpressionXExpressionParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_277);
            lv_expression_2_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXTryCatchFinallyExpressionRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_2_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalStubbrLang.g:15214:3: ( ( ( ( 'catch' )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )? ) | (otherlv_6= 'finally' ( (lv_finallyExpression_7_0= ruleXExpression ) ) ) )
            int alt376=2;
            int LA376_0 = input.LA(1);

            if ( (LA376_0==221) ) {
                alt376=1;
            }
            else if ( (LA376_0==219) ) {
                alt376=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 376, 0, input);

                throw nvae;
            }
            switch (alt376) {
                case 1 :
                    // InternalStubbrLang.g:15215:4: ( ( ( 'catch' )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )? )
                    {
                    // InternalStubbrLang.g:15215:4: ( ( ( 'catch' )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )? )
                    // InternalStubbrLang.g:15216:5: ( ( 'catch' )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )?
                    {
                    // InternalStubbrLang.g:15216:5: ( ( 'catch' )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+
                    int cnt374=0;
                    loop374:
                    do {
                        int alt374=2;
                        int LA374_0 = input.LA(1);

                        if ( (LA374_0==221) ) {
                            int LA374_2 = input.LA(2);

                            if ( (synpred38_InternalStubbrLang()) ) {
                                alt374=1;
                            }


                        }


                        switch (alt374) {
                    	case 1 :
                    	    // InternalStubbrLang.g:15217:6: ( 'catch' )=> (lv_catchClauses_3_0= ruleXCatchClause )
                    	    {
                    	    // InternalStubbrLang.g:15218:6: (lv_catchClauses_3_0= ruleXCatchClause )
                    	    // InternalStubbrLang.g:15219:7: lv_catchClauses_3_0= ruleXCatchClause
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getXTryCatchFinallyExpressionAccess().getCatchClausesXCatchClauseParserRuleCall_3_0_0_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_278);
                    	    lv_catchClauses_3_0=ruleXCatchClause();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getXTryCatchFinallyExpressionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"catchClauses",
                    	      								lv_catchClauses_3_0,
                    	      								"org.eclipse.xtext.xbase.Xbase.XCatchClause");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt374 >= 1 ) break loop374;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(374, input);
                                throw eee;
                        }
                        cnt374++;
                    } while (true);

                    // InternalStubbrLang.g:15236:5: ( ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )?
                    int alt375=2;
                    int LA375_0 = input.LA(1);

                    if ( (LA375_0==219) ) {
                        int LA375_1 = input.LA(2);

                        if ( (synpred39_InternalStubbrLang()) ) {
                            alt375=1;
                        }
                    }
                    switch (alt375) {
                        case 1 :
                            // InternalStubbrLang.g:15237:6: ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXExpression ) )
                            {
                            // InternalStubbrLang.g:15237:6: ( ( 'finally' )=>otherlv_4= 'finally' )
                            // InternalStubbrLang.g:15238:7: ( 'finally' )=>otherlv_4= 'finally'
                            {
                            otherlv_4=(Token)match(input,219,FOLLOW_218); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(otherlv_4, grammarAccess.getXTryCatchFinallyExpressionAccess().getFinallyKeyword_3_0_1_0());
                              						
                            }

                            }

                            // InternalStubbrLang.g:15244:6: ( (lv_finallyExpression_5_0= ruleXExpression ) )
                            // InternalStubbrLang.g:15245:7: (lv_finallyExpression_5_0= ruleXExpression )
                            {
                            // InternalStubbrLang.g:15245:7: (lv_finallyExpression_5_0= ruleXExpression )
                            // InternalStubbrLang.g:15246:8: lv_finallyExpression_5_0= ruleXExpression
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getXTryCatchFinallyExpressionAccess().getFinallyExpressionXExpressionParserRuleCall_3_0_1_1_0());
                              							
                            }
                            pushFollow(FOLLOW_2);
                            lv_finallyExpression_5_0=ruleXExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getXTryCatchFinallyExpressionRule());
                              								}
                              								set(
                              									current,
                              									"finallyExpression",
                              									lv_finallyExpression_5_0,
                              									"org.eclipse.xtext.xbase.Xbase.XExpression");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalStubbrLang.g:15266:4: (otherlv_6= 'finally' ( (lv_finallyExpression_7_0= ruleXExpression ) ) )
                    {
                    // InternalStubbrLang.g:15266:4: (otherlv_6= 'finally' ( (lv_finallyExpression_7_0= ruleXExpression ) ) )
                    // InternalStubbrLang.g:15267:5: otherlv_6= 'finally' ( (lv_finallyExpression_7_0= ruleXExpression ) )
                    {
                    otherlv_6=(Token)match(input,219,FOLLOW_218); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_6, grammarAccess.getXTryCatchFinallyExpressionAccess().getFinallyKeyword_3_1_0());
                      				
                    }
                    // InternalStubbrLang.g:15271:5: ( (lv_finallyExpression_7_0= ruleXExpression ) )
                    // InternalStubbrLang.g:15272:6: (lv_finallyExpression_7_0= ruleXExpression )
                    {
                    // InternalStubbrLang.g:15272:6: (lv_finallyExpression_7_0= ruleXExpression )
                    // InternalStubbrLang.g:15273:7: lv_finallyExpression_7_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getXTryCatchFinallyExpressionAccess().getFinallyExpressionXExpressionParserRuleCall_3_1_1_0());
                      						
                    }
                    pushFollow(FOLLOW_2);
                    lv_finallyExpression_7_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getXTryCatchFinallyExpressionRule());
                      							}
                      							set(
                      								current,
                      								"finallyExpression",
                      								lv_finallyExpression_7_0,
                      								"org.eclipse.xtext.xbase.Xbase.XExpression");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXTryCatchFinallyExpression"


    // $ANTLR start "entryRuleXSynchronizedExpression"
    // InternalStubbrLang.g:15296:1: entryRuleXSynchronizedExpression returns [EObject current=null] : iv_ruleXSynchronizedExpression= ruleXSynchronizedExpression EOF ;
    public final EObject entryRuleXSynchronizedExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXSynchronizedExpression = null;


        try {
            // InternalStubbrLang.g:15296:64: (iv_ruleXSynchronizedExpression= ruleXSynchronizedExpression EOF )
            // InternalStubbrLang.g:15297:2: iv_ruleXSynchronizedExpression= ruleXSynchronizedExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXSynchronizedExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXSynchronizedExpression=ruleXSynchronizedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXSynchronizedExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXSynchronizedExpression"


    // $ANTLR start "ruleXSynchronizedExpression"
    // InternalStubbrLang.g:15303:1: ruleXSynchronizedExpression returns [EObject current=null] : ( ( ( ( () 'synchronized' '(' ) )=> ( () otherlv_1= 'synchronized' otherlv_2= '(' ) ) ( (lv_param_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_expression_5_0= ruleXExpression ) ) ) ;
    public final EObject ruleXSynchronizedExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_param_3_0 = null;

        EObject lv_expression_5_0 = null;



        	enterRule();

        try {
            // InternalStubbrLang.g:15309:2: ( ( ( ( ( () 'synchronized' '(' ) )=> ( () otherlv_1= 'synchronized' otherlv_2= '(' ) ) ( (lv_param_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_expression_5_0= ruleXExpression ) ) ) )
            // InternalStubbrLang.g:15310:2: ( ( ( ( () 'synchronized' '(' ) )=> ( () otherlv_1= 'synchronized' otherlv_2= '(' ) ) ( (lv_param_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_expression_5_0= ruleXExpression ) ) )
            {
            // InternalStubbrLang.g:15310:2: ( ( ( ( () 'synchronized' '(' ) )=> ( () otherlv_1= 'synchronized' otherlv_2= '(' ) ) ( (lv_param_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_expression_5_0= ruleXExpression ) ) )
            // InternalStubbrLang.g:15311:3: ( ( ( () 'synchronized' '(' ) )=> ( () otherlv_1= 'synchronized' otherlv_2= '(' ) ) ( (lv_param_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_expression_5_0= ruleXExpression ) )
            {
            // InternalStubbrLang.g:15311:3: ( ( ( () 'synchronized' '(' ) )=> ( () otherlv_1= 'synchronized' otherlv_2= '(' ) )
            // InternalStubbrLang.g:15312:4: ( ( () 'synchronized' '(' ) )=> ( () otherlv_1= 'synchronized' otherlv_2= '(' )
            {
            // InternalStubbrLang.g:15319:4: ( () otherlv_1= 'synchronized' otherlv_2= '(' )
            // InternalStubbrLang.g:15320:5: () otherlv_1= 'synchronized' otherlv_2= '('
            {
            // InternalStubbrLang.g:15320:5: ()
            // InternalStubbrLang.g:15321:6: 
            {
            if ( state.backtracking==0 ) {

              						current = forceCreateModelElement(
              							grammarAccess.getXSynchronizedExpressionAccess().getXSynchronizedExpressionAction_0_0_0(),
              							current);
              					
            }

            }

            otherlv_1=(Token)match(input,220,FOLLOW_255); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_1, grammarAccess.getXSynchronizedExpressionAccess().getSynchronizedKeyword_0_0_1());
              				
            }
            otherlv_2=(Token)match(input,191,FOLLOW_218); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_2, grammarAccess.getXSynchronizedExpressionAccess().getLeftParenthesisKeyword_0_0_2());
              				
            }

            }


            }

            // InternalStubbrLang.g:15337:3: ( (lv_param_3_0= ruleXExpression ) )
            // InternalStubbrLang.g:15338:4: (lv_param_3_0= ruleXExpression )
            {
            // InternalStubbrLang.g:15338:4: (lv_param_3_0= ruleXExpression )
            // InternalStubbrLang.g:15339:5: lv_param_3_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXSynchronizedExpressionAccess().getParamXExpressionParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_242);
            lv_param_3_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXSynchronizedExpressionRule());
              					}
              					set(
              						current,
              						"param",
              						lv_param_3_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_4=(Token)match(input,192,FOLLOW_218); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getXSynchronizedExpressionAccess().getRightParenthesisKeyword_2());
              		
            }
            // InternalStubbrLang.g:15360:3: ( (lv_expression_5_0= ruleXExpression ) )
            // InternalStubbrLang.g:15361:4: (lv_expression_5_0= ruleXExpression )
            {
            // InternalStubbrLang.g:15361:4: (lv_expression_5_0= ruleXExpression )
            // InternalStubbrLang.g:15362:5: lv_expression_5_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXSynchronizedExpressionAccess().getExpressionXExpressionParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_expression_5_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXSynchronizedExpressionRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_5_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXSynchronizedExpression"


    // $ANTLR start "entryRuleXCatchClause"
    // InternalStubbrLang.g:15383:1: entryRuleXCatchClause returns [EObject current=null] : iv_ruleXCatchClause= ruleXCatchClause EOF ;
    public final EObject entryRuleXCatchClause() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXCatchClause = null;


        try {
            // InternalStubbrLang.g:15383:53: (iv_ruleXCatchClause= ruleXCatchClause EOF )
            // InternalStubbrLang.g:15384:2: iv_ruleXCatchClause= ruleXCatchClause EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXCatchClauseRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXCatchClause=ruleXCatchClause();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXCatchClause; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXCatchClause"


    // $ANTLR start "ruleXCatchClause"
    // InternalStubbrLang.g:15390:1: ruleXCatchClause returns [EObject current=null] : ( ( ( 'catch' )=>otherlv_0= 'catch' ) otherlv_1= '(' ( (lv_declaredParam_2_0= ruleFullJvmFormalParameter ) ) otherlv_3= ')' ( (lv_expression_4_0= ruleXExpression ) ) ) ;
    public final EObject ruleXCatchClause() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_declaredParam_2_0 = null;

        EObject lv_expression_4_0 = null;



        	enterRule();

        try {
            // InternalStubbrLang.g:15396:2: ( ( ( ( 'catch' )=>otherlv_0= 'catch' ) otherlv_1= '(' ( (lv_declaredParam_2_0= ruleFullJvmFormalParameter ) ) otherlv_3= ')' ( (lv_expression_4_0= ruleXExpression ) ) ) )
            // InternalStubbrLang.g:15397:2: ( ( ( 'catch' )=>otherlv_0= 'catch' ) otherlv_1= '(' ( (lv_declaredParam_2_0= ruleFullJvmFormalParameter ) ) otherlv_3= ')' ( (lv_expression_4_0= ruleXExpression ) ) )
            {
            // InternalStubbrLang.g:15397:2: ( ( ( 'catch' )=>otherlv_0= 'catch' ) otherlv_1= '(' ( (lv_declaredParam_2_0= ruleFullJvmFormalParameter ) ) otherlv_3= ')' ( (lv_expression_4_0= ruleXExpression ) ) )
            // InternalStubbrLang.g:15398:3: ( ( 'catch' )=>otherlv_0= 'catch' ) otherlv_1= '(' ( (lv_declaredParam_2_0= ruleFullJvmFormalParameter ) ) otherlv_3= ')' ( (lv_expression_4_0= ruleXExpression ) )
            {
            // InternalStubbrLang.g:15398:3: ( ( 'catch' )=>otherlv_0= 'catch' )
            // InternalStubbrLang.g:15399:4: ( 'catch' )=>otherlv_0= 'catch'
            {
            otherlv_0=(Token)match(input,221,FOLLOW_255); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(otherlv_0, grammarAccess.getXCatchClauseAccess().getCatchKeyword_0());
              			
            }

            }

            otherlv_1=(Token)match(input,191,FOLLOW_52); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXCatchClauseAccess().getLeftParenthesisKeyword_1());
              		
            }
            // InternalStubbrLang.g:15409:3: ( (lv_declaredParam_2_0= ruleFullJvmFormalParameter ) )
            // InternalStubbrLang.g:15410:4: (lv_declaredParam_2_0= ruleFullJvmFormalParameter )
            {
            // InternalStubbrLang.g:15410:4: (lv_declaredParam_2_0= ruleFullJvmFormalParameter )
            // InternalStubbrLang.g:15411:5: lv_declaredParam_2_0= ruleFullJvmFormalParameter
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXCatchClauseAccess().getDeclaredParamFullJvmFormalParameterParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_242);
            lv_declaredParam_2_0=ruleFullJvmFormalParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXCatchClauseRule());
              					}
              					set(
              						current,
              						"declaredParam",
              						lv_declaredParam_2_0,
              						"org.eclipse.xtext.xbase.Xbase.FullJvmFormalParameter");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,192,FOLLOW_218); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getXCatchClauseAccess().getRightParenthesisKeyword_3());
              		
            }
            // InternalStubbrLang.g:15432:3: ( (lv_expression_4_0= ruleXExpression ) )
            // InternalStubbrLang.g:15433:4: (lv_expression_4_0= ruleXExpression )
            {
            // InternalStubbrLang.g:15433:4: (lv_expression_4_0= ruleXExpression )
            // InternalStubbrLang.g:15434:5: lv_expression_4_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXCatchClauseAccess().getExpressionXExpressionParserRuleCall_4_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_expression_4_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXCatchClauseRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_4_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXCatchClause"


    // $ANTLR start "entryRuleQualifiedName"
    // InternalStubbrLang.g:15455:1: entryRuleQualifiedName returns [String current=null] : iv_ruleQualifiedName= ruleQualifiedName EOF ;
    public final String entryRuleQualifiedName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleQualifiedName = null;


        try {
            // InternalStubbrLang.g:15455:53: (iv_ruleQualifiedName= ruleQualifiedName EOF )
            // InternalStubbrLang.g:15456:2: iv_ruleQualifiedName= ruleQualifiedName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQualifiedNameRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleQualifiedName=ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQualifiedName.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQualifiedName"


    // $ANTLR start "ruleQualifiedName"
    // InternalStubbrLang.g:15462:1: ruleQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_ValidID_0= ruleValidID ( ( ( '.' )=>kw= '.' ) this_ValidID_2= ruleValidID )* ) ;
    public final AntlrDatatypeRuleToken ruleQualifiedName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_ValidID_0 = null;

        AntlrDatatypeRuleToken this_ValidID_2 = null;



        	enterRule();

        try {
            // InternalStubbrLang.g:15468:2: ( (this_ValidID_0= ruleValidID ( ( ( '.' )=>kw= '.' ) this_ValidID_2= ruleValidID )* ) )
            // InternalStubbrLang.g:15469:2: (this_ValidID_0= ruleValidID ( ( ( '.' )=>kw= '.' ) this_ValidID_2= ruleValidID )* )
            {
            // InternalStubbrLang.g:15469:2: (this_ValidID_0= ruleValidID ( ( ( '.' )=>kw= '.' ) this_ValidID_2= ruleValidID )* )
            // InternalStubbrLang.g:15470:3: this_ValidID_0= ruleValidID ( ( ( '.' )=>kw= '.' ) this_ValidID_2= ruleValidID )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getQualifiedNameAccess().getValidIDParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_279);
            this_ValidID_0=ruleValidID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_ValidID_0);
              		
            }
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            // InternalStubbrLang.g:15480:3: ( ( ( '.' )=>kw= '.' ) this_ValidID_2= ruleValidID )*
            loop377:
            do {
                int alt377=2;
                int LA377_0 = input.LA(1);

                if ( (LA377_0==188) ) {
                    int LA377_2 = input.LA(2);

                    if ( (LA377_2==RULE_ID) ) {
                        int LA377_3 = input.LA(3);

                        if ( (synpred42_InternalStubbrLang()) ) {
                            alt377=1;
                        }


                    }


                }


                switch (alt377) {
            	case 1 :
            	    // InternalStubbrLang.g:15481:4: ( ( '.' )=>kw= '.' ) this_ValidID_2= ruleValidID
            	    {
            	    // InternalStubbrLang.g:15481:4: ( ( '.' )=>kw= '.' )
            	    // InternalStubbrLang.g:15482:5: ( '.' )=>kw= '.'
            	    {
            	    kw=(Token)match(input,188,FOLLOW_3); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					current.merge(kw);
            	      					newLeafNode(kw, grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0());
            	      				
            	    }

            	    }

            	    if ( state.backtracking==0 ) {

            	      				newCompositeNode(grammarAccess.getQualifiedNameAccess().getValidIDParserRuleCall_1_1());
            	      			
            	    }
            	    pushFollow(FOLLOW_279);
            	    this_ValidID_2=ruleValidID();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				current.merge(this_ValidID_2);
            	      			
            	    }
            	    if ( state.backtracking==0 ) {

            	      				afterParserOrEnumRuleCall();
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop377;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQualifiedName"


    // $ANTLR start "entryRuleNumber"
    // InternalStubbrLang.g:15504:1: entryRuleNumber returns [String current=null] : iv_ruleNumber= ruleNumber EOF ;
    public final String entryRuleNumber() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleNumber = null;



        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalStubbrLang.g:15506:2: (iv_ruleNumber= ruleNumber EOF )
            // InternalStubbrLang.g:15507:2: iv_ruleNumber= ruleNumber EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNumberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleNumber=ruleNumber();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNumber.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleNumber"


    // $ANTLR start "ruleNumber"
    // InternalStubbrLang.g:15516:1: ruleNumber returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_HEX_0= RULE_HEX | ( (this_INT_1= RULE_INT | this_DECIMAL_2= RULE_DECIMAL ) (kw= '.' (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL ) )? ) ) ;
    public final AntlrDatatypeRuleToken ruleNumber() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_HEX_0=null;
        Token this_INT_1=null;
        Token this_DECIMAL_2=null;
        Token kw=null;
        Token this_INT_4=null;
        Token this_DECIMAL_5=null;


        	enterRule();
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalStubbrLang.g:15523:2: ( (this_HEX_0= RULE_HEX | ( (this_INT_1= RULE_INT | this_DECIMAL_2= RULE_DECIMAL ) (kw= '.' (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL ) )? ) ) )
            // InternalStubbrLang.g:15524:2: (this_HEX_0= RULE_HEX | ( (this_INT_1= RULE_INT | this_DECIMAL_2= RULE_DECIMAL ) (kw= '.' (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL ) )? ) )
            {
            // InternalStubbrLang.g:15524:2: (this_HEX_0= RULE_HEX | ( (this_INT_1= RULE_INT | this_DECIMAL_2= RULE_DECIMAL ) (kw= '.' (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL ) )? ) )
            int alt381=2;
            int LA381_0 = input.LA(1);

            if ( (LA381_0==RULE_HEX) ) {
                alt381=1;
            }
            else if ( (LA381_0==RULE_INT||LA381_0==RULE_DECIMAL) ) {
                alt381=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 381, 0, input);

                throw nvae;
            }
            switch (alt381) {
                case 1 :
                    // InternalStubbrLang.g:15525:3: this_HEX_0= RULE_HEX
                    {
                    this_HEX_0=(Token)match(input,RULE_HEX,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_HEX_0);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_HEX_0, grammarAccess.getNumberAccess().getHEXTerminalRuleCall_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalStubbrLang.g:15533:3: ( (this_INT_1= RULE_INT | this_DECIMAL_2= RULE_DECIMAL ) (kw= '.' (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL ) )? )
                    {
                    // InternalStubbrLang.g:15533:3: ( (this_INT_1= RULE_INT | this_DECIMAL_2= RULE_DECIMAL ) (kw= '.' (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL ) )? )
                    // InternalStubbrLang.g:15534:4: (this_INT_1= RULE_INT | this_DECIMAL_2= RULE_DECIMAL ) (kw= '.' (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL ) )?
                    {
                    // InternalStubbrLang.g:15534:4: (this_INT_1= RULE_INT | this_DECIMAL_2= RULE_DECIMAL )
                    int alt378=2;
                    int LA378_0 = input.LA(1);

                    if ( (LA378_0==RULE_INT) ) {
                        alt378=1;
                    }
                    else if ( (LA378_0==RULE_DECIMAL) ) {
                        alt378=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 378, 0, input);

                        throw nvae;
                    }
                    switch (alt378) {
                        case 1 :
                            // InternalStubbrLang.g:15535:5: this_INT_1= RULE_INT
                            {
                            this_INT_1=(Token)match(input,RULE_INT,FOLLOW_279); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(this_INT_1);
                              				
                            }
                            if ( state.backtracking==0 ) {

                              					newLeafNode(this_INT_1, grammarAccess.getNumberAccess().getINTTerminalRuleCall_1_0_0());
                              				
                            }

                            }
                            break;
                        case 2 :
                            // InternalStubbrLang.g:15543:5: this_DECIMAL_2= RULE_DECIMAL
                            {
                            this_DECIMAL_2=(Token)match(input,RULE_DECIMAL,FOLLOW_279); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(this_DECIMAL_2);
                              				
                            }
                            if ( state.backtracking==0 ) {

                              					newLeafNode(this_DECIMAL_2, grammarAccess.getNumberAccess().getDECIMALTerminalRuleCall_1_0_1());
                              				
                            }

                            }
                            break;

                    }

                    // InternalStubbrLang.g:15551:4: (kw= '.' (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL ) )?
                    int alt380=2;
                    int LA380_0 = input.LA(1);

                    if ( (LA380_0==188) ) {
                        int LA380_1 = input.LA(2);

                        if ( (LA380_1==RULE_INT||LA380_1==RULE_DECIMAL) ) {
                            alt380=1;
                        }
                    }
                    switch (alt380) {
                        case 1 :
                            // InternalStubbrLang.g:15552:5: kw= '.' (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL )
                            {
                            kw=(Token)match(input,188,FOLLOW_280); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(kw);
                              					newLeafNode(kw, grammarAccess.getNumberAccess().getFullStopKeyword_1_1_0());
                              				
                            }
                            // InternalStubbrLang.g:15557:5: (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL )
                            int alt379=2;
                            int LA379_0 = input.LA(1);

                            if ( (LA379_0==RULE_INT) ) {
                                alt379=1;
                            }
                            else if ( (LA379_0==RULE_DECIMAL) ) {
                                alt379=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 379, 0, input);

                                throw nvae;
                            }
                            switch (alt379) {
                                case 1 :
                                    // InternalStubbrLang.g:15558:6: this_INT_4= RULE_INT
                                    {
                                    this_INT_4=(Token)match(input,RULE_INT,FOLLOW_2); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      						current.merge(this_INT_4);
                                      					
                                    }
                                    if ( state.backtracking==0 ) {

                                      						newLeafNode(this_INT_4, grammarAccess.getNumberAccess().getINTTerminalRuleCall_1_1_1_0());
                                      					
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalStubbrLang.g:15566:6: this_DECIMAL_5= RULE_DECIMAL
                                    {
                                    this_DECIMAL_5=(Token)match(input,RULE_DECIMAL,FOLLOW_2); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      						current.merge(this_DECIMAL_5);
                                      					
                                    }
                                    if ( state.backtracking==0 ) {

                                      						newLeafNode(this_DECIMAL_5, grammarAccess.getNumberAccess().getDECIMALTerminalRuleCall_1_1_1_1());
                                      					
                                    }

                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleNumber"


    // $ANTLR start "entryRuleJvmTypeReference"
    // InternalStubbrLang.g:15583:1: entryRuleJvmTypeReference returns [EObject current=null] : iv_ruleJvmTypeReference= ruleJvmTypeReference EOF ;
    public final EObject entryRuleJvmTypeReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmTypeReference = null;


        try {
            // InternalStubbrLang.g:15583:57: (iv_ruleJvmTypeReference= ruleJvmTypeReference EOF )
            // InternalStubbrLang.g:15584:2: iv_ruleJvmTypeReference= ruleJvmTypeReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmTypeReferenceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJvmTypeReference=ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmTypeReference; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmTypeReference"


    // $ANTLR start "ruleJvmTypeReference"
    // InternalStubbrLang.g:15590:1: ruleJvmTypeReference returns [EObject current=null] : ( (this_JvmParameterizedTypeReference_0= ruleJvmParameterizedTypeReference ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )* ) | this_XFunctionTypeRef_3= ruleXFunctionTypeRef ) ;
    public final EObject ruleJvmTypeReference() throws RecognitionException {
        EObject current = null;

        EObject this_JvmParameterizedTypeReference_0 = null;

        EObject this_XFunctionTypeRef_3 = null;



        	enterRule();

        try {
            // InternalStubbrLang.g:15596:2: ( ( (this_JvmParameterizedTypeReference_0= ruleJvmParameterizedTypeReference ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )* ) | this_XFunctionTypeRef_3= ruleXFunctionTypeRef ) )
            // InternalStubbrLang.g:15597:2: ( (this_JvmParameterizedTypeReference_0= ruleJvmParameterizedTypeReference ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )* ) | this_XFunctionTypeRef_3= ruleXFunctionTypeRef )
            {
            // InternalStubbrLang.g:15597:2: ( (this_JvmParameterizedTypeReference_0= ruleJvmParameterizedTypeReference ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )* ) | this_XFunctionTypeRef_3= ruleXFunctionTypeRef )
            int alt383=2;
            int LA383_0 = input.LA(1);

            if ( (LA383_0==RULE_ID) ) {
                alt383=1;
            }
            else if ( (LA383_0==175||LA383_0==191) ) {
                alt383=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 383, 0, input);

                throw nvae;
            }
            switch (alt383) {
                case 1 :
                    // InternalStubbrLang.g:15598:3: (this_JvmParameterizedTypeReference_0= ruleJvmParameterizedTypeReference ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )* )
                    {
                    // InternalStubbrLang.g:15598:3: (this_JvmParameterizedTypeReference_0= ruleJvmParameterizedTypeReference ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )* )
                    // InternalStubbrLang.g:15599:4: this_JvmParameterizedTypeReference_0= ruleJvmParameterizedTypeReference ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )*
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getJvmTypeReferenceAccess().getJvmParameterizedTypeReferenceParserRuleCall_0_0());
                      			
                    }
                    pushFollow(FOLLOW_273);
                    this_JvmParameterizedTypeReference_0=ruleJvmParameterizedTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_JvmParameterizedTypeReference_0;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    // InternalStubbrLang.g:15607:4: ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )*
                    loop382:
                    do {
                        int alt382=2;
                        int LA382_0 = input.LA(1);

                        if ( (LA382_0==194) ) {
                            int LA382_2 = input.LA(2);

                            if ( (LA382_2==195) ) {
                                int LA382_3 = input.LA(3);

                                if ( (synpred43_InternalStubbrLang()) ) {
                                    alt382=1;
                                }


                            }


                        }


                        switch (alt382) {
                    	case 1 :
                    	    // InternalStubbrLang.g:15608:5: ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets )
                    	    {
                    	    // InternalStubbrLang.g:15614:5: ( () ruleArrayBrackets )
                    	    // InternalStubbrLang.g:15615:6: () ruleArrayBrackets
                    	    {
                    	    // InternalStubbrLang.g:15615:6: ()
                    	    // InternalStubbrLang.g:15616:7: 
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							current = forceCreateModelElementAndSet(
                    	      								grammarAccess.getJvmTypeReferenceAccess().getJvmGenericArrayTypeReferenceComponentTypeAction_0_1_0_0(),
                    	      								current);
                    	      						
                    	    }

                    	    }

                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getJvmTypeReferenceAccess().getArrayBracketsParserRuleCall_0_1_0_1());
                    	      					
                    	    }
                    	    pushFollow(FOLLOW_273);
                    	    ruleArrayBrackets();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop382;
                        }
                    } while (true);


                    }


                    }
                    break;
                case 2 :
                    // InternalStubbrLang.g:15633:3: this_XFunctionTypeRef_3= ruleXFunctionTypeRef
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getJvmTypeReferenceAccess().getXFunctionTypeRefParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XFunctionTypeRef_3=ruleXFunctionTypeRef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XFunctionTypeRef_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmTypeReference"


    // $ANTLR start "entryRuleArrayBrackets"
    // InternalStubbrLang.g:15645:1: entryRuleArrayBrackets returns [String current=null] : iv_ruleArrayBrackets= ruleArrayBrackets EOF ;
    public final String entryRuleArrayBrackets() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleArrayBrackets = null;


        try {
            // InternalStubbrLang.g:15645:53: (iv_ruleArrayBrackets= ruleArrayBrackets EOF )
            // InternalStubbrLang.g:15646:2: iv_ruleArrayBrackets= ruleArrayBrackets EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getArrayBracketsRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleArrayBrackets=ruleArrayBrackets();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleArrayBrackets.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleArrayBrackets"


    // $ANTLR start "ruleArrayBrackets"
    // InternalStubbrLang.g:15652:1: ruleArrayBrackets returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '[' kw= ']' ) ;
    public final AntlrDatatypeRuleToken ruleArrayBrackets() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalStubbrLang.g:15658:2: ( (kw= '[' kw= ']' ) )
            // InternalStubbrLang.g:15659:2: (kw= '[' kw= ']' )
            {
            // InternalStubbrLang.g:15659:2: (kw= '[' kw= ']' )
            // InternalStubbrLang.g:15660:3: kw= '[' kw= ']'
            {
            kw=(Token)match(input,194,FOLLOW_252); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getArrayBracketsAccess().getLeftSquareBracketKeyword_0());
              		
            }
            kw=(Token)match(input,195,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getArrayBracketsAccess().getRightSquareBracketKeyword_1());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleArrayBrackets"


    // $ANTLR start "entryRuleXFunctionTypeRef"
    // InternalStubbrLang.g:15674:1: entryRuleXFunctionTypeRef returns [EObject current=null] : iv_ruleXFunctionTypeRef= ruleXFunctionTypeRef EOF ;
    public final EObject entryRuleXFunctionTypeRef() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXFunctionTypeRef = null;


        try {
            // InternalStubbrLang.g:15674:57: (iv_ruleXFunctionTypeRef= ruleXFunctionTypeRef EOF )
            // InternalStubbrLang.g:15675:2: iv_ruleXFunctionTypeRef= ruleXFunctionTypeRef EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXFunctionTypeRefRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXFunctionTypeRef=ruleXFunctionTypeRef();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXFunctionTypeRef; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXFunctionTypeRef"


    // $ANTLR start "ruleXFunctionTypeRef"
    // InternalStubbrLang.g:15681:1: ruleXFunctionTypeRef returns [EObject current=null] : ( (otherlv_0= '(' ( ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )* )? otherlv_4= ')' )? otherlv_5= '=>' ( (lv_returnType_6_0= ruleJvmTypeReference ) ) ) ;
    public final EObject ruleXFunctionTypeRef() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        EObject lv_paramTypes_1_0 = null;

        EObject lv_paramTypes_3_0 = null;

        EObject lv_returnType_6_0 = null;



        	enterRule();

        try {
            // InternalStubbrLang.g:15687:2: ( ( (otherlv_0= '(' ( ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )* )? otherlv_4= ')' )? otherlv_5= '=>' ( (lv_returnType_6_0= ruleJvmTypeReference ) ) ) )
            // InternalStubbrLang.g:15688:2: ( (otherlv_0= '(' ( ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )* )? otherlv_4= ')' )? otherlv_5= '=>' ( (lv_returnType_6_0= ruleJvmTypeReference ) ) )
            {
            // InternalStubbrLang.g:15688:2: ( (otherlv_0= '(' ( ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )* )? otherlv_4= ')' )? otherlv_5= '=>' ( (lv_returnType_6_0= ruleJvmTypeReference ) ) )
            // InternalStubbrLang.g:15689:3: (otherlv_0= '(' ( ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )* )? otherlv_4= ')' )? otherlv_5= '=>' ( (lv_returnType_6_0= ruleJvmTypeReference ) )
            {
            // InternalStubbrLang.g:15689:3: (otherlv_0= '(' ( ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )* )? otherlv_4= ')' )?
            int alt386=2;
            int LA386_0 = input.LA(1);

            if ( (LA386_0==191) ) {
                alt386=1;
            }
            switch (alt386) {
                case 1 :
                    // InternalStubbrLang.g:15690:4: otherlv_0= '(' ( ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )* )? otherlv_4= ')'
                    {
                    otherlv_0=(Token)match(input,191,FOLLOW_281); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getXFunctionTypeRefAccess().getLeftParenthesisKeyword_0_0());
                      			
                    }
                    // InternalStubbrLang.g:15694:4: ( ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )* )?
                    int alt385=2;
                    int LA385_0 = input.LA(1);

                    if ( (LA385_0==RULE_ID||LA385_0==175||LA385_0==191) ) {
                        alt385=1;
                    }
                    switch (alt385) {
                        case 1 :
                            // InternalStubbrLang.g:15695:5: ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )*
                            {
                            // InternalStubbrLang.g:15695:5: ( (lv_paramTypes_1_0= ruleJvmTypeReference ) )
                            // InternalStubbrLang.g:15696:6: (lv_paramTypes_1_0= ruleJvmTypeReference )
                            {
                            // InternalStubbrLang.g:15696:6: (lv_paramTypes_1_0= ruleJvmTypeReference )
                            // InternalStubbrLang.g:15697:7: lv_paramTypes_1_0= ruleJvmTypeReference
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getXFunctionTypeRefAccess().getParamTypesJvmTypeReferenceParserRuleCall_0_1_0_0());
                              						
                            }
                            pushFollow(FOLLOW_243);
                            lv_paramTypes_1_0=ruleJvmTypeReference();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getXFunctionTypeRefRule());
                              							}
                              							add(
                              								current,
                              								"paramTypes",
                              								lv_paramTypes_1_0,
                              								"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }

                            // InternalStubbrLang.g:15714:5: (otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )*
                            loop384:
                            do {
                                int alt384=2;
                                int LA384_0 = input.LA(1);

                                if ( (LA384_0==25) ) {
                                    alt384=1;
                                }


                                switch (alt384) {
                            	case 1 :
                            	    // InternalStubbrLang.g:15715:6: otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) )
                            	    {
                            	    otherlv_2=(Token)match(input,25,FOLLOW_52); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      						newLeafNode(otherlv_2, grammarAccess.getXFunctionTypeRefAccess().getCommaKeyword_0_1_1_0());
                            	      					
                            	    }
                            	    // InternalStubbrLang.g:15719:6: ( (lv_paramTypes_3_0= ruleJvmTypeReference ) )
                            	    // InternalStubbrLang.g:15720:7: (lv_paramTypes_3_0= ruleJvmTypeReference )
                            	    {
                            	    // InternalStubbrLang.g:15720:7: (lv_paramTypes_3_0= ruleJvmTypeReference )
                            	    // InternalStubbrLang.g:15721:8: lv_paramTypes_3_0= ruleJvmTypeReference
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      								newCompositeNode(grammarAccess.getXFunctionTypeRefAccess().getParamTypesJvmTypeReferenceParserRuleCall_0_1_1_1_0());
                            	      							
                            	    }
                            	    pushFollow(FOLLOW_243);
                            	    lv_paramTypes_3_0=ruleJvmTypeReference();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      								if (current==null) {
                            	      									current = createModelElementForParent(grammarAccess.getXFunctionTypeRefRule());
                            	      								}
                            	      								add(
                            	      									current,
                            	      									"paramTypes",
                            	      									lv_paramTypes_3_0,
                            	      									"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
                            	      								afterParserOrEnumRuleCall();
                            	      							
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop384;
                                }
                            } while (true);


                            }
                            break;

                    }

                    otherlv_4=(Token)match(input,192,FOLLOW_282); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getXFunctionTypeRefAccess().getRightParenthesisKeyword_0_2());
                      			
                    }

                    }
                    break;

            }

            otherlv_5=(Token)match(input,175,FOLLOW_52); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getXFunctionTypeRefAccess().getEqualsSignGreaterThanSignKeyword_1());
              		
            }
            // InternalStubbrLang.g:15749:3: ( (lv_returnType_6_0= ruleJvmTypeReference ) )
            // InternalStubbrLang.g:15750:4: (lv_returnType_6_0= ruleJvmTypeReference )
            {
            // InternalStubbrLang.g:15750:4: (lv_returnType_6_0= ruleJvmTypeReference )
            // InternalStubbrLang.g:15751:5: lv_returnType_6_0= ruleJvmTypeReference
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXFunctionTypeRefAccess().getReturnTypeJvmTypeReferenceParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_returnType_6_0=ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXFunctionTypeRefRule());
              					}
              					set(
              						current,
              						"returnType",
              						lv_returnType_6_0,
              						"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXFunctionTypeRef"


    // $ANTLR start "entryRuleJvmParameterizedTypeReference"
    // InternalStubbrLang.g:15772:1: entryRuleJvmParameterizedTypeReference returns [EObject current=null] : iv_ruleJvmParameterizedTypeReference= ruleJvmParameterizedTypeReference EOF ;
    public final EObject entryRuleJvmParameterizedTypeReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmParameterizedTypeReference = null;


        try {
            // InternalStubbrLang.g:15772:70: (iv_ruleJvmParameterizedTypeReference= ruleJvmParameterizedTypeReference EOF )
            // InternalStubbrLang.g:15773:2: iv_ruleJvmParameterizedTypeReference= ruleJvmParameterizedTypeReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJvmParameterizedTypeReference=ruleJvmParameterizedTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmParameterizedTypeReference; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmParameterizedTypeReference"


    // $ANTLR start "ruleJvmParameterizedTypeReference"
    // InternalStubbrLang.g:15779:1: ruleJvmParameterizedTypeReference returns [EObject current=null] : ( ( ( ruleQualifiedName ) ) ( ( ( '<' )=>otherlv_1= '<' ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )? )* )? ) ;
    public final EObject ruleJvmParameterizedTypeReference() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        EObject lv_arguments_2_0 = null;

        EObject lv_arguments_4_0 = null;

        EObject lv_arguments_10_0 = null;

        EObject lv_arguments_12_0 = null;



        	enterRule();

        try {
            // InternalStubbrLang.g:15785:2: ( ( ( ( ruleQualifiedName ) ) ( ( ( '<' )=>otherlv_1= '<' ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )? )* )? ) )
            // InternalStubbrLang.g:15786:2: ( ( ( ruleQualifiedName ) ) ( ( ( '<' )=>otherlv_1= '<' ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )? )* )? )
            {
            // InternalStubbrLang.g:15786:2: ( ( ( ruleQualifiedName ) ) ( ( ( '<' )=>otherlv_1= '<' ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )? )* )? )
            // InternalStubbrLang.g:15787:3: ( ( ruleQualifiedName ) ) ( ( ( '<' )=>otherlv_1= '<' ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )? )* )?
            {
            // InternalStubbrLang.g:15787:3: ( ( ruleQualifiedName ) )
            // InternalStubbrLang.g:15788:4: ( ruleQualifiedName )
            {
            // InternalStubbrLang.g:15788:4: ( ruleQualifiedName )
            // InternalStubbrLang.g:15789:5: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getJvmParameterizedTypeReferenceRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceAccess().getTypeJvmTypeCrossReference_0_0());
              				
            }
            pushFollow(FOLLOW_283);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalStubbrLang.g:15803:3: ( ( ( '<' )=>otherlv_1= '<' ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )? )* )?
            int alt391=2;
            alt391 = dfa391.predict(input);
            switch (alt391) {
                case 1 :
                    // InternalStubbrLang.g:15804:4: ( ( '<' )=>otherlv_1= '<' ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )? )*
                    {
                    // InternalStubbrLang.g:15804:4: ( ( '<' )=>otherlv_1= '<' )
                    // InternalStubbrLang.g:15805:5: ( '<' )=>otherlv_1= '<'
                    {
                    otherlv_1=(Token)match(input,162,FOLLOW_238); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_1, grammarAccess.getJvmParameterizedTypeReferenceAccess().getLessThanSignKeyword_1_0());
                      				
                    }

                    }

                    // InternalStubbrLang.g:15811:4: ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) )
                    // InternalStubbrLang.g:15812:5: (lv_arguments_2_0= ruleJvmArgumentTypeReference )
                    {
                    // InternalStubbrLang.g:15812:5: (lv_arguments_2_0= ruleJvmArgumentTypeReference )
                    // InternalStubbrLang.g:15813:6: lv_arguments_2_0= ruleJvmArgumentTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsJvmArgumentTypeReferenceParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_239);
                    lv_arguments_2_0=ruleJvmArgumentTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getJvmParameterizedTypeReferenceRule());
                      						}
                      						add(
                      							current,
                      							"arguments",
                      							lv_arguments_2_0,
                      							"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalStubbrLang.g:15830:4: (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )*
                    loop387:
                    do {
                        int alt387=2;
                        int LA387_0 = input.LA(1);

                        if ( (LA387_0==25) ) {
                            alt387=1;
                        }


                        switch (alt387) {
                    	case 1 :
                    	    // InternalStubbrLang.g:15831:5: otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) )
                    	    {
                    	    otherlv_3=(Token)match(input,25,FOLLOW_238); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_3, grammarAccess.getJvmParameterizedTypeReferenceAccess().getCommaKeyword_1_2_0());
                    	      				
                    	    }
                    	    // InternalStubbrLang.g:15835:5: ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) )
                    	    // InternalStubbrLang.g:15836:6: (lv_arguments_4_0= ruleJvmArgumentTypeReference )
                    	    {
                    	    // InternalStubbrLang.g:15836:6: (lv_arguments_4_0= ruleJvmArgumentTypeReference )
                    	    // InternalStubbrLang.g:15837:7: lv_arguments_4_0= ruleJvmArgumentTypeReference
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsJvmArgumentTypeReferenceParserRuleCall_1_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_239);
                    	    lv_arguments_4_0=ruleJvmArgumentTypeReference();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getJvmParameterizedTypeReferenceRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"arguments",
                    	      								lv_arguments_4_0,
                    	      								"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop387;
                        }
                    } while (true);

                    otherlv_5=(Token)match(input,163,FOLLOW_279); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getJvmParameterizedTypeReferenceAccess().getGreaterThanSignKeyword_1_3());
                      			
                    }
                    // InternalStubbrLang.g:15859:4: ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )? )*
                    loop390:
                    do {
                        int alt390=2;
                        int LA390_0 = input.LA(1);

                        if ( (LA390_0==188) ) {
                            int LA390_2 = input.LA(2);

                            if ( (LA390_2==RULE_ID) ) {
                                int LA390_3 = input.LA(3);

                                if ( (synpred45_InternalStubbrLang()) ) {
                                    alt390=1;
                                }


                            }


                        }


                        switch (alt390) {
                    	case 1 :
                    	    // InternalStubbrLang.g:15860:5: ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )?
                    	    {
                    	    // InternalStubbrLang.g:15860:5: ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) )
                    	    // InternalStubbrLang.g:15861:6: ( ( () '.' ) )=> ( () otherlv_7= '.' )
                    	    {
                    	    // InternalStubbrLang.g:15867:6: ( () otherlv_7= '.' )
                    	    // InternalStubbrLang.g:15868:7: () otherlv_7= '.'
                    	    {
                    	    // InternalStubbrLang.g:15868:7: ()
                    	    // InternalStubbrLang.g:15869:8: 
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								current = forceCreateModelElementAndSet(
                    	      									grammarAccess.getJvmParameterizedTypeReferenceAccess().getJvmInnerTypeReferenceOuterAction_1_4_0_0_0(),
                    	      									current);
                    	      							
                    	    }

                    	    }

                    	    otherlv_7=(Token)match(input,188,FOLLOW_3); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							newLeafNode(otherlv_7, grammarAccess.getJvmParameterizedTypeReferenceAccess().getFullStopKeyword_1_4_0_0_1());
                    	      						
                    	    }

                    	    }


                    	    }

                    	    // InternalStubbrLang.g:15881:5: ( ( ruleValidID ) )
                    	    // InternalStubbrLang.g:15882:6: ( ruleValidID )
                    	    {
                    	    // InternalStubbrLang.g:15882:6: ( ruleValidID )
                    	    // InternalStubbrLang.g:15883:7: ruleValidID
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElement(grammarAccess.getJvmParameterizedTypeReferenceRule());
                    	      							}
                    	      						
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceAccess().getTypeJvmTypeCrossReference_1_4_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_284);
                    	    ruleValidID();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }

                    	    // InternalStubbrLang.g:15897:5: ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )?
                    	    int alt389=2;
                    	    alt389 = dfa389.predict(input);
                    	    switch (alt389) {
                    	        case 1 :
                    	            // InternalStubbrLang.g:15898:6: ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>'
                    	            {
                    	            // InternalStubbrLang.g:15898:6: ( ( '<' )=>otherlv_9= '<' )
                    	            // InternalStubbrLang.g:15899:7: ( '<' )=>otherlv_9= '<'
                    	            {
                    	            otherlv_9=(Token)match(input,162,FOLLOW_238); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              							newLeafNode(otherlv_9, grammarAccess.getJvmParameterizedTypeReferenceAccess().getLessThanSignKeyword_1_4_2_0());
                    	              						
                    	            }

                    	            }

                    	            // InternalStubbrLang.g:15905:6: ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) )
                    	            // InternalStubbrLang.g:15906:7: (lv_arguments_10_0= ruleJvmArgumentTypeReference )
                    	            {
                    	            // InternalStubbrLang.g:15906:7: (lv_arguments_10_0= ruleJvmArgumentTypeReference )
                    	            // InternalStubbrLang.g:15907:8: lv_arguments_10_0= ruleJvmArgumentTypeReference
                    	            {
                    	            if ( state.backtracking==0 ) {

                    	              								newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsJvmArgumentTypeReferenceParserRuleCall_1_4_2_1_0());
                    	              							
                    	            }
                    	            pushFollow(FOLLOW_239);
                    	            lv_arguments_10_0=ruleJvmArgumentTypeReference();

                    	            state._fsp--;
                    	            if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              								if (current==null) {
                    	              									current = createModelElementForParent(grammarAccess.getJvmParameterizedTypeReferenceRule());
                    	              								}
                    	              								add(
                    	              									current,
                    	              									"arguments",
                    	              									lv_arguments_10_0,
                    	              									"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
                    	              								afterParserOrEnumRuleCall();
                    	              							
                    	            }

                    	            }


                    	            }

                    	            // InternalStubbrLang.g:15924:6: (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )*
                    	            loop388:
                    	            do {
                    	                int alt388=2;
                    	                int LA388_0 = input.LA(1);

                    	                if ( (LA388_0==25) ) {
                    	                    alt388=1;
                    	                }


                    	                switch (alt388) {
                    	            	case 1 :
                    	            	    // InternalStubbrLang.g:15925:7: otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) )
                    	            	    {
                    	            	    otherlv_11=(Token)match(input,25,FOLLOW_238); if (state.failed) return current;
                    	            	    if ( state.backtracking==0 ) {

                    	            	      							newLeafNode(otherlv_11, grammarAccess.getJvmParameterizedTypeReferenceAccess().getCommaKeyword_1_4_2_2_0());
                    	            	      						
                    	            	    }
                    	            	    // InternalStubbrLang.g:15929:7: ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) )
                    	            	    // InternalStubbrLang.g:15930:8: (lv_arguments_12_0= ruleJvmArgumentTypeReference )
                    	            	    {
                    	            	    // InternalStubbrLang.g:15930:8: (lv_arguments_12_0= ruleJvmArgumentTypeReference )
                    	            	    // InternalStubbrLang.g:15931:9: lv_arguments_12_0= ruleJvmArgumentTypeReference
                    	            	    {
                    	            	    if ( state.backtracking==0 ) {

                    	            	      									newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsJvmArgumentTypeReferenceParserRuleCall_1_4_2_2_1_0());
                    	            	      								
                    	            	    }
                    	            	    pushFollow(FOLLOW_239);
                    	            	    lv_arguments_12_0=ruleJvmArgumentTypeReference();

                    	            	    state._fsp--;
                    	            	    if (state.failed) return current;
                    	            	    if ( state.backtracking==0 ) {

                    	            	      									if (current==null) {
                    	            	      										current = createModelElementForParent(grammarAccess.getJvmParameterizedTypeReferenceRule());
                    	            	      									}
                    	            	      									add(
                    	            	      										current,
                    	            	      										"arguments",
                    	            	      										lv_arguments_12_0,
                    	            	      										"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
                    	            	      									afterParserOrEnumRuleCall();
                    	            	      								
                    	            	    }

                    	            	    }


                    	            	    }


                    	            	    }
                    	            	    break;

                    	            	default :
                    	            	    break loop388;
                    	                }
                    	            } while (true);

                    	            otherlv_13=(Token)match(input,163,FOLLOW_279); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              						newLeafNode(otherlv_13, grammarAccess.getJvmParameterizedTypeReferenceAccess().getGreaterThanSignKeyword_1_4_2_3());
                    	              					
                    	            }

                    	            }
                    	            break;

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop390;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmParameterizedTypeReference"


    // $ANTLR start "entryRuleJvmArgumentTypeReference"
    // InternalStubbrLang.g:15960:1: entryRuleJvmArgumentTypeReference returns [EObject current=null] : iv_ruleJvmArgumentTypeReference= ruleJvmArgumentTypeReference EOF ;
    public final EObject entryRuleJvmArgumentTypeReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmArgumentTypeReference = null;


        try {
            // InternalStubbrLang.g:15960:65: (iv_ruleJvmArgumentTypeReference= ruleJvmArgumentTypeReference EOF )
            // InternalStubbrLang.g:15961:2: iv_ruleJvmArgumentTypeReference= ruleJvmArgumentTypeReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmArgumentTypeReferenceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJvmArgumentTypeReference=ruleJvmArgumentTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmArgumentTypeReference; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmArgumentTypeReference"


    // $ANTLR start "ruleJvmArgumentTypeReference"
    // InternalStubbrLang.g:15967:1: ruleJvmArgumentTypeReference returns [EObject current=null] : (this_JvmTypeReference_0= ruleJvmTypeReference | this_JvmWildcardTypeReference_1= ruleJvmWildcardTypeReference ) ;
    public final EObject ruleJvmArgumentTypeReference() throws RecognitionException {
        EObject current = null;

        EObject this_JvmTypeReference_0 = null;

        EObject this_JvmWildcardTypeReference_1 = null;



        	enterRule();

        try {
            // InternalStubbrLang.g:15973:2: ( (this_JvmTypeReference_0= ruleJvmTypeReference | this_JvmWildcardTypeReference_1= ruleJvmWildcardTypeReference ) )
            // InternalStubbrLang.g:15974:2: (this_JvmTypeReference_0= ruleJvmTypeReference | this_JvmWildcardTypeReference_1= ruleJvmWildcardTypeReference )
            {
            // InternalStubbrLang.g:15974:2: (this_JvmTypeReference_0= ruleJvmTypeReference | this_JvmWildcardTypeReference_1= ruleJvmWildcardTypeReference )
            int alt392=2;
            int LA392_0 = input.LA(1);

            if ( (LA392_0==RULE_ID||LA392_0==175||LA392_0==191) ) {
                alt392=1;
            }
            else if ( (LA392_0==222) ) {
                alt392=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 392, 0, input);

                throw nvae;
            }
            switch (alt392) {
                case 1 :
                    // InternalStubbrLang.g:15975:3: this_JvmTypeReference_0= ruleJvmTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getJvmArgumentTypeReferenceAccess().getJvmTypeReferenceParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_JvmTypeReference_0=ruleJvmTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_JvmTypeReference_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalStubbrLang.g:15984:3: this_JvmWildcardTypeReference_1= ruleJvmWildcardTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getJvmArgumentTypeReferenceAccess().getJvmWildcardTypeReferenceParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_JvmWildcardTypeReference_1=ruleJvmWildcardTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_JvmWildcardTypeReference_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmArgumentTypeReference"


    // $ANTLR start "entryRuleJvmWildcardTypeReference"
    // InternalStubbrLang.g:15996:1: entryRuleJvmWildcardTypeReference returns [EObject current=null] : iv_ruleJvmWildcardTypeReference= ruleJvmWildcardTypeReference EOF ;
    public final EObject entryRuleJvmWildcardTypeReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmWildcardTypeReference = null;


        try {
            // InternalStubbrLang.g:15996:65: (iv_ruleJvmWildcardTypeReference= ruleJvmWildcardTypeReference EOF )
            // InternalStubbrLang.g:15997:2: iv_ruleJvmWildcardTypeReference= ruleJvmWildcardTypeReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmWildcardTypeReferenceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJvmWildcardTypeReference=ruleJvmWildcardTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmWildcardTypeReference; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmWildcardTypeReference"


    // $ANTLR start "ruleJvmWildcardTypeReference"
    // InternalStubbrLang.g:16003:1: ruleJvmWildcardTypeReference returns [EObject current=null] : ( () otherlv_1= '?' ( ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )* ) | ( ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )* ) )? ) ;
    public final EObject ruleJvmWildcardTypeReference() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_constraints_2_0 = null;

        EObject lv_constraints_3_0 = null;

        EObject lv_constraints_4_0 = null;

        EObject lv_constraints_5_0 = null;



        	enterRule();

        try {
            // InternalStubbrLang.g:16009:2: ( ( () otherlv_1= '?' ( ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )* ) | ( ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )* ) )? ) )
            // InternalStubbrLang.g:16010:2: ( () otherlv_1= '?' ( ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )* ) | ( ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )* ) )? )
            {
            // InternalStubbrLang.g:16010:2: ( () otherlv_1= '?' ( ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )* ) | ( ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )* ) )? )
            // InternalStubbrLang.g:16011:3: () otherlv_1= '?' ( ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )* ) | ( ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )* ) )?
            {
            // InternalStubbrLang.g:16011:3: ()
            // InternalStubbrLang.g:16012:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getJvmWildcardTypeReferenceAccess().getJvmWildcardTypeReferenceAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,222,FOLLOW_285); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getJvmWildcardTypeReferenceAccess().getQuestionMarkKeyword_1());
              		
            }
            // InternalStubbrLang.g:16022:3: ( ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )* ) | ( ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )* ) )?
            int alt395=3;
            int LA395_0 = input.LA(1);

            if ( (LA395_0==69) ) {
                alt395=1;
            }
            else if ( (LA395_0==210) ) {
                alt395=2;
            }
            switch (alt395) {
                case 1 :
                    // InternalStubbrLang.g:16023:4: ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )* )
                    {
                    // InternalStubbrLang.g:16023:4: ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )* )
                    // InternalStubbrLang.g:16024:5: ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )*
                    {
                    // InternalStubbrLang.g:16024:5: ( (lv_constraints_2_0= ruleJvmUpperBound ) )
                    // InternalStubbrLang.g:16025:6: (lv_constraints_2_0= ruleJvmUpperBound )
                    {
                    // InternalStubbrLang.g:16025:6: (lv_constraints_2_0= ruleJvmUpperBound )
                    // InternalStubbrLang.g:16026:7: lv_constraints_2_0= ruleJvmUpperBound
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsJvmUpperBoundParserRuleCall_2_0_0_0());
                      						
                    }
                    pushFollow(FOLLOW_286);
                    lv_constraints_2_0=ruleJvmUpperBound();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getJvmWildcardTypeReferenceRule());
                      							}
                      							add(
                      								current,
                      								"constraints",
                      								lv_constraints_2_0,
                      								"org.eclipse.xtext.xbase.Xtype.JvmUpperBound");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalStubbrLang.g:16043:5: ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )*
                    loop393:
                    do {
                        int alt393=2;
                        int LA393_0 = input.LA(1);

                        if ( (LA393_0==223) ) {
                            alt393=1;
                        }


                        switch (alt393) {
                    	case 1 :
                    	    // InternalStubbrLang.g:16044:6: (lv_constraints_3_0= ruleJvmUpperBoundAnded )
                    	    {
                    	    // InternalStubbrLang.g:16044:6: (lv_constraints_3_0= ruleJvmUpperBoundAnded )
                    	    // InternalStubbrLang.g:16045:7: lv_constraints_3_0= ruleJvmUpperBoundAnded
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsJvmUpperBoundAndedParserRuleCall_2_0_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_286);
                    	    lv_constraints_3_0=ruleJvmUpperBoundAnded();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getJvmWildcardTypeReferenceRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"constraints",
                    	      								lv_constraints_3_0,
                    	      								"org.eclipse.xtext.xbase.Xtype.JvmUpperBoundAnded");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop393;
                        }
                    } while (true);


                    }


                    }
                    break;
                case 2 :
                    // InternalStubbrLang.g:16064:4: ( ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )* )
                    {
                    // InternalStubbrLang.g:16064:4: ( ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )* )
                    // InternalStubbrLang.g:16065:5: ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )*
                    {
                    // InternalStubbrLang.g:16065:5: ( (lv_constraints_4_0= ruleJvmLowerBound ) )
                    // InternalStubbrLang.g:16066:6: (lv_constraints_4_0= ruleJvmLowerBound )
                    {
                    // InternalStubbrLang.g:16066:6: (lv_constraints_4_0= ruleJvmLowerBound )
                    // InternalStubbrLang.g:16067:7: lv_constraints_4_0= ruleJvmLowerBound
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsJvmLowerBoundParserRuleCall_2_1_0_0());
                      						
                    }
                    pushFollow(FOLLOW_286);
                    lv_constraints_4_0=ruleJvmLowerBound();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getJvmWildcardTypeReferenceRule());
                      							}
                      							add(
                      								current,
                      								"constraints",
                      								lv_constraints_4_0,
                      								"org.eclipse.xtext.xbase.Xtype.JvmLowerBound");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalStubbrLang.g:16084:5: ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )*
                    loop394:
                    do {
                        int alt394=2;
                        int LA394_0 = input.LA(1);

                        if ( (LA394_0==223) ) {
                            alt394=1;
                        }


                        switch (alt394) {
                    	case 1 :
                    	    // InternalStubbrLang.g:16085:6: (lv_constraints_5_0= ruleJvmLowerBoundAnded )
                    	    {
                    	    // InternalStubbrLang.g:16085:6: (lv_constraints_5_0= ruleJvmLowerBoundAnded )
                    	    // InternalStubbrLang.g:16086:7: lv_constraints_5_0= ruleJvmLowerBoundAnded
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsJvmLowerBoundAndedParserRuleCall_2_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_286);
                    	    lv_constraints_5_0=ruleJvmLowerBoundAnded();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getJvmWildcardTypeReferenceRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"constraints",
                    	      								lv_constraints_5_0,
                    	      								"org.eclipse.xtext.xbase.Xtype.JvmLowerBoundAnded");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop394;
                        }
                    } while (true);


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmWildcardTypeReference"


    // $ANTLR start "entryRuleJvmUpperBound"
    // InternalStubbrLang.g:16109:1: entryRuleJvmUpperBound returns [EObject current=null] : iv_ruleJvmUpperBound= ruleJvmUpperBound EOF ;
    public final EObject entryRuleJvmUpperBound() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmUpperBound = null;


        try {
            // InternalStubbrLang.g:16109:54: (iv_ruleJvmUpperBound= ruleJvmUpperBound EOF )
            // InternalStubbrLang.g:16110:2: iv_ruleJvmUpperBound= ruleJvmUpperBound EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmUpperBoundRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJvmUpperBound=ruleJvmUpperBound();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmUpperBound; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmUpperBound"


    // $ANTLR start "ruleJvmUpperBound"
    // InternalStubbrLang.g:16116:1: ruleJvmUpperBound returns [EObject current=null] : (otherlv_0= 'extends' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) ;
    public final EObject ruleJvmUpperBound() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_typeReference_1_0 = null;



        	enterRule();

        try {
            // InternalStubbrLang.g:16122:2: ( (otherlv_0= 'extends' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) )
            // InternalStubbrLang.g:16123:2: (otherlv_0= 'extends' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
            {
            // InternalStubbrLang.g:16123:2: (otherlv_0= 'extends' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
            // InternalStubbrLang.g:16124:3: otherlv_0= 'extends' ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
            {
            otherlv_0=(Token)match(input,69,FOLLOW_52); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getJvmUpperBoundAccess().getExtendsKeyword_0());
              		
            }
            // InternalStubbrLang.g:16128:3: ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
            // InternalStubbrLang.g:16129:4: (lv_typeReference_1_0= ruleJvmTypeReference )
            {
            // InternalStubbrLang.g:16129:4: (lv_typeReference_1_0= ruleJvmTypeReference )
            // InternalStubbrLang.g:16130:5: lv_typeReference_1_0= ruleJvmTypeReference
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getJvmUpperBoundAccess().getTypeReferenceJvmTypeReferenceParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_typeReference_1_0=ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getJvmUpperBoundRule());
              					}
              					set(
              						current,
              						"typeReference",
              						lv_typeReference_1_0,
              						"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmUpperBound"


    // $ANTLR start "entryRuleJvmUpperBoundAnded"
    // InternalStubbrLang.g:16151:1: entryRuleJvmUpperBoundAnded returns [EObject current=null] : iv_ruleJvmUpperBoundAnded= ruleJvmUpperBoundAnded EOF ;
    public final EObject entryRuleJvmUpperBoundAnded() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmUpperBoundAnded = null;


        try {
            // InternalStubbrLang.g:16151:59: (iv_ruleJvmUpperBoundAnded= ruleJvmUpperBoundAnded EOF )
            // InternalStubbrLang.g:16152:2: iv_ruleJvmUpperBoundAnded= ruleJvmUpperBoundAnded EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmUpperBoundAndedRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJvmUpperBoundAnded=ruleJvmUpperBoundAnded();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmUpperBoundAnded; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmUpperBoundAnded"


    // $ANTLR start "ruleJvmUpperBoundAnded"
    // InternalStubbrLang.g:16158:1: ruleJvmUpperBoundAnded returns [EObject current=null] : (otherlv_0= '&' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) ;
    public final EObject ruleJvmUpperBoundAnded() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_typeReference_1_0 = null;



        	enterRule();

        try {
            // InternalStubbrLang.g:16164:2: ( (otherlv_0= '&' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) )
            // InternalStubbrLang.g:16165:2: (otherlv_0= '&' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
            {
            // InternalStubbrLang.g:16165:2: (otherlv_0= '&' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
            // InternalStubbrLang.g:16166:3: otherlv_0= '&' ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
            {
            otherlv_0=(Token)match(input,223,FOLLOW_52); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getJvmUpperBoundAndedAccess().getAmpersandKeyword_0());
              		
            }
            // InternalStubbrLang.g:16170:3: ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
            // InternalStubbrLang.g:16171:4: (lv_typeReference_1_0= ruleJvmTypeReference )
            {
            // InternalStubbrLang.g:16171:4: (lv_typeReference_1_0= ruleJvmTypeReference )
            // InternalStubbrLang.g:16172:5: lv_typeReference_1_0= ruleJvmTypeReference
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getJvmUpperBoundAndedAccess().getTypeReferenceJvmTypeReferenceParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_typeReference_1_0=ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getJvmUpperBoundAndedRule());
              					}
              					set(
              						current,
              						"typeReference",
              						lv_typeReference_1_0,
              						"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmUpperBoundAnded"


    // $ANTLR start "entryRuleJvmLowerBound"
    // InternalStubbrLang.g:16193:1: entryRuleJvmLowerBound returns [EObject current=null] : iv_ruleJvmLowerBound= ruleJvmLowerBound EOF ;
    public final EObject entryRuleJvmLowerBound() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmLowerBound = null;


        try {
            // InternalStubbrLang.g:16193:54: (iv_ruleJvmLowerBound= ruleJvmLowerBound EOF )
            // InternalStubbrLang.g:16194:2: iv_ruleJvmLowerBound= ruleJvmLowerBound EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmLowerBoundRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJvmLowerBound=ruleJvmLowerBound();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmLowerBound; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmLowerBound"


    // $ANTLR start "ruleJvmLowerBound"
    // InternalStubbrLang.g:16200:1: ruleJvmLowerBound returns [EObject current=null] : (otherlv_0= 'super' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) ;
    public final EObject ruleJvmLowerBound() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_typeReference_1_0 = null;



        	enterRule();

        try {
            // InternalStubbrLang.g:16206:2: ( (otherlv_0= 'super' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) )
            // InternalStubbrLang.g:16207:2: (otherlv_0= 'super' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
            {
            // InternalStubbrLang.g:16207:2: (otherlv_0= 'super' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
            // InternalStubbrLang.g:16208:3: otherlv_0= 'super' ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
            {
            otherlv_0=(Token)match(input,210,FOLLOW_52); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getJvmLowerBoundAccess().getSuperKeyword_0());
              		
            }
            // InternalStubbrLang.g:16212:3: ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
            // InternalStubbrLang.g:16213:4: (lv_typeReference_1_0= ruleJvmTypeReference )
            {
            // InternalStubbrLang.g:16213:4: (lv_typeReference_1_0= ruleJvmTypeReference )
            // InternalStubbrLang.g:16214:5: lv_typeReference_1_0= ruleJvmTypeReference
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getJvmLowerBoundAccess().getTypeReferenceJvmTypeReferenceParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_typeReference_1_0=ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getJvmLowerBoundRule());
              					}
              					set(
              						current,
              						"typeReference",
              						lv_typeReference_1_0,
              						"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmLowerBound"


    // $ANTLR start "entryRuleJvmLowerBoundAnded"
    // InternalStubbrLang.g:16235:1: entryRuleJvmLowerBoundAnded returns [EObject current=null] : iv_ruleJvmLowerBoundAnded= ruleJvmLowerBoundAnded EOF ;
    public final EObject entryRuleJvmLowerBoundAnded() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmLowerBoundAnded = null;


        try {
            // InternalStubbrLang.g:16235:59: (iv_ruleJvmLowerBoundAnded= ruleJvmLowerBoundAnded EOF )
            // InternalStubbrLang.g:16236:2: iv_ruleJvmLowerBoundAnded= ruleJvmLowerBoundAnded EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmLowerBoundAndedRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJvmLowerBoundAnded=ruleJvmLowerBoundAnded();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmLowerBoundAnded; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmLowerBoundAnded"


    // $ANTLR start "ruleJvmLowerBoundAnded"
    // InternalStubbrLang.g:16242:1: ruleJvmLowerBoundAnded returns [EObject current=null] : (otherlv_0= '&' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) ;
    public final EObject ruleJvmLowerBoundAnded() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_typeReference_1_0 = null;



        	enterRule();

        try {
            // InternalStubbrLang.g:16248:2: ( (otherlv_0= '&' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) )
            // InternalStubbrLang.g:16249:2: (otherlv_0= '&' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
            {
            // InternalStubbrLang.g:16249:2: (otherlv_0= '&' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
            // InternalStubbrLang.g:16250:3: otherlv_0= '&' ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
            {
            otherlv_0=(Token)match(input,223,FOLLOW_52); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getJvmLowerBoundAndedAccess().getAmpersandKeyword_0());
              		
            }
            // InternalStubbrLang.g:16254:3: ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
            // InternalStubbrLang.g:16255:4: (lv_typeReference_1_0= ruleJvmTypeReference )
            {
            // InternalStubbrLang.g:16255:4: (lv_typeReference_1_0= ruleJvmTypeReference )
            // InternalStubbrLang.g:16256:5: lv_typeReference_1_0= ruleJvmTypeReference
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getJvmLowerBoundAndedAccess().getTypeReferenceJvmTypeReferenceParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_typeReference_1_0=ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getJvmLowerBoundAndedRule());
              					}
              					set(
              						current,
              						"typeReference",
              						lv_typeReference_1_0,
              						"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmLowerBoundAnded"


    // $ANTLR start "entryRuleQualifiedNameWithWildcard"
    // InternalStubbrLang.g:16277:1: entryRuleQualifiedNameWithWildcard returns [String current=null] : iv_ruleQualifiedNameWithWildcard= ruleQualifiedNameWithWildcard EOF ;
    public final String entryRuleQualifiedNameWithWildcard() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleQualifiedNameWithWildcard = null;


        try {
            // InternalStubbrLang.g:16277:65: (iv_ruleQualifiedNameWithWildcard= ruleQualifiedNameWithWildcard EOF )
            // InternalStubbrLang.g:16278:2: iv_ruleQualifiedNameWithWildcard= ruleQualifiedNameWithWildcard EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQualifiedNameWithWildcardRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleQualifiedNameWithWildcard=ruleQualifiedNameWithWildcard();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQualifiedNameWithWildcard.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQualifiedNameWithWildcard"


    // $ANTLR start "ruleQualifiedNameWithWildcard"
    // InternalStubbrLang.g:16284:1: ruleQualifiedNameWithWildcard returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_QualifiedName_0= ruleQualifiedName kw= '.' kw= '*' ) ;
    public final AntlrDatatypeRuleToken ruleQualifiedNameWithWildcard() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_QualifiedName_0 = null;



        	enterRule();

        try {
            // InternalStubbrLang.g:16290:2: ( (this_QualifiedName_0= ruleQualifiedName kw= '.' kw= '*' ) )
            // InternalStubbrLang.g:16291:2: (this_QualifiedName_0= ruleQualifiedName kw= '.' kw= '*' )
            {
            // InternalStubbrLang.g:16291:2: (this_QualifiedName_0= ruleQualifiedName kw= '.' kw= '*' )
            // InternalStubbrLang.g:16292:3: this_QualifiedName_0= ruleQualifiedName kw= '.' kw= '*'
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getQualifiedNameWithWildcardAccess().getQualifiedNameParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_287);
            this_QualifiedName_0=ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_QualifiedName_0);
              		
            }
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            kw=(Token)match(input,188,FOLLOW_288); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getQualifiedNameWithWildcardAccess().getFullStopKeyword_1());
              		
            }
            kw=(Token)match(input,180,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getQualifiedNameWithWildcardAccess().getAsteriskKeyword_2());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQualifiedNameWithWildcard"


    // $ANTLR start "entryRuleValidID"
    // InternalStubbrLang.g:16316:1: entryRuleValidID returns [String current=null] : iv_ruleValidID= ruleValidID EOF ;
    public final String entryRuleValidID() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleValidID = null;


        try {
            // InternalStubbrLang.g:16316:47: (iv_ruleValidID= ruleValidID EOF )
            // InternalStubbrLang.g:16317:2: iv_ruleValidID= ruleValidID EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getValidIDRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleValidID=ruleValidID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleValidID.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleValidID"


    // $ANTLR start "ruleValidID"
    // InternalStubbrLang.g:16323:1: ruleValidID returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_ID_0= RULE_ID ;
    public final AntlrDatatypeRuleToken ruleValidID() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_ID_0=null;


        	enterRule();

        try {
            // InternalStubbrLang.g:16329:2: (this_ID_0= RULE_ID )
            // InternalStubbrLang.g:16330:2: this_ID_0= RULE_ID
            {
            this_ID_0=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_ID_0);
              	
            }
            if ( state.backtracking==0 ) {

              		newLeafNode(this_ID_0, grammarAccess.getValidIDAccess().getIDTerminalRuleCall());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValidID"


    // $ANTLR start "entryRuleXImportSection"
    // InternalStubbrLang.g:16340:1: entryRuleXImportSection returns [EObject current=null] : iv_ruleXImportSection= ruleXImportSection EOF ;
    public final EObject entryRuleXImportSection() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXImportSection = null;


        try {
            // InternalStubbrLang.g:16340:55: (iv_ruleXImportSection= ruleXImportSection EOF )
            // InternalStubbrLang.g:16341:2: iv_ruleXImportSection= ruleXImportSection EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXImportSectionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXImportSection=ruleXImportSection();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXImportSection; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXImportSection"


    // $ANTLR start "ruleXImportSection"
    // InternalStubbrLang.g:16347:1: ruleXImportSection returns [EObject current=null] : ( (lv_importDeclarations_0_0= ruleXImportDeclaration ) )+ ;
    public final EObject ruleXImportSection() throws RecognitionException {
        EObject current = null;

        EObject lv_importDeclarations_0_0 = null;



        	enterRule();

        try {
            // InternalStubbrLang.g:16353:2: ( ( (lv_importDeclarations_0_0= ruleXImportDeclaration ) )+ )
            // InternalStubbrLang.g:16354:2: ( (lv_importDeclarations_0_0= ruleXImportDeclaration ) )+
            {
            // InternalStubbrLang.g:16354:2: ( (lv_importDeclarations_0_0= ruleXImportDeclaration ) )+
            int cnt396=0;
            loop396:
            do {
                int alt396=2;
                int LA396_0 = input.LA(1);

                if ( (LA396_0==208) ) {
                    alt396=1;
                }


                switch (alt396) {
            	case 1 :
            	    // InternalStubbrLang.g:16355:3: (lv_importDeclarations_0_0= ruleXImportDeclaration )
            	    {
            	    // InternalStubbrLang.g:16355:3: (lv_importDeclarations_0_0= ruleXImportDeclaration )
            	    // InternalStubbrLang.g:16356:4: lv_importDeclarations_0_0= ruleXImportDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      				newCompositeNode(grammarAccess.getXImportSectionAccess().getImportDeclarationsXImportDeclarationParserRuleCall_0());
            	      			
            	    }
            	    pushFollow(FOLLOW_289);
            	    lv_importDeclarations_0_0=ruleXImportDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				if (current==null) {
            	      					current = createModelElementForParent(grammarAccess.getXImportSectionRule());
            	      				}
            	      				add(
            	      					current,
            	      					"importDeclarations",
            	      					lv_importDeclarations_0_0,
            	      					"org.eclipse.xtext.xbase.Xtype.XImportDeclaration");
            	      				afterParserOrEnumRuleCall();
            	      			
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt396 >= 1 ) break loop396;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(396, input);
                        throw eee;
                }
                cnt396++;
            } while (true);


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXImportSection"


    // $ANTLR start "entryRuleXImportDeclaration"
    // InternalStubbrLang.g:16376:1: entryRuleXImportDeclaration returns [EObject current=null] : iv_ruleXImportDeclaration= ruleXImportDeclaration EOF ;
    public final EObject entryRuleXImportDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXImportDeclaration = null;


        try {
            // InternalStubbrLang.g:16376:59: (iv_ruleXImportDeclaration= ruleXImportDeclaration EOF )
            // InternalStubbrLang.g:16377:2: iv_ruleXImportDeclaration= ruleXImportDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXImportDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXImportDeclaration=ruleXImportDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXImportDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXImportDeclaration"


    // $ANTLR start "ruleXImportDeclaration"
    // InternalStubbrLang.g:16383:1: ruleXImportDeclaration returns [EObject current=null] : (otherlv_0= 'import' ( ( ( (lv_static_1_0= 'static' ) ) ( (lv_extension_2_0= 'extension' ) )? ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_4_0= '*' ) ) | ( (lv_memberName_5_0= ruleValidID ) ) ) ) | ( ( ruleQualifiedName ) ) | ( (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard ) ) ) (otherlv_8= ';' )? ) ;
    public final EObject ruleXImportDeclaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_static_1_0=null;
        Token lv_extension_2_0=null;
        Token lv_wildcard_4_0=null;
        Token otherlv_8=null;
        AntlrDatatypeRuleToken lv_memberName_5_0 = null;

        AntlrDatatypeRuleToken lv_importedNamespace_7_0 = null;



        	enterRule();

        try {
            // InternalStubbrLang.g:16389:2: ( (otherlv_0= 'import' ( ( ( (lv_static_1_0= 'static' ) ) ( (lv_extension_2_0= 'extension' ) )? ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_4_0= '*' ) ) | ( (lv_memberName_5_0= ruleValidID ) ) ) ) | ( ( ruleQualifiedName ) ) | ( (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard ) ) ) (otherlv_8= ';' )? ) )
            // InternalStubbrLang.g:16390:2: (otherlv_0= 'import' ( ( ( (lv_static_1_0= 'static' ) ) ( (lv_extension_2_0= 'extension' ) )? ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_4_0= '*' ) ) | ( (lv_memberName_5_0= ruleValidID ) ) ) ) | ( ( ruleQualifiedName ) ) | ( (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard ) ) ) (otherlv_8= ';' )? )
            {
            // InternalStubbrLang.g:16390:2: (otherlv_0= 'import' ( ( ( (lv_static_1_0= 'static' ) ) ( (lv_extension_2_0= 'extension' ) )? ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_4_0= '*' ) ) | ( (lv_memberName_5_0= ruleValidID ) ) ) ) | ( ( ruleQualifiedName ) ) | ( (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard ) ) ) (otherlv_8= ';' )? )
            // InternalStubbrLang.g:16391:3: otherlv_0= 'import' ( ( ( (lv_static_1_0= 'static' ) ) ( (lv_extension_2_0= 'extension' ) )? ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_4_0= '*' ) ) | ( (lv_memberName_5_0= ruleValidID ) ) ) ) | ( ( ruleQualifiedName ) ) | ( (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard ) ) ) (otherlv_8= ';' )?
            {
            otherlv_0=(Token)match(input,208,FOLLOW_290); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getXImportDeclarationAccess().getImportKeyword_0());
              		
            }
            // InternalStubbrLang.g:16395:3: ( ( ( (lv_static_1_0= 'static' ) ) ( (lv_extension_2_0= 'extension' ) )? ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_4_0= '*' ) ) | ( (lv_memberName_5_0= ruleValidID ) ) ) ) | ( ( ruleQualifiedName ) ) | ( (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard ) ) )
            int alt399=3;
            alt399 = dfa399.predict(input);
            switch (alt399) {
                case 1 :
                    // InternalStubbrLang.g:16396:4: ( ( (lv_static_1_0= 'static' ) ) ( (lv_extension_2_0= 'extension' ) )? ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_4_0= '*' ) ) | ( (lv_memberName_5_0= ruleValidID ) ) ) )
                    {
                    // InternalStubbrLang.g:16396:4: ( ( (lv_static_1_0= 'static' ) ) ( (lv_extension_2_0= 'extension' ) )? ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_4_0= '*' ) ) | ( (lv_memberName_5_0= ruleValidID ) ) ) )
                    // InternalStubbrLang.g:16397:5: ( (lv_static_1_0= 'static' ) ) ( (lv_extension_2_0= 'extension' ) )? ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_4_0= '*' ) ) | ( (lv_memberName_5_0= ruleValidID ) ) )
                    {
                    // InternalStubbrLang.g:16397:5: ( (lv_static_1_0= 'static' ) )
                    // InternalStubbrLang.g:16398:6: (lv_static_1_0= 'static' )
                    {
                    // InternalStubbrLang.g:16398:6: (lv_static_1_0= 'static' )
                    // InternalStubbrLang.g:16399:7: lv_static_1_0= 'static'
                    {
                    lv_static_1_0=(Token)match(input,207,FOLLOW_291); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_static_1_0, grammarAccess.getXImportDeclarationAccess().getStaticStaticKeyword_1_0_0_0());
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getXImportDeclarationRule());
                      							}
                      							setWithLastConsumed(current, "static", true, "static");
                      						
                    }

                    }


                    }

                    // InternalStubbrLang.g:16411:5: ( (lv_extension_2_0= 'extension' ) )?
                    int alt397=2;
                    int LA397_0 = input.LA(1);

                    if ( (LA397_0==209) ) {
                        alt397=1;
                    }
                    switch (alt397) {
                        case 1 :
                            // InternalStubbrLang.g:16412:6: (lv_extension_2_0= 'extension' )
                            {
                            // InternalStubbrLang.g:16412:6: (lv_extension_2_0= 'extension' )
                            // InternalStubbrLang.g:16413:7: lv_extension_2_0= 'extension'
                            {
                            lv_extension_2_0=(Token)match(input,209,FOLLOW_291); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_extension_2_0, grammarAccess.getXImportDeclarationAccess().getExtensionExtensionKeyword_1_0_1_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getXImportDeclarationRule());
                              							}
                              							setWithLastConsumed(current, "extension", true, "extension");
                              						
                            }

                            }


                            }
                            break;

                    }

                    // InternalStubbrLang.g:16425:5: ( ( ruleQualifiedNameInStaticImport ) )
                    // InternalStubbrLang.g:16426:6: ( ruleQualifiedNameInStaticImport )
                    {
                    // InternalStubbrLang.g:16426:6: ( ruleQualifiedNameInStaticImport )
                    // InternalStubbrLang.g:16427:7: ruleQualifiedNameInStaticImport
                    {
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getXImportDeclarationRule());
                      							}
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getXImportDeclarationAccess().getImportedTypeJvmDeclaredTypeCrossReference_1_0_2_0());
                      						
                    }
                    pushFollow(FOLLOW_292);
                    ruleQualifiedNameInStaticImport();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalStubbrLang.g:16441:5: ( ( (lv_wildcard_4_0= '*' ) ) | ( (lv_memberName_5_0= ruleValidID ) ) )
                    int alt398=2;
                    int LA398_0 = input.LA(1);

                    if ( (LA398_0==180) ) {
                        alt398=1;
                    }
                    else if ( (LA398_0==RULE_ID) ) {
                        alt398=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 398, 0, input);

                        throw nvae;
                    }
                    switch (alt398) {
                        case 1 :
                            // InternalStubbrLang.g:16442:6: ( (lv_wildcard_4_0= '*' ) )
                            {
                            // InternalStubbrLang.g:16442:6: ( (lv_wildcard_4_0= '*' ) )
                            // InternalStubbrLang.g:16443:7: (lv_wildcard_4_0= '*' )
                            {
                            // InternalStubbrLang.g:16443:7: (lv_wildcard_4_0= '*' )
                            // InternalStubbrLang.g:16444:8: lv_wildcard_4_0= '*'
                            {
                            lv_wildcard_4_0=(Token)match(input,180,FOLLOW_293); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_wildcard_4_0, grammarAccess.getXImportDeclarationAccess().getWildcardAsteriskKeyword_1_0_3_0_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getXImportDeclarationRule());
                              								}
                              								setWithLastConsumed(current, "wildcard", true, "*");
                              							
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalStubbrLang.g:16457:6: ( (lv_memberName_5_0= ruleValidID ) )
                            {
                            // InternalStubbrLang.g:16457:6: ( (lv_memberName_5_0= ruleValidID ) )
                            // InternalStubbrLang.g:16458:7: (lv_memberName_5_0= ruleValidID )
                            {
                            // InternalStubbrLang.g:16458:7: (lv_memberName_5_0= ruleValidID )
                            // InternalStubbrLang.g:16459:8: lv_memberName_5_0= ruleValidID
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getXImportDeclarationAccess().getMemberNameValidIDParserRuleCall_1_0_3_1_0());
                              							
                            }
                            pushFollow(FOLLOW_293);
                            lv_memberName_5_0=ruleValidID();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getXImportDeclarationRule());
                              								}
                              								set(
                              									current,
                              									"memberName",
                              									lv_memberName_5_0,
                              									"org.eclipse.xtext.xbase.Xtype.ValidID");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalStubbrLang.g:16479:4: ( ( ruleQualifiedName ) )
                    {
                    // InternalStubbrLang.g:16479:4: ( ( ruleQualifiedName ) )
                    // InternalStubbrLang.g:16480:5: ( ruleQualifiedName )
                    {
                    // InternalStubbrLang.g:16480:5: ( ruleQualifiedName )
                    // InternalStubbrLang.g:16481:6: ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getXImportDeclarationRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXImportDeclarationAccess().getImportedTypeJvmDeclaredTypeCrossReference_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_293);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalStubbrLang.g:16496:4: ( (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard ) )
                    {
                    // InternalStubbrLang.g:16496:4: ( (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard ) )
                    // InternalStubbrLang.g:16497:5: (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard )
                    {
                    // InternalStubbrLang.g:16497:5: (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard )
                    // InternalStubbrLang.g:16498:6: lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXImportDeclarationAccess().getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FOLLOW_293);
                    lv_importedNamespace_7_0=ruleQualifiedNameWithWildcard();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXImportDeclarationRule());
                      						}
                      						set(
                      							current,
                      							"importedNamespace",
                      							lv_importedNamespace_7_0,
                      							"org.eclipse.xtext.xbase.Xtype.QualifiedNameWithWildcard");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalStubbrLang.g:16516:3: (otherlv_8= ';' )?
            int alt400=2;
            int LA400_0 = input.LA(1);

            if ( (LA400_0==197) ) {
                alt400=1;
            }
            switch (alt400) {
                case 1 :
                    // InternalStubbrLang.g:16517:4: otherlv_8= ';'
                    {
                    otherlv_8=(Token)match(input,197,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_8, grammarAccess.getXImportDeclarationAccess().getSemicolonKeyword_2());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXImportDeclaration"


    // $ANTLR start "entryRuleQualifiedNameInStaticImport"
    // InternalStubbrLang.g:16526:1: entryRuleQualifiedNameInStaticImport returns [String current=null] : iv_ruleQualifiedNameInStaticImport= ruleQualifiedNameInStaticImport EOF ;
    public final String entryRuleQualifiedNameInStaticImport() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleQualifiedNameInStaticImport = null;


        try {
            // InternalStubbrLang.g:16526:67: (iv_ruleQualifiedNameInStaticImport= ruleQualifiedNameInStaticImport EOF )
            // InternalStubbrLang.g:16527:2: iv_ruleQualifiedNameInStaticImport= ruleQualifiedNameInStaticImport EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQualifiedNameInStaticImportRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleQualifiedNameInStaticImport=ruleQualifiedNameInStaticImport();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQualifiedNameInStaticImport.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQualifiedNameInStaticImport"


    // $ANTLR start "ruleQualifiedNameInStaticImport"
    // InternalStubbrLang.g:16533:1: ruleQualifiedNameInStaticImport returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_ValidID_0= ruleValidID kw= '.' )+ ;
    public final AntlrDatatypeRuleToken ruleQualifiedNameInStaticImport() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_ValidID_0 = null;



        	enterRule();

        try {
            // InternalStubbrLang.g:16539:2: ( (this_ValidID_0= ruleValidID kw= '.' )+ )
            // InternalStubbrLang.g:16540:2: (this_ValidID_0= ruleValidID kw= '.' )+
            {
            // InternalStubbrLang.g:16540:2: (this_ValidID_0= ruleValidID kw= '.' )+
            int cnt401=0;
            loop401:
            do {
                int alt401=2;
                int LA401_0 = input.LA(1);

                if ( (LA401_0==RULE_ID) ) {
                    int LA401_2 = input.LA(2);

                    if ( (LA401_2==188) ) {
                        alt401=1;
                    }


                }


                switch (alt401) {
            	case 1 :
            	    // InternalStubbrLang.g:16541:3: this_ValidID_0= ruleValidID kw= '.'
            	    {
            	    if ( state.backtracking==0 ) {

            	      			newCompositeNode(grammarAccess.getQualifiedNameInStaticImportAccess().getValidIDParserRuleCall_0());
            	      		
            	    }
            	    pushFollow(FOLLOW_287);
            	    this_ValidID_0=ruleValidID();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      			current.merge(this_ValidID_0);
            	      		
            	    }
            	    if ( state.backtracking==0 ) {

            	      			afterParserOrEnumRuleCall();
            	      		
            	    }
            	    kw=(Token)match(input,188,FOLLOW_294); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      			current.merge(kw);
            	      			newLeafNode(kw, grammarAccess.getQualifiedNameInStaticImportAccess().getFullStopKeyword_1());
            	      		
            	    }

            	    }
            	    break;

            	default :
            	    if ( cnt401 >= 1 ) break loop401;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(401, input);
                        throw eee;
                }
                cnt401++;
            } while (true);


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQualifiedNameInStaticImport"


    // $ANTLR start "ruleLocale"
    // InternalStubbrLang.g:16560:1: ruleLocale returns [Enumerator current=null] : ( (enumLiteral_0= 'deutsch' ) | (enumLiteral_1= 'english' ) | (enumLiteral_2= 'espa\\u00F1ol' ) | (enumLiteral_3= '\\u0440\\u0443\\u0441\\u0441\\u043A\\u0438\\u0439' ) ) ;
    public final Enumerator ruleLocale() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;
        Token enumLiteral_3=null;


        	enterRule();

        try {
            // InternalStubbrLang.g:16566:2: ( ( (enumLiteral_0= 'deutsch' ) | (enumLiteral_1= 'english' ) | (enumLiteral_2= 'espa\\u00F1ol' ) | (enumLiteral_3= '\\u0440\\u0443\\u0441\\u0441\\u043A\\u0438\\u0439' ) ) )
            // InternalStubbrLang.g:16567:2: ( (enumLiteral_0= 'deutsch' ) | (enumLiteral_1= 'english' ) | (enumLiteral_2= 'espa\\u00F1ol' ) | (enumLiteral_3= '\\u0440\\u0443\\u0441\\u0441\\u043A\\u0438\\u0439' ) )
            {
            // InternalStubbrLang.g:16567:2: ( (enumLiteral_0= 'deutsch' ) | (enumLiteral_1= 'english' ) | (enumLiteral_2= 'espa\\u00F1ol' ) | (enumLiteral_3= '\\u0440\\u0443\\u0441\\u0441\\u043A\\u0438\\u0439' ) )
            int alt402=4;
            switch ( input.LA(1) ) {
            case 224:
                {
                alt402=1;
                }
                break;
            case 225:
                {
                alt402=2;
                }
                break;
            case 226:
                {
                alt402=3;
                }
                break;
            case 227:
                {
                alt402=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 402, 0, input);

                throw nvae;
            }

            switch (alt402) {
                case 1 :
                    // InternalStubbrLang.g:16568:3: (enumLiteral_0= 'deutsch' )
                    {
                    // InternalStubbrLang.g:16568:3: (enumLiteral_0= 'deutsch' )
                    // InternalStubbrLang.g:16569:4: enumLiteral_0= 'deutsch'
                    {
                    enumLiteral_0=(Token)match(input,224,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getLocaleAccess().getDEEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getLocaleAccess().getDEEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalStubbrLang.g:16576:3: (enumLiteral_1= 'english' )
                    {
                    // InternalStubbrLang.g:16576:3: (enumLiteral_1= 'english' )
                    // InternalStubbrLang.g:16577:4: enumLiteral_1= 'english'
                    {
                    enumLiteral_1=(Token)match(input,225,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getLocaleAccess().getENEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getLocaleAccess().getENEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalStubbrLang.g:16584:3: (enumLiteral_2= 'espa\\u00F1ol' )
                    {
                    // InternalStubbrLang.g:16584:3: (enumLiteral_2= 'espa\\u00F1ol' )
                    // InternalStubbrLang.g:16585:4: enumLiteral_2= 'espa\\u00F1ol'
                    {
                    enumLiteral_2=(Token)match(input,226,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getLocaleAccess().getESEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_2, grammarAccess.getLocaleAccess().getESEnumLiteralDeclaration_2());
                      			
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalStubbrLang.g:16592:3: (enumLiteral_3= '\\u0440\\u0443\\u0441\\u0441\\u043A\\u0438\\u0439' )
                    {
                    // InternalStubbrLang.g:16592:3: (enumLiteral_3= '\\u0440\\u0443\\u0441\\u0441\\u043A\\u0438\\u0439' )
                    // InternalStubbrLang.g:16593:4: enumLiteral_3= '\\u0440\\u0443\\u0441\\u0441\\u043A\\u0438\\u0439'
                    {
                    enumLiteral_3=(Token)match(input,227,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getLocaleAccess().getRUEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_3, grammarAccess.getLocaleAccess().getRUEnumLiteralDeclaration_3());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLocale"


    // $ANTLR start "ruleDevProjectType"
    // InternalStubbrLang.g:16603:1: ruleDevProjectType returns [Enumerator current=null] : ( (enumLiteral_0= 'parent' ) | (enumLiteral_1= 'documentation' ) | (enumLiteral_2= 'annotations' ) | (enumLiteral_3= 'commons' ) | (enumLiteral_4= 'dataModel' ) | (enumLiteral_5= 'persistence' ) | (enumLiteral_6= 'businessModel' ) | (enumLiteral_7= 'business' ) | (enumLiteral_8= 'process' ) | (enumLiteral_9= 'matlab' ) | (enumLiteral_10= 'webProject' ) | (enumLiteral_11= 'restGenerator' ) | (enumLiteral_12= 'restService' ) | (enumLiteral_13= 'restClient' ) | (enumLiteral_14= 'soapService' ) | (enumLiteral_15= 'soapClient' ) | (enumLiteral_16= 'ear' ) | (enumLiteral_17= 'docker' ) ) ;
    public final Enumerator ruleDevProjectType() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;
        Token enumLiteral_3=null;
        Token enumLiteral_4=null;
        Token enumLiteral_5=null;
        Token enumLiteral_6=null;
        Token enumLiteral_7=null;
        Token enumLiteral_8=null;
        Token enumLiteral_9=null;
        Token enumLiteral_10=null;
        Token enumLiteral_11=null;
        Token enumLiteral_12=null;
        Token enumLiteral_13=null;
        Token enumLiteral_14=null;
        Token enumLiteral_15=null;
        Token enumLiteral_16=null;
        Token enumLiteral_17=null;


        	enterRule();

        try {
            // InternalStubbrLang.g:16609:2: ( ( (enumLiteral_0= 'parent' ) | (enumLiteral_1= 'documentation' ) | (enumLiteral_2= 'annotations' ) | (enumLiteral_3= 'commons' ) | (enumLiteral_4= 'dataModel' ) | (enumLiteral_5= 'persistence' ) | (enumLiteral_6= 'businessModel' ) | (enumLiteral_7= 'business' ) | (enumLiteral_8= 'process' ) | (enumLiteral_9= 'matlab' ) | (enumLiteral_10= 'webProject' ) | (enumLiteral_11= 'restGenerator' ) | (enumLiteral_12= 'restService' ) | (enumLiteral_13= 'restClient' ) | (enumLiteral_14= 'soapService' ) | (enumLiteral_15= 'soapClient' ) | (enumLiteral_16= 'ear' ) | (enumLiteral_17= 'docker' ) ) )
            // InternalStubbrLang.g:16610:2: ( (enumLiteral_0= 'parent' ) | (enumLiteral_1= 'documentation' ) | (enumLiteral_2= 'annotations' ) | (enumLiteral_3= 'commons' ) | (enumLiteral_4= 'dataModel' ) | (enumLiteral_5= 'persistence' ) | (enumLiteral_6= 'businessModel' ) | (enumLiteral_7= 'business' ) | (enumLiteral_8= 'process' ) | (enumLiteral_9= 'matlab' ) | (enumLiteral_10= 'webProject' ) | (enumLiteral_11= 'restGenerator' ) | (enumLiteral_12= 'restService' ) | (enumLiteral_13= 'restClient' ) | (enumLiteral_14= 'soapService' ) | (enumLiteral_15= 'soapClient' ) | (enumLiteral_16= 'ear' ) | (enumLiteral_17= 'docker' ) )
            {
            // InternalStubbrLang.g:16610:2: ( (enumLiteral_0= 'parent' ) | (enumLiteral_1= 'documentation' ) | (enumLiteral_2= 'annotations' ) | (enumLiteral_3= 'commons' ) | (enumLiteral_4= 'dataModel' ) | (enumLiteral_5= 'persistence' ) | (enumLiteral_6= 'businessModel' ) | (enumLiteral_7= 'business' ) | (enumLiteral_8= 'process' ) | (enumLiteral_9= 'matlab' ) | (enumLiteral_10= 'webProject' ) | (enumLiteral_11= 'restGenerator' ) | (enumLiteral_12= 'restService' ) | (enumLiteral_13= 'restClient' ) | (enumLiteral_14= 'soapService' ) | (enumLiteral_15= 'soapClient' ) | (enumLiteral_16= 'ear' ) | (enumLiteral_17= 'docker' ) )
            int alt403=18;
            switch ( input.LA(1) ) {
            case 228:
                {
                alt403=1;
                }
                break;
            case 18:
                {
                alt403=2;
                }
                break;
            case 229:
                {
                alt403=3;
                }
                break;
            case 230:
                {
                alt403=4;
                }
                break;
            case 231:
                {
                alt403=5;
                }
                break;
            case 41:
                {
                alt403=6;
                }
                break;
            case 232:
                {
                alt403=7;
                }
                break;
            case 79:
                {
                alt403=8;
                }
                break;
            case 80:
                {
                alt403=9;
                }
                break;
            case 233:
                {
                alt403=10;
                }
                break;
            case 234:
                {
                alt403=11;
                }
                break;
            case 235:
                {
                alt403=12;
                }
                break;
            case 236:
                {
                alt403=13;
                }
                break;
            case 237:
                {
                alt403=14;
                }
                break;
            case 238:
                {
                alt403=15;
                }
                break;
            case 239:
                {
                alt403=16;
                }
                break;
            case 240:
                {
                alt403=17;
                }
                break;
            case 241:
                {
                alt403=18;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 403, 0, input);

                throw nvae;
            }

            switch (alt403) {
                case 1 :
                    // InternalStubbrLang.g:16611:3: (enumLiteral_0= 'parent' )
                    {
                    // InternalStubbrLang.g:16611:3: (enumLiteral_0= 'parent' )
                    // InternalStubbrLang.g:16612:4: enumLiteral_0= 'parent'
                    {
                    enumLiteral_0=(Token)match(input,228,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getDevProjectTypeAccess().getPARENTEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getDevProjectTypeAccess().getPARENTEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalStubbrLang.g:16619:3: (enumLiteral_1= 'documentation' )
                    {
                    // InternalStubbrLang.g:16619:3: (enumLiteral_1= 'documentation' )
                    // InternalStubbrLang.g:16620:4: enumLiteral_1= 'documentation'
                    {
                    enumLiteral_1=(Token)match(input,18,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getDevProjectTypeAccess().getDOCSEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getDevProjectTypeAccess().getDOCSEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalStubbrLang.g:16627:3: (enumLiteral_2= 'annotations' )
                    {
                    // InternalStubbrLang.g:16627:3: (enumLiteral_2= 'annotations' )
                    // InternalStubbrLang.g:16628:4: enumLiteral_2= 'annotations'
                    {
                    enumLiteral_2=(Token)match(input,229,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getDevProjectTypeAccess().getANNOTATIONSEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_2, grammarAccess.getDevProjectTypeAccess().getANNOTATIONSEnumLiteralDeclaration_2());
                      			
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalStubbrLang.g:16635:3: (enumLiteral_3= 'commons' )
                    {
                    // InternalStubbrLang.g:16635:3: (enumLiteral_3= 'commons' )
                    // InternalStubbrLang.g:16636:4: enumLiteral_3= 'commons'
                    {
                    enumLiteral_3=(Token)match(input,230,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getDevProjectTypeAccess().getCOMMONSEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_3, grammarAccess.getDevProjectTypeAccess().getCOMMONSEnumLiteralDeclaration_3());
                      			
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalStubbrLang.g:16643:3: (enumLiteral_4= 'dataModel' )
                    {
                    // InternalStubbrLang.g:16643:3: (enumLiteral_4= 'dataModel' )
                    // InternalStubbrLang.g:16644:4: enumLiteral_4= 'dataModel'
                    {
                    enumLiteral_4=(Token)match(input,231,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getDevProjectTypeAccess().getDATA_MODELEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_4, grammarAccess.getDevProjectTypeAccess().getDATA_MODELEnumLiteralDeclaration_4());
                      			
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalStubbrLang.g:16651:3: (enumLiteral_5= 'persistence' )
                    {
                    // InternalStubbrLang.g:16651:3: (enumLiteral_5= 'persistence' )
                    // InternalStubbrLang.g:16652:4: enumLiteral_5= 'persistence'
                    {
                    enumLiteral_5=(Token)match(input,41,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getDevProjectTypeAccess().getPERSISTENCEEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_5, grammarAccess.getDevProjectTypeAccess().getPERSISTENCEEnumLiteralDeclaration_5());
                      			
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalStubbrLang.g:16659:3: (enumLiteral_6= 'businessModel' )
                    {
                    // InternalStubbrLang.g:16659:3: (enumLiteral_6= 'businessModel' )
                    // InternalStubbrLang.g:16660:4: enumLiteral_6= 'businessModel'
                    {
                    enumLiteral_6=(Token)match(input,232,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getDevProjectTypeAccess().getBUSINESS_MODELEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_6, grammarAccess.getDevProjectTypeAccess().getBUSINESS_MODELEnumLiteralDeclaration_6());
                      			
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalStubbrLang.g:16667:3: (enumLiteral_7= 'business' )
                    {
                    // InternalStubbrLang.g:16667:3: (enumLiteral_7= 'business' )
                    // InternalStubbrLang.g:16668:4: enumLiteral_7= 'business'
                    {
                    enumLiteral_7=(Token)match(input,79,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getDevProjectTypeAccess().getBUSINESSEnumLiteralDeclaration_7().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_7, grammarAccess.getDevProjectTypeAccess().getBUSINESSEnumLiteralDeclaration_7());
                      			
                    }

                    }


                    }
                    break;
                case 9 :
                    // InternalStubbrLang.g:16675:3: (enumLiteral_8= 'process' )
                    {
                    // InternalStubbrLang.g:16675:3: (enumLiteral_8= 'process' )
                    // InternalStubbrLang.g:16676:4: enumLiteral_8= 'process'
                    {
                    enumLiteral_8=(Token)match(input,80,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getDevProjectTypeAccess().getPROCESSEnumLiteralDeclaration_8().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_8, grammarAccess.getDevProjectTypeAccess().getPROCESSEnumLiteralDeclaration_8());
                      			
                    }

                    }


                    }
                    break;
                case 10 :
                    // InternalStubbrLang.g:16683:3: (enumLiteral_9= 'matlab' )
                    {
                    // InternalStubbrLang.g:16683:3: (enumLiteral_9= 'matlab' )
                    // InternalStubbrLang.g:16684:4: enumLiteral_9= 'matlab'
                    {
                    enumLiteral_9=(Token)match(input,233,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getDevProjectTypeAccess().getMATLABEnumLiteralDeclaration_9().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_9, grammarAccess.getDevProjectTypeAccess().getMATLABEnumLiteralDeclaration_9());
                      			
                    }

                    }


                    }
                    break;
                case 11 :
                    // InternalStubbrLang.g:16691:3: (enumLiteral_10= 'webProject' )
                    {
                    // InternalStubbrLang.g:16691:3: (enumLiteral_10= 'webProject' )
                    // InternalStubbrLang.g:16692:4: enumLiteral_10= 'webProject'
                    {
                    enumLiteral_10=(Token)match(input,234,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getDevProjectTypeAccess().getWEBEnumLiteralDeclaration_10().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_10, grammarAccess.getDevProjectTypeAccess().getWEBEnumLiteralDeclaration_10());
                      			
                    }

                    }


                    }
                    break;
                case 12 :
                    // InternalStubbrLang.g:16699:3: (enumLiteral_11= 'restGenerator' )
                    {
                    // InternalStubbrLang.g:16699:3: (enumLiteral_11= 'restGenerator' )
                    // InternalStubbrLang.g:16700:4: enumLiteral_11= 'restGenerator'
                    {
                    enumLiteral_11=(Token)match(input,235,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getDevProjectTypeAccess().getREST_GENERATEEnumLiteralDeclaration_11().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_11, grammarAccess.getDevProjectTypeAccess().getREST_GENERATEEnumLiteralDeclaration_11());
                      			
                    }

                    }


                    }
                    break;
                case 13 :
                    // InternalStubbrLang.g:16707:3: (enumLiteral_12= 'restService' )
                    {
                    // InternalStubbrLang.g:16707:3: (enumLiteral_12= 'restService' )
                    // InternalStubbrLang.g:16708:4: enumLiteral_12= 'restService'
                    {
                    enumLiteral_12=(Token)match(input,236,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getDevProjectTypeAccess().getREST_SERVICEEnumLiteralDeclaration_12().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_12, grammarAccess.getDevProjectTypeAccess().getREST_SERVICEEnumLiteralDeclaration_12());
                      			
                    }

                    }


                    }
                    break;
                case 14 :
                    // InternalStubbrLang.g:16715:3: (enumLiteral_13= 'restClient' )
                    {
                    // InternalStubbrLang.g:16715:3: (enumLiteral_13= 'restClient' )
                    // InternalStubbrLang.g:16716:4: enumLiteral_13= 'restClient'
                    {
                    enumLiteral_13=(Token)match(input,237,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getDevProjectTypeAccess().getREST_CLIENTEnumLiteralDeclaration_13().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_13, grammarAccess.getDevProjectTypeAccess().getREST_CLIENTEnumLiteralDeclaration_13());
                      			
                    }

                    }


                    }
                    break;
                case 15 :
                    // InternalStubbrLang.g:16723:3: (enumLiteral_14= 'soapService' )
                    {
                    // InternalStubbrLang.g:16723:3: (enumLiteral_14= 'soapService' )
                    // InternalStubbrLang.g:16724:4: enumLiteral_14= 'soapService'
                    {
                    enumLiteral_14=(Token)match(input,238,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getDevProjectTypeAccess().getSOAP_SERVICEEnumLiteralDeclaration_14().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_14, grammarAccess.getDevProjectTypeAccess().getSOAP_SERVICEEnumLiteralDeclaration_14());
                      			
                    }

                    }


                    }
                    break;
                case 16 :
                    // InternalStubbrLang.g:16731:3: (enumLiteral_15= 'soapClient' )
                    {
                    // InternalStubbrLang.g:16731:3: (enumLiteral_15= 'soapClient' )
                    // InternalStubbrLang.g:16732:4: enumLiteral_15= 'soapClient'
                    {
                    enumLiteral_15=(Token)match(input,239,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getDevProjectTypeAccess().getSOAP__CLIENTEnumLiteralDeclaration_15().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_15, grammarAccess.getDevProjectTypeAccess().getSOAP__CLIENTEnumLiteralDeclaration_15());
                      			
                    }

                    }


                    }
                    break;
                case 17 :
                    // InternalStubbrLang.g:16739:3: (enumLiteral_16= 'ear' )
                    {
                    // InternalStubbrLang.g:16739:3: (enumLiteral_16= 'ear' )
                    // InternalStubbrLang.g:16740:4: enumLiteral_16= 'ear'
                    {
                    enumLiteral_16=(Token)match(input,240,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getDevProjectTypeAccess().getEAREnumLiteralDeclaration_16().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_16, grammarAccess.getDevProjectTypeAccess().getEAREnumLiteralDeclaration_16());
                      			
                    }

                    }


                    }
                    break;
                case 18 :
                    // InternalStubbrLang.g:16747:3: (enumLiteral_17= 'docker' )
                    {
                    // InternalStubbrLang.g:16747:3: (enumLiteral_17= 'docker' )
                    // InternalStubbrLang.g:16748:4: enumLiteral_17= 'docker'
                    {
                    enumLiteral_17=(Token)match(input,241,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getDevProjectTypeAccess().getDOCKEREnumLiteralDeclaration_17().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_17, grammarAccess.getDevProjectTypeAccess().getDOCKEREnumLiteralDeclaration_17());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDevProjectType"


    // $ANTLR start "ruleJvmEnum"
    // InternalStubbrLang.g:16758:1: ruleJvmEnum returns [Enumerator current=null] : ( (enumLiteral_0= '1.8' ) | (enumLiteral_1= '1.7' ) | (enumLiteral_2= '1.6' ) ) ;
    public final Enumerator ruleJvmEnum() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;


        	enterRule();

        try {
            // InternalStubbrLang.g:16764:2: ( ( (enumLiteral_0= '1.8' ) | (enumLiteral_1= '1.7' ) | (enumLiteral_2= '1.6' ) ) )
            // InternalStubbrLang.g:16765:2: ( (enumLiteral_0= '1.8' ) | (enumLiteral_1= '1.7' ) | (enumLiteral_2= '1.6' ) )
            {
            // InternalStubbrLang.g:16765:2: ( (enumLiteral_0= '1.8' ) | (enumLiteral_1= '1.7' ) | (enumLiteral_2= '1.6' ) )
            int alt404=3;
            switch ( input.LA(1) ) {
            case 242:
                {
                alt404=1;
                }
                break;
            case 243:
                {
                alt404=2;
                }
                break;
            case 244:
                {
                alt404=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 404, 0, input);

                throw nvae;
            }

            switch (alt404) {
                case 1 :
                    // InternalStubbrLang.g:16766:3: (enumLiteral_0= '1.8' )
                    {
                    // InternalStubbrLang.g:16766:3: (enumLiteral_0= '1.8' )
                    // InternalStubbrLang.g:16767:4: enumLiteral_0= '1.8'
                    {
                    enumLiteral_0=(Token)match(input,242,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getJvmEnumAccess().getJAVA_SE_1_8EnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getJvmEnumAccess().getJAVA_SE_1_8EnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalStubbrLang.g:16774:3: (enumLiteral_1= '1.7' )
                    {
                    // InternalStubbrLang.g:16774:3: (enumLiteral_1= '1.7' )
                    // InternalStubbrLang.g:16775:4: enumLiteral_1= '1.7'
                    {
                    enumLiteral_1=(Token)match(input,243,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getJvmEnumAccess().getJAVA_SE_1_7EnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getJvmEnumAccess().getJAVA_SE_1_7EnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalStubbrLang.g:16782:3: (enumLiteral_2= '1.6' )
                    {
                    // InternalStubbrLang.g:16782:3: (enumLiteral_2= '1.6' )
                    // InternalStubbrLang.g:16783:4: enumLiteral_2= '1.6'
                    {
                    enumLiteral_2=(Token)match(input,244,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getJvmEnumAccess().getJAVA_SE_1_6EnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_2, grammarAccess.getJvmEnumAccess().getJAVA_SE_1_6EnumLiteralDeclaration_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmEnum"


    // $ANTLR start "ruleDatabaseEnum"
    // InternalStubbrLang.g:16793:1: ruleDatabaseEnum returns [Enumerator current=null] : ( (enumLiteral_0= 'mySql' ) | (enumLiteral_1= 'mongoDb' ) | (enumLiteral_2= 'oracleDb' ) | (enumLiteral_3= 'h2' ) ) ;
    public final Enumerator ruleDatabaseEnum() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;
        Token enumLiteral_3=null;


        	enterRule();

        try {
            // InternalStubbrLang.g:16799:2: ( ( (enumLiteral_0= 'mySql' ) | (enumLiteral_1= 'mongoDb' ) | (enumLiteral_2= 'oracleDb' ) | (enumLiteral_3= 'h2' ) ) )
            // InternalStubbrLang.g:16800:2: ( (enumLiteral_0= 'mySql' ) | (enumLiteral_1= 'mongoDb' ) | (enumLiteral_2= 'oracleDb' ) | (enumLiteral_3= 'h2' ) )
            {
            // InternalStubbrLang.g:16800:2: ( (enumLiteral_0= 'mySql' ) | (enumLiteral_1= 'mongoDb' ) | (enumLiteral_2= 'oracleDb' ) | (enumLiteral_3= 'h2' ) )
            int alt405=4;
            switch ( input.LA(1) ) {
            case 245:
                {
                alt405=1;
                }
                break;
            case 246:
                {
                alt405=2;
                }
                break;
            case 247:
                {
                alt405=3;
                }
                break;
            case 248:
                {
                alt405=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 405, 0, input);

                throw nvae;
            }

            switch (alt405) {
                case 1 :
                    // InternalStubbrLang.g:16801:3: (enumLiteral_0= 'mySql' )
                    {
                    // InternalStubbrLang.g:16801:3: (enumLiteral_0= 'mySql' )
                    // InternalStubbrLang.g:16802:4: enumLiteral_0= 'mySql'
                    {
                    enumLiteral_0=(Token)match(input,245,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getDatabaseEnumAccess().getMYSQLEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getDatabaseEnumAccess().getMYSQLEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalStubbrLang.g:16809:3: (enumLiteral_1= 'mongoDb' )
                    {
                    // InternalStubbrLang.g:16809:3: (enumLiteral_1= 'mongoDb' )
                    // InternalStubbrLang.g:16810:4: enumLiteral_1= 'mongoDb'
                    {
                    enumLiteral_1=(Token)match(input,246,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getDatabaseEnumAccess().getMONGO_DBEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getDatabaseEnumAccess().getMONGO_DBEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalStubbrLang.g:16817:3: (enumLiteral_2= 'oracleDb' )
                    {
                    // InternalStubbrLang.g:16817:3: (enumLiteral_2= 'oracleDb' )
                    // InternalStubbrLang.g:16818:4: enumLiteral_2= 'oracleDb'
                    {
                    enumLiteral_2=(Token)match(input,247,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getDatabaseEnumAccess().getORACLE_DBEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_2, grammarAccess.getDatabaseEnumAccess().getORACLE_DBEnumLiteralDeclaration_2());
                      			
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalStubbrLang.g:16825:3: (enumLiteral_3= 'h2' )
                    {
                    // InternalStubbrLang.g:16825:3: (enumLiteral_3= 'h2' )
                    // InternalStubbrLang.g:16826:4: enumLiteral_3= 'h2'
                    {
                    enumLiteral_3=(Token)match(input,248,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getDatabaseEnumAccess().getH2EnumLiteralDeclaration_3().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_3, grammarAccess.getDatabaseEnumAccess().getH2EnumLiteralDeclaration_3());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDatabaseEnum"


    // $ANTLR start "ruleTaskType"
    // InternalStubbrLang.g:16836:1: ruleTaskType returns [Enumerator current=null] : ( (enumLiteral_0= 'task' ) | (enumLiteral_1= 'business rule task' ) | (enumLiteral_2= 'manual task' ) | (enumLiteral_3= 'receive task' ) | (enumLiteral_4= 'script task' ) | (enumLiteral_5= 'send task' ) | (enumLiteral_6= 'service task' ) | (enumLiteral_7= 'user task' ) ) ;
    public final Enumerator ruleTaskType() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;
        Token enumLiteral_3=null;
        Token enumLiteral_4=null;
        Token enumLiteral_5=null;
        Token enumLiteral_6=null;
        Token enumLiteral_7=null;


        	enterRule();

        try {
            // InternalStubbrLang.g:16842:2: ( ( (enumLiteral_0= 'task' ) | (enumLiteral_1= 'business rule task' ) | (enumLiteral_2= 'manual task' ) | (enumLiteral_3= 'receive task' ) | (enumLiteral_4= 'script task' ) | (enumLiteral_5= 'send task' ) | (enumLiteral_6= 'service task' ) | (enumLiteral_7= 'user task' ) ) )
            // InternalStubbrLang.g:16843:2: ( (enumLiteral_0= 'task' ) | (enumLiteral_1= 'business rule task' ) | (enumLiteral_2= 'manual task' ) | (enumLiteral_3= 'receive task' ) | (enumLiteral_4= 'script task' ) | (enumLiteral_5= 'send task' ) | (enumLiteral_6= 'service task' ) | (enumLiteral_7= 'user task' ) )
            {
            // InternalStubbrLang.g:16843:2: ( (enumLiteral_0= 'task' ) | (enumLiteral_1= 'business rule task' ) | (enumLiteral_2= 'manual task' ) | (enumLiteral_3= 'receive task' ) | (enumLiteral_4= 'script task' ) | (enumLiteral_5= 'send task' ) | (enumLiteral_6= 'service task' ) | (enumLiteral_7= 'user task' ) )
            int alt406=8;
            switch ( input.LA(1) ) {
            case 249:
                {
                alt406=1;
                }
                break;
            case 250:
                {
                alt406=2;
                }
                break;
            case 251:
                {
                alt406=3;
                }
                break;
            case 252:
                {
                alt406=4;
                }
                break;
            case 253:
                {
                alt406=5;
                }
                break;
            case 254:
                {
                alt406=6;
                }
                break;
            case 255:
                {
                alt406=7;
                }
                break;
            case 256:
                {
                alt406=8;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 406, 0, input);

                throw nvae;
            }

            switch (alt406) {
                case 1 :
                    // InternalStubbrLang.g:16844:3: (enumLiteral_0= 'task' )
                    {
                    // InternalStubbrLang.g:16844:3: (enumLiteral_0= 'task' )
                    // InternalStubbrLang.g:16845:4: enumLiteral_0= 'task'
                    {
                    enumLiteral_0=(Token)match(input,249,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getTaskTypeAccess().getBLANKEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getTaskTypeAccess().getBLANKEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalStubbrLang.g:16852:3: (enumLiteral_1= 'business rule task' )
                    {
                    // InternalStubbrLang.g:16852:3: (enumLiteral_1= 'business rule task' )
                    // InternalStubbrLang.g:16853:4: enumLiteral_1= 'business rule task'
                    {
                    enumLiteral_1=(Token)match(input,250,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getTaskTypeAccess().getBUSINESSRULEEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getTaskTypeAccess().getBUSINESSRULEEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalStubbrLang.g:16860:3: (enumLiteral_2= 'manual task' )
                    {
                    // InternalStubbrLang.g:16860:3: (enumLiteral_2= 'manual task' )
                    // InternalStubbrLang.g:16861:4: enumLiteral_2= 'manual task'
                    {
                    enumLiteral_2=(Token)match(input,251,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getTaskTypeAccess().getMANUALEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_2, grammarAccess.getTaskTypeAccess().getMANUALEnumLiteralDeclaration_2());
                      			
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalStubbrLang.g:16868:3: (enumLiteral_3= 'receive task' )
                    {
                    // InternalStubbrLang.g:16868:3: (enumLiteral_3= 'receive task' )
                    // InternalStubbrLang.g:16869:4: enumLiteral_3= 'receive task'
                    {
                    enumLiteral_3=(Token)match(input,252,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getTaskTypeAccess().getRECEIVEEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_3, grammarAccess.getTaskTypeAccess().getRECEIVEEnumLiteralDeclaration_3());
                      			
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalStubbrLang.g:16876:3: (enumLiteral_4= 'script task' )
                    {
                    // InternalStubbrLang.g:16876:3: (enumLiteral_4= 'script task' )
                    // InternalStubbrLang.g:16877:4: enumLiteral_4= 'script task'
                    {
                    enumLiteral_4=(Token)match(input,253,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getTaskTypeAccess().getSCRIPTEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_4, grammarAccess.getTaskTypeAccess().getSCRIPTEnumLiteralDeclaration_4());
                      			
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalStubbrLang.g:16884:3: (enumLiteral_5= 'send task' )
                    {
                    // InternalStubbrLang.g:16884:3: (enumLiteral_5= 'send task' )
                    // InternalStubbrLang.g:16885:4: enumLiteral_5= 'send task'
                    {
                    enumLiteral_5=(Token)match(input,254,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getTaskTypeAccess().getSENDEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_5, grammarAccess.getTaskTypeAccess().getSENDEnumLiteralDeclaration_5());
                      			
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalStubbrLang.g:16892:3: (enumLiteral_6= 'service task' )
                    {
                    // InternalStubbrLang.g:16892:3: (enumLiteral_6= 'service task' )
                    // InternalStubbrLang.g:16893:4: enumLiteral_6= 'service task'
                    {
                    enumLiteral_6=(Token)match(input,255,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getTaskTypeAccess().getSERVICEEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_6, grammarAccess.getTaskTypeAccess().getSERVICEEnumLiteralDeclaration_6());
                      			
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalStubbrLang.g:16900:3: (enumLiteral_7= 'user task' )
                    {
                    // InternalStubbrLang.g:16900:3: (enumLiteral_7= 'user task' )
                    // InternalStubbrLang.g:16901:4: enumLiteral_7= 'user task'
                    {
                    enumLiteral_7=(Token)match(input,256,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getTaskTypeAccess().getUSEREnumLiteralDeclaration_7().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_7, grammarAccess.getTaskTypeAccess().getUSEREnumLiteralDeclaration_7());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTaskType"


    // $ANTLR start "ruleEventType"
    // InternalStubbrLang.g:16911:1: ruleEventType returns [Enumerator current=null] : ( (enumLiteral_0= 'event' ) | (enumLiteral_1= 'start event' ) | (enumLiteral_2= 'throwing event' ) | (enumLiteral_3= 'catching event' ) | (enumLiteral_4= 'intermediate catching event' ) | (enumLiteral_5= 'intermediate throwing event' ) | (enumLiteral_6= 'end event' ) ) ;
    public final Enumerator ruleEventType() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;
        Token enumLiteral_3=null;
        Token enumLiteral_4=null;
        Token enumLiteral_5=null;
        Token enumLiteral_6=null;


        	enterRule();

        try {
            // InternalStubbrLang.g:16917:2: ( ( (enumLiteral_0= 'event' ) | (enumLiteral_1= 'start event' ) | (enumLiteral_2= 'throwing event' ) | (enumLiteral_3= 'catching event' ) | (enumLiteral_4= 'intermediate catching event' ) | (enumLiteral_5= 'intermediate throwing event' ) | (enumLiteral_6= 'end event' ) ) )
            // InternalStubbrLang.g:16918:2: ( (enumLiteral_0= 'event' ) | (enumLiteral_1= 'start event' ) | (enumLiteral_2= 'throwing event' ) | (enumLiteral_3= 'catching event' ) | (enumLiteral_4= 'intermediate catching event' ) | (enumLiteral_5= 'intermediate throwing event' ) | (enumLiteral_6= 'end event' ) )
            {
            // InternalStubbrLang.g:16918:2: ( (enumLiteral_0= 'event' ) | (enumLiteral_1= 'start event' ) | (enumLiteral_2= 'throwing event' ) | (enumLiteral_3= 'catching event' ) | (enumLiteral_4= 'intermediate catching event' ) | (enumLiteral_5= 'intermediate throwing event' ) | (enumLiteral_6= 'end event' ) )
            int alt407=7;
            switch ( input.LA(1) ) {
            case 257:
                {
                alt407=1;
                }
                break;
            case 258:
                {
                alt407=2;
                }
                break;
            case 259:
                {
                alt407=3;
                }
                break;
            case 260:
                {
                alt407=4;
                }
                break;
            case 261:
                {
                alt407=5;
                }
                break;
            case 262:
                {
                alt407=6;
                }
                break;
            case 263:
                {
                alt407=7;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 407, 0, input);

                throw nvae;
            }

            switch (alt407) {
                case 1 :
                    // InternalStubbrLang.g:16919:3: (enumLiteral_0= 'event' )
                    {
                    // InternalStubbrLang.g:16919:3: (enumLiteral_0= 'event' )
                    // InternalStubbrLang.g:16920:4: enumLiteral_0= 'event'
                    {
                    enumLiteral_0=(Token)match(input,257,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getEventTypeAccess().getEVENTEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getEventTypeAccess().getEVENTEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalStubbrLang.g:16927:3: (enumLiteral_1= 'start event' )
                    {
                    // InternalStubbrLang.g:16927:3: (enumLiteral_1= 'start event' )
                    // InternalStubbrLang.g:16928:4: enumLiteral_1= 'start event'
                    {
                    enumLiteral_1=(Token)match(input,258,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getEventTypeAccess().getSTARTEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getEventTypeAccess().getSTARTEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalStubbrLang.g:16935:3: (enumLiteral_2= 'throwing event' )
                    {
                    // InternalStubbrLang.g:16935:3: (enumLiteral_2= 'throwing event' )
                    // InternalStubbrLang.g:16936:4: enumLiteral_2= 'throwing event'
                    {
                    enumLiteral_2=(Token)match(input,259,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getEventTypeAccess().getTHROWEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_2, grammarAccess.getEventTypeAccess().getTHROWEnumLiteralDeclaration_2());
                      			
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalStubbrLang.g:16943:3: (enumLiteral_3= 'catching event' )
                    {
                    // InternalStubbrLang.g:16943:3: (enumLiteral_3= 'catching event' )
                    // InternalStubbrLang.g:16944:4: enumLiteral_3= 'catching event'
                    {
                    enumLiteral_3=(Token)match(input,260,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getEventTypeAccess().getCATCHEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_3, grammarAccess.getEventTypeAccess().getCATCHEnumLiteralDeclaration_3());
                      			
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalStubbrLang.g:16951:3: (enumLiteral_4= 'intermediate catching event' )
                    {
                    // InternalStubbrLang.g:16951:3: (enumLiteral_4= 'intermediate catching event' )
                    // InternalStubbrLang.g:16952:4: enumLiteral_4= 'intermediate catching event'
                    {
                    enumLiteral_4=(Token)match(input,261,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getEventTypeAccess().getINTERMEDIATE_CATCHEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_4, grammarAccess.getEventTypeAccess().getINTERMEDIATE_CATCHEnumLiteralDeclaration_4());
                      			
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalStubbrLang.g:16959:3: (enumLiteral_5= 'intermediate throwing event' )
                    {
                    // InternalStubbrLang.g:16959:3: (enumLiteral_5= 'intermediate throwing event' )
                    // InternalStubbrLang.g:16960:4: enumLiteral_5= 'intermediate throwing event'
                    {
                    enumLiteral_5=(Token)match(input,262,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getEventTypeAccess().getINTERMEDIATE_THROWEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_5, grammarAccess.getEventTypeAccess().getINTERMEDIATE_THROWEnumLiteralDeclaration_5());
                      			
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalStubbrLang.g:16967:3: (enumLiteral_6= 'end event' )
                    {
                    // InternalStubbrLang.g:16967:3: (enumLiteral_6= 'end event' )
                    // InternalStubbrLang.g:16968:4: enumLiteral_6= 'end event'
                    {
                    enumLiteral_6=(Token)match(input,263,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getEventTypeAccess().getENDEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_6, grammarAccess.getEventTypeAccess().getENDEnumLiteralDeclaration_6());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEventType"


    // $ANTLR start "ruleEventDefinitionType"
    // InternalStubbrLang.g:16978:1: ruleEventDefinitionType returns [Enumerator current=null] : ( (enumLiteral_0= 'blank' ) | (enumLiteral_1= 'message' ) | (enumLiteral_2= 'timer' ) | (enumLiteral_3= 'error' ) | (enumLiteral_4= 'escalation' ) | (enumLiteral_5= 'cancel' ) | (enumLiteral_6= 'compensation' ) | (enumLiteral_7= 'conditional' ) | (enumLiteral_8= 'link' ) | (enumLiteral_9= 'signal' ) | (enumLiteral_10= 'terminate' ) | (enumLiteral_11= 'multiple' ) | (enumLiteral_12= 'parallel multiple' ) ) ;
    public final Enumerator ruleEventDefinitionType() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;
        Token enumLiteral_3=null;
        Token enumLiteral_4=null;
        Token enumLiteral_5=null;
        Token enumLiteral_6=null;
        Token enumLiteral_7=null;
        Token enumLiteral_8=null;
        Token enumLiteral_9=null;
        Token enumLiteral_10=null;
        Token enumLiteral_11=null;
        Token enumLiteral_12=null;


        	enterRule();

        try {
            // InternalStubbrLang.g:16984:2: ( ( (enumLiteral_0= 'blank' ) | (enumLiteral_1= 'message' ) | (enumLiteral_2= 'timer' ) | (enumLiteral_3= 'error' ) | (enumLiteral_4= 'escalation' ) | (enumLiteral_5= 'cancel' ) | (enumLiteral_6= 'compensation' ) | (enumLiteral_7= 'conditional' ) | (enumLiteral_8= 'link' ) | (enumLiteral_9= 'signal' ) | (enumLiteral_10= 'terminate' ) | (enumLiteral_11= 'multiple' ) | (enumLiteral_12= 'parallel multiple' ) ) )
            // InternalStubbrLang.g:16985:2: ( (enumLiteral_0= 'blank' ) | (enumLiteral_1= 'message' ) | (enumLiteral_2= 'timer' ) | (enumLiteral_3= 'error' ) | (enumLiteral_4= 'escalation' ) | (enumLiteral_5= 'cancel' ) | (enumLiteral_6= 'compensation' ) | (enumLiteral_7= 'conditional' ) | (enumLiteral_8= 'link' ) | (enumLiteral_9= 'signal' ) | (enumLiteral_10= 'terminate' ) | (enumLiteral_11= 'multiple' ) | (enumLiteral_12= 'parallel multiple' ) )
            {
            // InternalStubbrLang.g:16985:2: ( (enumLiteral_0= 'blank' ) | (enumLiteral_1= 'message' ) | (enumLiteral_2= 'timer' ) | (enumLiteral_3= 'error' ) | (enumLiteral_4= 'escalation' ) | (enumLiteral_5= 'cancel' ) | (enumLiteral_6= 'compensation' ) | (enumLiteral_7= 'conditional' ) | (enumLiteral_8= 'link' ) | (enumLiteral_9= 'signal' ) | (enumLiteral_10= 'terminate' ) | (enumLiteral_11= 'multiple' ) | (enumLiteral_12= 'parallel multiple' ) )
            int alt408=13;
            switch ( input.LA(1) ) {
            case 264:
                {
                alt408=1;
                }
                break;
            case 265:
                {
                alt408=2;
                }
                break;
            case 266:
                {
                alt408=3;
                }
                break;
            case 267:
                {
                alt408=4;
                }
                break;
            case 268:
                {
                alt408=5;
                }
                break;
            case 269:
                {
                alt408=6;
                }
                break;
            case 270:
                {
                alt408=7;
                }
                break;
            case 271:
                {
                alt408=8;
                }
                break;
            case 272:
                {
                alt408=9;
                }
                break;
            case 273:
                {
                alt408=10;
                }
                break;
            case 274:
                {
                alt408=11;
                }
                break;
            case 275:
                {
                alt408=12;
                }
                break;
            case 276:
                {
                alt408=13;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 408, 0, input);

                throw nvae;
            }

            switch (alt408) {
                case 1 :
                    // InternalStubbrLang.g:16986:3: (enumLiteral_0= 'blank' )
                    {
                    // InternalStubbrLang.g:16986:3: (enumLiteral_0= 'blank' )
                    // InternalStubbrLang.g:16987:4: enumLiteral_0= 'blank'
                    {
                    enumLiteral_0=(Token)match(input,264,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getEventDefinitionTypeAccess().getBLANKEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getEventDefinitionTypeAccess().getBLANKEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalStubbrLang.g:16994:3: (enumLiteral_1= 'message' )
                    {
                    // InternalStubbrLang.g:16994:3: (enumLiteral_1= 'message' )
                    // InternalStubbrLang.g:16995:4: enumLiteral_1= 'message'
                    {
                    enumLiteral_1=(Token)match(input,265,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getEventDefinitionTypeAccess().getMESSAGEEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getEventDefinitionTypeAccess().getMESSAGEEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalStubbrLang.g:17002:3: (enumLiteral_2= 'timer' )
                    {
                    // InternalStubbrLang.g:17002:3: (enumLiteral_2= 'timer' )
                    // InternalStubbrLang.g:17003:4: enumLiteral_2= 'timer'
                    {
                    enumLiteral_2=(Token)match(input,266,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getEventDefinitionTypeAccess().getTIMEREnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_2, grammarAccess.getEventDefinitionTypeAccess().getTIMEREnumLiteralDeclaration_2());
                      			
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalStubbrLang.g:17010:3: (enumLiteral_3= 'error' )
                    {
                    // InternalStubbrLang.g:17010:3: (enumLiteral_3= 'error' )
                    // InternalStubbrLang.g:17011:4: enumLiteral_3= 'error'
                    {
                    enumLiteral_3=(Token)match(input,267,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getEventDefinitionTypeAccess().getERROREnumLiteralDeclaration_3().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_3, grammarAccess.getEventDefinitionTypeAccess().getERROREnumLiteralDeclaration_3());
                      			
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalStubbrLang.g:17018:3: (enumLiteral_4= 'escalation' )
                    {
                    // InternalStubbrLang.g:17018:3: (enumLiteral_4= 'escalation' )
                    // InternalStubbrLang.g:17019:4: enumLiteral_4= 'escalation'
                    {
                    enumLiteral_4=(Token)match(input,268,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getEventDefinitionTypeAccess().getESCALATIONEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_4, grammarAccess.getEventDefinitionTypeAccess().getESCALATIONEnumLiteralDeclaration_4());
                      			
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalStubbrLang.g:17026:3: (enumLiteral_5= 'cancel' )
                    {
                    // InternalStubbrLang.g:17026:3: (enumLiteral_5= 'cancel' )
                    // InternalStubbrLang.g:17027:4: enumLiteral_5= 'cancel'
                    {
                    enumLiteral_5=(Token)match(input,269,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getEventDefinitionTypeAccess().getCANCELEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_5, grammarAccess.getEventDefinitionTypeAccess().getCANCELEnumLiteralDeclaration_5());
                      			
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalStubbrLang.g:17034:3: (enumLiteral_6= 'compensation' )
                    {
                    // InternalStubbrLang.g:17034:3: (enumLiteral_6= 'compensation' )
                    // InternalStubbrLang.g:17035:4: enumLiteral_6= 'compensation'
                    {
                    enumLiteral_6=(Token)match(input,270,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getEventDefinitionTypeAccess().getCOMPENSATIONEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_6, grammarAccess.getEventDefinitionTypeAccess().getCOMPENSATIONEnumLiteralDeclaration_6());
                      			
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalStubbrLang.g:17042:3: (enumLiteral_7= 'conditional' )
                    {
                    // InternalStubbrLang.g:17042:3: (enumLiteral_7= 'conditional' )
                    // InternalStubbrLang.g:17043:4: enumLiteral_7= 'conditional'
                    {
                    enumLiteral_7=(Token)match(input,271,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getEventDefinitionTypeAccess().getCONDITIONALEnumLiteralDeclaration_7().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_7, grammarAccess.getEventDefinitionTypeAccess().getCONDITIONALEnumLiteralDeclaration_7());
                      			
                    }

                    }


                    }
                    break;
                case 9 :
                    // InternalStubbrLang.g:17050:3: (enumLiteral_8= 'link' )
                    {
                    // InternalStubbrLang.g:17050:3: (enumLiteral_8= 'link' )
                    // InternalStubbrLang.g:17051:4: enumLiteral_8= 'link'
                    {
                    enumLiteral_8=(Token)match(input,272,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getEventDefinitionTypeAccess().getLINKEnumLiteralDeclaration_8().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_8, grammarAccess.getEventDefinitionTypeAccess().getLINKEnumLiteralDeclaration_8());
                      			
                    }

                    }


                    }
                    break;
                case 10 :
                    // InternalStubbrLang.g:17058:3: (enumLiteral_9= 'signal' )
                    {
                    // InternalStubbrLang.g:17058:3: (enumLiteral_9= 'signal' )
                    // InternalStubbrLang.g:17059:4: enumLiteral_9= 'signal'
                    {
                    enumLiteral_9=(Token)match(input,273,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getEventDefinitionTypeAccess().getSIGNALEnumLiteralDeclaration_9().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_9, grammarAccess.getEventDefinitionTypeAccess().getSIGNALEnumLiteralDeclaration_9());
                      			
                    }

                    }


                    }
                    break;
                case 11 :
                    // InternalStubbrLang.g:17066:3: (enumLiteral_10= 'terminate' )
                    {
                    // InternalStubbrLang.g:17066:3: (enumLiteral_10= 'terminate' )
                    // InternalStubbrLang.g:17067:4: enumLiteral_10= 'terminate'
                    {
                    enumLiteral_10=(Token)match(input,274,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getEventDefinitionTypeAccess().getTERMINATEEnumLiteralDeclaration_10().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_10, grammarAccess.getEventDefinitionTypeAccess().getTERMINATEEnumLiteralDeclaration_10());
                      			
                    }

                    }


                    }
                    break;
                case 12 :
                    // InternalStubbrLang.g:17074:3: (enumLiteral_11= 'multiple' )
                    {
                    // InternalStubbrLang.g:17074:3: (enumLiteral_11= 'multiple' )
                    // InternalStubbrLang.g:17075:4: enumLiteral_11= 'multiple'
                    {
                    enumLiteral_11=(Token)match(input,275,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getEventDefinitionTypeAccess().getMULTIPLEEnumLiteralDeclaration_11().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_11, grammarAccess.getEventDefinitionTypeAccess().getMULTIPLEEnumLiteralDeclaration_11());
                      			
                    }

                    }


                    }
                    break;
                case 13 :
                    // InternalStubbrLang.g:17082:3: (enumLiteral_12= 'parallel multiple' )
                    {
                    // InternalStubbrLang.g:17082:3: (enumLiteral_12= 'parallel multiple' )
                    // InternalStubbrLang.g:17083:4: enumLiteral_12= 'parallel multiple'
                    {
                    enumLiteral_12=(Token)match(input,276,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getEventDefinitionTypeAccess().getPARALLEL_MULTIPLEEnumLiteralDeclaration_12().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_12, grammarAccess.getEventDefinitionTypeAccess().getPARALLEL_MULTIPLEEnumLiteralDeclaration_12());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEventDefinitionType"


    // $ANTLR start "ruleGatewayType"
    // InternalStubbrLang.g:17093:1: ruleGatewayType returns [Enumerator current=null] : ( (enumLiteral_0= 'gateway' ) | (enumLiteral_1= 'parallel' ) | (enumLiteral_2= 'and' ) | (enumLiteral_3= 'inclusive' ) | (enumLiteral_4= 'or gateway' ) | (enumLiteral_5= 'exclusive' ) | (enumLiteral_6= 'xor' ) | (enumLiteral_7= 'eventbased' ) | (enumLiteral_8= 'complex' ) ) ;
    public final Enumerator ruleGatewayType() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;
        Token enumLiteral_3=null;
        Token enumLiteral_4=null;
        Token enumLiteral_5=null;
        Token enumLiteral_6=null;
        Token enumLiteral_7=null;
        Token enumLiteral_8=null;


        	enterRule();

        try {
            // InternalStubbrLang.g:17099:2: ( ( (enumLiteral_0= 'gateway' ) | (enumLiteral_1= 'parallel' ) | (enumLiteral_2= 'and' ) | (enumLiteral_3= 'inclusive' ) | (enumLiteral_4= 'or gateway' ) | (enumLiteral_5= 'exclusive' ) | (enumLiteral_6= 'xor' ) | (enumLiteral_7= 'eventbased' ) | (enumLiteral_8= 'complex' ) ) )
            // InternalStubbrLang.g:17100:2: ( (enumLiteral_0= 'gateway' ) | (enumLiteral_1= 'parallel' ) | (enumLiteral_2= 'and' ) | (enumLiteral_3= 'inclusive' ) | (enumLiteral_4= 'or gateway' ) | (enumLiteral_5= 'exclusive' ) | (enumLiteral_6= 'xor' ) | (enumLiteral_7= 'eventbased' ) | (enumLiteral_8= 'complex' ) )
            {
            // InternalStubbrLang.g:17100:2: ( (enumLiteral_0= 'gateway' ) | (enumLiteral_1= 'parallel' ) | (enumLiteral_2= 'and' ) | (enumLiteral_3= 'inclusive' ) | (enumLiteral_4= 'or gateway' ) | (enumLiteral_5= 'exclusive' ) | (enumLiteral_6= 'xor' ) | (enumLiteral_7= 'eventbased' ) | (enumLiteral_8= 'complex' ) )
            int alt409=9;
            switch ( input.LA(1) ) {
            case 277:
                {
                alt409=1;
                }
                break;
            case 278:
                {
                alt409=2;
                }
                break;
            case 279:
                {
                alt409=3;
                }
                break;
            case 280:
                {
                alt409=4;
                }
                break;
            case 281:
                {
                alt409=5;
                }
                break;
            case 282:
                {
                alt409=6;
                }
                break;
            case 283:
                {
                alt409=7;
                }
                break;
            case 284:
                {
                alt409=8;
                }
                break;
            case 285:
                {
                alt409=9;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 409, 0, input);

                throw nvae;
            }

            switch (alt409) {
                case 1 :
                    // InternalStubbrLang.g:17101:3: (enumLiteral_0= 'gateway' )
                    {
                    // InternalStubbrLang.g:17101:3: (enumLiteral_0= 'gateway' )
                    // InternalStubbrLang.g:17102:4: enumLiteral_0= 'gateway'
                    {
                    enumLiteral_0=(Token)match(input,277,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getGatewayTypeAccess().getBLANKEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getGatewayTypeAccess().getBLANKEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalStubbrLang.g:17109:3: (enumLiteral_1= 'parallel' )
                    {
                    // InternalStubbrLang.g:17109:3: (enumLiteral_1= 'parallel' )
                    // InternalStubbrLang.g:17110:4: enumLiteral_1= 'parallel'
                    {
                    enumLiteral_1=(Token)match(input,278,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getGatewayTypeAccess().getPARALLELEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getGatewayTypeAccess().getPARALLELEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalStubbrLang.g:17117:3: (enumLiteral_2= 'and' )
                    {
                    // InternalStubbrLang.g:17117:3: (enumLiteral_2= 'and' )
                    // InternalStubbrLang.g:17118:4: enumLiteral_2= 'and'
                    {
                    enumLiteral_2=(Token)match(input,279,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getGatewayTypeAccess().getPARALLELEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_2, grammarAccess.getGatewayTypeAccess().getPARALLELEnumLiteralDeclaration_2());
                      			
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalStubbrLang.g:17125:3: (enumLiteral_3= 'inclusive' )
                    {
                    // InternalStubbrLang.g:17125:3: (enumLiteral_3= 'inclusive' )
                    // InternalStubbrLang.g:17126:4: enumLiteral_3= 'inclusive'
                    {
                    enumLiteral_3=(Token)match(input,280,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getGatewayTypeAccess().getINCLUSIVEEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_3, grammarAccess.getGatewayTypeAccess().getINCLUSIVEEnumLiteralDeclaration_3());
                      			
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalStubbrLang.g:17133:3: (enumLiteral_4= 'or gateway' )
                    {
                    // InternalStubbrLang.g:17133:3: (enumLiteral_4= 'or gateway' )
                    // InternalStubbrLang.g:17134:4: enumLiteral_4= 'or gateway'
                    {
                    enumLiteral_4=(Token)match(input,281,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getGatewayTypeAccess().getINCLUSIVEEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_4, grammarAccess.getGatewayTypeAccess().getINCLUSIVEEnumLiteralDeclaration_4());
                      			
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalStubbrLang.g:17141:3: (enumLiteral_5= 'exclusive' )
                    {
                    // InternalStubbrLang.g:17141:3: (enumLiteral_5= 'exclusive' )
                    // InternalStubbrLang.g:17142:4: enumLiteral_5= 'exclusive'
                    {
                    enumLiteral_5=(Token)match(input,282,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getGatewayTypeAccess().getEXCLUSIVEEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_5, grammarAccess.getGatewayTypeAccess().getEXCLUSIVEEnumLiteralDeclaration_5());
                      			
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalStubbrLang.g:17149:3: (enumLiteral_6= 'xor' )
                    {
                    // InternalStubbrLang.g:17149:3: (enumLiteral_6= 'xor' )
                    // InternalStubbrLang.g:17150:4: enumLiteral_6= 'xor'
                    {
                    enumLiteral_6=(Token)match(input,283,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getGatewayTypeAccess().getEXCLUSIVEEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_6, grammarAccess.getGatewayTypeAccess().getEXCLUSIVEEnumLiteralDeclaration_6());
                      			
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalStubbrLang.g:17157:3: (enumLiteral_7= 'eventbased' )
                    {
                    // InternalStubbrLang.g:17157:3: (enumLiteral_7= 'eventbased' )
                    // InternalStubbrLang.g:17158:4: enumLiteral_7= 'eventbased'
                    {
                    enumLiteral_7=(Token)match(input,284,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getGatewayTypeAccess().getEVENTBASEDEnumLiteralDeclaration_7().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_7, grammarAccess.getGatewayTypeAccess().getEVENTBASEDEnumLiteralDeclaration_7());
                      			
                    }

                    }


                    }
                    break;
                case 9 :
                    // InternalStubbrLang.g:17165:3: (enumLiteral_8= 'complex' )
                    {
                    // InternalStubbrLang.g:17165:3: (enumLiteral_8= 'complex' )
                    // InternalStubbrLang.g:17166:4: enumLiteral_8= 'complex'
                    {
                    enumLiteral_8=(Token)match(input,285,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getGatewayTypeAccess().getCOMPLEXEnumLiteralDeclaration_8().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_8, grammarAccess.getGatewayTypeAccess().getCOMPLEXEnumLiteralDeclaration_8());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleGatewayType"


    // $ANTLR start "ruleDataIOType"
    // InternalStubbrLang.g:17176:1: ruleDataIOType returns [Enumerator current=null] : ( (enumLiteral_0= 'data input/output' ) | (enumLiteral_1= 'data input' ) | (enumLiteral_2= 'data output' ) ) ;
    public final Enumerator ruleDataIOType() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;


        	enterRule();

        try {
            // InternalStubbrLang.g:17182:2: ( ( (enumLiteral_0= 'data input/output' ) | (enumLiteral_1= 'data input' ) | (enumLiteral_2= 'data output' ) ) )
            // InternalStubbrLang.g:17183:2: ( (enumLiteral_0= 'data input/output' ) | (enumLiteral_1= 'data input' ) | (enumLiteral_2= 'data output' ) )
            {
            // InternalStubbrLang.g:17183:2: ( (enumLiteral_0= 'data input/output' ) | (enumLiteral_1= 'data input' ) | (enumLiteral_2= 'data output' ) )
            int alt410=3;
            switch ( input.LA(1) ) {
            case 286:
                {
                alt410=1;
                }
                break;
            case 287:
                {
                alt410=2;
                }
                break;
            case 288:
                {
                alt410=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 410, 0, input);

                throw nvae;
            }

            switch (alt410) {
                case 1 :
                    // InternalStubbrLang.g:17184:3: (enumLiteral_0= 'data input/output' )
                    {
                    // InternalStubbrLang.g:17184:3: (enumLiteral_0= 'data input/output' )
                    // InternalStubbrLang.g:17185:4: enumLiteral_0= 'data input/output'
                    {
                    enumLiteral_0=(Token)match(input,286,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getDataIOTypeAccess().getBLANKEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getDataIOTypeAccess().getBLANKEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalStubbrLang.g:17192:3: (enumLiteral_1= 'data input' )
                    {
                    // InternalStubbrLang.g:17192:3: (enumLiteral_1= 'data input' )
                    // InternalStubbrLang.g:17193:4: enumLiteral_1= 'data input'
                    {
                    enumLiteral_1=(Token)match(input,287,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getDataIOTypeAccess().getINPUTEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getDataIOTypeAccess().getINPUTEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalStubbrLang.g:17200:3: (enumLiteral_2= 'data output' )
                    {
                    // InternalStubbrLang.g:17200:3: (enumLiteral_2= 'data output' )
                    // InternalStubbrLang.g:17201:4: enumLiteral_2= 'data output'
                    {
                    enumLiteral_2=(Token)match(input,288,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getDataIOTypeAccess().getOUTPUTEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_2, grammarAccess.getDataIOTypeAccess().getOUTPUTEnumLiteralDeclaration_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDataIOType"


    // $ANTLR start "ruleUiFramework"
    // InternalStubbrLang.g:17211:1: ruleUiFramework returns [Enumerator current=null] : ( (enumLiteral_0= 'JSF' ) | (enumLiteral_1= 'AngularJS' ) ) ;
    public final Enumerator ruleUiFramework() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;


        	enterRule();

        try {
            // InternalStubbrLang.g:17217:2: ( ( (enumLiteral_0= 'JSF' ) | (enumLiteral_1= 'AngularJS' ) ) )
            // InternalStubbrLang.g:17218:2: ( (enumLiteral_0= 'JSF' ) | (enumLiteral_1= 'AngularJS' ) )
            {
            // InternalStubbrLang.g:17218:2: ( (enumLiteral_0= 'JSF' ) | (enumLiteral_1= 'AngularJS' ) )
            int alt411=2;
            int LA411_0 = input.LA(1);

            if ( (LA411_0==289) ) {
                alt411=1;
            }
            else if ( (LA411_0==290) ) {
                alt411=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 411, 0, input);

                throw nvae;
            }
            switch (alt411) {
                case 1 :
                    // InternalStubbrLang.g:17219:3: (enumLiteral_0= 'JSF' )
                    {
                    // InternalStubbrLang.g:17219:3: (enumLiteral_0= 'JSF' )
                    // InternalStubbrLang.g:17220:4: enumLiteral_0= 'JSF'
                    {
                    enumLiteral_0=(Token)match(input,289,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getUiFrameworkAccess().getJSFEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getUiFrameworkAccess().getJSFEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalStubbrLang.g:17227:3: (enumLiteral_1= 'AngularJS' )
                    {
                    // InternalStubbrLang.g:17227:3: (enumLiteral_1= 'AngularJS' )
                    // InternalStubbrLang.g:17228:4: enumLiteral_1= 'AngularJS'
                    {
                    enumLiteral_1=(Token)match(input,290,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getUiFrameworkAccess().getANGULAR_JSEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getUiFrameworkAccess().getANGULAR_JSEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUiFramework"


    // $ANTLR start "ruleRestLanguage"
    // InternalStubbrLang.g:17238:1: ruleRestLanguage returns [Enumerator current=null] : ( (enumLiteral_0= 'jaxrs-resteasy' ) | (enumLiteral_1= 'jaxrs-spec' ) | (enumLiteral_2= 'lumen' ) | (enumLiteral_3= 'java' ) | (enumLiteral_4= 'android' ) | (enumLiteral_5= 'swift' ) | (enumLiteral_6= 'php' ) | (enumLiteral_7= 'html2' ) ) ;
    public final Enumerator ruleRestLanguage() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;
        Token enumLiteral_3=null;
        Token enumLiteral_4=null;
        Token enumLiteral_5=null;
        Token enumLiteral_6=null;
        Token enumLiteral_7=null;


        	enterRule();

        try {
            // InternalStubbrLang.g:17244:2: ( ( (enumLiteral_0= 'jaxrs-resteasy' ) | (enumLiteral_1= 'jaxrs-spec' ) | (enumLiteral_2= 'lumen' ) | (enumLiteral_3= 'java' ) | (enumLiteral_4= 'android' ) | (enumLiteral_5= 'swift' ) | (enumLiteral_6= 'php' ) | (enumLiteral_7= 'html2' ) ) )
            // InternalStubbrLang.g:17245:2: ( (enumLiteral_0= 'jaxrs-resteasy' ) | (enumLiteral_1= 'jaxrs-spec' ) | (enumLiteral_2= 'lumen' ) | (enumLiteral_3= 'java' ) | (enumLiteral_4= 'android' ) | (enumLiteral_5= 'swift' ) | (enumLiteral_6= 'php' ) | (enumLiteral_7= 'html2' ) )
            {
            // InternalStubbrLang.g:17245:2: ( (enumLiteral_0= 'jaxrs-resteasy' ) | (enumLiteral_1= 'jaxrs-spec' ) | (enumLiteral_2= 'lumen' ) | (enumLiteral_3= 'java' ) | (enumLiteral_4= 'android' ) | (enumLiteral_5= 'swift' ) | (enumLiteral_6= 'php' ) | (enumLiteral_7= 'html2' ) )
            int alt412=8;
            switch ( input.LA(1) ) {
            case 291:
                {
                alt412=1;
                }
                break;
            case 292:
                {
                alt412=2;
                }
                break;
            case 293:
                {
                alt412=3;
                }
                break;
            case 63:
                {
                alt412=4;
                }
                break;
            case 294:
                {
                alt412=5;
                }
                break;
            case 295:
                {
                alt412=6;
                }
                break;
            case 296:
                {
                alt412=7;
                }
                break;
            case 297:
                {
                alt412=8;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 412, 0, input);

                throw nvae;
            }

            switch (alt412) {
                case 1 :
                    // InternalStubbrLang.g:17246:3: (enumLiteral_0= 'jaxrs-resteasy' )
                    {
                    // InternalStubbrLang.g:17246:3: (enumLiteral_0= 'jaxrs-resteasy' )
                    // InternalStubbrLang.g:17247:4: enumLiteral_0= 'jaxrs-resteasy'
                    {
                    enumLiteral_0=(Token)match(input,291,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getRestLanguageAccess().getRESTEASY_SERVEREnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getRestLanguageAccess().getRESTEASY_SERVEREnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalStubbrLang.g:17254:3: (enumLiteral_1= 'jaxrs-spec' )
                    {
                    // InternalStubbrLang.g:17254:3: (enumLiteral_1= 'jaxrs-spec' )
                    // InternalStubbrLang.g:17255:4: enumLiteral_1= 'jaxrs-spec'
                    {
                    enumLiteral_1=(Token)match(input,292,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getRestLanguageAccess().getJAXRS_SERVEREnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getRestLanguageAccess().getJAXRS_SERVEREnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalStubbrLang.g:17262:3: (enumLiteral_2= 'lumen' )
                    {
                    // InternalStubbrLang.g:17262:3: (enumLiteral_2= 'lumen' )
                    // InternalStubbrLang.g:17263:4: enumLiteral_2= 'lumen'
                    {
                    enumLiteral_2=(Token)match(input,293,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getRestLanguageAccess().getPHP_SERVEREnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_2, grammarAccess.getRestLanguageAccess().getPHP_SERVEREnumLiteralDeclaration_2());
                      			
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalStubbrLang.g:17270:3: (enumLiteral_3= 'java' )
                    {
                    // InternalStubbrLang.g:17270:3: (enumLiteral_3= 'java' )
                    // InternalStubbrLang.g:17271:4: enumLiteral_3= 'java'
                    {
                    enumLiteral_3=(Token)match(input,63,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getRestLanguageAccess().getJAVA_CLIENTEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_3, grammarAccess.getRestLanguageAccess().getJAVA_CLIENTEnumLiteralDeclaration_3());
                      			
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalStubbrLang.g:17278:3: (enumLiteral_4= 'android' )
                    {
                    // InternalStubbrLang.g:17278:3: (enumLiteral_4= 'android' )
                    // InternalStubbrLang.g:17279:4: enumLiteral_4= 'android'
                    {
                    enumLiteral_4=(Token)match(input,294,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getRestLanguageAccess().getANDROID_CLIENTEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_4, grammarAccess.getRestLanguageAccess().getANDROID_CLIENTEnumLiteralDeclaration_4());
                      			
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalStubbrLang.g:17286:3: (enumLiteral_5= 'swift' )
                    {
                    // InternalStubbrLang.g:17286:3: (enumLiteral_5= 'swift' )
                    // InternalStubbrLang.g:17287:4: enumLiteral_5= 'swift'
                    {
                    enumLiteral_5=(Token)match(input,295,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getRestLanguageAccess().getIOS_CLIENTEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_5, grammarAccess.getRestLanguageAccess().getIOS_CLIENTEnumLiteralDeclaration_5());
                      			
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalStubbrLang.g:17294:3: (enumLiteral_6= 'php' )
                    {
                    // InternalStubbrLang.g:17294:3: (enumLiteral_6= 'php' )
                    // InternalStubbrLang.g:17295:4: enumLiteral_6= 'php'
                    {
                    enumLiteral_6=(Token)match(input,296,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getRestLanguageAccess().getPHP_CLIENTEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_6, grammarAccess.getRestLanguageAccess().getPHP_CLIENTEnumLiteralDeclaration_6());
                      			
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalStubbrLang.g:17302:3: (enumLiteral_7= 'html2' )
                    {
                    // InternalStubbrLang.g:17302:3: (enumLiteral_7= 'html2' )
                    // InternalStubbrLang.g:17303:4: enumLiteral_7= 'html2'
                    {
                    enumLiteral_7=(Token)match(input,297,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getRestLanguageAccess().getHTML2_CLIENTEnumLiteralDeclaration_7().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_7, grammarAccess.getRestLanguageAccess().getHTML2_CLIENTEnumLiteralDeclaration_7());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRestLanguage"


    // $ANTLR start "ruleBehaviorAction"
    // InternalStubbrLang.g:17313:1: ruleBehaviorAction returns [Enumerator current=null] : ( (enumLiteral_0= 'opens' ) | (enumLiteral_1= 'enters' ) | (enumLiteral_2= 'enables' ) | (enumLiteral_3= 'clicks' ) | (enumLiteral_4= 'selects' ) | (enumLiteral_5= 'focuses' ) | (enumLiteral_6= 'gets enabled' ) | (enumLiteral_7= 'gets klicked' ) | (enumLiteral_8= 'gets selected' ) | (enumLiteral_9= 'is focused' ) | (enumLiteral_10= 'be visible' ) | (enumLiteral_11= 'be opened' ) ) ;
    public final Enumerator ruleBehaviorAction() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;
        Token enumLiteral_3=null;
        Token enumLiteral_4=null;
        Token enumLiteral_5=null;
        Token enumLiteral_6=null;
        Token enumLiteral_7=null;
        Token enumLiteral_8=null;
        Token enumLiteral_9=null;
        Token enumLiteral_10=null;
        Token enumLiteral_11=null;


        	enterRule();

        try {
            // InternalStubbrLang.g:17319:2: ( ( (enumLiteral_0= 'opens' ) | (enumLiteral_1= 'enters' ) | (enumLiteral_2= 'enables' ) | (enumLiteral_3= 'clicks' ) | (enumLiteral_4= 'selects' ) | (enumLiteral_5= 'focuses' ) | (enumLiteral_6= 'gets enabled' ) | (enumLiteral_7= 'gets klicked' ) | (enumLiteral_8= 'gets selected' ) | (enumLiteral_9= 'is focused' ) | (enumLiteral_10= 'be visible' ) | (enumLiteral_11= 'be opened' ) ) )
            // InternalStubbrLang.g:17320:2: ( (enumLiteral_0= 'opens' ) | (enumLiteral_1= 'enters' ) | (enumLiteral_2= 'enables' ) | (enumLiteral_3= 'clicks' ) | (enumLiteral_4= 'selects' ) | (enumLiteral_5= 'focuses' ) | (enumLiteral_6= 'gets enabled' ) | (enumLiteral_7= 'gets klicked' ) | (enumLiteral_8= 'gets selected' ) | (enumLiteral_9= 'is focused' ) | (enumLiteral_10= 'be visible' ) | (enumLiteral_11= 'be opened' ) )
            {
            // InternalStubbrLang.g:17320:2: ( (enumLiteral_0= 'opens' ) | (enumLiteral_1= 'enters' ) | (enumLiteral_2= 'enables' ) | (enumLiteral_3= 'clicks' ) | (enumLiteral_4= 'selects' ) | (enumLiteral_5= 'focuses' ) | (enumLiteral_6= 'gets enabled' ) | (enumLiteral_7= 'gets klicked' ) | (enumLiteral_8= 'gets selected' ) | (enumLiteral_9= 'is focused' ) | (enumLiteral_10= 'be visible' ) | (enumLiteral_11= 'be opened' ) )
            int alt413=12;
            switch ( input.LA(1) ) {
            case 298:
                {
                alt413=1;
                }
                break;
            case 299:
                {
                alt413=2;
                }
                break;
            case 300:
                {
                alt413=3;
                }
                break;
            case 301:
                {
                alt413=4;
                }
                break;
            case 302:
                {
                alt413=5;
                }
                break;
            case 303:
                {
                alt413=6;
                }
                break;
            case 304:
                {
                alt413=7;
                }
                break;
            case 305:
                {
                alt413=8;
                }
                break;
            case 306:
                {
                alt413=9;
                }
                break;
            case 307:
                {
                alt413=10;
                }
                break;
            case 308:
                {
                alt413=11;
                }
                break;
            case 309:
                {
                alt413=12;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 413, 0, input);

                throw nvae;
            }

            switch (alt413) {
                case 1 :
                    // InternalStubbrLang.g:17321:3: (enumLiteral_0= 'opens' )
                    {
                    // InternalStubbrLang.g:17321:3: (enumLiteral_0= 'opens' )
                    // InternalStubbrLang.g:17322:4: enumLiteral_0= 'opens'
                    {
                    enumLiteral_0=(Token)match(input,298,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getBehaviorActionAccess().getOPENSEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getBehaviorActionAccess().getOPENSEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalStubbrLang.g:17329:3: (enumLiteral_1= 'enters' )
                    {
                    // InternalStubbrLang.g:17329:3: (enumLiteral_1= 'enters' )
                    // InternalStubbrLang.g:17330:4: enumLiteral_1= 'enters'
                    {
                    enumLiteral_1=(Token)match(input,299,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getBehaviorActionAccess().getENTERSEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getBehaviorActionAccess().getENTERSEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalStubbrLang.g:17337:3: (enumLiteral_2= 'enables' )
                    {
                    // InternalStubbrLang.g:17337:3: (enumLiteral_2= 'enables' )
                    // InternalStubbrLang.g:17338:4: enumLiteral_2= 'enables'
                    {
                    enumLiteral_2=(Token)match(input,300,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getBehaviorActionAccess().getENABLEDEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_2, grammarAccess.getBehaviorActionAccess().getENABLEDEnumLiteralDeclaration_2());
                      			
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalStubbrLang.g:17345:3: (enumLiteral_3= 'clicks' )
                    {
                    // InternalStubbrLang.g:17345:3: (enumLiteral_3= 'clicks' )
                    // InternalStubbrLang.g:17346:4: enumLiteral_3= 'clicks'
                    {
                    enumLiteral_3=(Token)match(input,301,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getBehaviorActionAccess().getCLICKSEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_3, grammarAccess.getBehaviorActionAccess().getCLICKSEnumLiteralDeclaration_3());
                      			
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalStubbrLang.g:17353:3: (enumLiteral_4= 'selects' )
                    {
                    // InternalStubbrLang.g:17353:3: (enumLiteral_4= 'selects' )
                    // InternalStubbrLang.g:17354:4: enumLiteral_4= 'selects'
                    {
                    enumLiteral_4=(Token)match(input,302,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getBehaviorActionAccess().getSELECTSEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_4, grammarAccess.getBehaviorActionAccess().getSELECTSEnumLiteralDeclaration_4());
                      			
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalStubbrLang.g:17361:3: (enumLiteral_5= 'focuses' )
                    {
                    // InternalStubbrLang.g:17361:3: (enumLiteral_5= 'focuses' )
                    // InternalStubbrLang.g:17362:4: enumLiteral_5= 'focuses'
                    {
                    enumLiteral_5=(Token)match(input,303,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getBehaviorActionAccess().getFOCUSESEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_5, grammarAccess.getBehaviorActionAccess().getFOCUSESEnumLiteralDeclaration_5());
                      			
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalStubbrLang.g:17369:3: (enumLiteral_6= 'gets enabled' )
                    {
                    // InternalStubbrLang.g:17369:3: (enumLiteral_6= 'gets enabled' )
                    // InternalStubbrLang.g:17370:4: enumLiteral_6= 'gets enabled'
                    {
                    enumLiteral_6=(Token)match(input,304,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getBehaviorActionAccess().getGETS_ENABLEDEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_6, grammarAccess.getBehaviorActionAccess().getGETS_ENABLEDEnumLiteralDeclaration_6());
                      			
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalStubbrLang.g:17377:3: (enumLiteral_7= 'gets klicked' )
                    {
                    // InternalStubbrLang.g:17377:3: (enumLiteral_7= 'gets klicked' )
                    // InternalStubbrLang.g:17378:4: enumLiteral_7= 'gets klicked'
                    {
                    enumLiteral_7=(Token)match(input,305,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getBehaviorActionAccess().getGETS_CLICKEDEnumLiteralDeclaration_7().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_7, grammarAccess.getBehaviorActionAccess().getGETS_CLICKEDEnumLiteralDeclaration_7());
                      			
                    }

                    }


                    }
                    break;
                case 9 :
                    // InternalStubbrLang.g:17385:3: (enumLiteral_8= 'gets selected' )
                    {
                    // InternalStubbrLang.g:17385:3: (enumLiteral_8= 'gets selected' )
                    // InternalStubbrLang.g:17386:4: enumLiteral_8= 'gets selected'
                    {
                    enumLiteral_8=(Token)match(input,306,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getBehaviorActionAccess().getGETS_SELECTEDEnumLiteralDeclaration_8().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_8, grammarAccess.getBehaviorActionAccess().getGETS_SELECTEDEnumLiteralDeclaration_8());
                      			
                    }

                    }


                    }
                    break;
                case 10 :
                    // InternalStubbrLang.g:17393:3: (enumLiteral_9= 'is focused' )
                    {
                    // InternalStubbrLang.g:17393:3: (enumLiteral_9= 'is focused' )
                    // InternalStubbrLang.g:17394:4: enumLiteral_9= 'is focused'
                    {
                    enumLiteral_9=(Token)match(input,307,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getBehaviorActionAccess().getIS_FOCUSEDEnumLiteralDeclaration_9().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_9, grammarAccess.getBehaviorActionAccess().getIS_FOCUSEDEnumLiteralDeclaration_9());
                      			
                    }

                    }


                    }
                    break;
                case 11 :
                    // InternalStubbrLang.g:17401:3: (enumLiteral_10= 'be visible' )
                    {
                    // InternalStubbrLang.g:17401:3: (enumLiteral_10= 'be visible' )
                    // InternalStubbrLang.g:17402:4: enumLiteral_10= 'be visible'
                    {
                    enumLiteral_10=(Token)match(input,308,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getBehaviorActionAccess().getBE_VISIBLEEnumLiteralDeclaration_10().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_10, grammarAccess.getBehaviorActionAccess().getBE_VISIBLEEnumLiteralDeclaration_10());
                      			
                    }

                    }


                    }
                    break;
                case 12 :
                    // InternalStubbrLang.g:17409:3: (enumLiteral_11= 'be opened' )
                    {
                    // InternalStubbrLang.g:17409:3: (enumLiteral_11= 'be opened' )
                    // InternalStubbrLang.g:17410:4: enumLiteral_11= 'be opened'
                    {
                    enumLiteral_11=(Token)match(input,309,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getBehaviorActionAccess().getBE_OPENEDEnumLiteralDeclaration_11().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_11, grammarAccess.getBehaviorActionAccess().getBE_OPENEDEnumLiteralDeclaration_11());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBehaviorAction"

    // $ANTLR start synpred1_InternalStubbrLang
    public final void synpred1_InternalStubbrLang_fragment() throws RecognitionException {   
        // InternalStubbrLang.g:10345:6: ( ( () ( ( ruleOpMultiAssign ) ) ) )
        // InternalStubbrLang.g:10345:7: ( () ( ( ruleOpMultiAssign ) ) )
        {
        // InternalStubbrLang.g:10345:7: ( () ( ( ruleOpMultiAssign ) ) )
        // InternalStubbrLang.g:10346:7: () ( ( ruleOpMultiAssign ) )
        {
        // InternalStubbrLang.g:10346:7: ()
        // InternalStubbrLang.g:10347:7: 
        {
        }

        // InternalStubbrLang.g:10348:7: ( ( ruleOpMultiAssign ) )
        // InternalStubbrLang.g:10349:8: ( ruleOpMultiAssign )
        {
        // InternalStubbrLang.g:10349:8: ( ruleOpMultiAssign )
        // InternalStubbrLang.g:10350:9: ruleOpMultiAssign
        {
        pushFollow(FOLLOW_2);
        ruleOpMultiAssign();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred1_InternalStubbrLang

    // $ANTLR start synpred2_InternalStubbrLang
    public final void synpred2_InternalStubbrLang_fragment() throws RecognitionException {   
        // InternalStubbrLang.g:10539:5: ( ( () ( ( ruleOpOr ) ) ) )
        // InternalStubbrLang.g:10539:6: ( () ( ( ruleOpOr ) ) )
        {
        // InternalStubbrLang.g:10539:6: ( () ( ( ruleOpOr ) ) )
        // InternalStubbrLang.g:10540:6: () ( ( ruleOpOr ) )
        {
        // InternalStubbrLang.g:10540:6: ()
        // InternalStubbrLang.g:10541:6: 
        {
        }

        // InternalStubbrLang.g:10542:6: ( ( ruleOpOr ) )
        // InternalStubbrLang.g:10543:7: ( ruleOpOr )
        {
        // InternalStubbrLang.g:10543:7: ( ruleOpOr )
        // InternalStubbrLang.g:10544:8: ruleOpOr
        {
        pushFollow(FOLLOW_2);
        ruleOpOr();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred2_InternalStubbrLang

    // $ANTLR start synpred3_InternalStubbrLang
    public final void synpred3_InternalStubbrLang_fragment() throws RecognitionException {   
        // InternalStubbrLang.g:10646:5: ( ( () ( ( ruleOpAnd ) ) ) )
        // InternalStubbrLang.g:10646:6: ( () ( ( ruleOpAnd ) ) )
        {
        // InternalStubbrLang.g:10646:6: ( () ( ( ruleOpAnd ) ) )
        // InternalStubbrLang.g:10647:6: () ( ( ruleOpAnd ) )
        {
        // InternalStubbrLang.g:10647:6: ()
        // InternalStubbrLang.g:10648:6: 
        {
        }

        // InternalStubbrLang.g:10649:6: ( ( ruleOpAnd ) )
        // InternalStubbrLang.g:10650:7: ( ruleOpAnd )
        {
        // InternalStubbrLang.g:10650:7: ( ruleOpAnd )
        // InternalStubbrLang.g:10651:8: ruleOpAnd
        {
        pushFollow(FOLLOW_2);
        ruleOpAnd();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred3_InternalStubbrLang

    // $ANTLR start synpred4_InternalStubbrLang
    public final void synpred4_InternalStubbrLang_fragment() throws RecognitionException {   
        // InternalStubbrLang.g:10753:5: ( ( () ( ( ruleOpEquality ) ) ) )
        // InternalStubbrLang.g:10753:6: ( () ( ( ruleOpEquality ) ) )
        {
        // InternalStubbrLang.g:10753:6: ( () ( ( ruleOpEquality ) ) )
        // InternalStubbrLang.g:10754:6: () ( ( ruleOpEquality ) )
        {
        // InternalStubbrLang.g:10754:6: ()
        // InternalStubbrLang.g:10755:6: 
        {
        }

        // InternalStubbrLang.g:10756:6: ( ( ruleOpEquality ) )
        // InternalStubbrLang.g:10757:7: ( ruleOpEquality )
        {
        // InternalStubbrLang.g:10757:7: ( ruleOpEquality )
        // InternalStubbrLang.g:10758:8: ruleOpEquality
        {
        pushFollow(FOLLOW_2);
        ruleOpEquality();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred4_InternalStubbrLang

    // $ANTLR start synpred5_InternalStubbrLang
    public final void synpred5_InternalStubbrLang_fragment() throws RecognitionException {   
        // InternalStubbrLang.g:10881:6: ( ( () 'instanceof' ) )
        // InternalStubbrLang.g:10881:7: ( () 'instanceof' )
        {
        // InternalStubbrLang.g:10881:7: ( () 'instanceof' )
        // InternalStubbrLang.g:10882:7: () 'instanceof'
        {
        // InternalStubbrLang.g:10882:7: ()
        // InternalStubbrLang.g:10883:7: 
        {
        }

        match(input,171,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred5_InternalStubbrLang

    // $ANTLR start synpred6_InternalStubbrLang
    public final void synpred6_InternalStubbrLang_fragment() throws RecognitionException {   
        // InternalStubbrLang.g:10924:6: ( ( () ( ( ruleOpCompare ) ) ) )
        // InternalStubbrLang.g:10924:7: ( () ( ( ruleOpCompare ) ) )
        {
        // InternalStubbrLang.g:10924:7: ( () ( ( ruleOpCompare ) ) )
        // InternalStubbrLang.g:10925:7: () ( ( ruleOpCompare ) )
        {
        // InternalStubbrLang.g:10925:7: ()
        // InternalStubbrLang.g:10926:7: 
        {
        }

        // InternalStubbrLang.g:10927:7: ( ( ruleOpCompare ) )
        // InternalStubbrLang.g:10928:8: ( ruleOpCompare )
        {
        // InternalStubbrLang.g:10928:8: ( ruleOpCompare )
        // InternalStubbrLang.g:10929:9: ruleOpCompare
        {
        pushFollow(FOLLOW_2);
        ruleOpCompare();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred6_InternalStubbrLang

    // $ANTLR start synpred7_InternalStubbrLang
    public final void synpred7_InternalStubbrLang_fragment() throws RecognitionException {   
        // InternalStubbrLang.g:11059:5: ( ( () ( ( ruleOpOther ) ) ) )
        // InternalStubbrLang.g:11059:6: ( () ( ( ruleOpOther ) ) )
        {
        // InternalStubbrLang.g:11059:6: ( () ( ( ruleOpOther ) ) )
        // InternalStubbrLang.g:11060:6: () ( ( ruleOpOther ) )
        {
        // InternalStubbrLang.g:11060:6: ()
        // InternalStubbrLang.g:11061:6: 
        {
        }

        // InternalStubbrLang.g:11062:6: ( ( ruleOpOther ) )
        // InternalStubbrLang.g:11063:7: ( ruleOpOther )
        {
        // InternalStubbrLang.g:11063:7: ( ruleOpOther )
        // InternalStubbrLang.g:11064:8: ruleOpOther
        {
        pushFollow(FOLLOW_2);
        ruleOpOther();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred7_InternalStubbrLang

    // $ANTLR start synpred8_InternalStubbrLang
    public final void synpred8_InternalStubbrLang_fragment() throws RecognitionException {   
        // InternalStubbrLang.g:11179:6: ( ( '>' '>' ) )
        // InternalStubbrLang.g:11179:7: ( '>' '>' )
        {
        // InternalStubbrLang.g:11179:7: ( '>' '>' )
        // InternalStubbrLang.g:11180:7: '>' '>'
        {
        match(input,163,FOLLOW_229); if (state.failed) return ;
        match(input,163,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred8_InternalStubbrLang

    // $ANTLR start synpred9_InternalStubbrLang
    public final void synpred9_InternalStubbrLang_fragment() throws RecognitionException {   
        // InternalStubbrLang.g:11214:6: ( ( '<' '<' ) )
        // InternalStubbrLang.g:11214:7: ( '<' '<' )
        {
        // InternalStubbrLang.g:11214:7: ( '<' '<' )
        // InternalStubbrLang.g:11215:7: '<' '<'
        {
        match(input,162,FOLLOW_220); if (state.failed) return ;
        match(input,162,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred9_InternalStubbrLang

    // $ANTLR start synpred10_InternalStubbrLang
    public final void synpred10_InternalStubbrLang_fragment() throws RecognitionException {   
        // InternalStubbrLang.g:11287:5: ( ( () ( ( ruleOpAdd ) ) ) )
        // InternalStubbrLang.g:11287:6: ( () ( ( ruleOpAdd ) ) )
        {
        // InternalStubbrLang.g:11287:6: ( () ( ( ruleOpAdd ) ) )
        // InternalStubbrLang.g:11288:6: () ( ( ruleOpAdd ) )
        {
        // InternalStubbrLang.g:11288:6: ()
        // InternalStubbrLang.g:11289:6: 
        {
        }

        // InternalStubbrLang.g:11290:6: ( ( ruleOpAdd ) )
        // InternalStubbrLang.g:11291:7: ( ruleOpAdd )
        {
        // InternalStubbrLang.g:11291:7: ( ruleOpAdd )
        // InternalStubbrLang.g:11292:8: ruleOpAdd
        {
        pushFollow(FOLLOW_2);
        ruleOpAdd();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred10_InternalStubbrLang

    // $ANTLR start synpred11_InternalStubbrLang
    public final void synpred11_InternalStubbrLang_fragment() throws RecognitionException {   
        // InternalStubbrLang.g:11402:5: ( ( () ( ( ruleOpMulti ) ) ) )
        // InternalStubbrLang.g:11402:6: ( () ( ( ruleOpMulti ) ) )
        {
        // InternalStubbrLang.g:11402:6: ( () ( ( ruleOpMulti ) ) )
        // InternalStubbrLang.g:11403:6: () ( ( ruleOpMulti ) )
        {
        // InternalStubbrLang.g:11403:6: ()
        // InternalStubbrLang.g:11404:6: 
        {
        }

        // InternalStubbrLang.g:11405:6: ( ( ruleOpMulti ) )
        // InternalStubbrLang.g:11406:7: ( ruleOpMulti )
        {
        // InternalStubbrLang.g:11406:7: ( ruleOpMulti )
        // InternalStubbrLang.g:11407:8: ruleOpMulti
        {
        pushFollow(FOLLOW_2);
        ruleOpMulti();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred11_InternalStubbrLang

    // $ANTLR start synpred12_InternalStubbrLang
    public final void synpred12_InternalStubbrLang_fragment() throws RecognitionException {   
        // InternalStubbrLang.g:11637:5: ( ( () 'as' ) )
        // InternalStubbrLang.g:11637:6: ( () 'as' )
        {
        // InternalStubbrLang.g:11637:6: ( () 'as' )
        // InternalStubbrLang.g:11638:6: () 'as'
        {
        // InternalStubbrLang.g:11638:6: ()
        // InternalStubbrLang.g:11639:6: 
        {
        }

        match(input,185,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred12_InternalStubbrLang

    // $ANTLR start synpred13_InternalStubbrLang
    public final void synpred13_InternalStubbrLang_fragment() throws RecognitionException {   
        // InternalStubbrLang.g:11705:4: ( ( () ( ( ruleOpPostfix ) ) ) )
        // InternalStubbrLang.g:11705:5: ( () ( ( ruleOpPostfix ) ) )
        {
        // InternalStubbrLang.g:11705:5: ( () ( ( ruleOpPostfix ) ) )
        // InternalStubbrLang.g:11706:5: () ( ( ruleOpPostfix ) )
        {
        // InternalStubbrLang.g:11706:5: ()
        // InternalStubbrLang.g:11707:5: 
        {
        }

        // InternalStubbrLang.g:11708:5: ( ( ruleOpPostfix ) )
        // InternalStubbrLang.g:11709:6: ( ruleOpPostfix )
        {
        // InternalStubbrLang.g:11709:6: ( ruleOpPostfix )
        // InternalStubbrLang.g:11710:7: ruleOpPostfix
        {
        pushFollow(FOLLOW_2);
        ruleOpPostfix();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred13_InternalStubbrLang

    // $ANTLR start synpred14_InternalStubbrLang
    public final void synpred14_InternalStubbrLang_fragment() throws RecognitionException {   
        // InternalStubbrLang.g:11801:6: ( ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )
        // InternalStubbrLang.g:11801:7: ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign )
        {
        // InternalStubbrLang.g:11801:7: ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign )
        // InternalStubbrLang.g:11802:7: () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign
        {
        // InternalStubbrLang.g:11802:7: ()
        // InternalStubbrLang.g:11803:7: 
        {
        }

        // InternalStubbrLang.g:11804:7: ( '.' | ( ( '::' ) ) )
        int alt414=2;
        int LA414_0 = input.LA(1);

        if ( (LA414_0==188) ) {
            alt414=1;
        }
        else if ( (LA414_0==189) ) {
            alt414=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 414, 0, input);

            throw nvae;
        }
        switch (alt414) {
            case 1 :
                // InternalStubbrLang.g:11805:8: '.'
                {
                match(input,188,FOLLOW_236); if (state.failed) return ;

                }
                break;
            case 2 :
                // InternalStubbrLang.g:11807:8: ( ( '::' ) )
                {
                // InternalStubbrLang.g:11807:8: ( ( '::' ) )
                // InternalStubbrLang.g:11808:9: ( '::' )
                {
                // InternalStubbrLang.g:11808:9: ( '::' )
                // InternalStubbrLang.g:11809:10: '::'
                {
                match(input,189,FOLLOW_236); if (state.failed) return ;

                }


                }


                }
                break;

        }

        // InternalStubbrLang.g:11813:7: ( ( ruleFeatureCallID ) )
        // InternalStubbrLang.g:11814:8: ( ruleFeatureCallID )
        {
        // InternalStubbrLang.g:11814:8: ( ruleFeatureCallID )
        // InternalStubbrLang.g:11815:9: ruleFeatureCallID
        {
        pushFollow(FOLLOW_217);
        ruleFeatureCallID();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        pushFollow(FOLLOW_2);
        ruleOpSingleAssign();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred14_InternalStubbrLang

    // $ANTLR start synpred15_InternalStubbrLang
    public final void synpred15_InternalStubbrLang_fragment() throws RecognitionException {   
        // InternalStubbrLang.g:11898:6: ( ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) ) )
        // InternalStubbrLang.g:11898:7: ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) )
        {
        // InternalStubbrLang.g:11898:7: ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) )
        // InternalStubbrLang.g:11899:7: () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) )
        {
        // InternalStubbrLang.g:11899:7: ()
        // InternalStubbrLang.g:11900:7: 
        {
        }

        // InternalStubbrLang.g:11901:7: ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) )
        int alt415=3;
        switch ( input.LA(1) ) {
        case 188:
            {
            alt415=1;
            }
            break;
        case 190:
            {
            alt415=2;
            }
            break;
        case 189:
            {
            alt415=3;
            }
            break;
        default:
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 415, 0, input);

            throw nvae;
        }

        switch (alt415) {
            case 1 :
                // InternalStubbrLang.g:11902:8: '.'
                {
                match(input,188,FOLLOW_2); if (state.failed) return ;

                }
                break;
            case 2 :
                // InternalStubbrLang.g:11904:8: ( ( '?.' ) )
                {
                // InternalStubbrLang.g:11904:8: ( ( '?.' ) )
                // InternalStubbrLang.g:11905:9: ( '?.' )
                {
                // InternalStubbrLang.g:11905:9: ( '?.' )
                // InternalStubbrLang.g:11906:10: '?.'
                {
                match(input,190,FOLLOW_2); if (state.failed) return ;

                }


                }


                }
                break;
            case 3 :
                // InternalStubbrLang.g:11910:8: ( ( '::' ) )
                {
                // InternalStubbrLang.g:11910:8: ( ( '::' ) )
                // InternalStubbrLang.g:11911:9: ( '::' )
                {
                // InternalStubbrLang.g:11911:9: ( '::' )
                // InternalStubbrLang.g:11912:10: '::'
                {
                match(input,189,FOLLOW_2); if (state.failed) return ;

                }


                }


                }
                break;

        }


        }


        }
    }
    // $ANTLR end synpred15_InternalStubbrLang

    // $ANTLR start synpred16_InternalStubbrLang
    public final void synpred16_InternalStubbrLang_fragment() throws RecognitionException {   
        // InternalStubbrLang.g:12036:7: ( ( '(' ) )
        // InternalStubbrLang.g:12036:8: ( '(' )
        {
        // InternalStubbrLang.g:12036:8: ( '(' )
        // InternalStubbrLang.g:12037:8: '('
        {
        match(input,191,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred16_InternalStubbrLang

    // $ANTLR start synpred17_InternalStubbrLang
    public final void synpred17_InternalStubbrLang_fragment() throws RecognitionException {   
        // InternalStubbrLang.g:12055:8: ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )
        // InternalStubbrLang.g:12055:9: ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) )
        {
        // InternalStubbrLang.g:12055:9: ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) )
        // InternalStubbrLang.g:12056:9: () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) )
        {
        // InternalStubbrLang.g:12056:9: ()
        // InternalStubbrLang.g:12057:9: 
        {
        }

        // InternalStubbrLang.g:12058:9: ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )?
        int alt417=2;
        int LA417_0 = input.LA(1);

        if ( (LA417_0==RULE_ID||LA417_0==175||LA417_0==191) ) {
            alt417=1;
        }
        switch (alt417) {
            case 1 :
                // InternalStubbrLang.g:12059:10: ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )*
                {
                // InternalStubbrLang.g:12059:10: ( ( ruleJvmFormalParameter ) )
                // InternalStubbrLang.g:12060:11: ( ruleJvmFormalParameter )
                {
                // InternalStubbrLang.g:12060:11: ( ruleJvmFormalParameter )
                // InternalStubbrLang.g:12061:12: ruleJvmFormalParameter
                {
                pushFollow(FOLLOW_250);
                ruleJvmFormalParameter();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // InternalStubbrLang.g:12064:10: ( ',' ( ( ruleJvmFormalParameter ) ) )*
                loop416:
                do {
                    int alt416=2;
                    int LA416_0 = input.LA(1);

                    if ( (LA416_0==25) ) {
                        alt416=1;
                    }


                    switch (alt416) {
                	case 1 :
                	    // InternalStubbrLang.g:12065:11: ',' ( ( ruleJvmFormalParameter ) )
                	    {
                	    match(input,25,FOLLOW_52); if (state.failed) return ;
                	    // InternalStubbrLang.g:12066:11: ( ( ruleJvmFormalParameter ) )
                	    // InternalStubbrLang.g:12067:12: ( ruleJvmFormalParameter )
                	    {
                	    // InternalStubbrLang.g:12067:12: ( ruleJvmFormalParameter )
                	    // InternalStubbrLang.g:12068:13: ruleJvmFormalParameter
                	    {
                	    pushFollow(FOLLOW_250);
                	    ruleJvmFormalParameter();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop416;
                    }
                } while (true);


                }
                break;

        }

        // InternalStubbrLang.g:12073:9: ( ( '|' ) )
        // InternalStubbrLang.g:12074:10: ( '|' )
        {
        // InternalStubbrLang.g:12074:10: ( '|' )
        // InternalStubbrLang.g:12075:11: '|'
        {
        match(input,196,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred17_InternalStubbrLang

    // $ANTLR start synpred18_InternalStubbrLang
    public final void synpred18_InternalStubbrLang_fragment() throws RecognitionException {   
        // InternalStubbrLang.g:12152:6: ( ( () '[' ) )
        // InternalStubbrLang.g:12152:7: ( () '[' )
        {
        // InternalStubbrLang.g:12152:7: ( () '[' )
        // InternalStubbrLang.g:12153:7: () '['
        {
        // InternalStubbrLang.g:12153:7: ()
        // InternalStubbrLang.g:12154:7: 
        {
        }

        match(input,194,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred18_InternalStubbrLang

    // $ANTLR start synpred19_InternalStubbrLang
    public final void synpred19_InternalStubbrLang_fragment() throws RecognitionException {   
        // InternalStubbrLang.g:12225:4: ( ( () 'synchronized' '(' ) )
        // InternalStubbrLang.g:12225:5: ( () 'synchronized' '(' )
        {
        // InternalStubbrLang.g:12225:5: ( () 'synchronized' '(' )
        // InternalStubbrLang.g:12226:5: () 'synchronized' '('
        {
        // InternalStubbrLang.g:12226:5: ()
        // InternalStubbrLang.g:12227:5: 
        {
        }

        match(input,220,FOLLOW_255); if (state.failed) return ;
        match(input,191,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred19_InternalStubbrLang

    // $ANTLR start synpred20_InternalStubbrLang
    public final void synpred20_InternalStubbrLang_fragment() throws RecognitionException {   
        // InternalStubbrLang.g:12270:4: ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )
        // InternalStubbrLang.g:12270:5: ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' )
        {
        // InternalStubbrLang.g:12270:5: ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' )
        // InternalStubbrLang.g:12271:5: () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':'
        {
        // InternalStubbrLang.g:12271:5: ()
        // InternalStubbrLang.g:12272:5: 
        {
        }

        match(input,100,FOLLOW_255); if (state.failed) return ;
        match(input,191,FOLLOW_52); if (state.failed) return ;
        // InternalStubbrLang.g:12275:5: ( ( ruleJvmFormalParameter ) )
        // InternalStubbrLang.g:12276:6: ( ruleJvmFormalParameter )
        {
        // InternalStubbrLang.g:12276:6: ( ruleJvmFormalParameter )
        // InternalStubbrLang.g:12277:7: ruleJvmFormalParameter
        {
        pushFollow(FOLLOW_258);
        ruleJvmFormalParameter();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        match(input,201,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred20_InternalStubbrLang

    // $ANTLR start synpred21_InternalStubbrLang
    public final void synpred21_InternalStubbrLang_fragment() throws RecognitionException {   
        // InternalStubbrLang.g:12384:4: ( ( () '[' ) )
        // InternalStubbrLang.g:12384:5: ( () '[' )
        {
        // InternalStubbrLang.g:12384:5: ( () '[' )
        // InternalStubbrLang.g:12385:5: () '['
        {
        // InternalStubbrLang.g:12385:5: ()
        // InternalStubbrLang.g:12386:5: 
        {
        }

        match(input,194,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred21_InternalStubbrLang

    // $ANTLR start synpred23_InternalStubbrLang
    public final void synpred23_InternalStubbrLang_fragment() throws RecognitionException {   
        // InternalStubbrLang.g:12689:4: ( ( ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )
        // InternalStubbrLang.g:12689:5: ( ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) )
        {
        // InternalStubbrLang.g:12689:5: ( ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) )
        // InternalStubbrLang.g:12690:5: ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) )
        {
        // InternalStubbrLang.g:12690:5: ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )?
        int alt419=2;
        int LA419_0 = input.LA(1);

        if ( (LA419_0==RULE_ID||LA419_0==175||LA419_0==191) ) {
            alt419=1;
        }
        switch (alt419) {
            case 1 :
                // InternalStubbrLang.g:12691:6: ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )*
                {
                // InternalStubbrLang.g:12691:6: ( ( ruleJvmFormalParameter ) )
                // InternalStubbrLang.g:12692:7: ( ruleJvmFormalParameter )
                {
                // InternalStubbrLang.g:12692:7: ( ruleJvmFormalParameter )
                // InternalStubbrLang.g:12693:8: ruleJvmFormalParameter
                {
                pushFollow(FOLLOW_250);
                ruleJvmFormalParameter();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // InternalStubbrLang.g:12696:6: ( ',' ( ( ruleJvmFormalParameter ) ) )*
                loop418:
                do {
                    int alt418=2;
                    int LA418_0 = input.LA(1);

                    if ( (LA418_0==25) ) {
                        alt418=1;
                    }


                    switch (alt418) {
                	case 1 :
                	    // InternalStubbrLang.g:12697:7: ',' ( ( ruleJvmFormalParameter ) )
                	    {
                	    match(input,25,FOLLOW_52); if (state.failed) return ;
                	    // InternalStubbrLang.g:12698:7: ( ( ruleJvmFormalParameter ) )
                	    // InternalStubbrLang.g:12699:8: ( ruleJvmFormalParameter )
                	    {
                	    // InternalStubbrLang.g:12699:8: ( ruleJvmFormalParameter )
                	    // InternalStubbrLang.g:12700:9: ruleJvmFormalParameter
                	    {
                	    pushFollow(FOLLOW_250);
                	    ruleJvmFormalParameter();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop418;
                    }
                } while (true);


                }
                break;

        }

        // InternalStubbrLang.g:12705:5: ( ( '|' ) )
        // InternalStubbrLang.g:12706:6: ( '|' )
        {
        // InternalStubbrLang.g:12706:6: ( '|' )
        // InternalStubbrLang.g:12707:7: '|'
        {
        match(input,196,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred23_InternalStubbrLang

    // $ANTLR start synpred25_InternalStubbrLang
    public final void synpred25_InternalStubbrLang_fragment() throws RecognitionException {   
        // InternalStubbrLang.g:13098:5: ( 'else' )
        // InternalStubbrLang.g:13098:6: 'else'
        {
        match(input,199,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred25_InternalStubbrLang

    // $ANTLR start synpred26_InternalStubbrLang
    public final void synpred26_InternalStubbrLang_fragment() throws RecognitionException {   
        // InternalStubbrLang.g:13157:6: ( ( '(' ( ( ruleJvmFormalParameter ) ) ':' ) )
        // InternalStubbrLang.g:13157:7: ( '(' ( ( ruleJvmFormalParameter ) ) ':' )
        {
        // InternalStubbrLang.g:13157:7: ( '(' ( ( ruleJvmFormalParameter ) ) ':' )
        // InternalStubbrLang.g:13158:7: '(' ( ( ruleJvmFormalParameter ) ) ':'
        {
        match(input,191,FOLLOW_52); if (state.failed) return ;
        // InternalStubbrLang.g:13159:7: ( ( ruleJvmFormalParameter ) )
        // InternalStubbrLang.g:13160:8: ( ruleJvmFormalParameter )
        {
        // InternalStubbrLang.g:13160:8: ( ruleJvmFormalParameter )
        // InternalStubbrLang.g:13161:9: ruleJvmFormalParameter
        {
        pushFollow(FOLLOW_258);
        ruleJvmFormalParameter();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        match(input,201,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred26_InternalStubbrLang

    // $ANTLR start synpred27_InternalStubbrLang
    public final void synpred27_InternalStubbrLang_fragment() throws RecognitionException {   
        // InternalStubbrLang.g:13224:6: ( ( ( ( ruleJvmFormalParameter ) ) ':' ) )
        // InternalStubbrLang.g:13224:7: ( ( ( ruleJvmFormalParameter ) ) ':' )
        {
        // InternalStubbrLang.g:13224:7: ( ( ( ruleJvmFormalParameter ) ) ':' )
        // InternalStubbrLang.g:13225:7: ( ( ruleJvmFormalParameter ) ) ':'
        {
        // InternalStubbrLang.g:13225:7: ( ( ruleJvmFormalParameter ) )
        // InternalStubbrLang.g:13226:8: ( ruleJvmFormalParameter )
        {
        // InternalStubbrLang.g:13226:8: ( ruleJvmFormalParameter )
        // InternalStubbrLang.g:13227:9: ruleJvmFormalParameter
        {
        pushFollow(FOLLOW_258);
        ruleJvmFormalParameter();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        match(input,201,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred27_InternalStubbrLang

    // $ANTLR start synpred29_InternalStubbrLang
    public final void synpred29_InternalStubbrLang_fragment() throws RecognitionException {   
        // InternalStubbrLang.g:14042:5: ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )
        // InternalStubbrLang.g:14042:6: ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) )
        {
        // InternalStubbrLang.g:14042:6: ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) )
        // InternalStubbrLang.g:14043:6: ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) )
        {
        // InternalStubbrLang.g:14043:6: ( ( ruleJvmTypeReference ) )
        // InternalStubbrLang.g:14044:7: ( ruleJvmTypeReference )
        {
        // InternalStubbrLang.g:14044:7: ( ruleJvmTypeReference )
        // InternalStubbrLang.g:14045:8: ruleJvmTypeReference
        {
        pushFollow(FOLLOW_3);
        ruleJvmTypeReference();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalStubbrLang.g:14048:6: ( ( ruleValidID ) )
        // InternalStubbrLang.g:14049:7: ( ruleValidID )
        {
        // InternalStubbrLang.g:14049:7: ( ruleValidID )
        // InternalStubbrLang.g:14050:8: ruleValidID
        {
        pushFollow(FOLLOW_2);
        ruleValidID();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred29_InternalStubbrLang

    // $ANTLR start synpred30_InternalStubbrLang
    public final void synpred30_InternalStubbrLang_fragment() throws RecognitionException {   
        // InternalStubbrLang.g:14354:5: ( ( '(' ) )
        // InternalStubbrLang.g:14354:6: ( '(' )
        {
        // InternalStubbrLang.g:14354:6: ( '(' )
        // InternalStubbrLang.g:14355:6: '('
        {
        match(input,191,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred30_InternalStubbrLang

    // $ANTLR start synpred31_InternalStubbrLang
    public final void synpred31_InternalStubbrLang_fragment() throws RecognitionException {   
        // InternalStubbrLang.g:14373:6: ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )
        // InternalStubbrLang.g:14373:7: ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) )
        {
        // InternalStubbrLang.g:14373:7: ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) )
        // InternalStubbrLang.g:14374:7: () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) )
        {
        // InternalStubbrLang.g:14374:7: ()
        // InternalStubbrLang.g:14375:7: 
        {
        }

        // InternalStubbrLang.g:14376:7: ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )?
        int alt423=2;
        int LA423_0 = input.LA(1);

        if ( (LA423_0==RULE_ID||LA423_0==175||LA423_0==191) ) {
            alt423=1;
        }
        switch (alt423) {
            case 1 :
                // InternalStubbrLang.g:14377:8: ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )*
                {
                // InternalStubbrLang.g:14377:8: ( ( ruleJvmFormalParameter ) )
                // InternalStubbrLang.g:14378:9: ( ruleJvmFormalParameter )
                {
                // InternalStubbrLang.g:14378:9: ( ruleJvmFormalParameter )
                // InternalStubbrLang.g:14379:10: ruleJvmFormalParameter
                {
                pushFollow(FOLLOW_250);
                ruleJvmFormalParameter();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // InternalStubbrLang.g:14382:8: ( ',' ( ( ruleJvmFormalParameter ) ) )*
                loop422:
                do {
                    int alt422=2;
                    int LA422_0 = input.LA(1);

                    if ( (LA422_0==25) ) {
                        alt422=1;
                    }


                    switch (alt422) {
                	case 1 :
                	    // InternalStubbrLang.g:14383:9: ',' ( ( ruleJvmFormalParameter ) )
                	    {
                	    match(input,25,FOLLOW_52); if (state.failed) return ;
                	    // InternalStubbrLang.g:14384:9: ( ( ruleJvmFormalParameter ) )
                	    // InternalStubbrLang.g:14385:10: ( ruleJvmFormalParameter )
                	    {
                	    // InternalStubbrLang.g:14385:10: ( ruleJvmFormalParameter )
                	    // InternalStubbrLang.g:14386:11: ruleJvmFormalParameter
                	    {
                	    pushFollow(FOLLOW_250);
                	    ruleJvmFormalParameter();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop422;
                    }
                } while (true);


                }
                break;

        }

        // InternalStubbrLang.g:14391:7: ( ( '|' ) )
        // InternalStubbrLang.g:14392:8: ( '|' )
        {
        // InternalStubbrLang.g:14392:8: ( '|' )
        // InternalStubbrLang.g:14393:9: '|'
        {
        match(input,196,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred31_InternalStubbrLang

    // $ANTLR start synpred32_InternalStubbrLang
    public final void synpred32_InternalStubbrLang_fragment() throws RecognitionException {   
        // InternalStubbrLang.g:14470:4: ( ( () '[' ) )
        // InternalStubbrLang.g:14470:5: ( () '[' )
        {
        // InternalStubbrLang.g:14470:5: ( () '[' )
        // InternalStubbrLang.g:14471:5: () '['
        {
        // InternalStubbrLang.g:14471:5: ()
        // InternalStubbrLang.g:14472:5: 
        {
        }

        match(input,194,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred32_InternalStubbrLang

    // $ANTLR start synpred33_InternalStubbrLang
    public final void synpred33_InternalStubbrLang_fragment() throws RecognitionException {   
        // InternalStubbrLang.g:14630:5: ( '<' )
        // InternalStubbrLang.g:14630:6: '<'
        {
        match(input,162,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred33_InternalStubbrLang

    // $ANTLR start synpred34_InternalStubbrLang
    public final void synpred34_InternalStubbrLang_fragment() throws RecognitionException {   
        // InternalStubbrLang.g:14687:5: ( ( '(' ) )
        // InternalStubbrLang.g:14687:6: ( '(' )
        {
        // InternalStubbrLang.g:14687:6: ( '(' )
        // InternalStubbrLang.g:14688:6: '('
        {
        match(input,191,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred34_InternalStubbrLang

    // $ANTLR start synpred35_InternalStubbrLang
    public final void synpred35_InternalStubbrLang_fragment() throws RecognitionException {   
        // InternalStubbrLang.g:14706:6: ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )
        // InternalStubbrLang.g:14706:7: ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) )
        {
        // InternalStubbrLang.g:14706:7: ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) )
        // InternalStubbrLang.g:14707:7: () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) )
        {
        // InternalStubbrLang.g:14707:7: ()
        // InternalStubbrLang.g:14708:7: 
        {
        }

        // InternalStubbrLang.g:14709:7: ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )?
        int alt425=2;
        int LA425_0 = input.LA(1);

        if ( (LA425_0==RULE_ID||LA425_0==175||LA425_0==191) ) {
            alt425=1;
        }
        switch (alt425) {
            case 1 :
                // InternalStubbrLang.g:14710:8: ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )*
                {
                // InternalStubbrLang.g:14710:8: ( ( ruleJvmFormalParameter ) )
                // InternalStubbrLang.g:14711:9: ( ruleJvmFormalParameter )
                {
                // InternalStubbrLang.g:14711:9: ( ruleJvmFormalParameter )
                // InternalStubbrLang.g:14712:10: ruleJvmFormalParameter
                {
                pushFollow(FOLLOW_250);
                ruleJvmFormalParameter();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // InternalStubbrLang.g:14715:8: ( ',' ( ( ruleJvmFormalParameter ) ) )*
                loop424:
                do {
                    int alt424=2;
                    int LA424_0 = input.LA(1);

                    if ( (LA424_0==25) ) {
                        alt424=1;
                    }


                    switch (alt424) {
                	case 1 :
                	    // InternalStubbrLang.g:14716:9: ',' ( ( ruleJvmFormalParameter ) )
                	    {
                	    match(input,25,FOLLOW_52); if (state.failed) return ;
                	    // InternalStubbrLang.g:14717:9: ( ( ruleJvmFormalParameter ) )
                	    // InternalStubbrLang.g:14718:10: ( ruleJvmFormalParameter )
                	    {
                	    // InternalStubbrLang.g:14718:10: ( ruleJvmFormalParameter )
                	    // InternalStubbrLang.g:14719:11: ruleJvmFormalParameter
                	    {
                	    pushFollow(FOLLOW_250);
                	    ruleJvmFormalParameter();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop424;
                    }
                } while (true);


                }
                break;

        }

        // InternalStubbrLang.g:14724:7: ( ( '|' ) )
        // InternalStubbrLang.g:14725:8: ( '|' )
        {
        // InternalStubbrLang.g:14725:8: ( '|' )
        // InternalStubbrLang.g:14726:9: '|'
        {
        match(input,196,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred35_InternalStubbrLang

    // $ANTLR start synpred36_InternalStubbrLang
    public final void synpred36_InternalStubbrLang_fragment() throws RecognitionException {   
        // InternalStubbrLang.g:14803:4: ( ( () '[' ) )
        // InternalStubbrLang.g:14803:5: ( () '[' )
        {
        // InternalStubbrLang.g:14803:5: ( () '[' )
        // InternalStubbrLang.g:14804:5: () '['
        {
        // InternalStubbrLang.g:14804:5: ()
        // InternalStubbrLang.g:14805:5: 
        {
        }

        match(input,194,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred36_InternalStubbrLang

    // $ANTLR start synpred37_InternalStubbrLang
    public final void synpred37_InternalStubbrLang_fragment() throws RecognitionException {   
        // InternalStubbrLang.g:15146:4: ( 'extends' | 'static' | 'import' | 'extension' | '!' | '-' | '+' | 'new' | '{' | 'switch' | 'synchronized' | '<' | 'super' | '#' | '[' | 'false' | 'true' | 'null' | 'typeof' | 'if' | 'for' | 'while' | 'do' | 'throw' | 'return' | 'try' | '(' | RULE_ID | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_STRING )
        // InternalStubbrLang.g:
        {
        if ( (input.LA(1)>=RULE_STRING && input.LA(1)<=RULE_ID)||(input.LA(1)>=RULE_INT && input.LA(1)<=RULE_DECIMAL)||input.LA(1)==16||input.LA(1)==69||input.LA(1)==100||input.LA(1)==162||(input.LA(1)>=178 && input.LA(1)<=179)||input.LA(1)==184||input.LA(1)==191||(input.LA(1)>=193 && input.LA(1)<=194)||input.LA(1)==198||input.LA(1)==200||(input.LA(1)>=203 && input.LA(1)<=204)||(input.LA(1)>=207 && input.LA(1)<=218)||input.LA(1)==220 ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    // $ANTLR end synpred37_InternalStubbrLang

    // $ANTLR start synpred38_InternalStubbrLang
    public final void synpred38_InternalStubbrLang_fragment() throws RecognitionException {   
        // InternalStubbrLang.g:15217:6: ( 'catch' )
        // InternalStubbrLang.g:15217:7: 'catch'
        {
        match(input,221,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred38_InternalStubbrLang

    // $ANTLR start synpred39_InternalStubbrLang
    public final void synpred39_InternalStubbrLang_fragment() throws RecognitionException {   
        // InternalStubbrLang.g:15238:7: ( 'finally' )
        // InternalStubbrLang.g:15238:8: 'finally'
        {
        match(input,219,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred39_InternalStubbrLang

    // $ANTLR start synpred42_InternalStubbrLang
    public final void synpred42_InternalStubbrLang_fragment() throws RecognitionException {   
        // InternalStubbrLang.g:15482:5: ( '.' )
        // InternalStubbrLang.g:15482:6: '.'
        {
        match(input,188,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred42_InternalStubbrLang

    // $ANTLR start synpred43_InternalStubbrLang
    public final void synpred43_InternalStubbrLang_fragment() throws RecognitionException {   
        // InternalStubbrLang.g:15608:5: ( ( () ruleArrayBrackets ) )
        // InternalStubbrLang.g:15608:6: ( () ruleArrayBrackets )
        {
        // InternalStubbrLang.g:15608:6: ( () ruleArrayBrackets )
        // InternalStubbrLang.g:15609:6: () ruleArrayBrackets
        {
        // InternalStubbrLang.g:15609:6: ()
        // InternalStubbrLang.g:15610:6: 
        {
        }

        pushFollow(FOLLOW_2);
        ruleArrayBrackets();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred43_InternalStubbrLang

    // $ANTLR start synpred44_InternalStubbrLang
    public final void synpred44_InternalStubbrLang_fragment() throws RecognitionException {   
        // InternalStubbrLang.g:15805:5: ( '<' )
        // InternalStubbrLang.g:15805:6: '<'
        {
        match(input,162,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred44_InternalStubbrLang

    // $ANTLR start synpred45_InternalStubbrLang
    public final void synpred45_InternalStubbrLang_fragment() throws RecognitionException {   
        // InternalStubbrLang.g:15861:6: ( ( () '.' ) )
        // InternalStubbrLang.g:15861:7: ( () '.' )
        {
        // InternalStubbrLang.g:15861:7: ( () '.' )
        // InternalStubbrLang.g:15862:7: () '.'
        {
        // InternalStubbrLang.g:15862:7: ()
        // InternalStubbrLang.g:15863:7: 
        {
        }

        match(input,188,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred45_InternalStubbrLang

    // $ANTLR start synpred46_InternalStubbrLang
    public final void synpred46_InternalStubbrLang_fragment() throws RecognitionException {   
        // InternalStubbrLang.g:15899:7: ( '<' )
        // InternalStubbrLang.g:15899:8: '<'
        {
        match(input,162,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred46_InternalStubbrLang

    // Delegated rules

    public final boolean synpred27_InternalStubbrLang() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred27_InternalStubbrLang_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred29_InternalStubbrLang() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred29_InternalStubbrLang_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred31_InternalStubbrLang() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred31_InternalStubbrLang_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred30_InternalStubbrLang() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred30_InternalStubbrLang_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred25_InternalStubbrLang() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred25_InternalStubbrLang_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred32_InternalStubbrLang() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred32_InternalStubbrLang_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred23_InternalStubbrLang() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred23_InternalStubbrLang_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred26_InternalStubbrLang() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred26_InternalStubbrLang_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred10_InternalStubbrLang() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred10_InternalStubbrLang_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred19_InternalStubbrLang() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred19_InternalStubbrLang_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred46_InternalStubbrLang() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred46_InternalStubbrLang_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred17_InternalStubbrLang() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred17_InternalStubbrLang_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred45_InternalStubbrLang() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred45_InternalStubbrLang_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred18_InternalStubbrLang() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred18_InternalStubbrLang_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred44_InternalStubbrLang() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred44_InternalStubbrLang_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred42_InternalStubbrLang() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred42_InternalStubbrLang_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred13_InternalStubbrLang() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred13_InternalStubbrLang_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred16_InternalStubbrLang() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred16_InternalStubbrLang_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred43_InternalStubbrLang() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred43_InternalStubbrLang_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred14_InternalStubbrLang() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred14_InternalStubbrLang_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred15_InternalStubbrLang() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred15_InternalStubbrLang_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred12_InternalStubbrLang() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred12_InternalStubbrLang_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred37_InternalStubbrLang() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred37_InternalStubbrLang_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred11_InternalStubbrLang() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred11_InternalStubbrLang_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred36_InternalStubbrLang() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred36_InternalStubbrLang_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred20_InternalStubbrLang() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred20_InternalStubbrLang_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred21_InternalStubbrLang() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred21_InternalStubbrLang_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred38_InternalStubbrLang() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred38_InternalStubbrLang_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred39_InternalStubbrLang() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred39_InternalStubbrLang_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred7_InternalStubbrLang() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred7_InternalStubbrLang_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred8_InternalStubbrLang() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred8_InternalStubbrLang_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred34_InternalStubbrLang() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred34_InternalStubbrLang_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred6_InternalStubbrLang() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred6_InternalStubbrLang_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred35_InternalStubbrLang() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred35_InternalStubbrLang_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred33_InternalStubbrLang() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred33_InternalStubbrLang_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred9_InternalStubbrLang() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred9_InternalStubbrLang_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred4_InternalStubbrLang() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred4_InternalStubbrLang_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred5_InternalStubbrLang() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred5_InternalStubbrLang_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred3_InternalStubbrLang() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred3_InternalStubbrLang_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred1_InternalStubbrLang() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred1_InternalStubbrLang_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred2_InternalStubbrLang() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred2_InternalStubbrLang_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA291 dfa291 = new DFA291(this);
    protected DFA301 dfa301 = new DFA301(this);
    protected DFA304 dfa304 = new DFA304(this);
    protected DFA320 dfa320 = new DFA320(this);
    protected DFA319 dfa319 = new DFA319(this);
    protected DFA321 dfa321 = new DFA321(this);
    protected DFA323 dfa323 = new DFA323(this);
    protected DFA332 dfa332 = new DFA332(this);
    protected DFA339 dfa339 = new DFA339(this);
    protected DFA338 dfa338 = new DFA338(this);
    protected DFA361 dfa361 = new DFA361(this);
    protected DFA360 dfa360 = new DFA360(this);
    protected DFA362 dfa362 = new DFA362(this);
    protected DFA366 dfa366 = new DFA366(this);
    protected DFA369 dfa369 = new DFA369(this);
    protected DFA368 dfa368 = new DFA368(this);
    protected DFA370 dfa370 = new DFA370(this);
    protected DFA373 dfa373 = new DFA373(this);
    protected DFA391 dfa391 = new DFA391(this);
    protected DFA389 dfa389 = new DFA389(this);
    protected DFA399 dfa399 = new DFA399(this);
    static final String dfa_1s = "\12\uffff";
    static final String dfa_2s = "\1\10\11\uffff";
    static final String dfa_3s = "\1\4\7\0\2\uffff";
    static final String dfa_4s = "\1\u00dd\7\0\2\uffff";
    static final String dfa_5s = "\10\uffff\1\2\1\1";
    static final String dfa_6s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\6\1\5\2\uffff}>";
    static final String[] dfa_7s = {
            "\2\10\1\uffff\3\10\6\uffff\1\10\10\uffff\2\10\52\uffff\1\10\26\uffff\1\10\7\uffff\1\10\70\uffff\1\1\1\2\1\3\1\4\1\5\1\6\1\7\40\10\1\uffff\31\10",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            ""
    };

    static final short[] dfa_1 = DFA.unpackEncodedString(dfa_1s);
    static final short[] dfa_2 = DFA.unpackEncodedString(dfa_2s);
    static final char[] dfa_3 = DFA.unpackEncodedStringToUnsignedChars(dfa_3s);
    static final char[] dfa_4 = DFA.unpackEncodedStringToUnsignedChars(dfa_4s);
    static final short[] dfa_5 = DFA.unpackEncodedString(dfa_5s);
    static final short[] dfa_6 = DFA.unpackEncodedString(dfa_6s);
    static final short[][] dfa_7 = unpackEncodedStringArray(dfa_7s);

    class DFA291 extends DFA {

        public DFA291(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 291;
            this.eot = dfa_1;
            this.eof = dfa_2;
            this.min = dfa_3;
            this.max = dfa_4;
            this.accept = dfa_5;
            this.special = dfa_6;
            this.transition = dfa_7;
        }
        public String getDescription() {
            return "10343:4: ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA291_1 = input.LA(1);

                         
                        int index291_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalStubbrLang()) ) {s = 9;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index291_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA291_2 = input.LA(1);

                         
                        int index291_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalStubbrLang()) ) {s = 9;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index291_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA291_3 = input.LA(1);

                         
                        int index291_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalStubbrLang()) ) {s = 9;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index291_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA291_4 = input.LA(1);

                         
                        int index291_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalStubbrLang()) ) {s = 9;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index291_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA291_5 = input.LA(1);

                         
                        int index291_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalStubbrLang()) ) {s = 9;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index291_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA291_7 = input.LA(1);

                         
                        int index291_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalStubbrLang()) ) {s = 9;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index291_7);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA291_6 = input.LA(1);

                         
                        int index291_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalStubbrLang()) ) {s = 9;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index291_6);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 291, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_8s = "\13\uffff";
    static final String dfa_9s = "\1\1\12\uffff";
    static final String dfa_10s = "\1\4\1\uffff\10\0\1\uffff";
    static final String dfa_11s = "\1\u00dd\1\uffff\10\0\1\uffff";
    static final String dfa_12s = "\1\uffff\1\2\10\uffff\1\1";
    static final String dfa_13s = "\2\uffff\1\7\1\3\1\0\1\1\1\6\1\2\1\4\1\5\1\uffff}>";
    static final String[] dfa_14s = {
            "\2\1\1\uffff\3\1\6\uffff\1\1\10\uffff\2\1\52\uffff\1\1\26\uffff\1\1\7\uffff\1\1\70\uffff\5\1\1\2\1\3\10\1\1\4\1\5\1\6\1\7\1\10\1\11\22\1\1\uffff\31\1",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            ""
    };

    static final short[] dfa_8 = DFA.unpackEncodedString(dfa_8s);
    static final short[] dfa_9 = DFA.unpackEncodedString(dfa_9s);
    static final char[] dfa_10 = DFA.unpackEncodedStringToUnsignedChars(dfa_10s);
    static final char[] dfa_11 = DFA.unpackEncodedStringToUnsignedChars(dfa_11s);
    static final short[] dfa_12 = DFA.unpackEncodedString(dfa_12s);
    static final short[] dfa_13 = DFA.unpackEncodedString(dfa_13s);
    static final short[][] dfa_14 = unpackEncodedStringArray(dfa_14s);

    class DFA301 extends DFA {

        public DFA301(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 301;
            this.eot = dfa_8;
            this.eof = dfa_9;
            this.min = dfa_10;
            this.max = dfa_11;
            this.accept = dfa_12;
            this.special = dfa_13;
            this.transition = dfa_14;
        }
        public String getDescription() {
            return "()* loopback of 11057:3: ( ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA301_4 = input.LA(1);

                         
                        int index301_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_InternalStubbrLang()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index301_4);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA301_5 = input.LA(1);

                         
                        int index301_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_InternalStubbrLang()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index301_5);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA301_7 = input.LA(1);

                         
                        int index301_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_InternalStubbrLang()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index301_7);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA301_3 = input.LA(1);

                         
                        int index301_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_InternalStubbrLang()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index301_3);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA301_8 = input.LA(1);

                         
                        int index301_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_InternalStubbrLang()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index301_8);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA301_9 = input.LA(1);

                         
                        int index301_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_InternalStubbrLang()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index301_9);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA301_6 = input.LA(1);

                         
                        int index301_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_InternalStubbrLang()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index301_6);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA301_2 = input.LA(1);

                         
                        int index301_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_InternalStubbrLang()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index301_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 301, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_15s = "\1\u00a2\2\uffff\1\u00a3\7\uffff";
    static final String dfa_16s = "\1\u00b1\2\uffff\1\u00ae\7\uffff";
    static final String dfa_17s = "\1\uffff\1\1\1\2\1\uffff\1\4\1\5\1\7\1\10\1\11\1\3\1\6";
    static final String dfa_18s = "\13\uffff}>";
    static final String[] dfa_19s = {
            "\1\6\1\3\10\uffff\1\1\1\2\1\4\1\5\1\7\1\10",
            "",
            "",
            "\1\12\12\uffff\1\11",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_15 = DFA.unpackEncodedStringToUnsignedChars(dfa_15s);
    static final char[] dfa_16 = DFA.unpackEncodedStringToUnsignedChars(dfa_16s);
    static final short[] dfa_17 = DFA.unpackEncodedString(dfa_17s);
    static final short[] dfa_18 = DFA.unpackEncodedString(dfa_18s);
    static final short[][] dfa_19 = unpackEncodedStringArray(dfa_19s);

    class DFA304 extends DFA {

        public DFA304(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 304;
            this.eot = dfa_8;
            this.eof = dfa_8;
            this.min = dfa_15;
            this.max = dfa_16;
            this.accept = dfa_17;
            this.special = dfa_18;
            this.transition = dfa_19;
        }
        public String getDescription() {
            return "11133:2: (kw= '->' | kw= '..<' | (kw= '>' kw= '..' ) | kw= '..' | kw= '=>' | (kw= '>' ( ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) ) | kw= '>' ) ) | (kw= '<' ( ( ( ( '<' '<' ) )=> (kw= '<' kw= '<' ) ) | kw= '<' | kw= '=>' ) ) | kw= '<>' | kw= '?:' )";
        }
    }
    static final String dfa_20s = "\116\uffff";
    static final String dfa_21s = "\1\2\115\uffff";
    static final String dfa_22s = "\1\4\1\0\114\uffff";
    static final String dfa_23s = "\1\u00dd\1\0\114\uffff";
    static final String dfa_24s = "\2\uffff\1\2\112\uffff\1\1";
    static final String dfa_25s = "\1\uffff\1\0\114\uffff}>";
    static final String[] dfa_26s = {
            "\2\2\1\uffff\3\2\6\uffff\1\2\10\uffff\2\2\52\uffff\1\2\26\uffff\1\2\7\uffff\1\2\70\uffff\42\2\1\1\4\2\1\uffff\31\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_20 = DFA.unpackEncodedString(dfa_20s);
    static final short[] dfa_21 = DFA.unpackEncodedString(dfa_21s);
    static final char[] dfa_22 = DFA.unpackEncodedStringToUnsignedChars(dfa_22s);
    static final char[] dfa_23 = DFA.unpackEncodedStringToUnsignedChars(dfa_23s);
    static final short[] dfa_24 = DFA.unpackEncodedString(dfa_24s);
    static final short[] dfa_25 = DFA.unpackEncodedString(dfa_25s);
    static final short[][] dfa_26 = unpackEncodedStringArray(dfa_26s);

    class DFA320 extends DFA {

        public DFA320(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 320;
            this.eot = dfa_20;
            this.eof = dfa_21;
            this.min = dfa_22;
            this.max = dfa_23;
            this.accept = dfa_24;
            this.special = dfa_25;
            this.transition = dfa_26;
        }
        public String getDescription() {
            return "12034:5: ( ( ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= ')' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA320_1 = input.LA(1);

                         
                        int index320_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred16_InternalStubbrLang()) ) {s = 77;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index320_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 320, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_27s = "\44\uffff";
    static final String dfa_28s = "\1\4\2\0\41\uffff";
    static final String dfa_29s = "\1\u00dc\2\0\41\uffff";
    static final String dfa_30s = "\3\uffff\2\1\1\2\35\uffff\1\3";
    static final String dfa_31s = "\1\0\1\1\1\2\41\uffff}>";
    static final String[] dfa_32s = {
            "\1\5\1\1\1\uffff\3\5\6\uffff\1\5\64\uffff\1\5\36\uffff\1\5\75\uffff\1\5\14\uffff\1\3\2\uffff\2\5\4\uffff\1\5\6\uffff\1\2\1\43\2\5\1\uffff\1\4\1\uffff\1\5\1\uffff\1\5\2\uffff\2\5\2\uffff\14\5\1\uffff\1\5",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_27 = DFA.unpackEncodedString(dfa_27s);
    static final char[] dfa_28 = DFA.unpackEncodedStringToUnsignedChars(dfa_28s);
    static final char[] dfa_29 = DFA.unpackEncodedStringToUnsignedChars(dfa_29s);
    static final short[] dfa_30 = DFA.unpackEncodedString(dfa_30s);
    static final short[] dfa_31 = DFA.unpackEncodedString(dfa_31s);
    static final short[][] dfa_32 = unpackEncodedStringArray(dfa_32s);

    class DFA319 extends DFA {

        public DFA319(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 319;
            this.eot = dfa_27;
            this.eof = dfa_27;
            this.min = dfa_28;
            this.max = dfa_29;
            this.accept = dfa_30;
            this.special = dfa_31;
            this.transition = dfa_32;
        }
        public String getDescription() {
            return "12053:6: ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA319_0 = input.LA(1);

                         
                        int index319_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA319_0==RULE_ID) ) {s = 1;}

                        else if ( (LA319_0==191) ) {s = 2;}

                        else if ( (LA319_0==175) && (synpred17_InternalStubbrLang())) {s = 3;}

                        else if ( (LA319_0==196) && (synpred17_InternalStubbrLang())) {s = 4;}

                        else if ( (LA319_0==RULE_STRING||(LA319_0>=RULE_INT && LA319_0<=RULE_DECIMAL)||LA319_0==16||LA319_0==69||LA319_0==100||LA319_0==162||(LA319_0>=178 && LA319_0<=179)||LA319_0==184||(LA319_0>=193 && LA319_0<=194)||LA319_0==198||LA319_0==200||(LA319_0>=203 && LA319_0<=204)||(LA319_0>=207 && LA319_0<=218)||LA319_0==220) ) {s = 5;}

                        else if ( (LA319_0==192) ) {s = 35;}

                         
                        input.seek(index319_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA319_1 = input.LA(1);

                         
                        int index319_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred17_InternalStubbrLang()) ) {s = 4;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index319_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA319_2 = input.LA(1);

                         
                        int index319_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred17_InternalStubbrLang()) ) {s = 4;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index319_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 319, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String[] dfa_33s = {
            "\2\2\1\uffff\3\2\6\uffff\1\2\10\uffff\2\2\52\uffff\1\2\26\uffff\1\2\7\uffff\1\2\70\uffff\45\2\1\1\1\2\1\uffff\31\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[][] dfa_33 = unpackEncodedStringArray(dfa_33s);

    class DFA321 extends DFA {

        public DFA321(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 321;
            this.eot = dfa_20;
            this.eof = dfa_21;
            this.min = dfa_22;
            this.max = dfa_23;
            this.accept = dfa_24;
            this.special = dfa_25;
            this.transition = dfa_33;
        }
        public String getDescription() {
            return "12151:5: ( ( ( () '[' ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA321_1 = input.LA(1);

                         
                        int index321_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred18_InternalStubbrLang()) ) {s = 77;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index321_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 321, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_34s = "\40\uffff";
    static final String dfa_35s = "\1\4\26\uffff\1\0\10\uffff";
    static final String dfa_36s = "\1\u00dc\26\uffff\1\0\10\uffff";
    static final String dfa_37s = "\1\uffff\1\1\1\2\1\3\1\4\1\5\6\uffff\1\6\11\uffff\1\7\1\uffff\1\12\1\13\1\14\1\15\1\16\1\17\1\10\1\11";
    static final String dfa_38s = "\1\0\26\uffff\1\1\10\uffff}>";
    static final String[] dfa_39s = {
            "\1\14\1\5\1\uffff\3\14\6\uffff\1\2\64\uffff\1\5\36\uffff\1\27\75\uffff\1\5\34\uffff\1\35\1\uffff\2\14\3\uffff\1\26\1\uffff\1\3\2\uffff\1\30\1\31\2\uffff\4\5\1\1\4\14\1\32\1\33\1\34\1\uffff\1\4",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_34 = DFA.unpackEncodedString(dfa_34s);
    static final char[] dfa_35 = DFA.unpackEncodedStringToUnsignedChars(dfa_35s);
    static final char[] dfa_36 = DFA.unpackEncodedStringToUnsignedChars(dfa_36s);
    static final short[] dfa_37 = DFA.unpackEncodedString(dfa_37s);
    static final short[] dfa_38 = DFA.unpackEncodedString(dfa_38s);
    static final short[][] dfa_39 = unpackEncodedStringArray(dfa_39s);

    class DFA323 extends DFA {

        public DFA323(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 323;
            this.eot = dfa_34;
            this.eof = dfa_34;
            this.min = dfa_35;
            this.max = dfa_36;
            this.accept = dfa_37;
            this.special = dfa_38;
            this.transition = dfa_39;
        }
        public String getDescription() {
            return "12196:2: (this_XConstructorCall_0= ruleXConstructorCall | this_XBlockExpression_1= ruleXBlockExpression | this_XSwitchExpression_2= ruleXSwitchExpression | ( ( ( () 'synchronized' '(' ) )=>this_XSynchronizedExpression_3= ruleXSynchronizedExpression ) | this_XFeatureCall_4= ruleXFeatureCall | this_XLiteral_5= ruleXLiteral | this_XIfExpression_6= ruleXIfExpression | ( ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=>this_XForLoopExpression_7= ruleXForLoopExpression ) | this_XBasicForLoopExpression_8= ruleXBasicForLoopExpression | this_XWhileExpression_9= ruleXWhileExpression | this_XDoWhileExpression_10= ruleXDoWhileExpression | this_XThrowExpression_11= ruleXThrowExpression | this_XReturnExpression_12= ruleXReturnExpression | this_XTryCatchFinallyExpression_13= ruleXTryCatchFinallyExpression | this_XParenthesizedExpression_14= ruleXParenthesizedExpression )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA323_0 = input.LA(1);

                         
                        int index323_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA323_0==211) ) {s = 1;}

                        else if ( (LA323_0==16) ) {s = 2;}

                        else if ( (LA323_0==200) ) {s = 3;}

                        else if ( (LA323_0==220) && (synpred19_InternalStubbrLang())) {s = 4;}

                        else if ( (LA323_0==RULE_ID||LA323_0==69||LA323_0==162||(LA323_0>=207 && LA323_0<=210)) ) {s = 5;}

                        else if ( (LA323_0==RULE_STRING||(LA323_0>=RULE_INT && LA323_0<=RULE_DECIMAL)||(LA323_0>=193 && LA323_0<=194)||(LA323_0>=212 && LA323_0<=215)) ) {s = 12;}

                        else if ( (LA323_0==198) ) {s = 22;}

                        else if ( (LA323_0==100) ) {s = 23;}

                        else if ( (LA323_0==203) ) {s = 24;}

                        else if ( (LA323_0==204) ) {s = 25;}

                        else if ( (LA323_0==216) ) {s = 26;}

                        else if ( (LA323_0==217) ) {s = 27;}

                        else if ( (LA323_0==218) ) {s = 28;}

                        else if ( (LA323_0==191) ) {s = 29;}

                         
                        input.seek(index323_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA323_23 = input.LA(1);

                         
                        int index323_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred20_InternalStubbrLang()) ) {s = 30;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index323_23);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 323, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_40s = "\46\uffff";
    static final String dfa_41s = "\1\4\2\0\43\uffff";
    static final String dfa_42s = "\1\u00dc\2\0\43\uffff";
    static final String dfa_43s = "\3\uffff\2\1\1\2\40\uffff";
    static final String dfa_44s = "\1\0\1\1\1\2\43\uffff}>";
    static final String[] dfa_45s = {
            "\1\5\1\1\1\uffff\3\5\6\uffff\1\5\64\uffff\1\5\36\uffff\1\5\75\uffff\1\5\14\uffff\1\3\2\uffff\2\5\4\uffff\1\5\6\uffff\1\2\1\uffff\3\5\1\4\1\uffff\1\5\1\uffff\1\5\2\uffff\20\5\1\uffff\1\5",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_40 = DFA.unpackEncodedString(dfa_40s);
    static final char[] dfa_41 = DFA.unpackEncodedStringToUnsignedChars(dfa_41s);
    static final char[] dfa_42 = DFA.unpackEncodedStringToUnsignedChars(dfa_42s);
    static final short[] dfa_43 = DFA.unpackEncodedString(dfa_43s);
    static final short[] dfa_44 = DFA.unpackEncodedString(dfa_44s);
    static final short[][] dfa_45 = unpackEncodedStringArray(dfa_45s);

    class DFA332 extends DFA {

        public DFA332(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 332;
            this.eot = dfa_40;
            this.eof = dfa_40;
            this.min = dfa_41;
            this.max = dfa_42;
            this.accept = dfa_43;
            this.special = dfa_44;
            this.transition = dfa_45;
        }
        public String getDescription() {
            return "12688:3: ( ( ( ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= '|' ) ) ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA332_0 = input.LA(1);

                         
                        int index332_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA332_0==RULE_ID) ) {s = 1;}

                        else if ( (LA332_0==191) ) {s = 2;}

                        else if ( (LA332_0==175) && (synpred23_InternalStubbrLang())) {s = 3;}

                        else if ( (LA332_0==196) && (synpred23_InternalStubbrLang())) {s = 4;}

                        else if ( (LA332_0==RULE_STRING||(LA332_0>=RULE_INT && LA332_0<=RULE_DECIMAL)||LA332_0==16||LA332_0==69||LA332_0==100||LA332_0==162||(LA332_0>=178 && LA332_0<=179)||LA332_0==184||(LA332_0>=193 && LA332_0<=195)||LA332_0==198||LA332_0==200||(LA332_0>=203 && LA332_0<=218)||LA332_0==220) ) {s = 5;}

                         
                        input.seek(index332_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA332_1 = input.LA(1);

                         
                        int index332_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred23_InternalStubbrLang()) ) {s = 4;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index332_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA332_2 = input.LA(1);

                         
                        int index332_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred23_InternalStubbrLang()) ) {s = 4;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index332_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 332, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_46s = "\43\uffff";
    static final String dfa_47s = "\1\4\1\0\41\uffff";
    static final String dfa_48s = "\1\u00dc\1\0\41\uffff";
    static final String dfa_49s = "\2\uffff\1\2\37\uffff\1\1";
    static final String dfa_50s = "\1\uffff\1\0\41\uffff}>";
    static final String[] dfa_51s = {
            "\2\2\1\uffff\3\2\6\uffff\1\2\64\uffff\1\2\36\uffff\1\2\75\uffff\1\2\14\uffff\1\2\2\uffff\2\2\4\uffff\1\2\6\uffff\1\1\1\uffff\2\2\3\uffff\1\2\1\uffff\1\2\2\uffff\2\2\2\uffff\14\2\1\uffff\1\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_46 = DFA.unpackEncodedString(dfa_46s);
    static final char[] dfa_47 = DFA.unpackEncodedStringToUnsignedChars(dfa_47s);
    static final char[] dfa_48 = DFA.unpackEncodedStringToUnsignedChars(dfa_48s);
    static final short[] dfa_49 = DFA.unpackEncodedString(dfa_49s);
    static final short[] dfa_50 = DFA.unpackEncodedString(dfa_50s);
    static final short[][] dfa_51 = unpackEncodedStringArray(dfa_51s);

    class DFA339 extends DFA {

        public DFA339(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 339;
            this.eot = dfa_46;
            this.eof = dfa_46;
            this.min = dfa_47;
            this.max = dfa_48;
            this.accept = dfa_49;
            this.special = dfa_50;
            this.transition = dfa_51;
        }
        public String getDescription() {
            return "13154:3: ( ( ( ( ( '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> (otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_switch_5_0= ruleXExpression ) ) otherlv_6= ')' ) | ( ( ( ( ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':' ) )? ( (lv_switch_9_0= ruleXExpression ) ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA339_1 = input.LA(1);

                         
                        int index339_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred26_InternalStubbrLang()) ) {s = 34;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index339_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 339, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_52s = "\42\uffff";
    static final String dfa_53s = "\1\4\2\0\37\uffff";
    static final String dfa_54s = "\1\u00dc\2\0\37\uffff";
    static final String dfa_55s = "\3\uffff\1\1\1\2\35\uffff";
    static final String dfa_56s = "\1\0\1\1\1\2\37\uffff}>";
    static final String[] dfa_57s = {
            "\1\4\1\1\1\uffff\3\4\6\uffff\1\4\64\uffff\1\4\36\uffff\1\4\75\uffff\1\4\14\uffff\1\3\2\uffff\2\4\4\uffff\1\4\6\uffff\1\2\1\uffff\2\4\3\uffff\1\4\1\uffff\1\4\2\uffff\2\4\2\uffff\14\4\1\uffff\1\4",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_52 = DFA.unpackEncodedString(dfa_52s);
    static final char[] dfa_53 = DFA.unpackEncodedStringToUnsignedChars(dfa_53s);
    static final char[] dfa_54 = DFA.unpackEncodedStringToUnsignedChars(dfa_54s);
    static final short[] dfa_55 = DFA.unpackEncodedString(dfa_55s);
    static final short[] dfa_56 = DFA.unpackEncodedString(dfa_56s);
    static final short[][] dfa_57 = unpackEncodedStringArray(dfa_57s);

    class DFA338 extends DFA {

        public DFA338(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 338;
            this.eot = dfa_52;
            this.eof = dfa_52;
            this.min = dfa_53;
            this.max = dfa_54;
            this.accept = dfa_55;
            this.special = dfa_56;
            this.transition = dfa_57;
        }
        public String getDescription() {
            return "13223:5: ( ( ( ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':' ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA338_0 = input.LA(1);

                         
                        int index338_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA338_0==RULE_ID) ) {s = 1;}

                        else if ( (LA338_0==191) ) {s = 2;}

                        else if ( (LA338_0==175) && (synpred27_InternalStubbrLang())) {s = 3;}

                        else if ( (LA338_0==RULE_STRING||(LA338_0>=RULE_INT && LA338_0<=RULE_DECIMAL)||LA338_0==16||LA338_0==69||LA338_0==100||LA338_0==162||(LA338_0>=178 && LA338_0<=179)||LA338_0==184||(LA338_0>=193 && LA338_0<=194)||LA338_0==198||LA338_0==200||(LA338_0>=203 && LA338_0<=204)||(LA338_0>=207 && LA338_0<=218)||LA338_0==220) ) {s = 4;}

                         
                        input.seek(index338_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA338_1 = input.LA(1);

                         
                        int index338_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred27_InternalStubbrLang()) ) {s = 3;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index338_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA338_2 = input.LA(1);

                         
                        int index338_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred27_InternalStubbrLang()) ) {s = 3;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index338_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 338, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA361 extends DFA {

        public DFA361(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 361;
            this.eot = dfa_20;
            this.eof = dfa_21;
            this.min = dfa_22;
            this.max = dfa_23;
            this.accept = dfa_24;
            this.special = dfa_25;
            this.transition = dfa_26;
        }
        public String getDescription() {
            return "14352:3: ( ( ( ( '(' ) )=> (lv_explicitOperationCall_7_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )? otherlv_12= ')' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA361_1 = input.LA(1);

                         
                        int index361_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred30_InternalStubbrLang()) ) {s = 77;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index361_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 361, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA360 extends DFA {

        public DFA360(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 360;
            this.eot = dfa_27;
            this.eof = dfa_27;
            this.min = dfa_28;
            this.max = dfa_29;
            this.accept = dfa_30;
            this.special = dfa_31;
            this.transition = dfa_32;
        }
        public String getDescription() {
            return "14371:4: ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA360_0 = input.LA(1);

                         
                        int index360_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA360_0==RULE_ID) ) {s = 1;}

                        else if ( (LA360_0==191) ) {s = 2;}

                        else if ( (LA360_0==175) && (synpred31_InternalStubbrLang())) {s = 3;}

                        else if ( (LA360_0==196) && (synpred31_InternalStubbrLang())) {s = 4;}

                        else if ( (LA360_0==RULE_STRING||(LA360_0>=RULE_INT && LA360_0<=RULE_DECIMAL)||LA360_0==16||LA360_0==69||LA360_0==100||LA360_0==162||(LA360_0>=178 && LA360_0<=179)||LA360_0==184||(LA360_0>=193 && LA360_0<=194)||LA360_0==198||LA360_0==200||(LA360_0>=203 && LA360_0<=204)||(LA360_0>=207 && LA360_0<=218)||LA360_0==220) ) {s = 5;}

                        else if ( (LA360_0==192) ) {s = 35;}

                         
                        input.seek(index360_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA360_1 = input.LA(1);

                         
                        int index360_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred31_InternalStubbrLang()) ) {s = 4;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index360_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA360_2 = input.LA(1);

                         
                        int index360_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred31_InternalStubbrLang()) ) {s = 4;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index360_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 360, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA362 extends DFA {

        public DFA362(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 362;
            this.eot = dfa_20;
            this.eof = dfa_21;
            this.min = dfa_22;
            this.max = dfa_23;
            this.accept = dfa_24;
            this.special = dfa_25;
            this.transition = dfa_33;
        }
        public String getDescription() {
            return "14469:3: ( ( ( () '[' ) )=> (lv_featureCallArguments_13_0= ruleXClosure ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA362_1 = input.LA(1);

                         
                        int index362_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred32_InternalStubbrLang()) ) {s = 77;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index362_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 362, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String[] dfa_58s = {
            "\2\2\1\uffff\3\2\6\uffff\1\2\10\uffff\2\2\52\uffff\1\2\26\uffff\1\2\7\uffff\1\2\70\uffff\5\2\1\1\41\2\1\uffff\31\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[][] dfa_58 = unpackEncodedStringArray(dfa_58s);

    class DFA366 extends DFA {

        public DFA366(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 366;
            this.eot = dfa_20;
            this.eof = dfa_21;
            this.min = dfa_22;
            this.max = dfa_23;
            this.accept = dfa_24;
            this.special = dfa_25;
            this.transition = dfa_58;
        }
        public String getDescription() {
            return "14628:3: ( ( ( '<' )=>otherlv_3= '<' ) ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= ',' ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* otherlv_7= '>' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA366_1 = input.LA(1);

                         
                        int index366_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_InternalStubbrLang()) ) {s = 77;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index366_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 366, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA369 extends DFA {

        public DFA369(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 369;
            this.eot = dfa_20;
            this.eof = dfa_21;
            this.min = dfa_22;
            this.max = dfa_23;
            this.accept = dfa_24;
            this.special = dfa_25;
            this.transition = dfa_26;
        }
        public String getDescription() {
            return "14685:3: ( ( ( ( '(' ) )=> (lv_explicitConstructorCall_8_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )? otherlv_13= ')' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA369_1 = input.LA(1);

                         
                        int index369_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred34_InternalStubbrLang()) ) {s = 77;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index369_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 369, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA368 extends DFA {

        public DFA368(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 368;
            this.eot = dfa_27;
            this.eof = dfa_27;
            this.min = dfa_28;
            this.max = dfa_29;
            this.accept = dfa_30;
            this.special = dfa_31;
            this.transition = dfa_32;
        }
        public String getDescription() {
            return "14704:4: ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA368_0 = input.LA(1);

                         
                        int index368_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA368_0==RULE_ID) ) {s = 1;}

                        else if ( (LA368_0==191) ) {s = 2;}

                        else if ( (LA368_0==175) && (synpred35_InternalStubbrLang())) {s = 3;}

                        else if ( (LA368_0==196) && (synpred35_InternalStubbrLang())) {s = 4;}

                        else if ( (LA368_0==RULE_STRING||(LA368_0>=RULE_INT && LA368_0<=RULE_DECIMAL)||LA368_0==16||LA368_0==69||LA368_0==100||LA368_0==162||(LA368_0>=178 && LA368_0<=179)||LA368_0==184||(LA368_0>=193 && LA368_0<=194)||LA368_0==198||LA368_0==200||(LA368_0>=203 && LA368_0<=204)||(LA368_0>=207 && LA368_0<=218)||LA368_0==220) ) {s = 5;}

                        else if ( (LA368_0==192) ) {s = 35;}

                         
                        input.seek(index368_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA368_1 = input.LA(1);

                         
                        int index368_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred35_InternalStubbrLang()) ) {s = 4;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index368_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA368_2 = input.LA(1);

                         
                        int index368_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred35_InternalStubbrLang()) ) {s = 4;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index368_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 368, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA370 extends DFA {

        public DFA370(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 370;
            this.eot = dfa_20;
            this.eof = dfa_21;
            this.min = dfa_22;
            this.max = dfa_23;
            this.accept = dfa_24;
            this.special = dfa_25;
            this.transition = dfa_33;
        }
        public String getDescription() {
            return "14802:3: ( ( ( () '[' ) )=> (lv_arguments_14_0= ruleXClosure ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA370_1 = input.LA(1);

                         
                        int index370_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred36_InternalStubbrLang()) ) {s = 77;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index370_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 370, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_59s = "\1\41\115\uffff";
    static final String dfa_60s = "\1\4\40\0\55\uffff";
    static final String dfa_61s = "\1\u00dd\40\0\55\uffff";
    static final String dfa_62s = "\41\uffff\1\2\53\uffff\1\1";
    static final String dfa_63s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\1\34\1\35\1\36\1\37\55\uffff}>";
    static final String[] dfa_64s = {
            "\1\27\1\1\1\uffff\1\24\1\23\1\25\6\uffff\1\12\10\uffff\2\41\52\uffff\1\2\26\uffff\1\41\7\uffff\1\32\70\uffff\5\41\1\15\17\41\1\10\1\7\4\41\1\6\6\41\1\40\1\41\1\17\1\20\1\41\1\uffff\1\41\1\31\1\41\1\13\2\41\1\33\1\34\2\41\1\3\1\4\1\5\1\16\1\11\1\21\1\22\1\26\1\30\1\35\1\36\1\37\1\41\1\14\1\41",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[] dfa_59 = DFA.unpackEncodedString(dfa_59s);
    static final char[] dfa_60 = DFA.unpackEncodedStringToUnsignedChars(dfa_60s);
    static final char[] dfa_61 = DFA.unpackEncodedStringToUnsignedChars(dfa_61s);
    static final short[] dfa_62 = DFA.unpackEncodedString(dfa_62s);
    static final short[] dfa_63 = DFA.unpackEncodedString(dfa_63s);
    static final short[][] dfa_64 = unpackEncodedStringArray(dfa_64s);

    class DFA373 extends DFA {

        public DFA373(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 373;
            this.eot = dfa_20;
            this.eof = dfa_59;
            this.min = dfa_60;
            this.max = dfa_61;
            this.accept = dfa_62;
            this.special = dfa_63;
            this.transition = dfa_64;
        }
        public String getDescription() {
            return "15145:3: ( ( 'extends' | 'static' | 'import' | 'extension' | '!' | '-' | '+' | 'new' | '{' | 'switch' | 'synchronized' | '<' | 'super' | '#' | '[' | 'false' | 'true' | 'null' | 'typeof' | 'if' | 'for' | 'while' | 'do' | 'throw' | 'return' | 'try' | '(' | RULE_ID | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_STRING )=> (lv_expression_2_0= ruleXExpression ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA373_1 = input.LA(1);

                         
                        int index373_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalStubbrLang()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index373_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA373_2 = input.LA(1);

                         
                        int index373_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalStubbrLang()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index373_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA373_3 = input.LA(1);

                         
                        int index373_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalStubbrLang()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index373_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA373_4 = input.LA(1);

                         
                        int index373_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalStubbrLang()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index373_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA373_5 = input.LA(1);

                         
                        int index373_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalStubbrLang()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index373_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA373_6 = input.LA(1);

                         
                        int index373_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalStubbrLang()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index373_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA373_7 = input.LA(1);

                         
                        int index373_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalStubbrLang()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index373_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA373_8 = input.LA(1);

                         
                        int index373_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalStubbrLang()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index373_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA373_9 = input.LA(1);

                         
                        int index373_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalStubbrLang()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index373_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA373_10 = input.LA(1);

                         
                        int index373_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalStubbrLang()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index373_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA373_11 = input.LA(1);

                         
                        int index373_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalStubbrLang()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index373_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA373_12 = input.LA(1);

                         
                        int index373_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalStubbrLang()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index373_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA373_13 = input.LA(1);

                         
                        int index373_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalStubbrLang()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index373_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA373_14 = input.LA(1);

                         
                        int index373_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalStubbrLang()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index373_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA373_15 = input.LA(1);

                         
                        int index373_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalStubbrLang()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index373_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA373_16 = input.LA(1);

                         
                        int index373_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalStubbrLang()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index373_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA373_17 = input.LA(1);

                         
                        int index373_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalStubbrLang()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index373_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA373_18 = input.LA(1);

                         
                        int index373_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalStubbrLang()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index373_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA373_19 = input.LA(1);

                         
                        int index373_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalStubbrLang()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index373_19);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA373_20 = input.LA(1);

                         
                        int index373_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalStubbrLang()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index373_20);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA373_21 = input.LA(1);

                         
                        int index373_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalStubbrLang()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index373_21);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA373_22 = input.LA(1);

                         
                        int index373_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalStubbrLang()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index373_22);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA373_23 = input.LA(1);

                         
                        int index373_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalStubbrLang()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index373_23);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA373_24 = input.LA(1);

                         
                        int index373_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalStubbrLang()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index373_24);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA373_25 = input.LA(1);

                         
                        int index373_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalStubbrLang()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index373_25);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA373_26 = input.LA(1);

                         
                        int index373_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalStubbrLang()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index373_26);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA373_27 = input.LA(1);

                         
                        int index373_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalStubbrLang()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index373_27);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA373_28 = input.LA(1);

                         
                        int index373_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalStubbrLang()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index373_28);
                        if ( s>=0 ) return s;
                        break;
                    case 28 : 
                        int LA373_29 = input.LA(1);

                         
                        int index373_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalStubbrLang()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index373_29);
                        if ( s>=0 ) return s;
                        break;
                    case 29 : 
                        int LA373_30 = input.LA(1);

                         
                        int index373_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalStubbrLang()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index373_30);
                        if ( s>=0 ) return s;
                        break;
                    case 30 : 
                        int LA373_31 = input.LA(1);

                         
                        int index373_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalStubbrLang()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index373_31);
                        if ( s>=0 ) return s;
                        break;
                    case 31 : 
                        int LA373_32 = input.LA(1);

                         
                        int index373_32 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalStubbrLang()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index373_32);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 373, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_65s = "\170\uffff";
    static final String dfa_66s = "\1\2\167\uffff";
    static final String dfa_67s = "\1\4\1\0\166\uffff";
    static final String dfa_68s = "\1\u0120\1\0\166\uffff";
    static final String dfa_69s = "\2\uffff\1\2\164\uffff\1\1";
    static final String dfa_70s = "\1\uffff\1\0\166\uffff}>";
    static final String[] dfa_71s = {
            "\2\2\1\uffff\3\2\6\uffff\1\2\1\uffff\1\2\6\uffff\2\2\52\uffff\1\2\16\uffff\1\2\2\uffff\1\2\1\uffff\5\2\1\uffff\3\2\2\uffff\1\2\7\uffff\2\2\14\uffff\1\2\3\uffff\1\2\36\uffff\5\2\1\1\41\2\1\uffff\31\2\1\uffff\1\2\31\uffff\17\2\15\uffff\14\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_65 = DFA.unpackEncodedString(dfa_65s);
    static final short[] dfa_66 = DFA.unpackEncodedString(dfa_66s);
    static final char[] dfa_67 = DFA.unpackEncodedStringToUnsignedChars(dfa_67s);
    static final char[] dfa_68 = DFA.unpackEncodedStringToUnsignedChars(dfa_68s);
    static final short[] dfa_69 = DFA.unpackEncodedString(dfa_69s);
    static final short[] dfa_70 = DFA.unpackEncodedString(dfa_70s);
    static final short[][] dfa_71 = unpackEncodedStringArray(dfa_71s);

    class DFA391 extends DFA {

        public DFA391(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 391;
            this.eot = dfa_65;
            this.eof = dfa_66;
            this.min = dfa_67;
            this.max = dfa_68;
            this.accept = dfa_69;
            this.special = dfa_70;
            this.transition = dfa_71;
        }
        public String getDescription() {
            return "15803:3: ( ( ( '<' )=>otherlv_1= '<' ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )? )* )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA391_1 = input.LA(1);

                         
                        int index391_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred44_InternalStubbrLang()) ) {s = 119;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index391_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 391, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA389 extends DFA {

        public DFA389(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 389;
            this.eot = dfa_65;
            this.eof = dfa_66;
            this.min = dfa_67;
            this.max = dfa_68;
            this.accept = dfa_69;
            this.special = dfa_70;
            this.transition = dfa_71;
        }
        public String getDescription() {
            return "15897:5: ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA389_1 = input.LA(1);

                         
                        int index389_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred46_InternalStubbrLang()) ) {s = 119;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index389_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 389, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_72s = "\7\uffff";
    static final String dfa_73s = "\2\uffff\1\4\2\uffff\1\4\1\uffff";
    static final String dfa_74s = "\1\5\1\uffff\1\17\1\5\1\uffff\1\17\1\uffff";
    static final String dfa_75s = "\1\u00cf\1\uffff\1\u00d0\1\u00b4\1\uffff\1\u00d0\1\uffff";
    static final String dfa_76s = "\1\uffff\1\1\2\uffff\1\2\1\uffff\1\3";
    static final String dfa_77s = "\7\uffff}>";
    static final String[] dfa_78s = {
            "\1\2\u00c9\uffff\1\1",
            "",
            "\1\4\u00ac\uffff\1\3\10\uffff\1\4\12\uffff\1\4",
            "\1\5\u00ae\uffff\1\6",
            "",
            "\1\4\u00ac\uffff\1\3\10\uffff\1\4\12\uffff\1\4",
            ""
    };

    static final short[] dfa_72 = DFA.unpackEncodedString(dfa_72s);
    static final short[] dfa_73 = DFA.unpackEncodedString(dfa_73s);
    static final char[] dfa_74 = DFA.unpackEncodedStringToUnsignedChars(dfa_74s);
    static final char[] dfa_75 = DFA.unpackEncodedStringToUnsignedChars(dfa_75s);
    static final short[] dfa_76 = DFA.unpackEncodedString(dfa_76s);
    static final short[] dfa_77 = DFA.unpackEncodedString(dfa_77s);
    static final short[][] dfa_78 = unpackEncodedStringArray(dfa_78s);

    class DFA399 extends DFA {

        public DFA399(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 399;
            this.eot = dfa_72;
            this.eof = dfa_73;
            this.min = dfa_74;
            this.max = dfa_75;
            this.accept = dfa_76;
            this.special = dfa_77;
            this.transition = dfa_78;
        }
        public String getDescription() {
            return "16395:3: ( ( ( (lv_static_1_0= 'static' ) ) ( (lv_extension_2_0= 'extension' ) )? ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_4_0= '*' ) ) | ( (lv_memberName_5_0= ruleValidID ) ) ) ) | ( ( ruleQualifiedName ) ) | ( (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard ) ) )";
        }
    }
 

    public static final BitSet FOLLOW_1 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_2 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_3 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_4 = new BitSet(new long[]{0x0000000000008000L,0x0000000000000000L,0x0000000000000000L,0x0000000000010000L});
    public static final BitSet FOLLOW_5 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_6 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_7 = new BitSet(new long[]{0x080482408DFE0000L,0x0000800000008000L,0x0000000000040200L});
    public static final BitSet FOLLOW_8 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_9 = new BitSet(new long[]{0x080482408DFC0000L,0x0000800000008000L,0x0000000000040200L});
    public static final BitSet FOLLOW_10 = new BitSet(new long[]{0x080482408DF80000L,0x0000800000008000L,0x0000000000040200L});
    public static final BitSet FOLLOW_11 = new BitSet(new long[]{0x080482408DF00000L,0x0000800000008000L,0x0000000000040200L});
    public static final BitSet FOLLOW_12 = new BitSet(new long[]{0x080482408DE00000L,0x0000800000008000L,0x0000000000040200L});
    public static final BitSet FOLLOW_13 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_14 = new BitSet(new long[]{0x080482408DC00000L,0x0000800000008000L,0x0000000000040200L});
    public static final BitSet FOLLOW_15 = new BitSet(new long[]{0x080482408D800000L,0x0000800000008000L,0x0000000000040200L});
    public static final BitSet FOLLOW_16 = new BitSet(new long[]{0x080482408D000000L,0x0000800000008000L,0x0000000000040200L});
    public static final BitSet FOLLOW_17 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000F00000000L});
    public static final BitSet FOLLOW_18 = new BitSet(new long[]{0x080482408E000000L,0x0000800000008000L,0x0000000000040200L});
    public static final BitSet FOLLOW_19 = new BitSet(new long[]{0x0804824084000000L,0x0000800000008000L,0x0000000000040200L});
    public static final BitSet FOLLOW_20 = new BitSet(new long[]{0x0800824084000000L,0x0000800000008000L,0x0000000000040200L});
    public static final BitSet FOLLOW_21 = new BitSet(new long[]{0x0800824004000000L,0x0000800000008000L,0x0000000000040200L});
    public static final BitSet FOLLOW_22 = new BitSet(new long[]{0x0000824004000000L,0x0000800000008000L,0x0000000000040200L});
    public static final BitSet FOLLOW_23 = new BitSet(new long[]{0x0000820004000000L,0x0000800000008000L,0x0000000000040200L});
    public static final BitSet FOLLOW_24 = new BitSet(new long[]{0x0000800004000000L,0x0000800000008000L,0x0000000000040200L});
    public static final BitSet FOLLOW_25 = new BitSet(new long[]{0x0000800004000000L,0x0000800000000000L,0x0000000000040200L});
    public static final BitSet FOLLOW_26 = new BitSet(new long[]{0x0000800004000000L,0x0000000000000000L,0x0000000000040200L});
    public static final BitSet FOLLOW_27 = new BitSet(new long[]{0x0000800004000000L,0x0000000000000000L,0x0000000000040000L});
    public static final BitSet FOLLOW_28 = new BitSet(new long[]{0x0000800004000000L});
    public static final BitSet FOLLOW_29 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_30 = new BitSet(new long[]{0x0000000074000000L});
    public static final BitSet FOLLOW_31 = new BitSet(new long[]{0x0000000064000000L});
    public static final BitSet FOLLOW_32 = new BitSet(new long[]{0x0000000044000000L});
    public static final BitSet FOLLOW_33 = new BitSet(new long[]{0x0000001F04000000L});
    public static final BitSet FOLLOW_34 = new BitSet(new long[]{0x0000021E04040000L,0x0000000000018000L,0x0000000000000000L,0x0003FFF000000000L});
    public static final BitSet FOLLOW_35 = new BitSet(new long[]{0x0000001C04000000L,0x0000000000000080L});
    public static final BitSet FOLLOW_36 = new BitSet(new long[]{0x0000001804000000L,0x0000000000000080L});
    public static final BitSet FOLLOW_37 = new BitSet(new long[]{0x0000001004000000L,0x0000000000000080L});
    public static final BitSet FOLLOW_38 = new BitSet(new long[]{0x0000000004000000L,0x0000000000000080L});
    public static final BitSet FOLLOW_39 = new BitSet(new long[]{0x0000002004060000L});
    public static final BitSet FOLLOW_40 = new BitSet(new long[]{0x0000002004040000L});
    public static final BitSet FOLLOW_41 = new BitSet(new long[]{0x0000002004000000L});
    public static final BitSet FOLLOW_42 = new BitSet(new long[]{0x0000018004000000L});
    public static final BitSet FOLLOW_43 = new BitSet(new long[]{0x0000010004000000L});
    public static final BitSet FOLLOW_44 = new BitSet(new long[]{0x00007C0004000000L,0x0000000000000450L});
    public static final BitSet FOLLOW_45 = new BitSet(new long[]{0x0000780004000000L,0x0000000000000454L});
    public static final BitSet FOLLOW_46 = new BitSet(new long[]{0x0000700004000000L,0x00000000000004D0L});
    public static final BitSet FOLLOW_47 = new BitSet(new long[]{0x0000600004000000L,0x00000000000004D0L});
    public static final BitSet FOLLOW_48 = new BitSet(new long[]{0x0000600004000000L,0x0000000000000450L});
    public static final BitSet FOLLOW_49 = new BitSet(new long[]{0x0000600004000000L,0x0000000000000440L});
    public static final BitSet FOLLOW_50 = new BitSet(new long[]{0x0000600004000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_51 = new BitSet(new long[]{0x0000400004000000L});
    public static final BitSet FOLLOW_52 = new BitSet(new long[]{0x0000000000000020L,0x0000000000000000L,0x8000800000000000L});
    public static final BitSet FOLLOW_53 = new BitSet(new long[]{0x0003000004000000L});
    public static final BitSet FOLLOW_54 = new BitSet(new long[]{0x0002000004000000L,0x0000000000000080L});
    public static final BitSet FOLLOW_55 = new BitSet(new long[]{0x0078000004000000L});
    public static final BitSet FOLLOW_56 = new BitSet(new long[]{0x00F0000004000000L});
    public static final BitSet FOLLOW_57 = new BitSet(new long[]{0x0160000004000000L});
    public static final BitSet FOLLOW_58 = new BitSet(new long[]{0x0240000004000000L});
    public static final BitSet FOLLOW_59 = new BitSet(new long[]{0x0400000004000000L});
    public static final BitSet FOLLOW_60 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000080L});
    public static final BitSet FOLLOW_61 = new BitSet(new long[]{0x7000000004000000L});
    public static final BitSet FOLLOW_62 = new BitSet(new long[]{0x6000000004000000L,0x0000000000000080L});
    public static final BitSet FOLLOW_63 = new BitSet(new long[]{0x4000000004000000L,0x0000000000000080L});
    public static final BitSet FOLLOW_64 = new BitSet(new long[]{0x8000000000000000L});
    public static final BitSet FOLLOW_65 = new BitSet(new long[]{0x0000000004260000L,0x0000000000000003L});
    public static final BitSet FOLLOW_66 = new BitSet(new long[]{0x0000000004240000L,0x0000000000000003L});
    public static final BitSet FOLLOW_67 = new BitSet(new long[]{0x0000000004200000L,0x0000000000000003L});
    public static final BitSet FOLLOW_68 = new BitSet(new long[]{0x0000000004200000L,0x0000000000000002L});
    public static final BitSet FOLLOW_69 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x001C000000000000L});
    public static final BitSet FOLLOW_70 = new BitSet(new long[]{0x0000000004200000L});
    public static final BitSet FOLLOW_71 = new BitSet(new long[]{0x0000000004260000L,0x0000000000000008L});
    public static final BitSet FOLLOW_72 = new BitSet(new long[]{0x0000000004240000L,0x0000000000000008L});
    public static final BitSet FOLLOW_73 = new BitSet(new long[]{0x0000000004200000L,0x0000000000000008L});
    public static final BitSet FOLLOW_74 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x01E0000000000000L});
    public static final BitSet FOLLOW_75 = new BitSet(new long[]{0x0000000000010000L,0x0000000000000020L});
    public static final BitSet FOLLOW_76 = new BitSet(new long[]{0x0000000004060000L,0x0000000000000080L});
    public static final BitSet FOLLOW_77 = new BitSet(new long[]{0x0000000004040000L,0x0000000000000080L});
    public static final BitSet FOLLOW_78 = new BitSet(new long[]{0x0000000004060020L});
    public static final BitSet FOLLOW_79 = new BitSet(new long[]{0x0000000004040020L});
    public static final BitSet FOLLOW_80 = new BitSet(new long[]{0x0000000004000020L});
    public static final BitSet FOLLOW_81 = new BitSet(new long[]{0x0000000006000000L});
    public static final BitSet FOLLOW_82 = new BitSet(new long[]{0x0000000004060000L,0x0000000000000308L});
    public static final BitSet FOLLOW_83 = new BitSet(new long[]{0x0000000004040000L,0x0000000000000308L});
    public static final BitSet FOLLOW_84 = new BitSet(new long[]{0x0000000004000000L,0x0000000000000308L});
    public static final BitSet FOLLOW_85 = new BitSet(new long[]{0x0000000004000000L,0x0000000000000208L});
    public static final BitSet FOLLOW_86 = new BitSet(new long[]{0x0000000000060000L,0x0000000000000800L});
    public static final BitSet FOLLOW_87 = new BitSet(new long[]{0x0000000000040000L,0x0000000000000800L});
    public static final BitSet FOLLOW_88 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000800L});
    public static final BitSet FOLLOW_89 = new BitSet(new long[]{0x0000000000000000L,0x0000000000001000L});
    public static final BitSet FOLLOW_90 = new BitSet(new long[]{0x0000000004000000L,0x0000000000002008L});
    public static final BitSet FOLLOW_91 = new BitSet(new long[]{0x0000000004000000L,0x0000000000000008L});
    public static final BitSet FOLLOW_92 = new BitSet(new long[]{0x0000000004060000L,0x0000000000004080L});
    public static final BitSet FOLLOW_93 = new BitSet(new long[]{0x0000000004040000L,0x0000000000004080L});
    public static final BitSet FOLLOW_94 = new BitSet(new long[]{0x0000000004000000L,0x0000000000004080L});
    public static final BitSet FOLLOW_95 = new BitSet(new long[]{0x0000000004000000L,0x0000000000010000L});
    public static final BitSet FOLLOW_96 = new BitSet(new long[]{0x0000000000060000L,0x0000000006920000L,0x0000000000000000L,0xFE00000000000000L,0x000000003FE000FFL});
    public static final BitSet FOLLOW_97 = new BitSet(new long[]{0x0000000004000000L,0x0000000000020000L});
    public static final BitSet FOLLOW_98 = new BitSet(new long[]{0x0000000004060000L,0x0000000006920000L,0x0000000000000000L,0xFE00000000000000L,0x000000003FE000FFL});
    public static final BitSet FOLLOW_99 = new BitSet(new long[]{0x0000000004060000L,0x00000000069E0000L,0x0000000000000000L,0xFE00000000000000L,0x000000003FE000FFL});
    public static final BitSet FOLLOW_100 = new BitSet(new long[]{0x0000000004060000L,0x00000000069A0000L,0x0000000000000000L,0xFE00000000000000L,0x000000003FE000FFL});
    public static final BitSet FOLLOW_101 = new BitSet(new long[]{0x0000000000060000L,0x00000000069E0000L,0x0000000000000000L,0xFE00000000000000L,0x000000003FE000FFL});
    public static final BitSet FOLLOW_102 = new BitSet(new long[]{0x0000000000060000L,0x00000000069A0000L,0x0000000000000000L,0xFE00000000000000L,0x000000003FE000FFL});
    public static final BitSet FOLLOW_103 = new BitSet(new long[]{0x0000000000040032L,0x00000003A0600008L,0x0000000000000000L,0x0000000000000000L,0x00000001C0000000L});
    public static final BitSet FOLLOW_104 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x00000000001FFF00L});
    public static final BitSet FOLLOW_105 = new BitSet(new long[]{0x0000000000040032L,0x00000003A0600000L,0x0000000000000000L,0x0000000000000000L,0x00000001C0000000L});
    public static final BitSet FOLLOW_106 = new BitSet(new long[]{0x0000000000040032L,0x00000003A0400000L,0x0000000000000000L,0x0000000000000000L,0x00000001C0000000L});
    public static final BitSet FOLLOW_107 = new BitSet(new long[]{0x0000000000040012L,0x00000003A0400000L,0x0000000000000000L,0x0000000000000000L,0x00000001C0000000L});
    public static final BitSet FOLLOW_108 = new BitSet(new long[]{0x0000000000040002L,0x00000003A0400000L,0x0000000000000000L,0x0000000000000000L,0x00000001C0000000L});
    public static final BitSet FOLLOW_109 = new BitSet(new long[]{0x0000000000040002L,0x00000003A0000000L,0x0000000000000000L,0x0000000000000000L,0x00000001C0000000L});
    public static final BitSet FOLLOW_110 = new BitSet(new long[]{0x0000000000000030L,0x0000000001000000L});
    public static final BitSet FOLLOW_111 = new BitSet(new long[]{0x0000000000000010L,0x0000000001000000L});
    public static final BitSet FOLLOW_112 = new BitSet(new long[]{0x0000000000000000L,0x0000000001000000L});
    public static final BitSet FOLLOW_113 = new BitSet(new long[]{0x0000000000060000L,0x00000003A6920000L,0x0000000000000000L,0xFE00000000000000L,0x00000001FFE000FFL});
    public static final BitSet FOLLOW_114 = new BitSet(new long[]{0x0000000000040030L,0x00000003A8000000L,0x0000000000000000L,0x0000000000000000L,0x00000001C0000000L});
    public static final BitSet FOLLOW_115 = new BitSet(new long[]{0x0000000000040030L,0x00000003AC000000L,0x0000000000000000L,0x0000000000000000L,0x00000001FFE00000L});
    public static final BitSet FOLLOW_116 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x000000003FE00000L});
    public static final BitSet FOLLOW_117 = new BitSet(new long[]{0x0000000000040032L,0x00000003A0000000L,0x0000000000000000L,0x0000000000000000L,0x00000001C0000000L});
    public static final BitSet FOLLOW_118 = new BitSet(new long[]{0x0000000000040012L,0x00000003A0000000L,0x0000000000000000L,0x0000000000000000L,0x00000001C0000000L});
    public static final BitSet FOLLOW_119 = new BitSet(new long[]{0x0000000000000032L,0x0000000012800000L,0x0000000000000000L,0xFE00000000000000L,0x000000003FE000FFL});
    public static final BitSet FOLLOW_120 = new BitSet(new long[]{0x0000000000000032L,0x0000000002800000L,0x0000000000000000L,0xFE00000000000000L,0x000000003FE000FFL});
    public static final BitSet FOLLOW_121 = new BitSet(new long[]{0x0000000000000012L,0x0000000002800000L,0x0000000000000000L,0xFE00000000000000L,0x000000003FE000FFL});
    public static final BitSet FOLLOW_122 = new BitSet(new long[]{0x0000000000000002L,0x0000000002800000L,0x0000000000000000L,0xFE00000000000000L,0x000000003FE000FFL});
    public static final BitSet FOLLOW_123 = new BitSet(new long[]{0x0000000000000030L,0x0000000000001000L});
    public static final BitSet FOLLOW_124 = new BitSet(new long[]{0x0000000000000010L,0x0000000000001000L});
    public static final BitSet FOLLOW_125 = new BitSet(new long[]{0x0000000000000002L,0x0000000040000000L});
    public static final BitSet FOLLOW_126 = new BitSet(new long[]{0x0000000000000032L,0x0000000040000000L});
    public static final BitSet FOLLOW_127 = new BitSet(new long[]{0x0000000000000012L,0x0000000040000000L});
    public static final BitSet FOLLOW_128 = new BitSet(new long[]{0x0000000000000030L});
    public static final BitSet FOLLOW_129 = new BitSet(new long[]{0x0000000000000030L,0x0000000800000000L});
    public static final BitSet FOLLOW_130 = new BitSet(new long[]{0x0000000000000020L,0x0000013000000000L});
    public static final BitSet FOLLOW_131 = new BitSet(new long[]{0x0000000000000022L,0x0000013000000000L});
    public static final BitSet FOLLOW_132 = new BitSet(new long[]{0x0000000000000020L,0x000002D000000000L});
    public static final BitSet FOLLOW_133 = new BitSet(new long[]{0x0000000000000000L,0x000002D000000000L});
    public static final BitSet FOLLOW_134 = new BitSet(new long[]{0x0000000000000000L,0x000002C000000000L});
    public static final BitSet FOLLOW_135 = new BitSet(new long[]{0x0000000000000002L,0x000002C000000000L});
    public static final BitSet FOLLOW_136 = new BitSet(new long[]{0x0000000000000000L,0x0000001000000000L});
    public static final BitSet FOLLOW_137 = new BitSet(new long[]{0x0000000000000000L,0x0000400000000000L});
    public static final BitSet FOLLOW_138 = new BitSet(new long[]{0x0000000000000002L,0x0000400000000000L});
    public static final BitSet FOLLOW_139 = new BitSet(new long[]{0x0000000000000000L,0x00003C0000000000L});
    public static final BitSet FOLLOW_140 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_141 = new BitSet(new long[]{0x0000000000000002L,0x00003C0000000000L});
    public static final BitSet FOLLOW_142 = new BitSet(new long[]{0x0000000000000000L,0x00000C0000000000L});
    public static final BitSet FOLLOW_143 = new BitSet(new long[]{0x0000000000000002L,0x00000C0000000000L});
    public static final BitSet FOLLOW_144 = new BitSet(new long[]{0x0000000004000000L,0x0107000000400000L});
    public static final BitSet FOLLOW_145 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000600000000L});
    public static final BitSet FOLLOW_146 = new BitSet(new long[]{0x0000000004000000L,0x0106000000400000L});
    public static final BitSet FOLLOW_147 = new BitSet(new long[]{0x0000000004000000L,0x0104000000400000L});
    public static final BitSet FOLLOW_148 = new BitSet(new long[]{0x0000000004000000L,0x0100000000400000L});
    public static final BitSet FOLLOW_149 = new BitSet(new long[]{0x0000000004000000L,0x0100000000000000L});
    public static final BitSet FOLLOW_150 = new BitSet(new long[]{0x0000000004060000L,0x0000000000000008L});
    public static final BitSet FOLLOW_151 = new BitSet(new long[]{0x0000000004040000L,0x0000000000000008L});
    public static final BitSet FOLLOW_152 = new BitSet(new long[]{0x0000000004060000L,0x0078000000000000L});
    public static final BitSet FOLLOW_153 = new BitSet(new long[]{0x0000000004040000L,0x0078000000000000L});
    public static final BitSet FOLLOW_154 = new BitSet(new long[]{0x0000000004000000L,0x0078000000000000L});
    public static final BitSet FOLLOW_155 = new BitSet(new long[]{0x0000000004000000L,0x0070000000000000L});
    public static final BitSet FOLLOW_156 = new BitSet(new long[]{0x0000000004000000L,0x0060000000000000L});
    public static final BitSet FOLLOW_157 = new BitSet(new long[]{0x0000000004000000L,0x0040000000000000L});
    public static final BitSet FOLLOW_158 = new BitSet(new long[]{0x0000000004060000L,0x8886000000000000L,0x00000000000001FEL});
    public static final BitSet FOLLOW_159 = new BitSet(new long[]{0x0000000004040000L,0x8886000000000000L,0x00000000000001FEL});
    public static final BitSet FOLLOW_160 = new BitSet(new long[]{0x0000000004000000L,0x8886000000000000L,0x00000000000001FEL});
    public static final BitSet FOLLOW_161 = new BitSet(new long[]{0x0000000004000000L,0x8884000000000000L,0x00000000000001FEL});
    public static final BitSet FOLLOW_162 = new BitSet(new long[]{0x0000000004000000L,0x8880000000000000L,0x00000000000001FEL});
    public static final BitSet FOLLOW_163 = new BitSet(new long[]{0x0000000006000000L,0x8800000000000000L,0x00000000000001FEL});
    public static final BitSet FOLLOW_164 = new BitSet(new long[]{0x0000000004000000L,0x8800000000000000L,0x00000000000001FEL});
    public static final BitSet FOLLOW_165 = new BitSet(new long[]{0x0000000004000000L,0x0200000000000800L});
    public static final BitSet FOLLOW_166 = new BitSet(new long[]{0x0000000004000000L,0x0400000000001000L});
    public static final BitSet FOLLOW_167 = new BitSet(new long[]{0x0000000004000000L,0x0400000000000000L});
    public static final BitSet FOLLOW_168 = new BitSet(new long[]{0x0000000004060000L,0x3000300000000000L});
    public static final BitSet FOLLOW_169 = new BitSet(new long[]{0x0000000004040000L,0x3000300000000000L});
    public static final BitSet FOLLOW_170 = new BitSet(new long[]{0x0000000004000000L,0x3000300000000000L});
    public static final BitSet FOLLOW_171 = new BitSet(new long[]{0x0000000004000000L,0x0000300000000000L});
    public static final BitSet FOLLOW_172 = new BitSet(new long[]{0x0000000000000000L,0x4000000000000000L});
    public static final BitSet FOLLOW_173 = new BitSet(new long[]{0x0000000004000000L,0x0000200000000000L});
    public static final BitSet FOLLOW_174 = new BitSet(new long[]{0x0000000004060000L,0x0000300000004000L,0x0000000000000001L});
    public static final BitSet FOLLOW_175 = new BitSet(new long[]{0x0000000004040000L,0x0000300000004000L,0x0000000000000001L});
    public static final BitSet FOLLOW_176 = new BitSet(new long[]{0x0000000004000000L,0x0000300000004000L,0x0000000000000001L});
    public static final BitSet FOLLOW_177 = new BitSet(new long[]{0x0000000004000000L,0x0000300000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_178 = new BitSet(new long[]{0x0000000004060000L,0x0000300000002000L,0x0000000000000001L});
    public static final BitSet FOLLOW_179 = new BitSet(new long[]{0x0000000004040000L,0x0000300000002000L,0x0000000000000001L});
    public static final BitSet FOLLOW_180 = new BitSet(new long[]{0x0000000004000000L,0x0000300000002000L,0x0000000000000001L});
    public static final BitSet FOLLOW_181 = new BitSet(new long[]{0x0000000004060000L,0x0000300000000208L});
    public static final BitSet FOLLOW_182 = new BitSet(new long[]{0x0000000004040000L,0x0000300000000208L});
    public static final BitSet FOLLOW_183 = new BitSet(new long[]{0x0000000004000000L,0x0000300000000208L});
    public static final BitSet FOLLOW_184 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000010400L});
    public static final BitSet FOLLOW_185 = new BitSet(new long[]{0x0000000000060000L,0x0000000000000000L,0x0000000000000800L});
    public static final BitSet FOLLOW_186 = new BitSet(new long[]{0x0000000000040000L,0x0000000000000000L,0x0000000000000800L});
    public static final BitSet FOLLOW_187 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000800L});
    public static final BitSet FOLLOW_188 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000001000L});
    public static final BitSet FOLLOW_189 = new BitSet(new long[]{0x8000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x000003F800000000L});
    public static final BitSet FOLLOW_190 = new BitSet(new long[]{0x0000000002000000L,0x0000000000000000L,0x0000000000002000L});
    public static final BitSet FOLLOW_191 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000004000L});
    public static final BitSet FOLLOW_192 = new BitSet(new long[]{0x0000000002000000L,0x0000000000000000L,0x0000000000008000L});
    public static final BitSet FOLLOW_193 = new BitSet(new long[]{0x0000000004000000L,0x0000000000000010L});
    public static final BitSet FOLLOW_194 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000020000L});
    public static final BitSet FOLLOW_195 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000180000L});
    public static final BitSet FOLLOW_196 = new BitSet(new long[]{0x0000000002000002L});
    public static final BitSet FOLLOW_197 = new BitSet(new long[]{0x0000000004060000L,0x0000000000000000L,0x0000000000200800L});
    public static final BitSet FOLLOW_198 = new BitSet(new long[]{0x0000000004040000L,0x0000000000000000L,0x0000000000200800L});
    public static final BitSet FOLLOW_199 = new BitSet(new long[]{0x0000000004000000L,0x0000000000000000L,0x0000000000200800L});
    public static final BitSet FOLLOW_200 = new BitSet(new long[]{0x0000000004000000L,0x0000000000000000L,0x0000000000200000L});
    public static final BitSet FOLLOW_201 = new BitSet(new long[]{0x0000000004060000L,0x0000000000000000L,0x0000000005400000L});
    public static final BitSet FOLLOW_202 = new BitSet(new long[]{0x0000000004040000L,0x0000000000000000L,0x0000000005400000L});
    public static final BitSet FOLLOW_203 = new BitSet(new long[]{0x0000000004000000L,0x0000000000000000L,0x0000000005400000L});
    public static final BitSet FOLLOW_204 = new BitSet(new long[]{0x0000000004000000L,0x0000000000000000L,0x0000000005000000L});
    public static final BitSet FOLLOW_205 = new BitSet(new long[]{0x0000000004000000L,0x0000000000000000L,0x0000000004000000L});
    public static final BitSet FOLLOW_206 = new BitSet(new long[]{0x0000000000060010L,0x0000000000040000L,0x0000000000800000L});
    public static final BitSet FOLLOW_207 = new BitSet(new long[]{0x0000000000040010L,0x0000000000040000L,0x0000000000800000L});
    public static final BitSet FOLLOW_208 = new BitSet(new long[]{0x0000000000000010L,0x0000000000040000L,0x0000000000800000L});
    public static final BitSet FOLLOW_209 = new BitSet(new long[]{0x0000000000000000L,0x0000000000002000L});
    public static final BitSet FOLLOW_210 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x003FFC0000000000L});
    public static final BitSet FOLLOW_211 = new BitSet(new long[]{0x0000000000000010L,0x0000000000004000L,0x0000000002800000L});
    public static final BitSet FOLLOW_212 = new BitSet(new long[]{0x0000000000000010L,0x0000000000000000L,0x0000000002800000L});
    public static final BitSet FOLLOW_213 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000800000L});
    public static final BitSet FOLLOW_214 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000008000000L});
    public static final BitSet FOLLOW_215 = new BitSet(new long[]{0x0000000004000010L,0x0000000000004000L,0x0000000002800000L});
    public static final BitSet FOLLOW_216 = new BitSet(new long[]{0x0000000004000010L,0x0000000000000000L,0x0000000002800000L});
    public static final BitSet FOLLOW_217 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000010000000L});
    public static final BitSet FOLLOW_218 = new BitSet(new long[]{0x00000000000103B0L,0x0000001000000020L,0x810C000400000000L,0x0000000017FF9946L});
    public static final BitSet FOLLOW_219 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000FE0000000L});
    public static final BitSet FOLLOW_220 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000400000000L});
    public static final BitSet FOLLOW_221 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000001800000000L});
    public static final BitSet FOLLOW_222 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000001000000000L});
    public static final BitSet FOLLOW_223 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_224 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000004000000000L});
    public static final BitSet FOLLOW_225 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000078000000000L});
    public static final BitSet FOLLOW_226 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000081C00000000L});
    public static final BitSet FOLLOW_227 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0003F00C00000000L});
    public static final BitSet FOLLOW_228 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000400000000000L});
    public static final BitSet FOLLOW_229 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000800000000L});
    public static final BitSet FOLLOW_230 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000800400000000L});
    public static final BitSet FOLLOW_231 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x000C000000000000L});
    public static final BitSet FOLLOW_232 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x00F0000000000000L});
    public static final BitSet FOLLOW_233 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0200000000000000L});
    public static final BitSet FOLLOW_234 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0C00000000000000L});
    public static final BitSet FOLLOW_235 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x7000000000000000L});
    public static final BitSet FOLLOW_236 = new BitSet(new long[]{0x0000000000000020L,0x0000000000000020L,0x0000000000000000L,0x0000000000038000L});
    public static final BitSet FOLLOW_237 = new BitSet(new long[]{0x0000000000000020L,0x0000000000000020L,0x0000000400000000L,0x0000000000078000L});
    public static final BitSet FOLLOW_238 = new BitSet(new long[]{0x0000000000000020L,0x0000000000000000L,0x8000800000000000L,0x0000000040000000L});
    public static final BitSet FOLLOW_239 = new BitSet(new long[]{0x0000000002000000L,0x0000000000000000L,0x0000000800000000L});
    public static final BitSet FOLLOW_240 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0xF000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_241 = new BitSet(new long[]{0x00000000000103B0L,0x0000001000000020L,0x810C800400000000L,0x0000000017FF9957L});
    public static final BitSet FOLLOW_242 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_243 = new BitSet(new long[]{0x0000000002000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_244 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x7000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_245 = new BitSet(new long[]{0x00000000040103B0L,0x0000001000000020L,0x810C000400000000L,0x0000000017FF9946L});
    public static final BitSet FOLLOW_246 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_247 = new BitSet(new long[]{0x00000000000103B0L,0x0000001000000020L,0x810C000400000000L,0x0000000017FF994EL});
    public static final BitSet FOLLOW_248 = new BitSet(new long[]{0x0000000002000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
    public static final BitSet FOLLOW_249 = new BitSet(new long[]{0x00000000000103B0L,0x0000001000000020L,0x810C800400000000L,0x0000000017FFF95EL});
    public static final BitSet FOLLOW_250 = new BitSet(new long[]{0x0000000002000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L});
    public static final BitSet FOLLOW_251 = new BitSet(new long[]{0x00000000000103B0L,0x0000001000000020L,0x810C000400000000L,0x0000000017FFF94EL});
    public static final BitSet FOLLOW_252 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
    public static final BitSet FOLLOW_253 = new BitSet(new long[]{0x00000000000103B2L,0x0000001000000020L,0x810C000400000000L,0x0000000017FFF966L});
    public static final BitSet FOLLOW_254 = new BitSet(new long[]{0x00000000000103B2L,0x0000001000000020L,0x810C000400000000L,0x0000000017FFF946L});
    public static final BitSet FOLLOW_255 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x8000000000000000L});
    public static final BitSet FOLLOW_256 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000080L});
    public static final BitSet FOLLOW_257 = new BitSet(new long[]{0x00000000000103B0L,0x0000001000000020L,0x810C800400000000L,0x0000000017FF9946L});
    public static final BitSet FOLLOW_258 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000200L});
    public static final BitSet FOLLOW_259 = new BitSet(new long[]{0x0000000006000020L,0x0000000010000000L,0x8000800000000000L,0x0000000000000600L});
    public static final BitSet FOLLOW_260 = new BitSet(new long[]{0x0000000002000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000600L});
    public static final BitSet FOLLOW_261 = new BitSet(new long[]{0x0000000002000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000200L});
    public static final BitSet FOLLOW_262 = new BitSet(new long[]{0x00000000000103B0L,0x0000001000000020L,0x810C000400000000L,0x0000000017FFF966L});
    public static final BitSet FOLLOW_263 = new BitSet(new long[]{0x0000000002000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_264 = new BitSet(new long[]{0x00000000000103B0L,0x0000001000000020L,0x810C000400000000L,0x0000000017FFF946L});
    public static final BitSet FOLLOW_265 = new BitSet(new long[]{0x00000000000103B0L,0x0000001000000020L,0x810C000400000000L,0x0000000017FF9966L});
    public static final BitSet FOLLOW_266 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_267 = new BitSet(new long[]{0x00000000000103B0L,0x0000001000000020L,0x810C000400000000L,0x0000000017FF9947L});
    public static final BitSet FOLLOW_268 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000800L});
    public static final BitSet FOLLOW_269 = new BitSet(new long[]{0x00000000040103B0L,0x0000001000000020L,0x810C000400000000L,0x0000000017FFF946L});
    public static final BitSet FOLLOW_270 = new BitSet(new long[]{0x00000000040103B0L,0x0000001000000020L,0x810C000400000000L,0x0000000017FFF966L});
    public static final BitSet FOLLOW_271 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000010000000L});
    public static final BitSet FOLLOW_272 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x8000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_273 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_274 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x8000000400000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_275 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000005L});
    public static final BitSet FOLLOW_276 = new BitSet(new long[]{0x00000000000103B2L,0x0000001000000020L,0x810C000400000000L,0x0000000017FF9946L});
    public static final BitSet FOLLOW_277 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000028000000L});
    public static final BitSet FOLLOW_278 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000028000000L});
    public static final BitSet FOLLOW_279 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x1000000000000000L});
    public static final BitSet FOLLOW_280 = new BitSet(new long[]{0x0000000000000280L});
    public static final BitSet FOLLOW_281 = new BitSet(new long[]{0x0000000000000020L,0x0000000000000000L,0x8000800000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_282 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000800000000000L});
    public static final BitSet FOLLOW_283 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000400000000L});
    public static final BitSet FOLLOW_284 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x1000000400000000L});
    public static final BitSet FOLLOW_285 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000020L,0x0000000000000000L,0x0000000000040000L});
    public static final BitSet FOLLOW_286 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000080000000L});
    public static final BitSet FOLLOW_287 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x1000000000000000L});
    public static final BitSet FOLLOW_288 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0010000000000000L});
    public static final BitSet FOLLOW_289 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000010000L});
    public static final BitSet FOLLOW_290 = new BitSet(new long[]{0x0000000000000020L,0x0000000000000000L,0x0000000000000000L,0x0000000000008000L});
    public static final BitSet FOLLOW_291 = new BitSet(new long[]{0x0000000000000020L,0x0000000000000000L,0x0000000000000000L,0x0000000000020000L});
    public static final BitSet FOLLOW_292 = new BitSet(new long[]{0x0000000000000020L,0x0000000000000000L,0x0010000000000000L});
    public static final BitSet FOLLOW_293 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_294 = new BitSet(new long[]{0x0000000000000022L});

}
