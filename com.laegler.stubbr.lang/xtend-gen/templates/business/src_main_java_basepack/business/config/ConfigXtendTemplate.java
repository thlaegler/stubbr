package templates.business.src_main_java_basepack.business.config;

import com.laegler.stubbr.lang.genmodel.Project;
import com.laegler.stubbr.lang.genmodel.StubbrRegistry;
import org.eclipse.xtend2.lib.StringConcatenation;
import templates.AbstractXtendTemplate;

/**
 * File template for general configuration.
 */
@SuppressWarnings("all")
public class ConfigXtendTemplate extends AbstractXtendTemplate {
  public ConfigXtendTemplate(final StubbrRegistry stubbr, final Project project) {
    super(stubbr, project);
    this.setFileName("Config");
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("package ");
    String _basePackage = project.getBasePackage();
    _builder.append(_basePackage, "");
    _builder.append(".config");
    this.setHeader(_builder.toString());
    StringConcatenation _builder_1 = new StringConcatenation();
    _builder_1.append("/src/main/java/");
    String _basePackage_1 = null;
    if (project!=null) {
      _basePackage_1=project.getBasePackage();
    }
    String _path = null;
    if (_basePackage_1!=null) {
      _path=this.toPath(_basePackage_1);
    }
    _builder_1.append(_path, "");
    _builder_1.append("/config/");
    this.setRelativPath(_builder_1.toString());
    this.setDocumentation("General configuration");
  }
  
  @Override
  public String getTemplate() {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("import ");
    Project _project = this.getProject();
    String _basePackage = _project.getBasePackage();
    _builder.append(_basePackage, "");
    _builder.append(".*");
    _builder.newLineIfNotEmpty();
    _builder.append("import java.io.Serializable");
    _builder.newLine();
    _builder.append("import javax.enterprise.context.ApplicationScoped");
    _builder.newLine();
    _builder.append("import javax.ejb.Stateless");
    _builder.newLine();
    _builder.append("import javax.annotation.security.PermitAll");
    _builder.newLine();
    _builder.append("import javax.inject.Inject");
    _builder.newLine();
    _builder.append("import org.slf4j.Logger");
    _builder.newLine();
    _builder.append("import java.util.ResourceBundle");
    _builder.newLine();
    _builder.append("import java.util.Locale");
    _builder.newLine();
    _builder.newLine();
    String _javaDocType = this.getJavaDocType();
    _builder.append(_javaDocType, "");
    _builder.newLineIfNotEmpty();
    _builder.append("@PermitAll");
    _builder.newLine();
    _builder.append("@Stateless(name=\'config\')");
    _builder.newLine();
    _builder.append("@ApplicationScoped");
    _builder.newLine();
    _builder.append("class ");
    String _fileName = this.getFileName();
    _builder.append(_fileName, "");
    _builder.append(" {");
    _builder.newLineIfNotEmpty();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("@Inject");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("Logger logger");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("// Paths and path-fragments");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public static final String DEVICE_MOBILE = \'mobile\'");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public static final String DEVICE_DESKTOP = \'desktop\'");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public static final String PATH_MOBILE = \'/mobile\'");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public static final String PATH_DESKTOP = \'/desktop\'");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("// Faces");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public static final String CLIENT_ID_FORM_BASE_SERVICE_DETAILS = \'formEmployeeBaseServiceDetails\'");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("// Patterns");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public static final String PATTERN_MOBILE_1 = \'(?i).*((android|bb\\\\d+|meego).+mobile|avantgo|bada\\\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\\\.(browser|link)|vodafone|wap|windows ce|xda|xiino).*\'");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public static final String PATTERN_MOBILE_2 = \'(?i)1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\\\-(n|u)|c55\\\\/|capi|ccwa|cdm\\\\-|cell|chtm|cldc|cmd\\\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\\\-|_)|g1 u|g560|gene|gf\\\\-5|g\\\\-mo|go(\\\\.w|od)|gr(ad|un)|haie|hcit|hd\\\\-(m|p|t)|hei\\\\-|hi(pt|ta)|hp( i|ip)|hs\\\\-c|ht(c(\\\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\\\-(20|go|ma)|i230|iac( |\\\\-|\\\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\\\/)|klon|kpt |kwc\\\\-|kyo(c|k)|le(no|xi)|lg( g|\\\\/(k|l|u)|50|54|\\\\-[a-w])|libw|lynx|m1\\\\-w|m3ga|m50\\\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\\\-2|po(ck|rt|se)|prox|psio|pt\\\\-g|qa\\\\-a|qc(07|12|21|32|60|\\\\-[2-7]|i\\\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\\\-|oo|p\\\\-)|sdk\\\\/|se(c(\\\\-|0|1)|47|mc|nd|ri)|sgh\\\\-|shar|sie(\\\\-|m)|sk\\\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\\\-|v\\\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\\\-|tdg\\\\-|tel(i|m)|tim\\\\-|t\\\\-mo|to(pl|sh)|ts(70|m\\\\-|m3|m5)|tx\\\\-9|up(\\\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\\\-|your|zeto|zte\\\\-\'");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("def String getOAuthClientId() {");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("getConfigString(\'oauth.client_id\')");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("def String getOAuthClientSecret() {");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("getConfigString(\'oauth.client_secret\')");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("def String getOAuthUsername() {");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("getConfigString(\'oauth.username\')");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("def String getOAuthPassword() {");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("getConfigString(\'oauth.password\')");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("def String getEmailBooking() {");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("getConfigString(\'email.booking\')");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("def String getEmailReplyTo() {");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("getConfigString(\'email.replyTo\')");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("def String getEmailAdmin() {");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("getConfigString(\'email.admin\')");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("def String getResourceBundleName() {");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("getConfigString(\'faces.bundle.resource\')");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("def String getMessageBundleName() {");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("getConfigString(\'faces.bundle.message\')");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("/**");
    _builder.newLine();
    _builder.append("\t ");
    _builder.append("* First check environment variable:");
    _builder.newLine();
    _builder.append("\t ");
    _builder.append("* SET UPLOAD_LOCATION=/path/to/uploads");
    _builder.newLine();
    _builder.append("\t ");
    _builder.append("* ");
    _builder.newLine();
    _builder.append("\t ");
    _builder.append("* then check VM argument");
    _builder.newLine();
    _builder.append("\t ");
    _builder.append("* -Dupload.location=\'/path/to/uploads\'");
    _builder.newLine();
    _builder.append("\t ");
    _builder.append("* ");
    _builder.newLine();
    _builder.append("\t ");
    _builder.append("* Default to \'Default\'");
    _builder.newLine();
    _builder.append("\t ");
    _builder.append("*/");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("private def String getConfigString(String key) {");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("logger.trace(\'getConfigString(key={})\', key)");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("var Environment environment");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("var String environmentName = System.getenv(\'_ENV_NAME\');");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("if (environmentName == null || environmentName.empty) {");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("environmentName = System.getProperty(\'env.name\');");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("if(environmentName == null || environmentName.empty) {");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("environment = Environment.DEFAULT");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("} else {");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("environment = Environment.valueOf(environmentName)");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("if(environment == null) {");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("logger.warn(");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("\'Unknown Environment: \\\'{}\\\'. Using DEFAULT_CONFIG. Set Environment Variable _ENV_NAME via \\\'-Dcq.env.name=\\\'STAGE\\\'\\\' or \\\'SET _ENV_NAME=STAGE\\\'.\', environmentName)");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("if (environment == null) {");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("logger.warn(");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("\'Environment Variable not found. Using DEFAULT_CONFIG. Set Environment Variable _ENV_NAME via \\\'-Dcq.env.name=\\\'STAGE\\\'\\\' or \\\'SET _ENV_NAME=STAGE\\\'.\')");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("// TEST, STAGE, PROD, LOCAL, DEFAULT");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("val String configResourceName = \'");
    Project _project_1 = this.getProject();
    String _basePackage_1 = _project_1.getBasePackage();
    _builder.append(_basePackage_1, "\t\t");
    _builder.append(".config.\' + environment.name");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t");
    _builder.append("val ResourceBundle bundle = ResourceBundle.getBundle(configResourceName, Locale.ROOT)");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("bundle.getString(key)");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("}");
    _builder.newLine();
    return _builder.toString();
  }
}
